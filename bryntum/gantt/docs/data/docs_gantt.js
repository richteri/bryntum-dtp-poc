docsJson={classes:[{name:"module:Core/Base",classDescription:"<p>Base class for all configurable classes.</p>\n<p>Subclasses do not have to implement a constructor with its restriction of having to call super()\nbefore there is a <code>this</code> reference. Subclasses instead implement a <code>construct</code> method which is\ncalled by the <code>Base</code> constructor. This may call its <code>super</code> implementation at any time.</p>\n<p>The <code>Base</code> constructor applies all configs to properties of the new instance. The instance\nwill have been configured after the <code>super.construct(config)</code> is called.</p>\n<p>See the Class System documentation in the guides for more information.</p>",virtual:true,constructor:{name:"constructor"},filename:"Base.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core",lineno:56,properties:[{name:"defaultConfig",access:"private",description:"<p>A getter for the default configuration of this class, which can be overridden by configurations passed at construction time.</p>",type:{names:["Object"]},scope:"static",category:"Configuration"},{name:"properties",access:"private",description:"<p>A getter for the default values of internal properties for this class</p>",type:{names:["Object"]},scope:"static",category:"Configuration"},{name:"config",description:"<p>Returns a <em>copy</em> of the full configuration which was used to configure this object.</p>",scope:"instance",returns:[{type:{names:["Object"]},description:"<p>All configuration properties which were used to configure this object.</p>"}],category:"Misc"}],functions:[{name:"constructor",description:'<p>Base constructor, passes arguments to <a href="#Core/Base#function-construct">construct</a>.</p>',parameters:[{name:"args"}],scope:"inner",category:"Lifecycle"},{name:"construct",description:"<p>Base implementation applies configuration.</p>\n<p>Subclasses need only implement this if they have to initialize instance specific\nproperties required by the class. Often a <code>construct</code> method is\nunnecessary. All initialization of incoming configuration properties can be\ndone in a <code>set propName</code> implementation.</p>",parameters:[{name:"config",type:"Object",description:"<p>Usually called with a config object, but accepts any params</p>",optional:true}],scope:"instance",category:"Lifecycle"},{name:"destroy",description:'<p>Destroys the provided objects by calling their <a href="#Core/Base#function-destroy">destroy</a> method.\nSkips empty values or objects that are already destroyed.</p>\n<pre class="prettyprint source lang-javascript"><code>Base.destroy(myButton, toolbar1, helloWorldMessageBox);\n</code></pre>',scope:"static",category:"Lifecycle"},{name:"destroy",description:"<p>Destroys the object.\nDo not override this in subclasses. To provide class-specific destruction, implement a\ndoDestroy method. It is a lifecycle hook that will be called during destruction.</p>",scope:"instance",category:"Lifecycle"},{name:"_thisIsAUsedExpression",access:"internal",description:"<p>This method is required to help <code>unused</code> getters to survive production build process. Some tools, like angular,\nwill remove <code>unused</code> code in production build, making our side-effected getters behind, breaking code heavily.</p>",parameters:[{name:"getter",description:"<p>Getter to evaluate</p>"}],scope:"instance"},{name:"startConfigure",access:"internal",description:"<p>Base implementation so that all subclasses and mixins may safely call super.startConfigure.</p>\n<p>This is called by the Base class before setting configuration properties, but after\nthe active initial getters have been set, so all configurations are available.</p>\n<p>This method allows all classes in the hierarchy to force some configs to be evaluated before others.</p>",scope:"instance",category:"Lifecycle"},{name:"finishConfigure",access:"internal",description:'<p>Base implementation so that all subclasses and mixins may safely call super.finishConfigure.</p>\n<p>This is called by the Base class before exiting the <a href="#Core/Base#function-configure">configure</a> method.</p>\n<p>At this point, all configs have been applied, but the <code>isConfiguring</code> property is still set.</p>\n<p>This method allows all classes in the hierarchy to inject functionality\ninto the config phase.</p>',scope:"instance",category:"Lifecycle"},{name:"afterConfigure",access:"internal",description:'<p>Base implementation so that all subclasses and mixins may safely call <code>super.afterConfigure</code>. This is called by the Base class after the <a href="#Core/Base#function-configure">configure</a> method has been\ncalled. At this point, all configs have been applied.</p>\n<p>This method allows all classes in the hierarchy to inject functionality\neither before or after the super.afterConstruct();</p>',scope:"instance",category:"Lifecycle"},{name:"afterConstructor",access:"internal",description:'<p>Base implementation so that all subclasses and mixins may safely call super.afterConstruct.</p>\n<p>This is called by the Base class after the <a href="#Core/Base#function-construct">construct</a> method has been\ncalled.</p>\n<p>At this point, all configs have been applied.</p>\n<p>This method allows all classes in the hierarchy to inject functionality\neither before or after the super.afterConstruct();</p>',scope:"inner",category:"Lifecycle"},{name:"callback",description:"<p>Provides a way of calling callbacks which may have been specified as the <em>name</em> of a function\nand optionally adds scope resolution.</p>\n<p>For example, if the callback is specified as a string, then if it is prefixed with <code>'this.'</code>\nthen the function is resolved in this object. This is useful when configuring listeners\nat the class level.</p>\n<p>If the callback name is prefixed with <code>'up.'</code> then the ownership hierarchy is queried\nusing the <code>owner</code> property until an object with the named function is present, then the\nnamed function is called upon that object.</p>",parameters:[{name:"handler",type:["String","function"],description:"<p>The function to call, or the name of the function to call.</p>"},{name:"thisObj",type:"Object",description:"<p>The <code>this</code> object of the function.</p>"},{name:"args",type:"Array.<Object>",description:"<p>The argument list to pass.</p>"}],scope:"instance"},{name:"delay",access:"private",description:'<p>Delays the execution of the passed function by the passed time quantum, or if the time is omitted\nor not a number, delays until the next animation frame. Note that this will use\n<a href="#Core/mixin/Delayable#function-setTimeout">setTimeout</a> || <a href="#Core/mixin/Delayable#function-requestAnimationFrame">requestAnimationFrame</a>\nif this class mixes in <code>Delayable</code>, otherwise it uses the global methods. The function will\nbe called using <code>this</code> object as its execution scope.</p>',parameters:[{name:"fn",type:"function",description:"<p>The function to call on a delay.</p>"},{name:"by",type:"Number",description:"<p>The number of milliseconds to delay.</p>",optional:true}],scope:"instance"},{name:"doDestroy",access:"internal",description:"<p>Base implementation so that all subclasses and mixins may safely call super.\ndoDestroy is how all subclasses must clean themselves up. It is called by the\nBase class <em>before</em> final destruction of the object.</p>",scope:"instance",category:"Lifecycle"},{name:"destroyProperties",access:"internal",description:"<p>Destroys the named properties if they have been initialized, and if they have a <code>destroy</code> method.\nDeletes the property from this object. For example:</p>\n<pre><code> this.destroyProperties('store', 'resourceStore', 'eventStore', 'dependencyStore', 'assignmentStore');</code></pre>",parameters:[{name:"properties",type:"String",description:"<p>The names of the properties to destroy.</p>",isRestParam:true}],scope:"instance",category:"Lifecycle"},{name:"configure",access:"private",description:"<p>Called by the Base constructor to apply configs to this instance. The must not be called.</p>",parameters:[{name:"config",type:"Object",description:"<p>The configuration object from which instance properties are initialized.</p>"}],scope:"instance",category:"Lifecycle"},{name:"setConfig",description:"<p>Sets configuration options this object with all the properties passed in the parameter object.\nTiming is taken care of. If the setter of one config is called first, and references\nthe value of another config which has not yet been set, that config will be set just\nin time, and the <em>new</em> value will be used.</p>",parameters:[{name:"config",type:"Object",description:"<p>An object containing configurations to change.</p>"}],scope:"instance",category:"Configuration"},{name:"getDefaultConfiguration",access:"private",description:'<p>Gets the full <a href="#Core/Base#property-defaultConfig-static">defaultConfig</a> block for this object\'s entire inheritance chain\nall the way up to but not including <a href="#Core/Base">Core.Base</a></p>',scope:"instance",category:"Configuration",returns:{type:"Object",description:"<p>All default config values for this class.</p>"}},{name:"getDefaultConfiguration",access:"private",description:'<p>Gets the full <a href="#Core/Base#property-defaultConfig-static">defaultConfig</a> block for the entire inheritance chain for this class\nall the way up to but not including <a href="#Core/Base">Core.Base</a></p>',scope:"static",category:"Configuration",returns:{type:"Object",description:"<p>All default config values for this class.</p>"}},{name:"getConfigDescriptor",access:"private",description:'<p>Gets the full <a href="#Core/Base#property-defaultConfig-static">defaultConfig</a> block for this class\'s entire inheritance chain\nall the way up to but not including <a href="#Core/Base">Core.Base</a></p>',scope:"static",category:"Configuration",returns:{type:"Object",description:"<p>All default config values for this class.</p>"}},{name:"getProperties",access:"private",description:'<p>Gets the full <a href="#Core/Base#property-properties-static">properties</a> block for this class\'s entire inheritance chain\nall the way up to but not including <a href="#Core/Base">Core.Base</a></p>',scope:"instance",category:"Configuration",returns:{type:"Object",description:"<p>All default config values for this class.</p>"}},{name:"classHierarchy",access:"private",description:"<p>Used by the Widget and GridFeatureManager class internally. Returns the class hierarchy of this object\nstarting from the <code>topClass</code> class (which defaults to <code>Base</code>).</p>\n<p>For example <code>classHierarchy(Widget)</code> on a Combo would yield <code>[Widget, Field, TextField, PickerField, Combo]</code></p>",parameters:[{name:"topClass",type:"function",description:"<p>The topmost class constructor to start from.</p>",optional:true}],scope:"instance",category:"Configuration",returns:{type:"Array.<function()>",description:"<p>The class hierarchy of this instance.</p>"}},{name:"classNameHierarchy",access:"private",description:'<p>Same as <a href="#Core/Base#function-classHierarchy">classHierarchy</a> but returns array of class names obtained via $name property</p>',parameters:[{name:"topClass",type:"function",description:"<p>The topmost class constructor to start from.</p>",optional:true}],scope:"instance",category:"Configuration",returns:{type:"Array.<String>",description:"<p>The class name hierarchy of this instance.</p>"}},{name:"isOfTypeName",description:"<p>Checks if an obj is of type using object's $name property and doing string comparision of the property with the type parameter.</p>",parameters:[{name:"type",type:"String"}],scope:"static",returns:{type:"Boolean"}},{name:"detachListeners",description:"<p>Removes all event listeners that were registered with the given <code>name</code>.</p>",parameters:[{name:"name",type:"String",description:"<p>The name of the event listeners to be removed.</p>"}],scope:"instance"},{name:"trackDetacher",access:"private",description:"<p>Tracks a detacher function for the specified listener name.</p>",parameters:[{name:"name",type:"String",description:"<p>The name assigned to the associated listeners.</p>"},{name:"detacher",type:"function",description:"<p>The detacher function.</p>"}],scope:"instance"},{name:"untrackDetachers",access:"private",description:"<p>Removes all detacher functions for the specified <code>Events</code> object. This is called\nby the <code>removeAllListeners</code> method on that object which is typically called by its\n<code>destroy</code> invocation.</p>",parameters:[{name:"eventer",type:"Core.mixin.Events",description:"<p>The <code>Events</code> instance to untrack.</p>"}],scope:"instance"}]},{name:"module:Core/adapter/widget/BryntumWidgetAdapter",classDescription:"<p>Adapter that allows <a href=\"#Core/helper/WidgetHelper\">Core.helper.WidgetHelper</a> to use Bryntums widgets.\nYou should not use this class directly, but you need to import it in your application to be able to work with Bryntum widgets.\nThis class is a part of our bundles, but if you import sources from files like shown in this <a href=\"#guides/gettingstarted/sources.md\">guide</a>,\nplease do not forget to import BryntumWidgetAdapter manually, for example:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>import '../../lib/Core/adapter/widget/BryntumWidgetAdapter.js';\nimport WidgetHelper from '../../lib/Core/helper/WidgetHelper.js';\n\nWidgetHelper.append([{\n    type : 'button',\n    text : 'test'\n}], { insertFirst : document.body });\n</code></pre>",constructor:{name:"constructor"},filename:"BryntumWidgetAdapter.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/adapter/widget",lineno:43},{name:"module:Core/data/AjaxStore",classDescription:'<p>Store that uses the Fetch API to read data from a remote server, and optionally sends synchronization\nrequests to the server containing information about locally created, modified and deleted records.</p>\n<h3>Create</h3>\n<p>Posts array of JSON data for newly added records to <a href="#Core/data/AjaxStore#config-createUrl">createUrl</a>, expects response containing an array of JSON objects\nin same order with id set (uses Model#idField as id).</p>\n<h3>Read</h3>\n<p>Reads array of JSON data from the data packet returned from the <a href="#Core/data/AjaxStore#config-readUrl">readUrl</a>. Unique id for each row is required.\nBy default looks in field \'id\' but can be configured by setting <a href="#Core/data/Model#property-idField-static">idField</a>.</p>\n<h3>Update</h3>\n<p>Posts array of JSON data for newly modified records to <a href="#Core/data/AjaxStore#config-updateUrl">updateUrl</a>.</p>\n<h3>Delete</h3>\n<p>Posts to <a href="#Core/data/AjaxStore#config-deleteUrl">deleteUrl</a> with removed records ids (for example id=1,4,7).</p>\n<pre class="prettyprint source lang-javascript"><code>new AjaxStore({\n  createUrl  : \'php/create\',\n  readUrl    : \'php/read\',\n  updateUrl  : \'php/update\',\n  deleteUrl  : \'php/delete\',\n  modelClass : Customer\n});\n</code></pre>\n<h3>Pagination</h3>\n<p>Configuring an <code>AjaxStore</code> with <a href="#Core/data/AjaxStore#config-pageParamName">pageParamName</a> or <a href="#Core/data/AjaxStore#config-pageStartParamName">pageStartParamName</a> means that the store requests <strong>pages</strong>\nof data from the remote source, sending the configured <a href="#Core/data/AjaxStore#config-pageParamName">pageParamName</a> or <a href="#Core/data/AjaxStore#config-pageStartParamName">pageStartParamName</a> to request the page\nalong with the <a href="#Core/data/AjaxStore#config-pageSizeParamName">pageSizeParamName</a>.</p>\n<p>If <code>pageParamName</code> is set, that is passed with the requested page number <strong>(one based)</strong>, along with the <a href="#Core/data/AjaxStore#config-pageSizeParamName">pageSizeParamName</a>.</p>\n<p>If <code>pageStartParamName</code> is set, that is passed with the requested page starting record index <strong>(zero based)</strong>, along with the <a href="#Core/data/AjaxStore#config-pageSizeParamName">pageSizeParamName</a>.</p>\n<h3>Remote filtering</h3>\n<p>To specify that filtering is the responsibility of the server, configure the store with\n<code><a href="#Core/data/AjaxStore#config-filterParamName">filterParamName</a>: \'nameOfFilterParameter\'</code></p>\n<p>When this is set, any <a href="#Core/data/mixin/StoreFilter#function-filter">filter</a> operation causes the store to\nreload itself, encoding the filters as JSON representations in the <a href="#Core/data/AjaxStore#config-filterParamName">filterParamName</a> HTTP\nparameter.</p>\n<p>The filters will look like this:</p>\n<pre class="prettyprint source lang-javascript"><code>{\n    &quot;field&quot;: &quot;country&quot;,\n    &quot;operator&quot;: &quot;=&quot;,\n    &quot;value&quot;: &quot;sweden&quot;,\n    &quot;caseSensitive&quot;: false\n}\n</code></pre>\n<p>The encoding may be overridden by configuring an implementation of <a href="#Core/data/AjaxStore#function-encodeFilterParams">encodeFilterParams</a>\ninto the store which returns the value for the <a href="#Core/data/AjaxStore#config-filterParamName">filterParamName</a> when passed an <em>Iterable</em> of filters.</p>\n<h3>Remote sorting</h3>\n<p>To specify that sorting is the responsibility of the server, configure the store with\n<code><a href="#Core/data/AjaxStore#config-sortParamName">sortParamName</a>: \'nameOfSortParameter\'</code></p>\n<p>When this is set, any <a href="#Core/data/mixin/StoreSort#function-sort">sort</a> operation causes the store to\nreload itself, encoding the sorters as JSON representations in the <a href="#Core/data/AjaxStore#config-sortParamName">sortParamName</a> HTTP\nparameter.</p>\n<p>The sorters will look like this:</p>\n<pre class="prettyprint source lang-javascript"><code>{\n    &quot;field&quot;: &quot;name&quot;,\n    &quot;ascending&quot;: true\n}\n</code></pre>\n<p>The encoding may be overridden by configuring an implementation of <a href="#Core/data/AjaxStore#function-encodeSorterParams">encodeSorterParams</a>\ninto the store which returns the value for the <a href="#Core/data/AjaxStore#config-sortParamName">sortParamName</a> when passed an <em>Iterable</em> of sorters.</p>',extends:["Core/data/Store"],constructor:{name:"constructor"},filename:"AjaxStore.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/data",lineno:101,events:[{name:"exception",description:'<p>Fired when a remote request fails, either at the network level, or the server returns a failure, or an invalid response.</p>\n<p>Note that when a <a href="#Core/data/AjaxStore#function-commit">commit</a> fails, more than one exception event will be triggered. The individual operation,\n<code>create</code>, <code>update</code> or <code>delete</code> will trigger their own <code>exception</code> event, but the encapsulating commit operation will also\ntrigger an <code>exception</code> event when all the operations have finished, so if exceptions are going to be handled gracefully,\nthe event\'s <code>action</code> property must be examined, and the constituent operations of the event must be examined.</p>',parameters:[{name:"source",type:"Core.data.Store",description:"<p>This Store</p>"},{name:"exception",type:"Boolean",description:"<p><code>true</code></p>"},{name:"action",type:"String",description:"<p>Action that failed, <code>'create'</code>, <code>'read'</code>, <code>'update'</code> or <code>'delete'</code>. May also be fired\nwith '<code>commit'</code> to indicate the failure of an aggregated <code>create</code>, <code>update</code> and <code>delete</code> operation. In this case,\nthe event will contain a property for each operation of the commit named <code>'create'</code>, <code>'update'</code> and <code>'delete'</code>,\neach containing the individual <code>exception</code> events.</p>"},{name:"exceptionType",type:"String",description:"<p>The type of failure, <code>'network'</code> or <code>'server'</code></p>"},{name:"response",type:"Response",description:"<p>the <code>Response</code> object</p>"},{name:"json",type:"Object",description:"<p>The decoded response object <em>if the exceptionType is <code>'server'</code></em></p>"}]},{name:"commitAdded",description:"<p>Fired after committing added records</p>",parameters:[{name:"source",type:"Core.data.Store",description:"<p>This Store</p>"}]},{name:"commitModified",description:"<p>Fired after committing modified records</p>",parameters:[{name:"source",type:"Core.data.Store",description:"<p>This Store</p>"}]},{name:"load",description:"<p>Fired on successful load</p>",parameters:[{name:"source",type:"Core.data.Store",description:"<p>This Store</p>"},{name:"data",type:"Array.<Object>",description:"<p>Data loaded</p>"},{name:"response",type:"Response",description:"<p>the <code>Response</code> object</p>"},{name:"json",type:"Object",description:"<p>The decoded response object.</p>"}]},{name:"loadChildren",description:"<p>Fired on successful load of remote child nodes for a tree node.</p>",parameters:[{name:"source",type:"Core.data.Store",description:"<p>This Store</p>"},{name:"data",type:"Array.<Object>",description:"<p>Data loaded</p>"},{name:"json",type:"Object",description:"<p>The decoded response object.</p>"}]},{name:"commitRemoved",description:"<p>Fired after committing removed records</p>",parameters:[{name:"source",type:"Core.data.Store",description:"<p>This Store</p>"}]},{name:"beforeLoad",description:"<p>Fired before loading starts. Allows altering parameters and is cancelable</p>",parameters:[{name:"source",type:"Core.data.Store",description:"<p>This Store</p>"},{name:"params",type:"Object",description:"<p>An object containing property/name pairs which are the parameters.\nThis may be mutated to affect the parameters used in the Ajax request.</p>"}],preventable:true},{name:"beforeLoadChildren",description:"<p>Fired before loading of remote child nodes of a tree node starts. Allows altering parameters and is cancelable</p>",parameters:[{name:"source",type:"Core.data.Store",description:"<p>This Store</p>"},{name:"params",type:"Object",description:"<p>An object containing property/name pairs which are the parameters.\nThis may be mutated to affect the parameters used in the Ajax request.</p>"}],preventable:true},{name:"beforeLoadPage",description:'<p>When the store <a href="#Core/data/AjaxStore#property-isPaged">is paged</a>, this is fired before loading a page and is cancelable</p>',parameters:[{name:"source",type:"Core.data.Store",description:"<p>This Store</p>"},{name:"params",type:"Object",description:"<p>An object containing property/name pairs which are the parameters.\nThis may be mutated to affect the parameters used in the Ajax request.</p>"}],preventable:true},{name:"loadStart",description:"<p>Fired when loading is beginning. This is not cancelable. Parameters in the event may still be\nmutated at this stage.</p>",parameters:[{name:"source",type:"Core.data.Store",description:"<p>This Store</p>"},{name:"params",type:"Object",description:"<p>An object containing property/name pairs which are the parameters.\nThis may be mutated to affect the parameters used in the Ajax request.</p>"}]},{name:"loadChildrenStart",description:"<p>Fired when loading of remote child nodes into a tree node is beginning. This is not cancelable. Parameters in the event may still be\nmutated at this stage.</p>",parameters:[{name:"source",type:"Core.data.Store",description:"<p>This Store</p>"},{name:"params",type:"Object",description:"<p>An object containing property/name pairs which are the parameters.\nThis may be mutated to affect the parameters used in the Ajax request.</p>"}]},{name:"beforeRequest",description:"<p>Fired before any remote request is initiated.</p>",parameters:[{name:"source",type:"Core.data.Store",description:"<p>This Store</p>"},{name:"params",type:"Object",description:"<p>An object containing property/name pairs which are the parameters.</p>"},{name:"body",type:"Object",description:"<p>The body of the request to be posted to the server.</p>"},{name:"action",type:"String",description:"<p>Action that is making the request, <code>'create'</code>, <code>'read'</code>, <code>'update'</code> or <code>'delete'</code></p>"}]},{name:"afterRequest",description:"<p>Fired after any remote request has finished whether successfully or unsuccessfully.</p>",parameters:[{name:"exception",type:"Boolean",description:"<p><code>true</code>. <em>Only present if the request triggered an exception.</em></p>"},{name:"action",type:"String",description:"<p>Action that has finished, <code>'create'</code>, <code>'read'</code>, <code>'update'</code> or <code>'delete'</code></p>"},{name:"exceptionType",type:"String",description:"<p>The type of failure, <code>'network'</code> or <code>'server'</code>. <em>Only present if the request triggered an exception.</em></p>"},{name:"response",type:"Response",description:"<p>The <code>Response</code> object</p>"},{name:"json",type:"Object",description:"<p>The decoded response object if there was no <code>'network'</code> exception.</p>"}]}],configs:[{name:"headers",description:"<p>An object containing the HTTP headers to add to each server request issued by this Store.</p>",type:"Object",scope:"inner"},{name:"fetchOptions",description:'<p>An object containing the Fetch options to pass to each server request issued by this Store. Use this to control if credentials are sent\nand other options, read more at <a href="https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch">MDN</a>.</p>',type:"Object",scope:"inner"},{name:"sendAsFormData",description:"<p>Specify <code>true</code> to send payloads as form data, <code>false</code> to send as regular JSON.</p>",type:"Boolean",scope:"inner",defaultvalue:false},{name:"writeAllFields",description:"<p>Specify <code>true</code> to send all model fields when committing modified records (as opposed to just the modified fields)</p>",type:"Boolean",scope:"inner"},{name:"parentIdParamName",description:'<p>The name of the HTTP parameter passed to this Store\'s <a href="#Core/data/AjaxStore#config-readUrl">readUrl</a> to indicate the node <code>id</code> to\nload when loading child nodes on demand if the node being expanded was created with data containing <code>children: true</code>.</p>',type:"String",scope:"inner",defaultvalue:"id"},{name:"responseDataProperty",description:"<p>The property name in JSON responses from the server that contains the data for the records</p>\n<pre class=\"prettyprint source\"><code>{\n  &quot;success&quot; : true,\n  // The property name used here should match that of 'reponseDataProperty'\n  &quot;data&quot; : [\n    ...\n  ]\n}\n</code></pre>",type:"String",scope:"inner",defaultvalue:"data"},{name:"responseTotalProperty",description:"<p>The property name in JSON responses from the server that contains the dataset total size\n<strong>when this store <a href=\"#Core/data/AjaxStore#property-isPaged\">is paged</a></strong></p>\n<pre class=\"prettyprint source\"><code>{\n  &quot;success&quot; : true,\n  // The property name used here should match that of 'reponseDataProperty'\n  &quot;data&quot; : [\n    ...\n  ],\n  // The property name used here should match that of 'responseTotalProperty'\n  &quot;total&quot; : 65535\n}\n</code></pre>",type:"String",scope:"inner",defaultvalue:"total"},{name:"filterParamName",description:"<p>The name of the HTTP parameter to use to pass any encoded filters when loading data from the server and a filtered response is required.</p>\n<p><strong>Note:</strong> When this is set, filters must be defined using a field name, an operator and a value\nto compare, <strong>not</strong> a comparison function.</p>",type:"String",scope:"inner"},{name:"sortParamName",description:"<p>The name of the HTTP parameter to use to pass any encoded sorters when loading data from the server and a sorted response is required.</p>\n<p><strong>Note:</strong> When this is set, sorters must be defined using a field name and an ascending flag,\n<strong>not</strong> a sort function.</p>",type:"String",scope:"inner"},{name:"pageParamName",description:"<p>The name of the HTTP parameter to use when requesting pages of data using the <strong>one based</strong> page number required.</p>",type:"String",scope:"inner"},{name:"pageStartParamName",description:"<p>The name of the HTTP parameter to use when requesting pages of data using the <strong>zero based</strong> index of the required page's starting record.</p>",type:"String",scope:"inner"},{name:"pageSizeParamName",description:"<p>The name of the HTTP parameter to use when requesting pages of data using the <strong>zero based</strong> index of the required page's starting record.</p>",type:"String",scope:"inner",defaultvalue:"pageSize"},{name:"pageSize",description:'<p>When paging of data is requested by setting <em>either</em> the <a href="#Core/data/AjaxStore#config-pageParamName">pageParamName</a> <em>or</em> the <a href="#Core/data/AjaxStore#config-pageStartParamName">pageStartParamName</a>,\nthis is the value to send in the <a href="#Core/data/AjaxStore#config-pageSizeParamName">pageSizeParamName</a></p>',type:"String",scope:"inner",defaultvalue:50},{name:"useRestfulMethods",description:'<p>Set to ´true´ to use restful <a href="#Core/data/AjaxStore#config-httpMethods">httpMethods</a></p>',type:"String",scope:"inner",defaultvalue:false},{name:"httpMethods",description:"<p>The HTTP methods to use for CRUD requests when <a href=\"#Core/data/AjaxStore#config-useRestfulMethods\">useRestfulMethods</a> is enabled.</p>\n<pre class=\"prettyprint source\"><code>new AjaxStore({\n   useRestfulMethods : true,\n   httpMethods : {\n       create : 'POST',\n       read : 'POST',\n       update : 'PATCH',\n       delete : 'DELETE'\n   }\n});\n\n</code></pre>",type:"Object",scope:"inner",defaultvalue:'{"create":"POST","read":"GET","update":"PUT","delete":"DELETE"}'},{name:"createUrl",description:'<p>Url to post newly created records to.</p>\n<p>The response must be in the form:</p>\n<pre><code>{\n    &quot;success&quot;: true,\n    &quot;data&quot;: [{\n        &quot;id&quot;: 0, &quot;name&quot;: &quot;General Motors&quot;\n    }, {\n        &quot;id&quot;: 1, &quot;name&quot;: &quot;Apple&quot;\n    }]\n}\n</code></pre>\n<p>Just the array of data may be returned, however that precludes the\norderly handling of errors encountered at the server.</p>\n<p>If the server encountered an error, the packet would look like this:</p>\n<pre><code>{\n    &quot;success&quot;: false,\n    &quot;message&quot;: &quot;Some kind of database error&quot;\n}\n</code></pre>\n<p>And that packet would be available in the <a href="#Core/data/AjaxStore#event-exception">exception</a> handler\nin the <code>response</code> property of the event.</p>\n<p>The <code>success</code> property may be ommitted, it defaults to <code>true</code>.</p>',type:"String",scope:"inner",category:"CRUD"},{name:"readUrl",description:'<p>Url to read data from.</p>\n<p>The response must be in the form:</p>\n<pre><code>{\n    &quot;success&quot;: true,\n    &quot;data&quot;: [{\n        &quot;id&quot;: 0, &quot;name&quot;: &quot;General Motors&quot;\n    }, {\n        &quot;id&quot;: 1, &quot;name&quot;: &quot;Apple&quot;\n    }]\n}\n</code></pre>\n<p>If the store <a href="#Core/data/AjaxStore#property-isPaged">is paged</a>, the total dataset size must be returned\nin the <a href="#Core/data/AjaxStore#config-responseTotalProperty">responseTotalProperty</a> property:</p>\n<pre><code>{\n    &quot;success&quot;: true,\n    &quot;data&quot;: [{\n        &quot;id&quot;: 0, &quot;name&quot;: &quot;General Motors&quot;\n    }, {\n        &quot;id&quot;: 1, &quot;name&quot;: &quot;Apple&quot;\n    }],\n    &quot;total&quot;: 65535\n}\n</code></pre>\n<p>Just the array of data may be returned, however that precludes the\norderly handling of errors encountered at the server.</p>\n<p>If the server encountered an error, the packet would look like this:</p>\n<pre><code>{\n    &quot;success&quot;: false,\n    &quot;message&quot;: &quot;Some kind of database error&quot;\n}\n</code></pre>\n<p>And that packet would be available in the <a href="#Core/data/AjaxStore#event-exception">exception</a> handler\nin the <code>response</code> property of the event.</p>\n<p>The <code>success</code> property may be omitted, it defaults to <code>true</code>.</p>',type:"String",scope:"inner",category:"CRUD"},{name:"updateUrl",description:'<p>Url to post record modifications to.</p>\n<p>The response must be in the form:</p>\n<pre><code>{\n    &quot;success&quot;: true,\n    &quot;data&quot;: [{\n        &quot;id&quot;: 0, &quot;name&quot;: &quot;General Motors&quot;\n    }, {\n        &quot;id&quot;: 1, &quot;name&quot;: &quot;Apple&quot;\n    }]\n}\n</code></pre>\n<p>Just the array of data may be returned, however that precludes the\norderly handling of errors encountered at the server.</p>\n<p>If the server encountered an error, the packet would look like this:</p>\n<pre><code>{\n    &quot;success&quot;: false,\n    &quot;message&quot;: &quot;Some kind of database error&quot;\n}\n</code></pre>\n<p>And that packet would be available in the <a href="#Core/data/AjaxStore#event-exception">exception</a> handler\nin the <code>response</code> property of the event.</p>\n<p>The <code>success</code> property may be ommitted, it defaults to <code>true</code>.</p>',type:"String",scope:"inner",category:"CRUD"},{name:"deleteUrl",description:'<p>Url for deleting records.</p>\n<p>The response must be in the form:</p>\n<pre><code>{\n    &quot;success&quot;: true\n}\n</code></pre>\n<p>If the server encountered an error, the packet would look like this:</p>\n<pre><code>{\n    &quot;success&quot;: false,\n    &quot;message&quot;: &quot;Some kind of database error&quot;\n}\n</code></pre>\n<p>And that packet would be available in the <a href="#Core/data/AjaxStore#event-exception">exception</a> handler\nin the <code>response</code> property of the event.</p>\n<p>The <code>success</code> property may be ommitted, it defaults to <code>true</code>.</p>',type:"String",scope:"inner",category:"CRUD"},{name:"autoLoad",description:"<p>True to initiate a load when the store is instantiated</p>",type:"Boolean",scope:"inner",category:"Common"}],properties:[{name:"isLoading",description:"<p>Returns true if the Store is currently loading</p>",scope:"instance",readonly:true,category:"CRUD",properties:[{type:{names:["Boolean"]}}]},{name:"isCommitting",description:"<p>Returns true if the Store is currently committing</p>",scope:"instance",readonly:true,category:"CRUD",properties:[{type:{names:["Boolean"]}}]},{name:"isPaged",description:'<p>Yields true if this Store is loaded page by page. This yields <code>true</code> if either of the <a href="#Core/data/AjaxStore#config-pageParamName">pageParamName</a>\nof <a href="#Core/data/AjaxStore#config-pageStartParamName">pageStartParamName</a> configs are set.</p>',scope:"instance",readonly:true,properties:[{type:{names:["Boolean"]}}]},{name:"allCount",description:'<p>Yields the complete dataset size. If the store is <a href="#Core/data/AjaxStore#property-isPaged">is paged</a> this is the value\nreturned in the last loaded data block in the <a href="#Core/data/AjaxStore#config-responseTotalProperty">responseTotalProperty</a> property. Otherwise it is\nthe number of records in the store\'s underlying storage collection.</p>',scope:"instance",readonly:true,properties:[{type:{names:["Number"]}}]},{name:"lastPage",description:'<p><strong>If the store <a href="#Core/data/AjaxStore#property-isPaged">is paged</a></strong>, yields the highest page number in the dataset as calculated from the <a href="#Core/data/AjaxStore#config-responseTotalProperty">responseTotalProperty</a>\nreturned in the last page data block loaded.</p>',scope:"instance",readonly:true,properties:[{type:{names:["Number"]}}]}],functions:[{name:"encodeFilterParams",description:"<p>A provided function which creates an array of values for the {#config-filterParamName} to pass\nany filters to the server upon load.</p>\n<p>By default, this creates a JSON string containing the following properties:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>   [{\n       field         : &lt;theFieldName>\n       operator      : May be: `'='`, `'!='`, `'>'`, `'>='`, `'&lt;'`, `'&lt;='`, `'*'`, `'startsWith'`, `'endsWith'`\n       value         : The value to compare\n       caseSensitive : true for case sensitive comparisons\n   }]\n</code></pre>",parameters:[{name:"filters",type:"Array.<Core.util.CollectionFilter>",description:"<p>The filters to encode.</p>"}],scope:"instance"},{name:"encodeSorterParams",description:'<p>A provided function which creates an array of values for the {#config-sortParamName} to pass\nany sorters to the server upon load.</p>\n<p>By default, this creates a JSON string containing the following properties:</p>\n<pre class="prettyprint source lang-javascript"><code>   [{\n       field     : &lt;theFieldName>\n       ascending : true/false\n   }]\n</code></pre>',parameters:[{name:"sorters",type:"Array.<Object>",description:"<p>The sorters to encode.</p>"}],scope:"instance"},{name:"load",description:'<p>Load data from the <a href="#Core/data/AjaxStore#config-readUrl">readUrl</a>.</p>',parameters:[{name:"params",type:"Object",description:"<p>A hash of parameters to append to querystring (will also append Store#params)</p>"}],scope:"instance",fires:["event:beforeLoad","event:loadStart","event:beforeRequest","event:load","event:exception","event:afterRequest"],category:"CRUD",returns:{type:"Promise",description:'<p>A Promise which will be resolved if the load succeeds, and rejected if the load is\nvetoed by a <a href="#Core/data/AjaxStore#event-beforeLoad">beforeLoad</a> handler, or if an <a href="#Core/data/AjaxStore#event-exception">exception</a> is detected.\nThe resolved function is passed the event object passed to any event handlers.\nThe rejected function is passed the <a href="#Core/data/AjaxStore#event-exception">exception</a> event if an exception occurred,\nor <code>false</code> if the load was vetoed by a <a href="#Core/data/AjaxStore#event-beforeLoad">beforeLoad</a> handler.</p>'},async:true},{name:"loadChildren",description:'<p>Loads children into specified parent record. Parent records id is sent as a param (param name configured with\n<a href="#Core/data/AjaxStore#config-parentIdParamName">parentIdParamName</a>.</p>',parameters:[{name:"parentRecord",type:"Core.data.Model",description:"<p>Parent record</p>"}],scope:"instance",fires:["event:beforeLoadChildren","event:loadChildrenStart","event:beforeRequest","event:loadChildren","event:exception","event:afterRequest"],category:"CRUD",returns:{type:"Promise",description:'<p>A Promise which will be resolved if the load succeeds, and rejected if the load is\nvetoed by a <a href="#Core/data/AjaxStore#event-beforeLoadChildren">beforeLoadChildren</a> handler, or if an <a href="#Core/data/AjaxStore#event-exception">exception</a> is detected.\nThe resolved function is passed the event object passed to any event handlers.\nThe rejected function is passed the <a href="#Core/data/AjaxStore#event-exception">exception</a> event if an exception occurred,\nor <code>false</code> if the load was vetoed by a <a href="#Core/data/AjaxStore#event-beforeLoadChildren">beforeLoadChildren</a> handler.</p>'},async:true},{name:"loadPage",description:'<p>Loads a page of data from the <a href="#Core/data/AjaxStore#config-readUrl">readUrl</a>.</p>',parameters:[{name:"page",type:"Number",description:"<p>The <em>one based</em> page number to load.</p>"},{name:"params",type:"Object",description:"<p>A hash of parameters to append to querystring (will also append Store#params)</p>"}],scope:"instance",fires:["event:beforeLoadPage","event:loadPageStart","event:beforeRequest","event:loadPage","event:exception","event:afterRequest"],category:"CRUD",returns:{type:"Promise",description:'<p>A Promise which will be resolved if the load succeeds, and rejected if the load is\nvetoed by a <a href="#Core/data/AjaxStore#event-beforeLoadPage">beforeLoadPage</a> handler, or if an <a href="#Core/data/AjaxStore#event-exception">exception</a> is detected.\nThe resolved function is passed the event object passed to any event handlers.\nThe rejected function is passed the <a href="#Core/data/AjaxStore#event-exception">exception</a> event if an exception occurred,\nor <code>false</code> if the load was vetoed by a <a href="#Core/data/AjaxStore#event-beforeLoadPage">beforeLoadPage</a> handler.</p>'},async:true},{name:"nextPage",description:'<p>If this store <a href="#Core/data/AjaxStore#property-isPaged">is paged</a>, and is not already at the <a href="#Core/data/AjaxStore#property-lastPage">lastPage</a>\nthen this will load the next page of data.</p>',scope:"instance",fires:["event:beforeLoadPage","event:loadPageStart","event:beforeRequest","event:loadPage","event:exception","event:afterRequest"],category:"CRUD",returns:{type:"Promise",description:"<p>A promise which is resolved when the Ajax request completes and has been processed.</p>"},async:true},{name:"previousPage",description:'<p>If this store <a href="#Core/data/AjaxStore#property-isPaged">is paged</a>, and is not already at the first page\nthen this will load the previous page of data.</p>',scope:"instance",fires:["event:beforeLoadPage","event:loadPageStart","event:beforeRequest","event:loadPage","event:exception","event:afterRequest"],category:"CRUD",returns:{type:"Promise",description:"<p>A promise which is resolved when the Ajax request completes and has been processed.</p>"},async:true},{name:"commit",description:'<p>Commits all changes (added, modified and removed) using corresponding urls (<a href="#Core/data/AjaxStore#config-createUrl">createUrl</a>,\n<a href="#Core/data/AjaxStore#config-updateUrl">updateUrl</a> and <a href="#Core/data/AjaxStore#config-deleteUrl">deleteUrl</a>)</p>',scope:"instance",fires:["event:beforeCommit"],category:"CRUD",returns:{type:"Promise",description:"<p>A Promise which is resolved only if all pending changes (Create, Update and Delete) successfully resolve.\nBoth the resolve and reject functions are passed a <code>commitState</code> object which is stored the <a href=\"#Core/data/AjaxStore#event-afterRequest\">afterRequest</a>\nevent for each request. Each event contains the <code>exception</code>, <code>request</code> and <code>response</code> properties eg:</p>\n<pre><code>{\n     success: true,                  // If *all* commits succeeded\n     changes: {\n         added: [records...],\n         modified: [records...],\n         removed: [records...],\n     },\n     added: {\n         source: theStore,\n         exception: true,            // Only if the add request triggered an exception\n         exceptionType: 'server'/'network', // Only if the add request triggered an exception\n         response: Response,\n         json: parsedResponseObject\n     },\n     modified: {},                   // Same format as added\n     removed: {}                     // Same format as added\n}\n</code></pre>\n<p>If there were no pending changes, the resolve and reject functions are passed no parameters.</p>\n<p>Returns <code>false</code> if a commit operation is already in progress.\nThe resolved function is passed the event object passed to any event handlers.\nThe rejected function is passed the <a href=\"#Core/data/AjaxStore#event-exception\">exception</a> event if an exception occurred,</p>"},async:true},{name:"commitAdded",access:"private",description:"<p>Commits added records by posting to <a href=\"#Core/data/AjaxStore#config-createUrl\">createUrl</a>.\nServer should return a JSON object with a 'success' property indicating whether the operation was succesful.</p>",parameters:[{name:"commitState",type:"Object",description:'<p>An object into which is added a <code>delete</code> property being the <a href="#Core/data/AjaxStore#event-afterRequest">afterRequest</a> event.</p>'}],scope:"instance",fires:["event:beforeRequest","event:commitAdded","event:refresh","event:exception","event:afterRequest"],returns:{type:"Promise",description:"<p>If there are added records, a Promise which will be resolved whether the commit\nsucceeds or fails. The resulting event is placed into the <code>add</code> property of the passed <code>commitState</code>\nparameter. If there are no added records, <code>null</code> is returned.\nThe resolved function is passed the event object passed to any event handlers.</p>"},async:true},{name:"commitModified",access:"private",description:"<p>Commits modified records by posting to <a href=\"#Core/data/AjaxStore#config-updateUrl\">updateUrl</a>.\nServer should return a JSON object with a 'success' property indicating whether the operation was succesful.</p>",parameters:[{name:"commitState",type:"Object",description:'<p>An object into which is added a <code>delete</code> property being the <a href="#Core/data/AjaxStore#event-afterRequest">afterRequest</a> event.</p>'}],scope:"instance",fires:["event:beforeRequest","event:commitModified","event:refresh","event:exception","event:afterRequest"],returns:{type:"Promise",description:"<p>If there are added records, a Promise which will be resolved whether the commit\nsucceeds or fails. The resulting event is placed into the <code>update</code> property of the passed <code>commitState</code>\nparameter. If there are no added records, <code>null</code> is returned.\nThe resolved function is passed the event object passed to any event handlers.</p>"},async:true},{name:"commitRemoved",access:"private",description:"<p>Commits removed records by posting to <a href=\"#Core/data/AjaxStore#config-deleteUrl\">deleteUrl</a>.\nServer should return a JSON object with a 'success' property indicating whether the operation was successful.</p>",parameters:[{name:"commitState",type:"Object",description:'<p>An object into which is added a <code>delete</code> property being the <a href="#Core/data/AjaxStore#event-afterRequest">afterRequest</a> event.</p>'}],scope:"instance",fires:["event:beforerequest","event:commitremoved","event:refresh","event:exception","event:afterrequest"],returns:{type:"Promise",description:"<p>If there are added records, a Promise which will be resolved whether the commit\nsucceeds or fails. The resulting event is placed into the <code>delete</code> property of the passed <code>commitState</code>\nparameter. If there are no added records, <code>null</code> is returned.\nThe resolved function is passed the event object passed to any event handlers.</p>"},async:true}]},{name:"module:Core/data/DomDataStore",classDescription:"<p>Stores data on a dom element (by setting element._domData).\nInstead of using HTML5:s element.dataset, which turned out to be slow.</p>",access:"private",constructor:{name:"constructor"},filename:"DomDataStore.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/data",lineno:10,functions:[{name:"get",description:"<p>Get data that is connected to specified element.</p>",parameters:[{name:"element",type:"HTMLElement",description:"<p>DOM element</p>"},{name:"key",type:"String",description:"<p>The name of the property in the element data to return;</p>",optional:true}],scope:"static",returns:{type:"Object",description:"<p>Data</p>"}},{name:"set",description:"<p>Set data connected to specified element (completely replacing any existing).\nTo update data, use DomDataStore#assign instead.</p>",parameters:[{name:"element",type:"HTMLElement",description:"<p>DOM element</p>"},{name:"data",type:["Object","String"],description:"<p>Data object to set, or property name to set</p>"},{name:"value",type:"*",description:"<p>If the previous parameter was a property name, this is the value to set.</p>",optional:true}],scope:"static"},{name:"assign",description:"<p>Updates data connected to specified element.</p>",parameters:[{name:"element",description:"<p>DOM element</p>"},{name:"data",description:"<p>Data to assign</p>"}],scope:"static"}]},{name:"module:Core/data/Duration",classDescription:'<p>Class which represents a duration object.</p>\n<pre class="prettyprint source"><code>{\n   unit: String,\n   magnitude: Number\n}\n</code></pre>',description:"<p>Duration constructor.</p>",constructor:{name:"constructor",parameters:[{name:"magnitude",type:"Number",description:"<p>Duration magnitude value</p>"},{name:"unit",type:"String",description:"<p>Duration uni value</p>"}]},filename:"Duration.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/data",lineno:23,properties:[{name:"magnitude",description:"<p>Get/Set numeric magnitude <code>value</code>.</p>",scope:"instance",properties:[{type:{names:["Number"]}}]},{name:"unit",description:"<p>Get/Set duration unit to use with the current magnitude value.\nValid values are:</p>\n<ul>\n<li>&quot;millisecond&quot; - Milliseconds</li>\n<li>&quot;second&quot; - Seconds</li>\n<li>&quot;minute&quot; - Minutes</li>\n<li>&quot;hour&quot; - Hours</li>\n<li>&quot;day&quot; - Days</li>\n<li>&quot;week&quot; - Weeks</li>\n<li>&quot;month&quot; - Months</li>\n<li>&quot;quarter&quot; - Quarters</li>\n<li>&quot;year&quot;- Years</li>\n</ul>",scope:"instance",properties:[{type:{names:["String"]}}]},{name:"milliseconds",description:"<p>The <code>milliseconds</code> property is a read only property which returns the number of milliseconds in this Duration</p>",scope:"instance",readonly:true,properties:[{type:{names:["Number"]}}]}],functions:[{name:"isEqual",description:"<p>Returns truthy value if this Duration equals to passed value</p>",parameters:[{name:"value"}],scope:"instance",returns:{type:"Boolean"}}]},{name:"module:Core/data/Model",classDescription:"<p>A Model is a definition for a record in a store. It defines which fields the data contains and exposes an interface\nto access and manipulate that data.</p>\n<p>Models are created from json objects, the input json is stored in <code>Model#data</code>. By default it stores a shallow copy of\nthe raw json, but for records in stores configured with <code>useRawData: true</code> it stores the supplied json object as is.</p>\n<h2>Defining fields</h2>\n<p>A Model can either define its fields explicitly or have them created from its data. This snippet shows a model with\ntwo fields:</p>\n<pre class=\"prettyprint source\"><code>class Person extends Model {\n    static get fields() {\n        return [\n            'name',\n            { name : 'birthday', type : 'date', dateFormat : 'YYYY-MM-DD' },\n            { name : 'shoeSize', type : 'number', defaultValue : 11 },\n            { name : 'age', readOnly : true }\n        ];\n    }\n}\n</code></pre>\n<p>The first field (name) has an unspecified type, which is fine in most cases since this is JavaScript. The second\nfield (birthday) is defined to be a date, which will make the model parse any supplied value into an actual date.\nThe parsing is handled by <a href=\"#Core/helper/DateHelper#function-parse-static\">DateHelper.parse()</a> using the specified\n<code>dateFormat</code>, or if no format is specified using\n<a href=\"#Core/helper/DateHelper#property-defaultFormat-static\">DateHelper.defaultFormat</a>. Currently date is the only\nspecified type available.</p>\n<p>You can also set a `defaultValue that will be used if the data doesn't contain a value for the field:</p>\n<pre class=\"prettyprint source\"><code>      { name : 'shoeSize', type : 'number', defaultValue : 11 }\n</code></pre>\n<p>To create a record from a Model, supply data to its constructor:</p>\n<pre class=\"prettyprint source\"><code>let guy = new Person({\n  id       : 1,\n  name     : 'Dude',\n  birthday : '2014-09-01'\n});\n</code></pre>\n<p>If no id is specified, a temporary id will be generated.</p>\n<h2>Persisting fields</h2>\n<p>By default all fields are persisted. If you don't want particular field to get saved to the server, configure it with\n<code>persist: false</code>. In this case field will not be among changes which are sent by\n<a href=\"#Core/data/AjaxStore#function-commit\">store.commit()</a>, otherwise its behavior doesn't change.</p>\n<pre class=\"prettyprint source\"><code>class Person extends Model {\n    static get fields() {\n        return [\n            'name',\n            { name : 'age', persist : false }\n        ];\n    }\n}\n</code></pre>\n<h2>Id field</h2>\n<p>By default Model expects its id to be stored in a field named &quot;id&quot;. The name of the field can be customized by\nsetting <a href=\"#Core/data/Model#property-idField-static\">idField</a>:</p>\n<pre class=\"prettyprint source\"><code>class Person extends Model {\n    static get fields() {\n        return {\n            'name',\n            { name : 'age', persist : false },\n            { name : 'personId' },\n            { name : 'birthday', type : 'date' }\n        }\n    }\n}\n// Id drawn from 'id' property by default; use custom field here\nPerson.idField = 'personId';\n\nlet girl = new Person({\n   personId : 2,\n   name     : 'Lady',\n   birthday : '2011-11-05'\n});\n</code></pre>\n<h2>Getting and setting values</h2>\n<p>Fields are used to generate getters and setters on the records. Use them to access or modify values (they are\nreactive):</p>\n<pre class=\"prettyprint source\"><code>console.log(guy.name);\ngirl.birthday = new Date(2011,10,6);\n</code></pre>\n<p>NOTE: In an application with multiple different models you should subclass Model, since the prototype is decorated\nwith getters and setters. Otherwise you might got unforeseen collisions.</p>\n<h2>Field data mapping</h2>\n<p>By default fields are mapped to data using their name. If you for example have a &quot;name&quot; field it expects data to be\n<code>{ name: 'Some name' }</code>. If you need to map it to some other property, specify <code>dataSource</code> in your field definition:</p>\n<pre class=\"prettyprint source\"><code>class Person extends Model {\n  static get fields {\n    return [\n      { name : 'name', dataSource : 'TheName' }\n    ];\n}\n\n// This is now OK:\nlet dude = new Person({ TheName : 'Manfred' });\nconsole.log(dude.name); // --\x3e Manfred\n</code></pre>\n<h2>Tree API</h2>\n<p>This class mixes in the <a href=\"#Core/data/mixin/TreeNode\">TreeNode</a> mixin which provides an API for tree related functionality (only relevant if your\nstore is configured to be a <a href=\"#Core/data/Store#config-tree\">tree</a>).</p>",mixes:["Core/data/mixin/TreeNode","Core/data/stm/mixin/ModelStm"],constructor:{name:"constructor"},filename:"Model.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/data",lineno:160,properties:[{name:"idField",description:"<p>The name of the data field which provides the ID of instances of this Model.</p>",scope:"static",category:"Fields",properties:[{type:{names:["String"]}}]},{name:"childrenField",description:"<p>The name of the data field which holds children of this Model when used in a tree structure</p>\n<pre class=\"prettyprint source lang-javascript\"><code>MyModel.childrenField = 'kids';\nconst parent = new MyModel({\n  name : 'Dad',\n  kids : [\n    { name : 'Daughter' },\n    { name : 'Son' }\n  ]\n});\n</code></pre>",scope:"static",category:"Fields",properties:[{type:{names:["String"]}}]},{name:"indexPath",access:"private",description:"<p>Returns index path to this node. This is the index of each node in the node path\nstarting from the topmost parent. (only relevant when its part of a tree store).</p>",scope:"instance",returns:[{type:{names:["Array.<Number>"]},description:"<p>The index of each node in the path from the topmost parent to this node.</p>"}],category:"Parent & children"},{name:"id",description:"<p>Unique identifier for the record. Might be mapped to another dataSource using idField, but always exposed as\nrecord.id. Will get a generated value if none is specified in records data.</p>",type:{names:["String","Number"]},scope:"inner",category:"Identification"},{name:"fieldMap",description:"<p>An object containing all the <em>defined</em> fields for this Model class. This will include all superclass's\ndefined fields through its prototype chain. So be aware that <code>Object.keys</code> and <code>Object.entries</code> will only\naccess this class's defined fields.</p>",type:{names:["Object"]},scope:"static",readonly:true,category:"Fields"},{name:"autoExposeFields",description:"<p>Flag checked from Store when loading data that determines if fields found in first records should be exposed in\nsame way as predefined fields.</p>",scope:"static",returns:[{type:{names:["Boolean"]}}],category:"Fields"},{name:"fields",description:"<p>Predefined fields, none per default, override in subclasses to add fields.</p>",scope:"static",returns:[{type:{names:["Array.<Object>"]}}],readonly:true,category:"Fields"},{name:"fields",description:"<p>Convenience getter to get field definitions from class.</p>",scope:"instance",returns:[{type:{names:["Array"]}}],category:"Fields"},{name:"fieldNames",description:"<p>Get the names of all fields in data.</p>",scope:"instance",returns:[{type:{names:["Array.<String>"]},description:"<p>Field names</p>"}],readonly:true,category:"Fields"},{name:"isModified",description:"<p>True if this model has any uncommitted changes.</p>",scope:"instance",readonly:true,category:"Editing",properties:[{type:{names:["Boolean"]}}]},{name:"modifications",description:"<p>Get a map of the modified fields in form of an object. The field <em>names</em> are used as the property names\nin the returned object.</p>",scope:"instance",readonly:true,category:"Editing",properties:[{type:{names:["Object"]}}]},{name:"modificationData",description:"<p>Get a map of the modified fields in form of an object. The field <em>dataSources</em> are used as the property names\nin the returned object.</p>",scope:"instance",readonly:true,category:"Editing",properties:[{type:{names:["Object"]}}]},{name:"persistableData",access:"internal",description:"<p>Get persistable data in form of an object.</p>",scope:"instance",readonly:true,category:"Editing",properties:[{type:{names:["Object"]}}]},{name:"isCommitting",description:"<p>True if this models changes are currently being committed.</p>",scope:"instance",category:"Editing",properties:[{type:{names:["boolean"]}}]},{name:"internalId",description:"<p>Gets the records internalId. It is assigned during creation, guaranteed to be globally unique among models.</p>",scope:"instance",category:"Identification",properties:[{type:{names:["Number"]}}]},{name:"isPhantom",description:"<p>Returns true if the record is new and has not been persisted (and received a proper id).</p>",scope:"instance",readonly:true,category:"Identification",properties:[{type:{names:["Boolean"]}}]},{name:"hasGeneratedId",description:"<p>Checks if record has a generated id. New records are assigned a generated id (starting with _generated), which should be\nreplaced on commit.</p>",scope:"instance",category:"Identification",properties:[{type:{names:["Boolean"]}}]},{name:"json",description:"<p>Get the records data as a json string.</p>",type:{names:["String"]},scope:"instance",category:"Misc"},{name:"isBatchUpdating",description:"<p>True if this Model is currently batching its changes.</p>",scope:"instance",readonly:true,category:"Editing",properties:[{type:{names:["Boolean"]}}]},{name:"firstStore",description:"<p>Get the first store that this model is assigned to.</p>",scope:"instance",returns:[{type:{names:["Core.data.Store"]}}],category:"Misc"},{name:"isValid",description:"<p>Check if record has valid data. Default implementation returns true, override in your model to do actual validation.</p>",scope:"instance",returns:[{type:{names:["Boolean"]}}],category:"Editing"}],functions:[{name:"constructor",description:"<p>Constructs a new record from the supplied data.</p>",parameters:[{name:"data",type:"Object",description:"<p>Raw data</p>",optional:true},{name:"store",type:"Core.data.Store",description:"<p>Data store</p>",optional:true},{name:"meta",type:"Object",description:"<p>Meta data</p>",optional:true}],scope:"inner",category:"Misc"},{name:"equals",description:"<p>Compares this Model instance to the passed instance. If they are of the same type, and all fields\n(except, obviously, <code>id</code>) are equal, this returns <code>true</code>.</p>",parameters:[{name:"other",type:"Core.data.Model",description:"<p>The record to compare this record with.</p>"}],scope:"instance",returns:{type:"Boolean",description:"<p><code>true</code> if the other is of the same class and has all fields equal.</p>"}},{name:"processData",access:"private",description:"<p>Processes raw data, converting values and setting defaults.</p>",parameters:[{name:"data",type:"Object",description:"<p>Raw data</p>"},{name:"ignoreDefaults",type:"Boolean",description:"<p>Ignore setting default values, used when updating</p>",default:false,optional:true}],scope:"static",category:"Fields",returns:{type:"Object",description:"<p>Processed data</p>"}},{name:"exposeProperties",access:"internal",description:"<p>Makes getters and setters for fields (from definitions and data). Called once when class is defined and once when\ndata is loaded first time.</p>",parameters:[{name:"data",type:"Object",description:"<p>Raw data</p>",optional:true}],scope:"static",category:"Fields"},{name:"addField",description:"<p>Add a field definition in addition to those predefined in <code>fields</code>.</p>",parameters:[{name:"field",type:["String","Object"],description:"<p>A field name or definition</p>"}],scope:"static"},{name:"removeField",description:"<p>Remove a field definition by name.</p>",parameters:[{name:"fieldName",type:"String",description:"<p>Field name</p>"}],scope:"static"},{name:"createFieldProperty",access:"private",description:"<p>Create getter and setter functions for the specified field name under the specified key.</p>",parameters:[{name:"fieldName",type:"String",description:"<p>The defined field name (or property name if this is created by exposing a raw property)</p>"},{name:"propertyName",type:"String",description:"<p>The property name to read off the data property</p>"},{name:"fieldDef",type:"Object",description:"<p>The full field definition.</p>"}],scope:"static",category:"Fields"},{name:"exposeRelations",access:"internal",description:"<p>Makes getters and setters for related records. Populates a Model#relation array with the relations, to allow it\nto be modified later when assigning stores.</p>",scope:"static",category:"Relations"},{name:"getFieldDefinition",description:"<p>Convenience function to get the definition for a field from class.</p>",parameters:[{name:"fieldName",type:"String",description:"<p>Field name</p>"}],scope:"instance",category:"Fields",returns:{type:"Object"}},{name:"getFieldDefinition",description:"<p>Get the definition for a field by name. Caches results.</p>",parameters:[{name:"fieldName",type:"String",description:"<p>Field name</p>"}],scope:"static",category:"Fields",returns:{type:"Object",description:"<p>Field definition or null if none found</p>"}},{name:"getFieldDataSource",access:"internal",description:"<p>Returns dataSource configuration for a given field name</p>",parameters:[{name:"fieldName",type:"String"}],scope:"static",returns:{type:"String",description:"<p>Field <code>dataSource</code> mapping</p>"}},{name:"getDataSource",description:"<p>Get the data source used by specified field. Returns the fieldName if no data source specified.</p>",parameters:[{name:"fieldName",type:"String",description:"<p>Field name</p>"}],scope:"instance",category:"Fields",returns:{type:"String"}},{name:"processField",description:"<p>Processes input to a field, converting to expected type.</p>",parameters:[{name:"fieldName",type:"String",description:"<p>Field dataSource</p>"},{name:"value",type:"*",description:"<p>Value to process</p>"}],scope:"static",category:"Fields",returns:{type:"*",description:"<p>Converted value</p>"}},{name:"initRelations",access:"private",description:"<p>Initializes model relations. Called from store when adding a record.</p>",scope:"instance",category:"Relations"},{name:"initRelation",access:"private",description:"<p>Initializes/updates a single relation.</p>",parameters:[{name:"config",description:"<p>Relation config</p>"}],scope:"instance",category:"Relations",returns:{type:"Core.data.Model",description:"<p>Related record</p>"}},{name:"get",description:"<p>Get value for specified field name. You can also use the generated getters if loading through a Store.\nIf model is currently in batch operation this will return updated batch values which are not applied to Model\nuntil endBatch() is called.</p>",parameters:[{name:"fieldName",type:"String",description:"<p>Field name to get value from</p>"}],scope:"instance",category:"Fields",returns:{type:"*",description:"<p>Fields value</p>"}},{name:"setData",access:"internal",description:"<p>Internal function used to update a records underlying data block (record.data) while still respecting field\nmappings. Needed in cases where a field needs setting without triggering any associated behaviour and it has a\ndataSource with a different name.</p>\n<p>For example:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>// startDate mapped to data.beginDate\n{ name : 'startDate', dataSource : 'beginDate' }\n\n// Some parts of our code needs to update the data block without triggering any of the behaviour associated with\n// calling set. This would then not update &quot;beginDate&quot;:\nrecord.data.startDate = xx;\n\n// But this would\nrecord.setData('startDate', xx);\n</code></pre>",scope:"instance",category:"Editing"},{name:"syncId",access:"private",description:"<p>Silently updates record's id with no flagging the property as modified.\nTriggers onModelChange event for changed id.</p>",parameters:[{name:"value",type:["String","Number"],description:"<p>id value</p>"}],scope:"instance"},{name:"set",description:"<p>Set value for the specified field. You can also use the generated setters if loading through a Store.</p>",parameters:[{name:"field",type:["String","Object"],description:"<p>The field to set value for, or an object with multiple values to set in one call</p>"},{name:"value",type:"*",description:"<p>Value to set</p>"},{name:"silent",type:"Boolean",description:"<p>Set to true to not trigger events</p>",default:false,optional:true}],examples:["person.set('name', 'Donald');"],scope:"instance",fires:["Store#event:idChange","Store#event:update","Store#event:change"],category:"Editing"},{name:"isFieldModified",description:"<p>Returns true if this model has uncommitted changes for the provided field.</p>",parameters:[{name:"fieldName",type:"String",description:"<p>Field name</p>"}],scope:"instance",returns:{type:"Boolean",description:"<p>True if the field is changed</p>"}},{name:"getFieldPersistentValue",access:"private",description:"<p>Returns field value that should be persisted, or <code>undefined</code> if field is configured with <code>persist: false</code>.</p>",parameters:[{name:"name",type:"String",description:"<p>Name of the field to get value</p>"}],scope:"instance",category:"Fields"},{name:"clearChanges",description:"<p>Clear stored changes, used on commit. Does not revert changes.</p>",scope:"instance",category:"Editing"},{name:"generateId",description:"<p>Generates id for new record which starts with _generated.</p>",scope:"instance",category:"Identification"},{name:"asId",description:"<p>Gets the id of specified model or the value if passed string/Number.</p>",parameters:[{name:"model",type:["Core.data.Model","String","Number"]}],scope:"static",category:"Identification",returns:{type:["String","Number"],description:"<p>id</p>"}},{name:"toJSON",access:"private",description:"<p>Used by JSON.stringify to correctly convert this record to json. No point in calling it directly.</p>",scope:"instance",category:"Misc"},{name:"beginBatch",description:"<p>Begin a batch, which stores changes and commits them when the batch ends.\nPrevents events from being fired during batch.</p>\n<pre class=\"prettyprint source\"><code>record.beginBatch();\nrecord.name = 'Mr Smith';\nrecord.team = 'Golden Knights';\nrecord.endBatch();\n</code></pre>\n<p>Please note that you can also set multiple fields in a single call using <a href=\"#Core/data/Model#function-set\">set</a>, which in many\ncases can replace using a batch:</p>\n<pre class=\"prettyprint source\"><code>record.set({\n  name : 'Mr Smith',\n  team : 'Golden Knights'\n});\n</code></pre>",scope:"instance",category:"Editing"},{name:"endBatch",description:"<p>End a batch, triggering events if data has changed.</p>",parameters:[{name:"silent",type:"Boolean",description:"<p>Specify <code>true</code> to not trigger events</p>",default:false,optional:true}],scope:"instance",category:"Editing"},{name:"cancelBatch",description:"<p>Cancels current batch operation. Any changes during the batch are discarded.</p>",scope:"instance",category:"Editing"},{name:"triggerBeforeUpdate",access:"private",description:"<p>Triggers beforeUpdate event for each store and checks if changes can be made from event return value.</p>",parameters:[{name:"changes",type:"Object",description:"<p>Data changes</p>"}],scope:"instance",returns:{type:"Boolean",description:"<p>returns true if data changes are accepted</p>"}},{name:"copy",description:"<p>Makes a copy of this model, assigning the specified id or a generated id.</p>",parameters:[{name:"newId",type:["Number","String","Object"],description:"<p>Id to set (or config object), leave out to use generated id or specify false to also copy id</p>",optional:true},{name:"newId.id",type:["Number","String"],description:"<p>Id to set, leave out to use generated id or specify false to also copy id</p>",optional:true,isSubParam:true},{name:"newId.deep",type:"Boolean",description:"<p>True to also clone children</p>",optional:true,isSubParam:true}],scope:"instance",category:"Editing",returns:{type:"Core.data.Model",description:"<p>Copy of this model</p>"}},{name:"remove",description:"<p>Removes this record from all stores (and in a tree structure, also from its parent if it has one).</p>",parameters:[{name:"silent",type:"Boolean",description:"<p>Specify <code>true</code> to not trigger events</p>",default:false,optional:true}],scope:"instance",category:"Editing"},{name:"getRelationConfig",access:"private",description:"<p>Get a relation config by name, from the first store.</p>",parameters:[{name:"name",type:"String"}],scope:"instance",category:"Relations",returns:{type:"Object"}},{name:"joinStore",access:"internal",description:"<p>Joins this record and any children to specified store, if not already joined.</p>",parameters:[{name:"store",type:"Core.data.Store",description:"<p>Store to join</p>"}],scope:"instance",category:"Misc"},{name:"unJoinStore",access:"internal",description:"<p>Unjoins this record and any children from specified store, if already joined.</p>",parameters:[{name:"store",type:"Core.data.Store",description:"<p>Store to join</p>"}],scope:"instance",category:"Misc"},{name:"isPartOfStore",access:"internal",description:"<p>Returns true if this record is contained in the specified store, or in any store if store param is omitted.</p>",parameters:[{name:"store",type:"Core.data.Store",description:"<p>Store to join</p>"}],scope:"instance",category:"Misc",returns:{type:"Boolean"}},{name:"instanceMeta",access:"private",description:"<p>Used to set per external instance meta data. For example useful when using a record in multiple grids to store some state\nper grid.</p>",parameters:[{name:"instanceOrId",type:["String","Object"],description:"<p>External instance id or the instance itself, if it has id property</p>"}],scope:"instance",category:"Misc"}]},{name:"module:Core/data/Store",classDescription:"<p>The Store represents a data container which holds flat data or tree structures. An item in the Store is often called a ´record´ and it is simply an instance of the\n<a href=\"#Core/data/Model\">Core.data.Model</a> (or any subclass thereof). Typically you load data into a store to display it in a Grid or a ComboBox. The Store is the backing data component for any component that is showing data in a list style UI.</p>\n<ul>\n<li><a href=\"#Grid/view/Grid\">Grid.view.Grid</a></li>\n<li><a href=\"#Grid/view/TreeGrid\">Grid.view.TreeGrid</a></li>\n<li><a href=\"#Core/widget/List\">Core.widget.List</a></li>\n<li><a href=\"#Core/widget/Combo\">Core.widget.Combo</a></li>\n</ul>\n<h3>Data format</h3>\nData is store in a JSON array the Store offers an API to edit, filter, group and sort the records.\n<h3>Store with flat data</h3>\nTo create a flat store simply provide an array of objects that describe your records\n<pre class=\"prettyprint source lang-javascript\"><code>let store = new Store({\n  data : [\n    { id : 1, name : 'ABBA', country : 'Sweden' },\n    { id : 2, name : 'Beatles', country : 'UK' }\n  ]\n});\n\n// retrieve record by id\nlet beatles = store.getById(2);\n</code></pre>\n<h3>Store with tree data</h3>\nTo create a tree store use `children` property for descendant records\n<pre class=\"prettyprint source lang-javascript\"><code>let store = new Store({\n  tree: true,\n  data : [\n    { id : 1, name : 'ABBA', country : 'Sweden', children: [\n      { id: 2, name: 'Agnetha' },\n      { id: 3, name: 'Bjorn' },\n      { id: 4, name: 'Benny' },\n      { id: 5, name: 'Anni-Frid' }\n    ]},\n  ]\n});\n\n// retrieve record by id\nlet benny = store.getById(4);\n</code></pre>\n<h3>Sharing stores</h3>\nYou cannot directly share a Store between widgets, but the data in a Store can be shared. There are two different\napproaches depending on your needs, sharing data and chaining stores:\n<h4>Shared data</h4>\nTo create 2 widgets that share data, you can create 2 separate stores and pass records of the first store as the\ndataset of the second store.\n<pre class=\"prettyprint source lang-javascript\"><code>let combo1 = new Combo({\n    appendTo : document.body,\n    store    : new Store({\n        data : [\n            { id : 1, name : 'ABBA', country : 'Sweden' },\n            { id : 2, name : 'Beatles', country : 'UK' }\n        ]\n    }),\n    valueField   : 'id',\n    displayField : 'name'\n});\n\nlet combo2 = new Combo({\n    appendTo : document.body,\n    store    : new Store({\n        data : combo1.store.records\n    }),\n    valueField   : 'id',\n    displayField : 'name'\n});\n\ncombo1.store.first.name = 'foo';\ncombo2.store.first.name; // &quot;foo&quot;\n</code></pre>\n<h4>Chained stores</h4>\nAnother more powerful option to share data between widgets is to create <a href=\"#Core/data/mixin/StoreChained\">chained stores</a>.\nThe easiest way to create a chained store is to call <a href=\"#Core/data/Store#function-chain\">chain</a> function.\n<pre class=\"prettyprint source lang-javascript\"><code>let combo1 = new Combo({\n    appendTo : document.body,\n    store    : new Store({\n        data : [\n            { id : 1, name : 'ABBA', country : 'Sweden' },\n            { id : 2, name : 'Beatles', country : 'UK' }\n        ]\n    }),\n    valueField   : 'id',\n    displayField : 'name'\n});\n\nlet combo2 = new Combo({\n    appendTo : document.body,\n    store    : combo1.store.chain(),\n    valueField   : 'id',\n    displayField : 'name'\n});\n\ncombo1.store.first.name = 'foo';\ncombo2.store.first.name; // &quot;foo&quot;\n</code></pre>\n<p>A chained store can optionally be created with a filtering function, to only contain a subset of the records from\nthe main store. In addition, the chained store will reflect record removals/additions to the master store, something\nthe shared data approach will not.</p>",extends:["Core/Base"],mixes:["Core/data/mixin/StoreChained","Core/data/mixin/StoreCRUD","Core/data/mixin/StoreFilter","Core/data/mixin/StoreGroup","Core/data/mixin/StoreRelation","Core/data/mixin/StoreSearch","Core/data/mixin/StoreSort","Core/data/mixin/StoreState","Core/data/mixin/StoreSum","Core/data/mixin/StoreTree","Core/mixin/Events","Core/data/stm/mixin/StoreStm"],constructor:{name:"constructor"},filename:"Store.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/data",lineno:158,configs:[{name:"storeId",description:'<p>Deprecated in favour of <a href="#Core/data/Store#config-id">id</a></p>',type:["String","Number"],scope:"inner",deprecated:true},{name:"id",description:"<p>Store's unique identifier. When set the store is added to a store map accessible through Store#getStore(id)</p>",type:["String","Number"],scope:"inner",category:"Common"},{name:"fields",description:"<p>An array of field definitions used to create a Model (modelClass) subclass. Optional. If the Model\nalready has fields defined, these fields will extend those.</p>",type:"Array.<Object>",scope:"inner",category:"Common"},{name:"autoTree",description:"<p>Automatically detect from set data if used as tree store or flat store</p>",type:"Boolean",scope:"inner",defaultvalue:true,category:"Tree"},{name:"modelClass",description:"<p>Class used to represent records</p>",type:"Core.data.Model",scope:"inner",category:"Common",typings:"{ new(data: object): Model }"},{name:"data",description:"<p>Raw data to load initially</p>",type:"Array.<Object>",scope:"inner",category:"Common"},{name:"tree",description:"<p><code>true</code> to act as a tree store.</p>",type:"Boolean",scope:"inner",category:"Tree"},{name:"storage",description:'<p>A <a href="#Core/util/Collection">Collection</a>, or Collection config object\nto use to contain this Store\'s constituent records.</p>',type:["Core.util.Collection","Object"],scope:"inner"},{name:"useRawData",description:'<p>Retools the loaded data objects instead of making shallow copies of them. This increases performance but\npollutes the incoming data and does not allow remapping of fields (dataSource).</p>\n<p>Also allows disabling certain steps in data loading, to further improve performance. Either accepts an\nobject with the params described below or <code>true</code> which equals <code>disableDuplicateIdCheck</code> and\n<code>disableTypeConversion</code>.</p>\n<pre class="prettyprint source lang-javascript"><code>// No duplicate id checking, no type conversions\nnew Store({ useRawData : true });\n\nnew Store({\n  // No type conversions only\n  useRawData : {\n    disableTypeConversion : true\n  }\n});\n</code></pre>',type:["Boolean","Object"],scope:"inner",category:"Advanced",parameters:[{name:"disableDuplicateIdCheck",type:"Boolean",description:"<p>Data must not contain duplicate ids, check is bypassed.</p>",optional:true},{name:"disableDefaultValue",type:"Boolean",description:"<p>Default values will not be applied to record fields.</p>",optional:true},{name:"disableTypeConversion",type:"Boolean",description:"<p>No type conversions will be performed on record data.</p>",optional:true}]},{name:"allowNoId",description:"<p>Specify <code>false</code> to prevent loading records without ids, a good practise to enforce when syncing with a\nbackend. By default Store allows loading records without ids, in which case a generated id will be\nassigned.</p>",type:"Boolean",scope:"inner",defaultvalue:"true",category:"Advanced"},{name:"preventSubClassingModel",access:"private",description:"<p>Prevent dynamically subclassing the modelClass. It does so by default to not pollute it when exposing\nproperties. Should rarely need to be used.</p>",type:"Boolean",scope:"inner",defaultvalue:"false",category:"Advanced"}],events:[{name:"idChange",description:"<p>Fired when the id of a record has changed</p>",parameters:[{name:"source",type:"Core.data.Store",description:"<p>This Store</p>"},{name:"record",type:"Core.data.Model",description:"<p>Modified record</p>"},{name:"oldValue",type:["String","Number"],description:"<p>Old id</p>"},{name:"value",type:["String","Number"],description:"<p>New id</p>"}]},{name:"beforeUpdate",description:"<p>Fired before record is modified in this store.\nModification may be vetoed by returning <code>false</code> from a handler.</p>",parameters:[{name:"source",type:"Core.data.Store",description:"<p>This Store</p>"},{name:"record",type:"Core.data.Model",description:"<p>Modified record</p>"},{name:"changes",type:"Object",description:"<p>Modification data</p>"}]},{name:"update",description:"<p>Fired when a record is modified</p>",parameters:[{name:"source",type:"Core.data.Store",description:"<p>This Store</p>"},{name:"record",type:"Core.data.Model",description:"<p>Modified record</p>"},{name:"changes",type:"Object",description:"<p>Modification data</p>"}]},{name:"rootChange",description:"<p>Fired when the root node is set</p>",parameters:[{name:"source",type:"Core.data.Store",description:"<p>This Store</p>"},{name:"oldRoot",type:"Core.data.Model",description:"<p>The old root node.</p>"},{name:"rootNode",type:"Core.data.Model",description:"<p>The new root node.</p>"}]},{name:"change",description:'<p>Data in the store was changed. This is a catch-all event which is fired for all changes\nwhich take place to the store\'s data.</p>\n<p>This includes mutation of individual records, adding and removal of records, as well as\nsetting a new data payload using the <a href="#Core/data/Store#property-data">data</a> property, sorting, filtering,\nand calling <a href="#Core/data/mixin/StoreCRUD#function-removeAll">removeAll</a>.</p>\n<p>Simple databound widgets may use to the <code>change</code> event to refresh their UI without having to add multiple\nlisteners to the <a href="#Core/data/Store#event-update">update</a>, <a href="#Core/data/mixin/StoreCRUD#event-add">add</a>, <a href="#Core/data/mixin/StoreCRUD#event-remove">remove</a>, <a href="#Core/data/Store#event-refresh">refresh</a>\nand <a href="#Core/data/mixin/StoreCRUD#event-removeAll">removeAll</a> events.</p>\n<p>A more complex databound widget such as a grid may use the more granular events to perform less\ndestructive updates more appropriate to each type of change. The properties will depend upon the value of the <code>action</code> property.</p>',parameters:[{name:"source",type:"Core.data.Store",description:"<p>This Store.</p>"},{name:"action",type:"String",description:"<p>Name of action which triggered the change. May be one of:</p>\n<ul>\n<li><code>'remove'</code></li>\n<li><code>'removeAll'</code></li>\n<li><code>'add'</code></li>\n<li><code>'updatemultiple'</code></li>\n<li><code>'clearchanges'</code></li>\n<li><code>'filter'</code></li>\n<li><code>'sort'</code></li>\n<li><code>'update'</code></li>\n<li><code>'dataset'</code></li>\n<li><code>'replace'</code></li>\n</ul>"}]},{name:"refresh",description:"<p>Data in the store has completely changed, such as by a filter, or sort or load operation.</p>",parameters:[{name:"source",type:"Core.data.Store",description:"<p>This Store.</p>"},{name:"batch",type:"Boolean",description:"<p>Flag set to <code>true</code> when the refresh is triggered by ending a batch</p>"},{name:"action",type:"String",description:"<p>Name of action which triggered the change. May be one of:</p>\n<ul>\n<li><code>'dataset'</code></li>\n<li><code>'sort'</code></li>\n<li><code>'filter'</code></li>\n<li><code>'create'</code></li>\n<li><code>'update'</code></li>\n<li><code>'delete'</code></li>\n<li><code>'group'</code>.</li>\n</ul>"}]},{name:"move",description:"<p>Fired when a record has been moved within this Store</p>",parameters:[{name:"source",type:"Core.data.Store",description:"<p>This Store</p>"},{name:"record",type:"Core.data.Model",description:"<p>The record moved.</p>"},{name:"from",type:"Number",description:"<p>The index from which the record was removed.</p>"},{name:"to",type:"Number",description:"<p>The index at which the record was inserted.</p>"}]}],functions:[{name:"beginBatch",description:'<p>Stops this store from firing events until <a href="#Core/data/Store#function-endBatch">endBatch</a> is called. Multiple calls to <code>beginBatch</code>\nstack up, and will require an equal number of <code>endBatch</code> calls to resume events.</p>\n<p>Upon call of <a href="#Core/data/Store#function-endBatch">endBatch</a>, a <a href="#Core/data/Store#event-refresh">refresh</a> event is triggered to allow UIs to\nupdate themselves based upon the new state of the store.</p>\n<p>This is extremely useful when making a large number of changes to a store. It is important not to trigger\ntoo many UI updates for performance reasons. Batching the changes ensures that UIs attached to this\nstore are only updated once at the end of the updates.</p>',scope:"instance"},{name:"endBatch",description:'<p>Ends event suspension started by <a href="#Core/data/Store#function-beginBatch">beginBatch</a>. Multiple calls to <a href="#Core/data/Store#function-beginBatch">beginBatch</a>\nstack up, and will require an equal number of <code>endBatch</code> calls to resume events.</p>\n<p>Upon call of <code>endBatch</code>, a <a href="#Core/data/Store#event-refresh">refresh</a> event with <code>action: batch</code> is triggered to allow UIs to update\nthemselves based upon the new state of the store.</p>\n<p>This is extremely useful when making a large number of changes to a store. It is important not to trigger\ntoo many UI updates for performance reasons. Batching the changes ensures that UIs attached to this\nstore are only updated once at the end of the updates.</p>',scope:"instance"},{name:"onDataChange",access:"private",description:"<p>Responds to mutations of the underlying storage Collection</p>",parameters:[{name:"event",type:"Object"}],scope:"instance"},{name:"onModelChange",access:"private",description:"<p>This is called from Model after mutating any fields so that Stores can take any actions necessary\nat that point, and distribute mutation event information through events.</p>",parameters:[{name:"record",type:"Core.data.Model",description:"<p>The record which has just changed</p>"},{name:"toSet",type:"Object",description:"<p>A map of the field names and values that were passed to be set</p>"},{name:"wasSet",type:"Object",description:"<p>A map of the fields that were set. Each property is a field name, and\nthe property value is an object containing two properties: <code>oldValue</code> and <code>value</code> eg:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>    {\n        name {\n            oldValue : 'Rigel',\n            value : 'Nigel'\n        }\n    }</code></pre>"},{name:"silent",type:"Boolean",description:"<p>Do not trigger events</p>"},{name:"fromRelationUpdate",type:"Boolean",description:"<p>Update caused by a change in related model</p>"}],scope:"instance"},{name:"getStore",description:"<p>Get a store from the store map by id.</p>",parameters:[{name:"id",type:["String","Number","Array.<Object>"],description:"<p>The id of the store to retrieve, or an array of objects\nfrom which to create the contents of a new Store.</p>"}],scope:"static",returns:{type:"Core.data.Store",description:"<p>The store with the specified id</p>"}},{name:"getRange",description:"<p>Creates an array of records from this store from the <code>start</code> to the `end' - 1</p>",parameters:[{name:"start",type:"Number",description:"<p>The index of the first record to return</p>",optional:true},{name:"end",type:"Number",description:"<p>The index <em>after</em> the last record to return <code>(start + length)</code></p>",optional:true}],scope:"instance",category:"Records",returns:{type:"Array.<Core.data.Model>",description:"<p>The requested records.</p>"}},{name:"createRecord",description:"<p>Creates a model instance, used internally when data is set/added. Override this in a subclass to do your own custom\nconversion from data to record.</p>",parameters:[{name:"data",description:"<p>Json data</p>"},{name:"skipExpose",description:"<p>Supply true when batch setting to not expose properties multiple times</p>",default:false}],scope:"instance",category:"Records"},{name:"getCount",description:"<p>Number of records in the store</p>",parameters:[{name:"countProcessed",description:"<p>Count processed (true) or real records (false)</p>",default:true}],scope:"instance",category:"Records",returns:{type:"Number",description:"<p>Record count</p>"}},{name:"getAt",description:"<p>Get the record at the specified index</p>",parameters:[{name:"index",type:"Number",description:"<p>Index for the record</p>"}],scope:"instance",category:"Records",returns:{type:"Core.data.Model",description:"<p>Record at the specified index</p>"}},{name:"getById",description:"<p>Get a record by id. Find the record even if filtered out, part of collapsed group or collapsed node</p>",parameters:[{name:"id",type:["Core.data.Model","String","Number"],description:"<p>Id of record to return.</p>"}],scope:"instance",category:"Records",returns:{type:"Core.data.Model",description:"<p>A record with the specified id</p>"}},{name:"isVisible",description:'<p>Checks if a record is visible, in the sense that it is not filtered out,\nhidden in a collapsed group or in a collapsed node.\nDeprecated in 2.2.3, please use <a href="#Core/data/Store#function-isAvailable">isAvailable</a> instead</p>',parameters:[{name:"recordOrId",type:["Core.data.Model","String","Number"],description:"<p>Record to check</p>"}],scope:"instance",deprecated:true,returns:{type:"Boolean"}},{name:"isAvailable",description:"<p>Checks if a record is available, in the sense that it is not filtered out,\nhidden in a collapsed group or in a collapsed node.</p>",parameters:[{name:"recordOrId",type:["Core.data.Model","String","Number"],description:"<p>Record to check</p>"}],scope:"instance",returns:{type:"Boolean"}},{name:"getByInternalId",description:"<p>Get a record by internalId.</p>",parameters:[{name:"internalId",type:"Number",description:"<p>The internalId of the record to return</p>"}],scope:"instance",category:"Records",returns:{type:"Core.data.Model",description:"<p>A record with the specified internalId</p>"}},{name:"includes",description:"<p>Checks if the specified record is contained in the store</p>",parameters:[{name:"recordOrId",type:["Core.data.Model","String","Number"],description:"<p>Record, or <code>id</code> of record</p>"}],scope:"instance",category:"Records",returns:{type:"Boolean"}},{name:"indexOf",description:"<p>Returns the index of the specified record/id, or <code>-1</code> if not found.</p>",parameters:[{name:"recordOrId",type:["Core.data.Model","String","Number"],description:"<p>Record, or <code>id</code> of record to return the index of.</p>"},{name:"visibleRecords",type:"Boolean",description:"<p>Pass <code>true</code> to find the visible index.\nas opposed to the dataset index. This omits group header records.</p>",default:false,optional:true}],scope:"instance",category:"Records",returns:{type:"Number",description:"<p>Index for the record/id, or <code>-1</code> if not found.</p>"}},{name:"getDistinctValues",description:"<p>Gets distinct values for the specified field.</p>",parameters:[{name:"field",description:"<p>Field to extract values for</p>"}],scope:"instance",category:"Values",returns:{type:"Array",description:"<p>Array of values</p>"}},{name:"getValueCount",description:"<p>Counts how many times specified value appears in the store</p>",parameters:[{name:"field",description:"<p>Field to look in</p>"},{name:"value",description:"<p>Value to look for</p>"}],scope:"instance",category:"Values",returns:{type:"Number",description:"<p>Found count</p>"}},{name:"forEach",description:"<p>Iterates over all normal records in store. Omits group header and footer records\nif this store is grouped.</p>",parameters:[{name:"fn",type:"function",description:"<p>A function that is called for each record. Returning false from that function cancels iteration</p>"},{name:"thisObj",type:"Object",description:"<p><code>this</code> reference for the function</p>"}],scope:"instance",category:"Iteration"},{name:"map",description:"<p>Equivalent to Array.map(). Creates a new array with the results of calling a provided function on every record</p>",parameters:[{name:"fn",type:"function"}],scope:"instance",category:"Iteration",returns:{type:"Array"}},{name:"reduce",description:"<p>Equivalent to Array.reduce(). Applies a function against an accumulator and each record (from left to right) to\nreduce it to a single value.</p>",parameters:[{name:"fn",type:"function"},{name:"initialValue"}],scope:"instance",category:"Iteration",returns:{type:"*"}},{name:"traverse",description:"<p>Traverse all tree nodes</p>",parameters:[{name:"fn",type:"function",description:"<p>The function to call on visiting each node.</p>"},{name:"topNode",type:"Core.data.Model",description:"<p>The top node to start the traverse at.</p>",default:"this.rootNode",optional:true},{name:"skipTopNode",type:"Boolean",description:"<p>Pass true to not call <code>fn</code> on the top node, but proceed directly to its children.</p>",optional:true}],scope:"instance",category:"Traverse"},{name:"traverseWhile",description:"<p>Traverse all tree nodes while the passed <code>fn</code> returns true</p>",parameters:[{name:"fn",type:"function",description:"<p>The function to call on visiting each node. Returning <code>false</code> from it stops the traverse.</p>"},{name:"topNode",type:"Core.data.Model",description:"<p>The top node to start the traverse at.</p>",default:"this.rootNode",optional:true},{name:"skipTopNode",type:"Boolean",description:"<p>Pass true to not call <code>fn</code> on the top node, but proceed directly to its children.</p>",optional:true}],scope:"instance",category:"Traverse"},{name:"getNext",description:"<p>Finds the next record.</p>",parameters:[{name:"recordOrId",description:"<p>Current record or its id</p>"},{name:"wrap",type:"Boolean",description:"<p>Wrap at start/end or stop there</p>",default:false},{name:"skipSpecialRows",type:"Boolean",description:"<p>True to not return specialRows like group headers</p>",default:false,optional:true}],scope:"instance",category:"Traverse",returns:{type:"Core.data.Model",description:"<p>Next record or null if current is the last one</p>"}},{name:"getPrev",description:"<p>Finds the previous record.</p>",parameters:[{name:"recordOrId",description:"<p>Current record or id</p>"},{name:"wrap",type:"Boolean",description:"<p>Wrap at start/end or stop there</p>",default:false},{name:"skipSpecialRows",type:"Boolean",description:"<p>True to not return specialRows like group headers</p>",default:false,optional:true}],scope:"instance",category:"Traverse",returns:{type:"Core.data.Model",description:"<p>Previous record or null if current is the last one</p>"}},{name:"getAdjacent",access:"internal",description:"<p>Gets the next or the previous record. Optionally wraps from first -&gt; last and vice versa</p>",parameters:[{name:"recordOrId",type:["String","Model"],description:"<p>Record or records id</p>"},{name:"next",type:"Boolean",description:"<p>Next (true) or previous (false)</p>",default:true},{name:"wrap",type:"Boolean",description:"<p>Wrap at start/end or stop there</p>",default:false},{name:"skipSpecialRows",type:"Boolean",description:"<p>True to not return specialRows like group headers</p>",default:false,optional:true}],scope:"instance",category:"Traverse",returns:{type:"Core.data.Model"}},{name:"getNextLeaf",access:"internal",description:"<p>Finds the next record among leaves (in a tree structure)</p>",parameters:[{name:"recordOrId",description:"<p>Current record or its id</p>"},{name:"wrap",type:"Boolean",description:"<p>Wrap at start/end or stop there</p>",default:false}],scope:"instance",category:"Traverse",returns:{type:"Core.data.Model",description:"<p>Next record or null if current is the last one</p>"}},{name:"getPrevLeaf",access:"internal",description:"<p>Finds the previous record among leaves (in a tree structure)</p>",parameters:[{name:"recordOrId",description:"<p>Current record or id</p>"},{name:"wrap",type:"Boolean",description:"<p>Wrap at start/end or stop there</p>",default:false}],scope:"instance",category:"Traverse",returns:{type:"Core.data.Model",description:"<p>Previous record or null if current is the last one</p>"}},{name:"getAdjacentLeaf",access:"internal",description:"<p>Gets the next or the previous record among leaves (in a tree structure). Optionally wraps from first -&gt; last and\nvice versa</p>",parameters:[{name:"recordOrId",type:["String","Core.data.Model"],description:"<p>Record or record id</p>"},{name:"next",type:"Boolean",description:"<p>Next (true) or previous (false)</p>",default:true},{name:"wrap",type:"Boolean",description:"<p>Wrap at start/end or stop there</p>",default:false}],scope:"instance",category:"Traverse",returns:{type:"Core.data.Model"}},{name:"makeChained",description:'<p>Creates a chained store, a new Store instance that contains a subset of the records from current store.\nWhich records is determined by a filtering function, which is reapplied when data in the base store changes.</p>\n<p>If this store is a <a href="#Core/data/mixin/StoreTree#property-isTree">tree</a> store, then the resulting\nchained store will be a tree store sharing the same root node, but only child nodes which pass\nthe <code>chainedFilterFn</code> will be considered when iterating the tree through the methods such as\n<a href="#Core/data/Store#function-traverse">traverse</a> or <a href="#Core/data/Store#function-forEach">forEach</a>.</p>',parameters:[{name:"chainedFilterFn",type:"function",description:"<p>Function called for each records that determines if it should be included\n(return true) or not (return false). Defaults to including all records (fn always returning true)</p>"},{name:"chainedFields",type:"Array.<String>",description:"<p>Array of fields that trigger filtering when they are updated</p>"},{name:"config",type:"Object",description:"<p>Additional chained store configuration</p>"}],examples:["let oldies = store.makeChained(record => record.age > 40);"],scope:"instance",returns:{type:"Core.data.Store"}},{name:"chain",description:'<p>Alias for <a href="#Core/data/Store#function-makeChained">makeChained</a></p>',parameters:[{name:"chainedFilterFn",type:"function",description:"<p>Function called for each records that determines if it should be included\n(return true) or not (return false). Defaults to including all records (fn always returning true)</p>"},{name:"chainedFields",type:"Array.<String>",description:"<p>Array of fields that trigger filtering when they are updated</p>"},{name:"config",type:"Object",description:"<p>Additional chained store configuration</p>"}],scope:"instance",returns:{type:"Core.data.Store"}}],properties:[{name:"allRecords",description:"<p>Returns all records (not filtered) from the store.</p>",scope:"instance",readonly:true,category:"Records",properties:[{type:{names:["Array.<Core.data.Model>"]}}]},{name:"modelClass",description:"<p>Class used to represent records. Defaults to class Model.</p>",scope:"instance",category:"Records",typings:"{ new(data: object): Model }",properties:[{type:{names:["Core.data.Model"]}}]},{name:"id",description:"<p>Get/set id, an unique identifier for the store.\nUsed to build a store map, use Store#getStore() to retrieve a store from the map.</p>",scope:"instance",category:"Store",properties:[{type:{names:["String","Number"]}}]},{name:"stores",description:"<p>Get all registered stores</p>",scope:"static",returns:[{type:{names:["Array.<Core.data.Store>"]}}]},{name:"rootNode",description:"<p>The invisible root node of this tree.</p>",scope:"instance",readonly:true,properties:[{type:{names:["Core.data.Model"]}}]},{name:"data",description:"<p>Sets data in the store, called on initialization if data is in config otherwise call it yourself after\najax call etc. Can also be used to get the raw original data.</p>",scope:"instance",category:"Records",properties:[{type:{names:["Array.<Object>"]}}]},{name:"originalCount",description:"<p>Record count, for data records. Not including records added for group headers etc.</p>",scope:"instance",readonly:true,category:"Records",properties:[{type:{names:["Number"]}}]},{name:"count",description:"<p>Record count, including records added for group headers etc.</p>",scope:"instance",readonly:true,category:"Records",properties:[{type:{names:["Number"]}}]},{name:"allCount",description:"<p>Returns the complete dataset size regardless of tree node collapsing or filtering</p>",scope:"instance",readonly:true,properties:[{type:{names:["Number"]}}]},{name:"records",description:"<p>Returns all &quot;visible&quot; records.\n<strong>Note:</strong> The returned value <strong>may not</strong> be mutated!</p>",scope:"instance",readonly:true,category:"Records",properties:[{type:{names:["Array.<Core.data.Model>"]}}]},{name:"first",description:"<p>Get the first record in the store.</p>",scope:"instance",readonly:true,category:"Records",properties:[{type:{names:["Core.data.Model"]}}]},{name:"last",description:"<p>Get the last record in the store.</p>",scope:"instance",readonly:true,category:"Records",properties:[{type:{names:["Core.data.Model"]}}]}]},{name:"module:Core/data/mixin/StoreCRUD",description:"<p>Mixin for Store that handles modifying records (add, remove etc).</p>",mixin:true,examples:["// add new record to store\nstore.add({ id: 1, team: 'FC Krasnodar' });\n\n// remove a record from store, using id\nstore.remove(1);"],constructor:{name:"constructor"},filename:"StoreCRUD.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/data/mixin",lineno:21,configs:[{name:"autoCommit",description:"<p>Commit changes automatically</p>",type:"Boolean",scope:"inner",defaultvalue:false,category:"Common"}],events:[{name:"removeAll",description:"<p>Fired after removing all records</p>",parameters:[{name:"source",type:"Core.data.Store",description:"<p>This Store</p>"}]},{name:"beforeCommit",description:"<p>Fired before committing changes. Return false from handler to abort commit</p>",parameters:[{name:"source",type:"Core.data.Store",description:"<p>This Store</p>"},{name:"changes",type:"Object",description:"<p>Modification data</p>"}]},{name:"commit",description:"<p>Fired after committing changes</p>",parameters:[{name:"source",type:"Core.data.Store",description:"<p>This Store</p>"},{name:"changes",type:"Object",description:"<p>Modification data</p>"}]},{name:"beforeRemove",description:'<p>Fired before records are removed from this store by the <a href="#Core/data/mixin/StoreCRUD#function-remove">remove</a> or <a href="#Core/data/mixin/StoreCRUD#function-removeAll">removeAll</a>.\nAlso fired when removing a child record in a tree store using <a href="#Core/data/mixin/TreeNode#function-removeChild">removeChild</a>.\nThe remove may be vetoed by returning <code>false</code> from a handler.</p>',parameters:[{name:"source",type:"Core.data.Store",description:"<p>This Store</p>"},{name:"records",type:"Array.<Core.data.Model>",description:"<p>The records which are to be removed.</p>"},{name:"parent",type:"Core.data.Model",description:"<p>The record from which children are being removed when using a tree store</p>"},{name:"isMove",type:"Boolean",description:'<p>Set to <code>true</code> if the child node is being removed by\n<a href="#Core/data/mixin/TreeNode#function-appendChild">appendChild</a> to be moved\n<em>within the same tree</em>.</p>'},{name:"removingAll",type:"Boolean",description:"<p>Set to <code>true</code> if the operation is removing the store's entire data set.</p>"}]},{name:"beforeAdd",description:'<p>Fired before records are added to this store by the <a href="#Core/data/mixin/StoreCRUD#function-add">add</a> or <a href="#Core/data/mixin/StoreCRUD#function-insert">insert</a>. In a tree\nstore, also fired by <a href="#Core/data/mixin/TreeNode#function-appendChild">appendChild</a> and\n<a href="#Core/data/mixin/TreeNode#function-insertChild">insertChild</a>. The add or insert may be vetoed by returning <code>false</code>\nfrom a handler.</p>',parameters:[{name:"source",type:"Core.data.Store",description:"<p>This Store</p>"},{name:"records",type:"Array.<Core.data.Model>",description:"<p>The records which are to be added</p>"},{name:"parent",type:"Core.data.Model",description:"<p>The parent node when using a tree store</p>"}],preventable:true},{name:"add",description:"<p>Fired after adding/inserting record(s). If the record was added to a parent, the <code>isChild</code> flag is set on the\nevent. If it was inserted, event contains <code>index</code></p>",parameters:[{name:"source",type:"Core.data.Store",description:"<p>This Store</p>"},{name:"records",type:"Array.<Core.data.Model>",description:"<p>Added records. In case of tree store, if branch is added, only branch root\nis returned</p>"},{name:"allRecords",type:"Array.<Core.data.Model>",description:"<p>Flat list of all added records. In case of tree store, if branch is\nadded, all new records are returned, not only branch root</p>",optional:true},{name:"parent",type:"Core.data.Model",description:'<p>If due to an <a href="#Core/data/mixin/TreeNode#function-appendChild">appendChild</a>\ncall, this is the parent node added to.</p>',optional:true},{name:"index",type:"Number",description:'<p>Insertion point in the store\'s <a href="#Core/data/Store#config-storage">Collection</a>.</p>',optional:true},{name:"oldIndex",type:"Number",description:"<p>Not used for tree stores. The index of the first record moved.</p>",optional:true},{name:"isChild",type:"Boolean",description:"<p>Flag which is set to true if the records are added to a parent record</p>",optional:true},{name:"isExpand",type:"Boolean",description:"<p>Flag which is set to true if records are added to the store by expanding parent</p>",optional:true},{name:"isMove",type:"Object",description:"<p>An object keyed by the ids of the records which were moved from another\nposition in the store, or from another parent node in the store. The ids of moved records will be\nproperty names with a value <code>true</code>.</p>",optional:true}]},{name:"remove",description:"<p>Fired when a record has been removed</p>",parameters:[{name:"source",type:"Core.data.Store",description:"<p>This Store</p>"},{name:"records",type:"Array.<Core.data.Model>",description:"<p>Removed records. In case of tree store, if branch is removed, only branch root\nis returned</p>"},{name:"allRecords",type:"Array.<Core.data.Model>",description:"<p>Flat list of all removed records. In case of tree store, if branch is\nremoved, all removed records are returned, not only branch root</p>",optional:true},{name:"parent",type:"Core.data.Model",description:'<p>If due to a <a href="#Core/data/mixin/TreeNode#function-removeChild">removeChild</a>\ncall, this is the parent node removed from.</p>',optional:true},{name:"index",type:"Number",description:"<p>Visible index at which record was removed. In case record is removed from the collapsed\nbranch -1 is returned.</p>",optional:true},{name:"isChild",type:"Boolean",description:"<p>Flag which is set to true if the record is added to a parent record</p>",optional:true},{name:"isCollapse",type:"Boolean",description:"<p>Flag which is set to true if records are removed from the store by collapsing parent</p>",optional:true},{name:"isMove",type:"Boolean",description:"<p>Passed as <code>true</code> if the remove was part of a move operation within this Store.</p>",optional:true}]}],functions:[{name:"remove",description:"<p>Removes a record from this store.</p>",parameters:[{name:"records",type:["String","Array.<String>","Number","Array.<Number>","Core.data.Model","Array.<Core.data.Model>"],description:"<p>Record/array of records (or record ids) to remove</p>"},{name:"silent",type:"Boolean",description:"<p>Specify <code>true</code> to suppress events/autoCommit</p>",default:false,optional:true}],scope:"instance",fires:["event:beforeRemove","event:remove","event:change"],category:"CRUD",returns:{type:"Array.<Core.data.Model>",description:"<p>Removed records</p>"}},{name:"clear",access:"private",description:"<p>Clears store data. Used by removeAll, separate function for using with chained stores.</p>",scope:"instance",category:"CRUD"},{name:"removeAll",description:"<p>Removes all records from the store.</p>",parameters:[{name:"silent",type:"Boolean",description:"<p>Specify <code>true</code> to suppress events</p>",default:false,optional:true}],scope:"instance",fires:["event:removeAll","event:change"],category:"CRUD"},{name:"add",description:"<p>Add records to store.</p>",parameters:[{name:"records",type:["Core.data.Model","Array.<Core.data.Model>","Object","Array.<Object>"],description:"<p>Array of records/data or a single record/data to add to store</p>"},{name:"silent",type:"Boolean",description:"<p>Specify <code>true</code> to suppress events</p>",default:false,optional:true}],scope:"instance",fires:["event:add","event:change"],category:"CRUD",returns:{type:"Array.<Core.data.Model>",description:"<p>Added records</p>"}},{name:"insert",description:"<p>Insert records to store.</p>",parameters:[{name:"index",type:"Number",description:"<p>Index to insert at</p>"},{name:"records",type:["Core.data.Model","Array.<Core.data.Model>","Object","Array.<Object>"],description:"<p>Array of records/data or a single record/data to insert to store</p>"},{name:"silent",type:"Boolean",description:"<p>Specify <code>true</code> to suppress events</p>",default:false,optional:true}],scope:"instance",fires:["event:add","event:change"],category:"CRUD",returns:{type:"Array.<Core.data.Model>",description:"<p>Inserted records</p>"}},{name:"move",description:"<p>Moves an individual item to another location.</p>",parameters:[{name:"item",type:"Object",description:"<p>The item to move.</p>"},{name:"beforeItem",type:"Object",description:"<p>the item to insert the first item before.</p>"}],scope:"instance"},{name:"acceptChanges",access:"internal",description:"<p>Accepts all changes, resets the modification tracking:</p>\n<ul>\n<li>Clears change tracking for all records</li>\n<li>Clears added</li>\n<li>Clears modified</li>\n<li>Clears removed\nLeaves the store in an &quot;unmodified&quot; state.</li>\n</ul>",scope:"instance"},{name:"commit",description:"<p>Commits changes, per default only returns changes and resets tracking.</p>",parameters:[{name:"silent",type:"Boolean",description:"<p>Specify <code>true</code> to suppress events</p>",default:false,optional:true}],scope:"instance",fires:["event:beforeCommit","event:commit"],category:"CRUD",returns:{type:"Object",description:'<p>Changes, see <a href="#Core/data/mixin/StoreCRUD#property-changes">changes</a></p>'}},{name:"clearChanges",access:"private",description:"<p>Discards changes in the store.</p>",scope:"instance",fires:["event:change"],category:"CRUD"},{name:"suspendAutoCommit",description:"<p>Suspends automatic commits upon store changes. Can be called multiple times (it uses an internal counter).</p>",scope:"instance",category:"Records"},{name:"resumeAutoCommit",description:"<p>Resumes automatic commits upon store changes. Will trigger commit if the internal counter is 0.</p>",scope:"instance",category:"Records"},{name:"applyChangesFromStore",description:"<p>Applies changes from another store to this store. Useful if cloning records in one store to display in a\ngrid in a popup etc. to reflect back changes.</p>",parameters:[{name:"otherStore",type:"Core.data.Store"}],scope:"instance",category:"CRUD"}],properties:[{name:"changes",description:'<p>Get uncommitted changes as an object of added/modified/removed arrays of records.</p>\n<pre class="prettyprint source lang-javascript"><code>// Format:\n{\n     added: [], // array of Core.data.Model\n     modified: [], // array of Core.data.Model\n     removed: [] // array of Core.data.Model\n}\n</code></pre>',scope:"instance",readonly:true,category:"Records",properties:[{type:{names:["Object"]},name:"changes"},{description:"<p>Records that have been added</p>",isSubParam:true,type:{names:["Array"]},name:"changes.added"},{description:"<p>Records that have changes to persistable fields</p>",isSubParam:true,type:{names:["Array"]},name:"changes.modified"},{description:"<p>Records that have been removed</p>",isSubParam:true,type:{names:["Array"]},name:"changes.removed"}]},{name:"autoCommit",description:"<p>Setting autoCommit to true automatically commits changes to records.</p>",scope:"instance",category:"Records",properties:[{type:{names:["Boolean"]}}]}]},{name:"module:Core/data/mixin/StoreChained",description:'<p>A chained Store contains a subset of records from a master store. Which records to include is determined by a\nfiltering function, <a href="#Core/data/mixin/StoreChained#config-chainedFilterFn">chainedFilterFn</a>.</p>',mixin:true,examples:["masterStore.makeChained(record => record.percent < 10);\n\n// or\n\nnew Store({\n  masterStore     : masterStore,\n  chainedFilterFn : record => record.percent < 10\n});"],constructor:{name:"constructor"},filename:"StoreChained.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/data/mixin",lineno:25,configs:[{name:"chainedFilterFn",description:"<p>Function used to filter records in the masterStore into a chained store</p>",type:"function",scope:"inner",defaultvalue:"() => true",category:"Chained store"},{name:"chainedFields",description:"<p>Array of fields that should trigger filtering of chained store when the fields are updated.</p>",type:"Array.<String>",scope:"inner",category:"Chained store"},{name:"masterStore",description:"<p>Master store that a chained store gets its records from.</p>",type:"Store",scope:"inner",category:"Chained store"},{name:"doRelayToMaster",description:"<p>Method names calls to which should be relayed to master store.</p>",type:"Array.<String>",scope:"inner",category:"Chained store"},{name:"dontRelayToMaster",description:"<p>Method names calls to which shouldn't be relayed to master store.</p>",type:"String",scope:"inner",category:"Chained store"},{name:"keepUncommittedChanges",description:"<p>Flag showing whether to keep added/removed uncommitted records when filling the store from master.</p>",type:"Boolean",scope:"inner",category:"Chained store"},{name:"excludeCollapsedRecords",access:"internal",description:"<p>If true, collapsed records in original tree will be excluded from the chained store.</p>",type:"Boolean",scope:"inner",category:"Chained store"}],properties:[{name:"isChained",description:"<p>Is this a chained store?</p>",scope:"instance",readonly:true,category:"Store",properties:[{type:{names:["Boolean"]}}]}],functions:[{name:"fillFromMaster",access:"internal",description:'<p>Updates records available in a chained store by filtering the master store records using\n<a href="#Core/data/mixin/StoreChained#config-chainedFilterFn">chainedFilterFn</a></p>',scope:"instance"},{name:"commitToMaster",access:"internal",description:"<p>Commits changes back to master.</p>\n<ul>\n<li>the records deleted from chained store and present in master will be deleted from master</li>\n<li>the records added to chained store and missing in master will added to master\nInternally calls {Store#function-commit commit()}.</li>\n</ul>",scope:"instance",returns:{type:"Object",description:"<p>Changes, see Store#changes</p>"}},{name:"relayToMaster",access:"private",description:"<p>Relays some function calls to the master store</p>",scope:"instance"},{name:"onMasterDataChanged",access:"private",description:"<p>Handles changes in master stores data. Updates the chained store accordingly</p>",scope:"instance"}]},{name:"module:Core/data/mixin/StoreFilter",description:"<p>Mixin for Store that handles filtering.\nFilters are instances of <a href=\"#Core/util/CollectionFilter\">CollectionFilter</a> class.</p>\n<ul>\n<li>Adding a filter for the same property will replace the current one (unless a unique <a href=\"#Core/util/CollectionFilter#config-id\">Id</a> is specified),\nbut will not clear any other filters.</li>\n<li>Adding a filter through the <a href=\"#Core/data/mixin/StoreFilter#function-filterBy\">filterBy</a> function is ultimate.\nIt will clear all the property based filters and replace the current filterBy function if present.</li>\n<li>Removing records from the store does not remove filters!\nThe filters will be reapplied if <a href=\"#Core/data/mixin/StoreFilter#config-reapplyFilterOnAdd\">reapplyFilterOnAdd</a>/<a href=\"#Core/data/mixin/StoreFilter#config-reapplyFilterOnUpdate\">reapplyFilterOnUpdate</a> are true and you add new records or update current.</li>\n</ul>\n<pre class=\"prettyprint source\"><code>// Add a filter\nstore.filter({\n    property : 'score',\n    value    : 10,\n    operator : '>'\n});\n\n// Add filter as a function\nstore.filter(record => record.score > 10);\n\n// Add named filter as a function\nstore.filter({\n    id : 'my filter',\n    filterBy : record => record.score > 10\n});\n\n// Replace any filter set with new filters\nstore.filter({\n    filters : {\n        property : 'score',\n        value    : 10,\n        operator : '>'\n    },\n    replace : true\n});\n\n// Remove this one specific filter, leaving any possible others in place.\n// A filter's id defaults to the property name that it's filtering on.\nstore.removeFilter('score');\n\n// Reapply filters without firing an event.\n// Use if making multiple data mutations with the\n// intention of updating UIs when all finished.\nstore.filter({\n    silent : true\n});\n</code></pre>",mixin:true,constructor:{name:"constructor"},filename:"StoreFilter.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/data/mixin",lineno:63,configs:[{name:"filters",description:"<p>Specify a filter config to use initial filtering</p>",type:"Object",scope:"inner",category:"Filtering"},{name:"reapplyFilterOnAdd",description:"<p>Specify true to reapply filters when a record is added to the store.</p>",type:"Boolean",scope:"inner",defaultvalue:false,category:"Filtering"},{name:"reapplyFilterOnUpdate",description:"<p>Specify true to reapply filters when a record is updated in the store.</p>",type:"Boolean",scope:"inner",defaultvalue:false,category:"Filtering"}],events:[{name:"filter",description:"<p>Fired after applying filters to the store</p>",parameters:[{name:"source",type:"Core.data.Store",description:"<p>This Store</p>"},{name:"filters",type:"Core.util.Collection",description:"<p>Filters used by this Store</p>"},{name:"records",type:"Array.<Core.data.Model>",description:"<p>Filtered records</p>"}]}],properties:[{name:"filters",description:'<p>Currently applied filters. A collection of <a href="#Core/util/CollectionFilter">Core.util.CollectionFilter</a> instances.</p>',type:{names:["Core.util.Collection"]},scope:"instance",readonly:true,category:"Sort, group & filter"},{name:"isFiltered",description:"<p>Check if store is filtered</p>",scope:"instance",returns:[{type:{names:["Boolean"]}}],readonly:true,category:"Sort, group & filter"}],functions:[{name:"filter",description:"<p>Filters the store by <strong>adding</strong> the specified filter(s) to the existing filters collection applied to this Store.\nIf a filter has an <a href=\"#Core/util/CollectionFilter#config-id\">id</a> specified,\nor a <a href=\"#Core/util/CollectionFilter#config-property\">property</a> specified,\nit will search for corresponding filter(s) in the existing filters first and replace it with a new filter.\n<strong>It will not remove other filters applied to the store!</strong></p>\n<p>To <strong>add</strong> a new filter:</p>\n<pre class=\"prettyprint source\"><code>// Filter using simple object\nstore.filter({\n    property : 'age',\n    operator : '>',\n    value    : 90\n});\n\n// Filter using function\nstore.filter(r => r.age &lt; 90);\n\n// Filter using a named filter as a function\nstore.filter({\n    id : 'my-filter',\n    filterBy : record => record.score > 10\n});\n</code></pre>\n<p>To <strong>remove</strong> a specific filter, but keep other filters applied</p>\n<pre class=\"prettyprint source\"><code>// Remove by filter `id` or `property`. Filter `id` defaults to the `property` name.\nstore.removeFilter('age');\nstore.removeFilter('my-filter');\n</code></pre>\n<p>To <strong>replace</strong> all existing filters with a new filter</p>\n<pre class=\"prettyprint source\"><code>// Remove all filters and filter using simple object\nstore.filter({\n    filters : {\n        property : 'age',\n        operator : '&lt;',\n        value    : 90\n    },\n    replace : true\n});\n\n// Remove all filters and filter using function\nstore.filter({\n    filters : r => r.age > 90,\n    replace : true\n});\n\n// Remove all filters and filter using a named filter as a function\nstore.filter({\n    filters : {\n        id : 'my-filter',\n        filterBy : record => record.score > 10\n    },\n    replace : true\n});\n</code></pre>\n<p>Basically filters replacing is an equivalent of having two sequenced calls:\n<a href=\"#Core/data/mixin/StoreFilter#function-clearFilters\">clearFilters</a> and <a href=\"#Core/data/mixin/StoreFilter#function-filter\">filter</a>.</p>\n<p>Call without arguments to reapply filters.</p>\n<pre class=\"prettyprint source\"><code>// Re-filter the store\nstore.filter();\n</code></pre>",parameters:[{name:"newFilters",type:["Object","Array.<Object>","function"],description:'<p>A <a href="#Core/util/CollectionFilter">filter</a> config,\nor an array of <a href="#Core/util/CollectionFilter">filter</a> configs,\nor a function to use for filtering,\nor a special object like: <code>{ replace : true, filters : newFilters }</code></p>'},{name:"newFilters.replace",type:"Boolean",description:"<p>A flag, indicating whether or not the previous filters should be removed.</p>",optional:true,isSubParam:true},{name:"newFilters.filters",type:["Object","Array.<Object>","function"],description:'<p>If <code>newFilters</code> is an object and <code>replace</code> property is defined in the <code>newFilters</code>,\nit means that special object is used and real filter configuration must be nested down to this <code>filters</code> property.\nIt can be:\nA <a href="#Core/util/CollectionFilter">filter</a> config,\nor an array of <a href="#Core/util/CollectionFilter">filter</a> configs,\nor a function to use for filtering.</p>',optional:true,isSubParam:true}],scope:"instance",fires:["event:filter","event:change"],category:"Sort, group & filter"},{name:"performFilter",access:"private",description:'<p>Perform filtering according to the <a href="#Core/data/mixin/StoreFilter#property-filters">filters</a> Collection.\nThis is the internal implementation which is overridden in <a href="#Core/data/AjaxStore">Core.data.AjaxStore</a> and\nmust not be overridden.</p>',scope:"instance"},{name:"filterBy",description:"<p><em>Adds</em> a function used to filter the store. Alias for calling <code>filter(fn)</code>. Return <code>true</code> from the function to\ninclude record in filtered set</p>\n<pre class=\"prettyprint source lang-javascript\"><code>store.filterBy(record => record.age > 25 && record.name.startsWith('A'));\n</code></pre>",parameters:[{name:"fn",type:"function",description:"<p>Function used to test records</p>"}],scope:"instance",category:"Sort, group & filter"},{name:"removeFilter",description:"<p>Removes the passed filter, or the filter by the passed ID.</p>",parameters:[{name:"idOrInstance",type:"String",description:"<p>Filter to remove, or ID of the filter to remove</p>"},{name:"silent",type:"Boolean",description:"<p>Pass <code>true</code> to <em>not</em> refilter the store immediately. Such as when\nremoving multiple filters.</p>\n<pre class=\"prettyprint source lang-javascript\"><code> // Only view top priority events\n myEventStore.filter({\n     id       : 'priorityFilter',\n     property : 'priority',\n     value    : 1,\n     operator : '='\n });\n\n// That individual filter can be removed like this\n myEventStore.removeFilter('priorityFilter');\n\n// Add named filter as a function\nstore.filter({\n    id : 'my filter',\n    filterBy : record => record.score > 10\n});\n\n// Remove named filter function\nstore.removeFilter('my filter');\n</code></pre>",optional:true}],scope:"instance",category:"Sort, group & filter"},{name:"clearFilters",description:"<p>Removes all filters from the store.</p>",scope:"instance",category:"Sort, group & filter"}]},{name:"module:Core/data/mixin/StoreGroup",description:"<p>Mixin for Store that handles grouping.</p>\n<pre class=\"prettyprint source lang-javascript\"><code>// simple grouper\nstore.group('city');\n\n// grouper as object, descending order\nstore.group({ field : 'city', ascending : false });\n\n// using custom sorting function\nstore.group({\n    field : 'city',\n    fn : (recordA, recordB) => {\n        // apply custom logic, for example:\n        return recordA.city.length &lt; recordB.city.length ? -1 : 1;\n    }\n});\n</code></pre>",mixin:true,constructor:{name:"constructor"},filename:"StoreGroup.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/data/mixin",lineno:36,configs:[{name:"groupers",description:"<p>Initial groupers, specify to have store grouped automatically after initially setting data</p>",type:"Array.<Object>",scope:"inner",category:"Common"}],properties:[{name:"groupers",description:"<p>Currently used groupers</p>",scope:"instance",category:"Sort, group & filter",properties:[{type:{names:["Array.<Object>"]}}]},{name:"isGrouped",description:"<p>Is store currently grouped?</p>",scope:"instance",readonly:true,category:"Sort, group & filter",properties:[{type:{names:["Boolean"]}}]}],functions:[{name:"group",description:"<p>Group records, either by replacing current sorters or by adding to them.\nA grouper can specify a <strong><em>custom sorting function</em></strong> which will be called with arguments (recordA, recordB).\nWorks in the same way as a standard array sorter, except that returning <code>null</code> triggers the stores\nnormal sorting routine. Grouped store <strong>must</strong> always be sorted by the same field.</p>\n<pre class=\"prettyprint source lang-javascript\"><code>// simple grouper\nstore.group('city');\n\n// grouper as object, descending order\nstore.group({ field : 'city', ascending : false });\n\n// using custom sorting function\nstore.group({\n    field : 'city',\n    fn : (recordA, recordB) => {\n        // apply custom logic, for example:\n        return recordA.city.length &lt; recordB.city.length ? -1 : 1;\n    }\n});\n</code></pre>",parameters:[{name:"field",type:["String","Object"],description:"<p>Field to group by.\nCan also be a config containing a field to group by and a custom sorting function called <code>fn</code>.</p>"},{name:"ascending",type:"Boolean",description:"<p>Sort order of the group titles</p>",optional:true},{name:"add",type:"Boolean",description:"<p>Add a grouper (true) or use only this grouper (false)</p>",default:false,optional:true},{name:"performSort",type:"Boolean",description:"<p>Trigger sort directly, which does the actual grouping</p>",default:true,optional:true},{name:"silent",type:"Boolean",description:"<p>Set as true to not fire events</p>",default:false,optional:true}],scope:"instance",fires:["event:group","event:refresh"],category:"Sort, group & filter"},{name:"addGrouper",access:"internal",description:"<p>Add a grouping level (a grouper).</p>",parameters:[{name:"field",type:"String",description:"<p>Field to group by</p>"},{name:"ascending",type:"Boolean",description:"<p>Group direction</p>",default:true}],scope:"instance",category:"Sort, group & filter"},{name:"removeGrouper",access:"internal",description:"<p>Removes a grouping level (a grouper)</p>",parameters:[{name:"field",type:"String",description:"<p>Grouper to remove</p>"}],scope:"instance",category:"Sort, group & filter"},{name:"clearGroupers",description:"<p>Removes all groupers, turning store grouping off.</p>",scope:"instance",category:"Sort, group & filter"},{name:"isRecordInGroup",description:"<p>Check if a record belongs to a certain group (only for the first grouping level)</p>",parameters:[{name:"record",type:"Core.data.Model",description:"<p>Record</p>"},{name:"groupValue",description:"<p>Groups value</p>"}],scope:"instance",category:"Sort, group & filter",returns:{type:"Boolean",description:"<p>True if the record belongs to the group, otherwise false</p>"}},{name:"getGroupRecords",description:"<p>Returns all records in the group with specified groupValue.</p>",parameters:[{name:"groupValue"}],scope:"instance",category:"Sort, group & filter",returns:{type:"Array.<Core.data.Model>",description:"<p>Records in specified group or null if store not grouped</p>"}},{name:"getGroupTitles",description:"<p>Get all group titles.</p>",scope:"instance",category:"Sort, group & filter",returns:{type:"Array.<String>",description:"<p>Group titles</p>"}},{name:"internalIncludeExcludeGroupRecords",access:"private",description:"<p>Adds or removes records in a group from storage. Used when expanding/collapsing groups.</p>",parameters:[{name:"groupRecord",type:"Core.data.Model",description:"<p>Group which records should be added or removed</p>"},{name:"include",type:"Boolean",description:"<p>Include (true) or exclude (false) records</p>"}],scope:"instance",category:"Grouping"},{name:"excludeGroupRecords",access:"private",description:"<p>Removes records in a group from storage. Used when collapsing a group.</p>",parameters:[{name:"groupRecord",description:"<p>Group which records should be removed</p>"}],scope:"instance",category:"Grouping"},{name:"includeGroupRecords",access:"private",description:"<p>Adds records in a group to storage. Used when expanding a group.</p>",parameters:[{name:"groupRecord",description:"<p>Group which records should be added</p>"}],scope:"instance",category:"Grouping"},{name:"collectGroupRecords",access:"private",description:"<p>Collects all group headers + children, whether expanded or not</p>",scope:"instance",returns:{type:"Array.<Core.data.Model>"}}],events:[{name:"group",description:"<p>Fired when grouping changes</p>",parameters:[{name:"source",type:"Core.data.Store",description:"<p>This Store</p>"},{name:"groupers",type:"Array.<Object>",description:"<p>Applied groupers</p>"},{name:"records",type:"Array.<Core.data.Model>",description:"<p>Grouped records</p>"}]}]},{name:"module:Core/data/mixin/StoreRelation",description:"<p>Mixin for Store that handles relations with other stores (actually defined on model).</p>",mixin:true,constructor:{name:"constructor"},filename:"StoreRelation.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/data/mixin",lineno:14,functions:[{name:"initRelations",access:"private",description:"<p>Initialized relations, called from constructor</p>",scope:"instance"},{name:"initRelationCollection",access:"private",description:"<p>Called from other end of an relation when this store should hold a collection of related records.</p>",parameters:[{name:"config"},{name:"collectionStore"}],scope:"instance"},{name:"resetRelationCache",access:"private",description:"<p>Updates relationCache for all records.</p>",scope:"instance"},{name:"updateRecordRelationCache",access:"private",description:"<p>Caches related records from related store on the local store.</p>",parameters:[{name:"record",description:"<p>Local record</p>"},{name:"relations",description:"<p>Relations to related store</p>"}],scope:"instance"},{name:"getCollection",access:"private",description:"<p>Returns records from a collection of related records. Not to be called directly, called from Model getter.\nTODO: Move to Model?</p>",parameters:[{name:"model"},{name:"name"}],scope:"instance",returns:{type:"*"}},{name:"setCollection",access:"private",description:"<p>Sets a collection of related records. Will updated the related store and trigger events from it. Not to be called\ndirectly, called from Model setter.</p>",scope:"instance"},{name:"cacheRelatedRecord",access:"private",description:"<p>Adds a record to relation cache, optionally removing it if already there.</p>",parameters:[{name:"record"},{name:"id"},{name:"name"},{name:"uncacheId"}],scope:"instance"},{name:"uncacheRelatedRecord",access:"private",description:"<p>Removes a record from relation cache, for a specific relation (specifiy relation name and id) or for all relations</p>",parameters:[{name:"record",description:"<p>Record to remove from cache</p>"},{name:"name",description:"<p>Optional, relation name</p>"},{name:"id",description:"<p>Optional, id</p>"}],scope:"instance"},{name:"updateDependentStores",access:"private",description:"<p>Updates related stores when store is cleared, a record is removed or added.</p>",parameters:[{name:"action",type:"String"},{name:"records",type:"Array.<Core.data.Model>"}],scope:"instance"},{name:"updateDependentRecordIds",access:"private",description:"<p>Updates relation cache and foreign key value when a related objects id is changed.</p>",scope:"instance"}]},{name:"module:Core/data/mixin/StoreSearch",description:"<p>Mixin for Store that handles searching (multiple records) and finding (single record).</p>",mixin:true,examples:["// find all records that has a field containing the string john\nlet hits = store.search('john');"],constructor:{name:"constructor"},filename:"StoreSearch.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/data/mixin",lineno:33,functions:[{name:"search",description:"<p>Find all hits.</p>",parameters:[{name:"find",description:"<p>Value to search for</p>"},{name:"fields",type:"Array.<Object>",description:"<p>Fields to search value in</p>"}],scope:"instance",returns:{type:"*",description:"<p>Array of hits, in the format { index: x, data: record }</p>"}},{name:"findByField",description:"<p>Find all hits in a column</p>",parameters:[{name:"field",description:"<p>The store field to search in</p>"},{name:"value",description:"<p>Value to search for</p>"}],scope:"instance",returns:{type:"*",description:"<p>Array of hits, in the format { index: x, data: record }</p>"}},{name:"find",description:"<p>Finds the first record for which the specified function returns true</p>",parameters:[{name:"fn",type:"function",description:"<p>Comparison function, called with record as parameter</p>"}],examples:["store.find(record => record.color === 'blue');"],scope:"instance",returns:{type:"Core.data.Model",description:"<p>Record or null if none found</p>"}},{name:"findRecord",description:"<p>Finds the first record for which the specified field has the specified value</p>",parameters:[{name:"fieldName",type:"String",description:"<p>Field name</p>"},{name:"value",type:"*",description:"<p>Value to find</p>"}],scope:"instance",returns:{type:"Core.data.Model",description:"<p>Record or null if none found</p>"}},{name:"query",description:"<p>Searches the Store records using the passed function.</p>",parameters:[{name:"fn",type:"function",description:"<p>A function that is called for each record. Return true to indicate a match</p>"},{name:"searchAllRecords",type:"Boolean",description:"<p>True to ignore any applied filters when searching</p>",default:false}],scope:"instance",returns:{type:"Array.<Core.data.Model>",description:"<p>An array of the matching Records</p>"}},{name:"some",description:"<p>Returns true if the supplied function returns true for any record in the store</p>",parameters:[{name:"fn"}],examples:["store.some(record => record.age > 95); // true if any record has age > 95"],scope:"instance",returns:{type:"Boolean"}}]},{name:"module:Core/data/mixin/StoreSort",description:"<p>Mixin for Store that handles simple sorting as well as multi-level sorting.</p>\n<pre class=\"prettyprint source lang-javascript\"><code>// single sorter\nstore.sort('age');\n\n// single sorter as object, descending order\nstore.sort({ field : 'age', ascending : false });\n\n// multiple sorters\nstore.sort(['age', 'name']);\n\n// using custom sorting function\nstore.sort({\n    fn : (recordA, recordB) => {\n        // apply custom logic, for example:\n        return recordA.name.length &lt; recordB.name.length ? -1 : 1;\n    }\n});\n\n// using locale specific sort (slow)\nstore.sort({ field : 'name', useLocaleSort : 'sv-SE' });\n</code></pre>",mixin:true,constructor:{name:"constructor"},filename:"StoreSort.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/data/mixin",lineno:34,configs:[{name:"sorters",description:"<p>Default sorters, format is [{ field: '', ascending: false }, ...]</p>",type:["Array.<Object>","Array.<string>"],scope:"inner",category:"Common"},{name:"useLocaleSort",description:"<p>Use <code>localeCompare()</code> when sorting, which lets the browser sort in a locale specific order. Set to <code>true</code>,\na locale string or a locale config to enable.</p>\n<p>Enabling this has big negative impact on sorting\nperformance. For more info on <code>localeCompare()</code>, see <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/localeCompare\">MDN</a>.</p>\n<p>Examples:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>const store = new Store({\n    // Swedish sorting\n    useLocaleSort : 'sv-SE'\n});\n\nconst store = new Store({\n    // Swedish sorting with custom casing order\n    useLocaleSort : {\n        locale    : 'sv-SE',\n        caseFirst : 'upper'\n    }\n});\n</code></pre>\n<p>Can also be configured on a per sorter basis:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>store.sort({ field: 'name', useLocaleSort : 'sv-SE' });\n</code></pre>",type:["Boolean","String","Object"],scope:"inner",defaultvalue:"false"}],events:[{name:"beforeSort",description:"<p>Fired before sorting</p>",parameters:[{name:"source",type:"Core.data.Store",description:"<p>This Store</p>"},{name:"sorters",type:"Array.<Object>",description:"<p>Sorter configs</p>"},{name:"records",type:"Array.<Core.data.Model>",description:"<p>Records to sort</p>"}]},{name:"sort",description:"<p>Fired after sorting</p>",parameters:[{name:"source",type:"Core.data.Store",description:"<p>This Store</p>"},{name:"sorters",type:"Array.<Object>",description:"<p>Sorter configs</p>"},{name:"records",type:"Array.<Core.data.Model>",description:"<p>Sorted records</p>"}]}],properties:[{name:"sorters",description:"<p>Currently applied sorters</p>",type:{names:["Array.<Object>"]},scope:"inner",readonly:true,category:"Sort, group & filter"},{name:"isSorted",description:"<p>Is store sorted?\ntrue</p>",scope:"instance",readonly:true,properties:[{type:{names:["Boolean"]}}]}],functions:[{name:"sort",description:"<p>Sort records, either by replacing current sorters or by adding to them.\nA sorter can specify a <strong><em>custom sorting function</em></strong> which will be called with arguments (recordA, recordB).\nWorks in the same way as a standard array sorter, except that returning <code>null</code> triggers the stores\nnormal sorting routine.</p>\n<pre class=\"prettyprint source lang-javascript\"><code>// single sorter\nstore.sort('age');\n\n// single sorter as object, descending order\nstore.sort({ field : 'age', ascending : false });\n\n// multiple sorters\nstore.sort(['age', 'name']);\n\n// using custom sorting function\nstore.sort((recordA, recordB) => {\n    // apply custom logic, for example:\n    return recordA.name.length &lt; recordB.name.length ? -1 : 1;\n});\n\n// using locale specific sort (slow)\nstore.sort({ field : 'name', useLocaleSort : 'sv-SE' });\n</code></pre>",parameters:[{name:"field",type:["String","Array","Object","function"],description:'<p>Field to sort by.\nCan also be an array of sorters, or a sorting function, or a <a href="#Core/util/CollectionSorter">sorter</a> config.</p>'},{name:"ascending",type:"Boolean",description:"<p>Sort order.\nApplicable when the <code>field</code> is a string (if not specified and already sorted by the field, reverts direction),\nor an object and <code>ascending</code> property is not specified for the object. <code>true</code> by default.\nNot applicable when <code>field</code> is a function. <code>ascending</code> is always <code>true</code> in this case.</p>",optional:true},{name:"add",type:"Boolean",description:"<p>If <code>true</code>, adds a sorter to the sorters collection.\nNot applicable when <code>field</code> is an array. In this case always replaces active sorters.</p>",default:false,optional:true},{name:"silent",type:"Boolean",description:"<p>Set as true to not fire events</p>",default:false,optional:true}],scope:"instance",fires:["event:beforeSort","event:sort","event:refresh"],category:"Sort, group & filter"},{name:"addSorter",description:"<p>Add a sorting level (a sorter).</p>",parameters:[{name:"field",type:["String","Object"],description:"<p>Field to sort by (can also be an array of sorters or a config containing a custom sort fn)</p>"},{name:"ascending",type:"Boolean",description:"<p>Sort order (used only if field specified as string)</p>",default:true}],scope:"instance",category:"Sort, group & filter"},{name:"removeSorter",description:"<p>Remove a sorting level (a sorter)</p>",parameters:[{name:"field",description:"<p>Stop sorting by this field</p>"}],scope:"instance",category:"Sort, group & filter"},{name:"clearSorters",description:"<p>Removes all sorters, turning store sorting off.</p>",scope:"instance",category:"Sort, group & filter"},{name:"createSorterFn",description:"<p>Creates a function used with Array#sort when sorting the store. Override to use your own custom sorting logic.</p>",parameters:[{name:"sorters"}],scope:"instance",category:"Sort, group & filter",returns:{type:"function"}},{name:"performSort",access:"private",description:'<p>Perform sorting according to the <a href="#Core/data/mixin/StoreSort#config-sorters">sorters</a> configured.\nThis is the internal implementation which is overridden in <a href="#Core/data/AjaxStore">Core.data.AjaxStore</a> and\nmust not be overridden.</p>',scope:"instance",category:"Sort, group & filter"}]},{name:"module:Core/data/mixin/StoreState",description:"<p>Mixin for Store that handles store state.</p>\n<ul>\n<li>sorters</li>\n<li>groupers</li>\n<li>filters</li>\n</ul>",mixin:true,constructor:{name:"constructor"},filename:"StoreState.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/data/mixin",lineno:14,functions:[{name:"getState",access:"private",description:"<p>Get store state. Used by State-plugin to serialize state</p>",scope:"instance",returns:{type:"Object"}},{name:"applyState",access:"private",description:"<p>Apply store state. Used by State-plugin to restore a previously serialized state</p>",parameters:[{name:"state",type:"Object"}],scope:"instance"}]},{name:"module:Core/data/mixin/StoreSum",description:"<p>Mixin for Store that handles summaries.</p>",mixin:true,constructor:{name:"constructor"},filename:"StoreSum.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/data/mixin",lineno:12,functions:[{name:"sum",description:"<p>Returns sum calculated by adding value of specified field for specified records. Defaults to using all records\nin store</p>",parameters:[{name:"field",type:"String",description:"<p>Field to summarize by</p>"},{name:"records",type:"Array.<Core.data.Model>",description:"<p>Records to summarize, uses all records if unspecified.</p>"}],scope:"instance",returns:{type:"Number"}},{name:"min",description:"<p>Returns min value for the specified field. Defaults to look through all records in store</p>",parameters:[{name:"field",type:"String",description:"<p>Field to find min value for</p>"},{name:"records",type:"Array.<Core.data.Model>",description:"<p>Records to process, uses all records if unspecified</p>"}],scope:"instance",returns:{type:"Number"}},{name:"max",description:"<p>Returns max value for the specified field. Defaults to look through all records in store</p>",parameters:[{name:"field",type:"String",description:"<p>Field to find max value for</p>"},{name:"records",type:"Array.<Core.data.Model>",description:"<p>Records to process, uses all records if unspecified</p>"}],scope:"instance",returns:{type:"Number"}},{name:"average",description:"<p>Returns the average value for the specified field. Defaults to look through all records in store</p>",parameters:[{name:"field",type:"String",description:"<p>Field to calculate average value for</p>"},{name:"records",type:"Array.<Core.data.Model>",description:"<p>Records to process, uses all records if unspecified</p>"}],scope:"instance",returns:{type:"Number"}},{name:"groupSum",description:"<p>Returns sum by adding value of specified field for records in the group with the specified groupValue.</p>",parameters:[{name:"groupValue",description:"<p>Group to summarize</p>"},{name:"field",type:"String",description:"<p>Field to summarize by</p>"}],scope:"instance",returns:{type:"Number",description:"<p>Sum or null if store not grouped</p>"}}]},{name:"module:Core/data/mixin/StoreSync",description:"<p>Mixin that allows Store to sync a new dataset with its existing records, instead of fully replacing everything.\nConfigure Store with <code>syncDataOnLoad: true</code> to activate the functionality. Sync is performed when a new dataset\nis loaded, either by directly assigning it to <code>store.data</code> or by loading it using Ajax (if using an AjaxStore).</p>\n<pre class=\"prettyprint source lang-javascript\"><code>const store = new Store({\n  syncDataOnLoad : true,\n  data           : [\n    { id : 1, name : 'Saitama' },\n    { id : 2, name : 'Genos' },\n    { id : 3, name : 'Mumen Rider' }\n  ]\n});\n\n// Sync a new dataset by assigning to data:\nstore.data = [\n  { id : 1, name : 'Caped Baldy' },\n  { id : 4, name : 'Horse-Bone' }\n];\n\n // Result : Record 1 updated, record 2 & 3 removed, record 4 added\n</code></pre>\n<p>For more details, please see <a href=\"#Core/data/mixin/StoreSync#config-syncDataOnLoad\">syncDataOnLoad</a>.</p>",mixin:true,constructor:{name:"constructor"},filename:"StoreSync.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/data/mixin",lineno:36,configs:[{name:"syncDataOnLoad",description:"<p>Configure with <code>true</code> to sync loaded data instead of replacing existing with a new dataset.</p>\n<p>By default (or when configured with <code>false</code>) assigning to <code>store.data</code> replaces the entire dataset\nwith a new one, creating all new records:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>store.data = [ { id : 1, name : 'Saitama' } ];\n\nconst first = store.first;\n\nstore.data = [ { id : 1, name : 'One-Punch man' } ];\n\nstore.first !== first;\n</code></pre>\n<p>When configured with <code>true</code> the new dataset is instead synced against the old, figuring out what was\nadded, removed and updated:</p>\n<ul>\n<li>\n<pre class=\"prettyprint source lang-javascript\"><code></code></pre>\n</li>\n</ul>\n<p>store.data = [ { id : 1, name : 'Saitama' } ];</p>\n<p>const first = store.first;</p>\n<p>store.data = [ { id : 1, name : 'One-Punch man' } ];</p>\n<p>store.first === first;</p>\n<pre class=\"prettyprint source\"><code>\nAfter the sync, any configured sorters, groupers and filters will be reapplied.\n\nThe sync operation has a configurable threshold, above which the operation will be treated as a\nbatch/refresh and only trigger a single `refresh` event. If threshold is not reached, individual events\nwill be triggered (single `add`, `remove` and possible multiple `update`). To enable the threshold,\nsupply a config object with a `threshold` property instead of `true`:\n\n</code></pre>\n<p>const store = new Store({\nsyncDataOnLoad : {\nthreshold : '20%'\n}\n});</p>\n<pre class=\"prettyprint source\"><code>\n`threshold` accepts numbers or strings. A numeric threshold means number of affected records, while a\nstring is used as a percentage of the whole dataset (appending `%` is optional). By default no threshold\nis used.</code></pre>",type:["Boolean","Object"],scope:"inner",defaultvalue:"false"}],functions:[{name:"syncDataset",access:"private",description:'<p>Syncs a new dataset against the already loaded one, only applying changes.\nNot intended to be called directly, please configure store with <code>syncDataOnLoad: true</code> and assign to\n<code>store.data</code> as usual instead.</p>\n<pre class="prettyprint source"><code>const store = new Store({\n   syncDataOnLoad : true,\n   data : [\n       // initial data\n   ]\n});\n\nstore.data = [ // new data ]; //  Difference between initial data and new data will be applied\n</code></pre>',parameters:[{name:"data",type:"Array.<Object>",description:"<p>New dataset</p>"}],scope:"instance"}]},{name:"module:Core/data/mixin/StoreTree",description:'<p>Mixin for store with tree related functionality. To learn more about working with tree nodes please see the <a href="#Core/data/mixin/TreeNode">Core/data/mixin/TreeNode</a> class and <a href="#guides/data/treedata.md">this guide</a>.</p>',mixin:true,constructor:{name:"constructor"},filename:"StoreTree.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/data/mixin",lineno:12,properties:[{name:"isTree",description:'<p>True if this Store is configured to handle tree data (with <code>tree : true</code>) or if this is a\n<a href="#Core/data/Store#function-makeChained">chained store</a> and the master store is a tree store.</p>',scope:"instance",readonly:true,category:"Tree",properties:[{type:{names:["Boolean"]}}]},{name:"leaves",description:"<p>Get all leaves in store with tree data</p>",scope:"instance",returns:[{type:{names:["Array.<Core.data.Model>"]}}],category:"Tree"}],functions:[{name:"loadChildren",description:"<p>Loads children for a parent node that uses load on demand (when expanding it). Base implementation does nothing,\neither use AjaxStore which implements it, create your own subclass with an implementation or listen for\n<code>toggleNode</code> and insert records when you have them available.</p>",parameters:[{name:"parentRecord",type:"Core.data.Model"}],scope:"instance",returns:{type:"Promise",description:"<p>A Promise which will be resolved if the load succeeds, and rejected if the load is</p>"},async:true},{name:"onNodeAddChild",access:"internal",description:"<p>Called from Model when adding children. Not to be called directly, use Model#appendChild() instead.</p>",parameters:[{name:"parent",type:"Core.data.mixin.TreeNode"},{name:"children",type:"Array.<Core.data.mixin.TreeNode>"},{name:"index",type:"Number"},{name:"isMove",type:"Object"},{name:"silent",type:"Boolean",default:false,optional:true}],scope:"instance",fires:["event:add","event:change"]},{name:"getChildren",description:'<p>Returns the children of the passed branch node which this store owns. By default, this\nis the entire <code>children</code> array.</p>\n<p><strong>If this store <a href="#Core/data/mixin/StoreChained#property-isChained">isChained</a></strong>, then\nthis returns only the subset of children which are filtered into this store by the\n<a href="#Core/data/mixin/StoreChained#config-chainedFilterFn">chainedFilterFn</a>.</p>',parameters:[{name:"parent",type:"Core.data.Model",description:"<p>The node to return the children of.</p>"}],scope:"instance"},{name:"internalToggleTreeSubRecords",access:"private",description:"<p>Includes or excludes all records beneath parentRecord in storage. Used when expanding or collapsing\nnodes.</p>",parameters:[{name:"parentRecord",description:"<p>Parent record</p>"},{name:"include",description:"<p>Include (true) or exclude (false)</p>"}],scope:"instance",category:"Tree"},{name:"toggleCollapse",description:"<p>Collapse an expanded record or expand a collapsed. Optionally forcing a certain state.</p>",parameters:[{name:"idOrRecord",type:["String","Number","Core.data.Model"],description:"<p>Record (the record itself) or id of a record to toggle</p>"},{name:"collapse",type:"Boolean",description:"<p>Force collapse (true) or expand (false)</p>",optional:true}],scope:"instance",returns:{type:"Promise"},async:true},{name:"onNodeCollapse",access:"private",description:"<p>Remove all records beneath parentRecord from storage.</p>",parameters:[{name:"parentRecord",description:"<p>Parent record</p>"}],scope:"instance",category:"Tree"},{name:"onNodeExpand",access:"private",description:"<p>Add all records beneath parentRecord from storage.</p>",parameters:[{name:"parentRecord",description:"<p>Parent record</p>"}],scope:"instance",category:"Tree"}]},{name:"module:Core/data/mixin/TreeNode",description:"<p>Mixin for Model with tree node related functionality. This class is mixed into the <a href=\"#Core/data/Model\">Core/data/Model</a> class.</p>\n<h2>Adding and removing child nodes</h2>\n<pre class=\"prettyprint source\"><code>const parent = store.getById(1),\n\nfirstBorn = parent.insertChild({\n     name : 'Child node'\n }, parent.children[0]); // Insert a child at a specific place in the children array\n\nparent.removeChild(parent.children[0]); // Removes a child node\nparent.appendChild({ name : 'New child node' }); // Appends a child node\n</code></pre>",mixin:true,constructor:{name:"constructor"},filename:"TreeNode.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/data/mixin",lineno:25,properties:[{name:"convertEmptyParentToLeaf",description:'<p>This static configuration option allows you to control whether an empty parent task should be converted into a\nleaf. Enable/disable it for a whole class:</p>\n<pre class="prettyprint source lang-javascript"><code>Model.convertEmptyParentToLeaf = false;\n</code></pre>\n<p>By specifying <code>true</code>, all empty parents will be considered leafs. Can also be assigned a configuration object\nwith with the following Boolean properties to customize the behaviour:</p>\n<ul>\n<li><code>onLoad</code> - Apply the transformation on load to any parents without children (<code>children : []</code>)</li>\n<li><code>onRemove</code> - Apply the transformation when all children have been removed from a parent</li>\n</ul>\n<pre class="prettyprint source lang-javascript"><code>Model.convertEmptyParentToLeaf = {\n    onLoad   : false,\n    onRemove : true\n}\n</code></pre>',scope:"static",defaultvalue:"false",category:"Parent & children",properties:[{type:{names:["Boolean","Object"]}}]},{name:"parent",description:"<p>This is a read-only property providing access to the parent node.</p>",type:{names:["Core.data.Model"]},scope:"inner",readonly:true,category:"Parent & children"},{name:"children",description:"<p>Child nodes. To allow loading children on demand, specify <code>children : true</code> in your data.</p>",type:{names:["Array.<Core.data.Model>"]},scope:"inner",category:"Parent & children"},{name:"childLevel",description:"<p>Depth in the tree at which this node exists. First visual level of nodes are at level 0, their direct children at\nlevel 1 and so on.</p>",scope:"instance",readonly:true,category:"Parent & children",properties:[{type:{names:["Number"]}}]},{name:"isLeaf",description:"<p>Is a leaf node in a tree structure?</p>",scope:"instance",readonly:true,category:"Parent & children",properties:[{type:{names:["Boolean"]}}]},{name:"isParent",description:"<p>Is a parent node in a tree structure?</p>",scope:"instance",readonly:true,category:"Parent & children",properties:[{type:{names:["Boolean"]}}]},{name:"isLoaded",description:"<p>Returns true for parent nodes with children loaded (there might still be no children)</p>",scope:"instance",readonly:true,category:"Parent & children",properties:[{type:{names:["Boolean"]}}]},{name:"descendantCount",description:"<p>Count all children (including sub-children) for a node (in its `firstStore´)</p>",type:{names:["Number"]},scope:"instance",category:"Parent & children"},{name:"visibleDescendantCount",description:"<p>Count visible (expanded) children (including sub-children) for a node (in its <code>firstStore</code>)</p>",type:{names:["Number"]},scope:"instance",category:"Parent & children"},{name:"allChildren",description:"<p>Retrieve all children (by traversing sub nodes)</p>",scope:"instance",returns:[{type:{names:["Array.<Core.data.Model>"]}}],category:"Parent & children"},{name:"firstChild",description:"<p>Get the first child of this node</p>",scope:"instance",returns:[{type:{names:["Core.data.Model"]}}],category:"Parent & children"},{name:"lastChild",description:"<p>Get the last child of this node</p>",scope:"instance",returns:[{type:{names:["Core.data.Model"]}}],category:"Parent & children"},{name:"previousSiblingsTotalCount",description:"<p>Returns count of all preceding sibling nodes (including their children).</p>",scope:"instance",category:"Parent & children",properties:[{type:{names:["Number"]}}]},{name:"parentId",description:"<p>Reading this property returns the id of the parent node, if this record is a child of a node.</p>\n<p>Setting this property appends this record to the record with the passed\nid <strong>in the same store that this record is already in</strong>.</p>\n<p>Note that setting this property is <strong>only valid if this record is already\npart of a tree store</strong>.</p>\n<p>This is not intended for general use. This is for when a server responds to a record\nmutation and the server decides to move a record to a new parent. If a <code>parentId</code> property\nis passed in the response data for a record, that record will be moved.</p>",scope:"instance",category:"Parent & children",properties:[{type:{names:["Number","String"]}}]}],fields:[{name:"parentId",description:"<p>This is a read-only field provided in server synchronization packets to specify\nwhich record id is the parent of the record.</p>",type:["String","Number"],scope:"inner",readonly:true},{name:"parentIndex",description:"<p>This is a read-only field provided in server synchronization packets to specify\nwhich position the node takes in the parent's children array.\nThis index is set on load and gets updated automatically after row reordering, sorting, etc.\nTo save the order, need to persist the field on the server and when data is fetched to be loaded,\nneed to sort by this field.</p>",type:"Number",scope:"inner",readonly:true}],functions:[{name:"processChildren",access:"internal",description:"<p>Called during creation to also turn any children into Models joined to the same stores as this model</p>",scope:"instance",category:"Parent & children"},{name:"ancestorsExpanded",description:"<p>This property is <code>true</code> if this record has all expanded ancestors and is therefore\neligible for inclusion in a UI.</p>",scope:"instance",category:"Parent & children"},{name:"isExpanded",description:"<p>Used by stores to assess the record's collapsed/expanded state in that store.</p>",parameters:[{name:"store",type:"Core.data.Store"}],scope:"instance",category:"Parent & children"},{name:"getDescendantCount",description:"<p>Count visible (expanded)/all children for this node, optionally specifying for which store.</p>",parameters:[{name:"onlyVisible",type:"Boolean",description:"<p>Specify <code>true</code> to only count visible (expanded) children.</p>",default:false,optional:true},{name:"store",type:"Core.data.Store",description:"<p>A Store to which this node belongs</p>",optional:true}],scope:"instance",category:"Parent & children",returns:{type:"Number"}},{name:"traverse",description:"<p>Traverses all child nodes recursively calling the passed function\non a target node <strong>before</strong> iterating the child nodes.</p>",parameters:[{name:"fn"}],scope:"instance",category:"Parent & children"},{name:"traverseBefore",description:"<p>Traverses all child nodes recursively calling the passed function\non child nodes of a target <strong>before</strong> calling it it on the node.</p>",parameters:[{name:"fn"}],scope:"instance",category:"Parent & children"},{name:"traverseWhile",description:"<p>Traverses child nodes recursively while fn returns true</p>",parameters:[{name:"fn",type:"function"}],scope:"instance",category:"Parent & children",returns:{type:"Boolean"}},{name:"bubble",description:"<p>Bubbles up from this node, calling the specified function with each node.</p>",parameters:[{name:"fn",type:"function"}],scope:"instance",category:"Parent & children"},{name:"bubbleWhile",description:"<p>Bubbles up from this node, calling the specified function with each node,\nwhile the function returns true.</p>",parameters:[{name:"fn",type:"function"}],scope:"instance",category:"Parent & children",returns:{type:"Boolean"}},{name:"contains",description:"<p>Checks if this model contain another model as one of it's descendants</p>",parameters:[{name:"childOrId",type:["Core.data.Model","String","Number"],description:"<p>child node or id</p>"}],scope:"instance",category:"Parent & children",returns:{type:"Boolean"}},{name:"appendChild",description:"<p>Append a child record(s) to any current children.</p>",parameters:[{name:"childRecord",type:["Core.data.Model","Array.<Core.data.Model>"],description:"<p>Record or array of records to append</p>"},{name:"silent",type:"Boolean",description:"<p>Pass <code>true</code> to not trigger events during append</p>",default:false,optional:true}],scope:"instance",category:"Parent & children",returns:{type:["Core.data.Model","Array.<Core.data.Model>"]}},{name:"insertChild",description:"<p>Insert a child record(s) before an existing child record.</p>",parameters:[{name:"childRecord",type:["Core.data.Model","Array.<Core.data.Model>"],description:"<p>Record or array of records to insert</p>"},{name:"before",type:"Core.data.Model",description:"<p>Optional record to insert before, leave out to append to the end</p>",optional:true},{name:"silent",type:"Boolean",description:"<p>Pass <code>true</code> to not trigger events during append</p>",optional:true}],scope:"instance",category:"Parent & children",returns:{type:["Core.data.Model","Array.<Core.data.Model>"]}},{name:"removeChild",description:"<p>Remove a child record. Only direct children of this node can be removed, others are ignored.</p>",parameters:[{name:"childRecords",type:["Core.data.Model","Array.<Core.data.Model>"],description:"<p>The record(s) to remove.</p>"},{name:"isMove",type:"Boolean",description:"<p>Pass <code>true</code> if the record is being moved within the same store.</p>",default:false,optional:true},{name:"silent",type:"Boolean",description:"<p>Pass <code>true</code> to not trigger events during remove.</p>",default:false,optional:true}],scope:"instance",category:"Parent & children"},{name:"clear",access:"private",description:"<p>Removes all records from the rootNode</p>",scope:"instance"}]},{name:"module:Core/data/stm/StateTrackingManager",classDescription:'<p>State Tracking Manager.</p>\n<p>When enabled tracks state of every store registered via <a href="#Core/data/stm/StateTrackingManager#function-addStore">addStore</a>.\nUse <a href="#Core/data/stm/StateTrackingManager#function-undo">undo</a> / <a href="#Core/data/stm/StateTrackingManager#function-redo">redo</a> method calls to restore state to a particular\npoint in time</p>',examples:["stm = new StateTrackingManager({\n    autoRecord : true,\n    listeners  : {\n       'recordingstop' : () => {\n           // your custom code to update undo/redo GUI controls\n           updateUndoRedoControls();\n       },\n       'restoringstop' : ({ stm }) => {\n           // your custom code to update undo/redo GUI controls\n           updateUndoRedoControls();\n       }\n   },\n   getTransactionTitle : (transaction) => {\n       // your custom code to analyze the transaction and return custom transaction title\n       const lastAction = transaction.queue[transaction.queue.length - 1];\n\n       if (lastAction instanceof AddAction) {\n           let title = 'Add new record';\n       }\n\n       return title;\n   }\n});\n\nstm.addStore(userStore);\nstm.addStore(companyStore);\nstm.addStore(otherStore);\n\nstm.enable();"],constructor:{name:"constructor"},filename:"StateTrackingManager.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/data/stm",lineno:155,configs:[{name:"disabled",description:"<p>Default manager disabled state</p>",type:"Boolean",scope:"inner",defaultvalue:true},{name:"autoRecord",description:'<p>Whether to start transaction recording automatically in case the Manager is enabled.</p>\n<p>In the auto recording mode, the manager waits for the first change in any store being managed and starts a transaction, i.e.\nrecords any changes in its monitored stores. The transaction lasts for <a href="#Core/data/stm/StateTrackingManager#config-autoRecordTransactionStopTimeout">autoRecordTransactionStopTimeout</a> and\nafterwards creates one undo/redo step, including all changes in the stores during that period of time.</p>\n<p>In non auto recording mode you have to call <a href="#Core/data/stm/StateTrackingManager#function-startTransaction">startTransaction</a> / <a href="#Core/data/stm/StateTrackingManager#function-stopTransaction">stopTransaction</a> to start and end\na transaction.</p>',type:"Boolean",scope:"inner",defaultvalue:false},{name:"autoRecordTransactionStopTimeout",description:'<p>The transaction duration (in ms) for the auto recording mode <a href="#Core/data/stm/StateTrackingManager#config-autoRecord">autoRecord</a></p>',type:"Number",scope:"inner",defaultvalue:100},{name:"makeModelUpdateAction",access:"private",description:"<p>Store model update action factory</p>",type:"function",scope:"inner"},{name:"makeModelInsertChildAction",access:"private",description:"<p>Store insert child model action factory.</p>",type:"function",scope:"inner"},{name:"makeModelRemoveChildAction",access:"private",description:"<p>Store remove child model action factory.</p>",type:"function",scope:"inner"},{name:"makeStoreModelAddAction",access:"private",description:"<p>Store add model action factory.</p>",type:"function",scope:"inner"},{name:"makeStoreModelInsertAction",access:"private",description:"<p>Store insert model action factory.</p>",type:"function",scope:"inner"},{name:"makeStoreModelRemoveAction",access:"private",description:"<p>Store remove model action factory.</p>",type:"function",scope:"inner"},{name:"makeStoreRemoveAllAction",access:"private",description:"<p>Store remove all models action factory.</p>",type:"function",scope:"inner"},{name:"getTransactionTitle",description:"<p>Function to create a transaction title if none is provided.</p>\n<p>The function receives a transaction and should return a title.</p>",type:"function",scope:"inner"}],properties:[{name:"state",description:"<p>Gets current state of the manager</p>",scope:"instance",returns:[{type:{names:["Core.data.stm.state.StateBase"]}}]},{name:"position",description:"<p>Gets current undo/redo queue position</p>",scope:"instance",returns:[{type:{names:["Number"]}}]},{name:"length",description:"<p>Gets current undo/redo queue length</p>",scope:"instance",returns:[{type:{names:["Number"]}}]},{name:"stores",description:"<p>Gets all the stores registered in STM</p>",scope:"instance",returns:[{type:{names:["Array.<Core.data.Store>"]}}]},{name:"disabled",description:"<p>Get/set manager disabled state</p>",scope:"instance",properties:[{type:{names:["Boolean"]}}]},{name:"isReady",description:"<p>Checks manager ready state</p>",scope:"instance",returns:[{type:{names:["Boolean"]}}]},{name:"isRecording",description:"<p>Checks manager recording state</p>",scope:"instance",returns:[{type:{names:["Boolean"]}}]},{name:"autoRecord",description:"<p>Gets/sets manager auto record option</p>",scope:"instance",properties:[{type:{names:["Boolean"]}}]},{name:"transaction",description:"<p>Gets currently recording STM transaction.</p>",scope:"instance",returns:[{type:{names:["Core.data.stm.Transaction"]}}]},{name:"queue",description:"<p>Gets titles of all recorded undo/redo transactions</p>",scope:"instance",returns:[{type:{names:["Array.<String>"]}}]},{name:"isRestoring",description:"<p>Gets manager restoring state.</p>",scope:"instance",returns:[{type:{names:["Boolean"]}}]},{name:"canUndo",description:"<p>Checks if the manager can undo.</p>",scope:"instance",returns:[{type:{names:["Boolean"]}}]},{name:"canRedo",description:"<p>Checks if the manager can redo.</p>",scope:"instance",returns:[{type:{names:["Boolean"]}}]}],functions:[{name:"hasStore",description:"<p>Checks if a store has been added to the manager</p>",parameters:[{name:"store",type:"Core.data.Store"}],scope:"instance",returns:{type:"Boolean"}},{name:"addStore",description:"<p>Adds a store to the manager</p>",parameters:[{name:"store",type:"Core.data.Store"}],scope:"instance"},{name:"removeStore",description:"<p>Removes a store from the manager</p>",parameters:[{name:"store",type:"Core.data.Store"}],scope:"instance"},{name:"getStoreById",description:"<p>Returns previously added store by it's id or undefined if store with the given id isn't added.</p>",parameters:[{name:"id",type:["String","Number"]}],scope:"instance",deprecated:true,returns:{type:"Core.data.Store"}},{name:"forEachStore",description:"<p>Calls <code>fn</code> for each store registered in STM.</p>",parameters:[{name:"fn",type:"function",description:"<p>(store, id) =&gt; ...</p>"}],scope:"instance"},{name:"enable",description:"<p>Enables manager</p>",scope:"instance"},{name:"disable",description:"<p>Disables manager</p>",scope:"instance"},{name:"startTransaction",description:"<p>Starts undo/redo recording transaction.</p>",parameters:[{name:"title",type:"String",default:"nul",optional:true}],scope:"instance"},{name:"stopTransaction",description:"<p>Stops undo/redo recording transaction</p>",parameters:[{name:"title",type:"String",optional:true}],scope:"instance"},{name:"stopTransactionDelayed",access:"private",description:'<p>Stops undo/redo recording transaction after <a href="#Core/data/stm/StateTrackingManager#config-autoRecordTransactionStopTimeout">autoRecordTransactionStopTimeout</a> delay.</p>',scope:"instance"},{name:"rejectTransaction",description:"<p>Rejects currently recorded transaction.</p>",scope:"instance"},{name:"undo",description:"<p>Undoes current undo/redo transaction.</p>",parameters:[{name:"steps",type:"Number",default:1,optional:true}],scope:"instance"},{name:"undoAll",description:"<p>Undoes all transactions.</p>",scope:"instance"},{name:"redo",description:"<p>Redoes current undo/redo transaction.</p>",parameters:[{name:"steps",type:"Number",default:1,optional:true}],scope:"instance"},{name:"redoAll",description:"<p>Redoes all transactions.</p>",scope:"instance"},{name:"resetQueue",description:"<p>Resets undo/redo queue.</p>",scope:"instance"},{name:"resetUndoQueue",description:"<p>Resets undo queue.</p>",scope:"instance"},{name:"resetRedoQueue",description:"<p>Resets redo queue.</p>",scope:"instance"},{name:"onModelUpdate",access:"private",description:"<p>Method to call from model STM mixin upon model update</p>",parameters:[{name:"model",type:"Core.data.Model"},{name:"newData",type:"Object"},{name:"oldData",type:"Object"}],scope:"instance"},{name:"onModelInsertChild",access:"private",description:"<p>Method to call from model STM mixin upon tree model child insertion</p>",parameters:[{name:"parentModel",type:"Core.data.Model",description:"<p>Parent model</p>"},{name:"index",type:"Number",description:"<p>Insertion index</p>"},{name:"childModels",type:"Array.<Core.data.Model>",description:"<p>Array of models inserted</p>"},{name:"context",type:"Map",description:"<p>Map with inserted models as keys and objects with previous parent,\nand index at previous parent.</p>"}],scope:"instance"},{name:"onModelRemoveChild",access:"private",description:"<p>Method to call from model STM mixin upon tree model child removal</p>",parameters:[{name:"parentModel",type:"Core.data.Model"},{name:"childModels",type:"Array.<Core.data.Model>"},{name:"context",type:"Map"}],scope:"instance"},{name:"onStoreModelAdd",access:"private",description:"<p>Method to call from store STM mixin upon store models adding</p>",parameters:[{name:"store",type:"Core.data.Store"},{name:"models",type:"Array.<Core.data.Model>"},{name:"silent",type:"Boolean"}],scope:"instance"},{name:"onStoreModelInsert",access:"private",description:"<p>Method to call from store STM mixin upon store models insertion</p>",parameters:[{name:"store",type:"Core.data.Store"},{name:"index",type:"Number"},{name:"models",type:"Array.<Core.data.Model>"},{name:"context",type:"Map"},{name:"silent",type:"Boolean"}],scope:"instance"},{name:"onStoreModelRemove",access:"private",description:"<p>Method to call from store STM mixin upon store models removal</p>",parameters:[{name:"store",type:"Core.data.Store"},{name:"models",type:"Array.<Core.data.Model>"},{name:"context",type:"Object"},{name:"silent",type:"Boolean"}],scope:"instance"},{name:"onStoreRemoveAll",access:"private",description:"<p>Method to call from store STM mixin upon store clear</p>",parameters:[{name:"store",type:"Core.data.Store"},{name:"allRecords",type:"Array.<Core.data.Model>"},{name:"silent",type:"Boolean"}],scope:"instance"}],events:[{name:"recordingStart",description:"<p>Fired upon state recording operation starts.</p>",parameters:[{name:"stm",type:"Core.data.stm.StateTrackingManager"},{name:"transaction",type:"Core.data.stm.Transaction"}]},{name:"recordingStop",description:"<p>Fired upon state recording operation stops.</p>",parameters:[{name:"stm",type:"Core.data.stm.StateTrackingManager"},{name:"transaction",type:"Core.data.stm.Transaction"},{name:"reason",type:"Object",description:"<p>Transaction stop reason</p>"},{name:"reason.stop",type:"Boolean",description:"<p>Transaction recording has been stopped in a normal way.</p>",isSubParam:true},{name:"reason.disabled",type:"Boolean",description:"<p>Transaction recording has been stopped due to STM has been disabled.</p>",isSubParam:true},{name:"reason.rejected",type:"Boolean",description:"<p>Transaction recording has been stopped due to transaction has been rejected.</p>",isSubParam:true}]},{name:"restoringStart",description:"<p>Fired upon state restoration operation starts.</p>",parameters:[{name:"stm",type:"Core.data.stm.StateTrackingManager"}]},{name:"restoringStop",description:"<p>Fired upon state restoration operation stops.</p>",parameters:[{name:"stm",type:"Core.data.stm.StateTrackingManager"}]},{name:"queueReset",description:"<p>Fired upon state undo/redo queue reset.</p>",parameters:[{name:"stm",type:"Core.data.stm.StateTrackingManager"}]}]},{name:"module:Core/data/stm/Transaction",classDescription:"<p>STM transaction class, holds list of actions constituting a transaction.</p>\n<p>A transaction can be undone and redone. Upon undo all the actions being held\nare undone in reverse order. Upon redo all the actions being held are redone\nin forward order.</p>",constructor:{name:"constructor"},filename:"Transaction.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/data/stm",lineno:15,configs:[{name:"title",description:"<p>Transaction title</p>",type:"String",scope:"inner"}],properties:[{name:"queue",description:"<p>Gets transaction's actions queue</p>",scope:"instance",properties:[{type:{names:["Array.<Core.data.stm.action.ActionBase>"]}}]},{name:"length",description:"<p>Gets transaction's actions queue length</p>",scope:"instance",properties:[{type:{names:["Number"]}}]}],functions:[{name:"addAction",description:"<p>Adds an action to the transaction.</p>",parameters:[{name:"action",type:["Core.data.stm.action.ActionBase","Object"]}],scope:"instance"},{name:"undo",description:"<p>Undoes actions held</p>",scope:"instance"},{name:"redo",description:"<p>Redoes actions held</p>",scope:"instance"}]},{name:"module:Core/data/stm/action/ActionBase",classDescription:"<p>Base class for STM actions.</p>",virtual:true,constructor:{name:"constructor"},filename:"ActionBase.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/data/stm/action",lineno:15,properties:[{name:"type",description:"<p>Gets the type of the action (stringified class name).</p>",scope:"instance",returns:[{type:{names:["String"]}}]}],functions:[{name:"undo",description:"<p>Undoes an action</p>",scope:"instance"},{name:"redo",description:"<p>Redoes an action</p>",scope:"instance"}]},{name:"module:Core/data/stm/action/AddAction",classDescription:"<p>Action to record the fact of models adding to a store.</p>",constructor:{name:"constructor"},filename:"AddAction.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/data/stm/action",lineno:14,configs:[{name:"store",description:"<p>Reference to a store models have been added into.</p>",type:"Core.data.Store",scope:"inner"},{name:"modelList",description:"<p>List of models added into the store.</p>",type:"Array.<Core.data.Model>",scope:"inner"},{name:"silent",description:"<p>Flag showing if undo/redo should be done silently i.e. with events suppressed</p>",type:"Boolean",scope:"inner",defaultvalue:false}]},{name:"module:Core/data/stm/action/InsertAction",classDescription:"<p>Action to record the fact of models inserting into a store.</p>",constructor:{name:"constructor"},filename:"InsertAction.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/data/stm/action",lineno:17,configs:[{name:"store",description:"<p>Reference to a store models have been inserted into.</p>",type:"Core.data.Store",scope:"inner"},{name:"modelList",description:"<p>List of models inserted into the store.</p>",type:"Array.<Core.data.Model>",scope:"inner"},{name:"insertIndex",description:"<p>Index the models have been inserted at.</p>",type:"Number",scope:"inner"},{name:"context",description:'<p>Models move context (if models has been moved), if any.\nMap this <a href="#Core/data/Model">Core/data/Model</a> instances as keys and their\nprevious index as values</p>',type:"Map",scope:"inner"},{name:"silent",description:"<p>Flag showing if undo/redo should be done silently i.e. with events suppressed</p>",type:"Boolean",scope:"inner",defaultvalue:false}]},{name:"module:Core/data/stm/action/InsertChildAction",classDescription:"<p>Action to record the fact of adding a children models into a parent model.</p>",constructor:{name:"constructor"},filename:"InsertChildAction.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/data/stm/action",lineno:15,configs:[{name:"parentModel",description:"<p>Reference to a parent model a child model has been added to.</p>",type:"Core.data.Model",scope:"inner"},{name:"childModels",description:"<p>Children models inserted.</p>",type:"Array.<Core.data.Model>",scope:"inner"},{name:"insertIndex",description:"<p>Index a children models are inserted at</p>",type:"Number",scope:"inner"},{name:"context",description:"<p>Map having children models as keys and values containing previous parent\nof each model and index at the previous parent.</p>",type:"Object",scope:"inner"}]},{name:"module:Core/data/stm/action/RemoveAction",classDescription:"<p>Action to record the fact of models removed from a store.</p>",constructor:{name:"constructor"},filename:"RemoveAction.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/data/stm/action",lineno:15,configs:[{name:"store",description:"<p>Reference to a store models have been removed from.</p>",type:"Core.data.Store",scope:"inner"},{name:"modelList",description:"<p>List of models removed from the store.</p>",type:"Array.<Core.data.Model>",scope:"inner"},{name:"context",description:"<p>Models removing context.</p>",type:"Object",scope:"inner"},{name:"silent",description:"<p>Flag showing if undo/redo should be done silently i.e. with events suppressed</p>",type:"Boolean",scope:"inner",defaultvalue:false}]},{name:"module:Core/data/stm/action/RemoveAllAction",classDescription:"<p>Action to record store remove all operation.</p>",constructor:{name:"constructor"},filename:"RemoveAllAction.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/data/stm/action",lineno:14,configs:[{name:"store",description:"<p>Reference to a store cleared.</p>",type:"Core.data.Store",scope:"inner"},{name:"allRecords",description:"<p>All store records removed</p>",type:"Array.<Core.data.Model>",scope:"inner"},{name:"silent",description:"<p>Flag showing if undo/redo should be done silently i.e. with events suppressed</p>",type:"Boolean",scope:"inner",defaultvalue:false}]},{name:"module:Core/data/stm/action/UpdateAction",classDescription:"<p>Action to record the fact that a model has been updated.</p>",constructor:{name:"constructor"},filename:"UpdateAction.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/data/stm/action",lineno:14,configs:[{name:"model",description:"<p>Reference to a model which has been updated.</p>",type:"Core.data.Model",scope:"inner"},{name:"newData",description:"<p>Map of updated properties with new values.</p>",type:"Object",scope:"inner"},{name:"oldData",description:"<p>Map of updated properties with old values.</p>",type:"Object",scope:"inner"}]},{name:"module:Core/data/stm/mixin/ModelStm",description:'<p>Mixin making a model compatible with <a href="#Core/data/stm/StateTrackingManager">Core/data/stm/StateTrackingManager</a></p>',mixin:true,constructor:{name:"constructor"},filename:"ModelStm.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/data/stm/mixin",lineno:19,properties:[{name:"stm",description:"<p>Reference to STM manager, if used</p>",type:{names:["Core.data.stm.StateTrackingManager"]},scope:"instance",category:"Misc"}],functions:[{name:"beforeSet",access:"private",description:'<p>Overridden to collect initial data for the fields about to be changed.\nThe method is called from within <a href="#Core/data/Model#function-set">set</a> method.</p>',scope:"instance"},{name:"afterSet",access:"private",description:'<p>Overridden to store initial data of the changed fields and to notify STM\nmanager about the change action if anything has been changed in result.</p>\n<p>The method is called from within <a href="#Core/data/Model#function-set">set</a> method.</p>',scope:"instance"},{name:"beforeInsertChild",access:"private",description:'<p>Called from <a href="#Core/data/mixin/TreeNode#function-insertChild">insertChild</a> to obtain inserted\nrecords initial parents and parent index, to be able to restore the state back upon undo.</p>',parameters:[{name:"childRecords",type:"Array.<Core.data.Model>"}],scope:"instance",returns:{type:"Array",description:'<p>Array of results from this call and any of super calls if any.\nThis result is consumed by <a href="#Core/data/stm/mixin/ModelStm#function-afterInsertChild">afterInsertChild</a> which pops\nfrom the result array to take only results of this method call and leave\nresults from super calls untouched.</p>'}},{name:"afterInsertChild",access:"private",description:'<p>Called from <a href="#Core/data/mixin/TreeNode#function-insertChild">insertChild</a> to notify <a href="#Core/data/stm/StateTrackingManager">Core/data/stm/StateTrackingManager</a>\nabout children insertion. Provides it with all necessary context information collected\nin <a href="#Core/data/stm/mixin/ModelStm#function-beforeInsertChild">beforeInsertChild</a> required to undo/redo the action.</p>',scope:"instance"},{name:"beforeRemoveChild",access:"private",description:'<p>Called from <a href="#Core/data/mixin/TreeNode#function-removeChild">removeChild</a> to obtain removed\nrecords initial parent index, to be able to restore the state back upon undo.</p>',parameters:[{name:"childRecords",type:"Array.<Core.data.Model>"},{name:"isMove",type:"Boolean"}],scope:"instance",returns:{type:"Array",description:'<p>Array of results from this call and any of super calls if any.\nThis result is consumed by <a href="#Core/data/stm/mixin/ModelStm#function-afterRemoveChild">afterRemoveChild</a> which pops\nfrom the result array to take only results of this method call and leave\nresults from super calls untouched.</p>'}},{name:"afterRemoveChild",access:"private",description:'<p>Called from <a href="#Core/data/mixin/TreeNode#function-removeChild">removeChild</a> to notify <a href="#Core/data/stm/StateTrackingManager">Core/data/stm/StateTrackingManager</a>\nabout children removing. Provides it with all necessary context information collected\nin <a href="#Core/data/stm/mixin/ModelStm#function-beforeRemoveChild">beforeRemoveChild</a> required to undo/redo the action.</p>',scope:"instance"}]},{name:"module:Core/data/stm/mixin/StoreStm",description:'<p>Store mixin to make it compatible with <a href="#Core/data/stm/StateTrackingManager">Core.data.stm.StateTrackingManager</a>.</p>',mixin:true,constructor:{name:"constructor"},filename:"StoreStm.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/data/stm/mixin",lineno:13,configs:[{name:"stm",description:"<p>Reference to STM manager</p>",type:"Core.data.stm.StateTrackingManager",scope:"inner"}],functions:[{name:"add",access:"private",description:"<p>Overridden to notify STM about flat add action</p>",scope:"instance"},{name:"insert",access:"private",description:"<p>Overridden to notify STM about flat insert action</p>",scope:"instance"},{name:"remove",access:"private",description:"<p>Overridden to notify STM about flat removing action</p>",scope:"instance"},{name:"removeAll",access:"private",description:"<p>Overridden to notify STM about flat clear action</p>",scope:"instance"}]},{name:"module:Core/data/stm/state/StateBase",classDescription:'<p>Abstract class for STM states</p>\n<p>Every on* method should return a state for the STM which it should switch to\nor throw an exception that this call at this state is illegal.</p>\n<p>Interface of this class mirrors interface of <a href="#Core/data/stm/StateTrackingManager">Core.data.stm.StateTrackingManager</a>.</p>',virtual:true,constructor:{name:"constructor"},filename:"StateBase.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/data/stm/state",lineno:24},{name:"module:Core/helper/AjaxHelper",classDescription:"<p>Simplifies Ajax requests. Uses fetch &amp; promises.</p>\n<pre class=\"prettyprint source lang-javascript\"><code>AjaxHelper.get('some-url').then(response => {\n    // process request response here\n});\n</code></pre>\n<p>Uploading file to server via FormData interface.\nPlease visit <a href=\"https:%5C/%5C/developer.mozilla.org/en-US/docs/Web/API/FormData\">https://developer.mozilla.org/en-US/docs/Web/API/FormData</a> for details.</p>\n<pre class=\"prettyprint source lang-javascript\"><code>const formData = new FormData();\nformData.append('file', 'fileNameToUpload');\nAjaxHelper.post('file-upload-url', formData).then(response => {\n    // process request response here\n});\n</code></pre>",constructor:{name:"constructor"},filename:"AjaxHelper.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/helper",lineno:57,functions:[{name:"get",description:"<p>Make a request (using GET) to the specified url.</p>",parameters:[{name:"url",type:"String",description:"<p>Url</p>"},{name:"options",type:"Object",description:'<p>The options for the <code>fetch</code> API. Please see <a href="https:%5C/%5C/developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch">https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch</a> for details</p>',optional:true},{name:"options.queryParams",type:"Object",description:"<p>A key-value pair Object containing the params to add to the query string</p>",optional:true,isSubParam:true},{name:"options.headers",type:"Object",description:"<p>Any headers you want to add to your request, contained within a `Headers object or an object literal with ByteString values</p>",optional:true,isSubParam:true},{name:"options.body",type:"Object",description:"<p>Any body that you want to add to your request: this can be a Blob, BufferSource, FormData, URLSearchParams, or USVString object. Note that a request using the GET or HEAD method cannot have a body.</p>",optional:true,isSubParam:true},{name:"options.mode",type:"Object",description:"<p>The mode you want to use for the request, e.g., cors, no-cors, or same-origin.</p>",optional:true,isSubParam:true},{name:"options.credentials",type:"Object",description:"<p>The request credentials you want to use for the request: omit, same-origin, or include. To automatically send cookies for the current domain, this option must be provided</p>",optional:true,isSubParam:true},{name:"options.parseJson",type:"Object",description:"<p>Specify <code>true</code> to parses the response and attach the resulting object to the <code>Response</code> object as <code>parsedJson</code></p>",optional:true,isSubParam:true}],scope:"static",returns:{type:"Promise",description:"<p>The fetch Promise, which can be aborted by calling a special <code>abort</code> method</p>"},async:true},{name:"post",description:"<p>POST data to the specified URL.</p>",parameters:[{name:"url",type:"String",description:"<p>The URL</p>"},{name:"payload",type:["String","Object","FormData"],description:"<p>The data to post. If an object is supplied, it will be stringified</p>"},{name:"options",type:"Object",description:'<p>The options for the <code>fetch</code> API. Please see <a href="https:%5C/%5C/developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch">https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch</a> for details</p>'},{name:"options.queryParams",type:"Object",description:"<p>A key-value pair Object containing the params to add to the query string</p>",optional:true,isSubParam:true},{name:"options.headers",type:"Object",description:"<p>Any headers you want to add to your request, contained within a `Headers object or an object literal with ByteString values</p>",optional:true,isSubParam:true},{name:"options.body",type:"Object",description:"<p>Any body that you want to add to your request: this can be a Blob, BufferSource, FormData, URLSearchParams, or USVString object. Note that a request using the GET or HEAD method cannot have a body.</p>",optional:true,isSubParam:true},{name:"options.mode",type:"Object",description:"<p>The mode you want to use for the request, e.g., cors, no-cors, or same-origin.</p>",optional:true,isSubParam:true},{name:"options.credentials",type:"Object",description:"<p>The request credentials you want to use for the request: omit, same-origin, or include. To automatically send cookies for the current domain, this option must be provided</p>",optional:true,isSubParam:true},{name:"options.parseJson",type:"Object",description:"<p>Specify <code>true</code> to parses the response and attach the resulting object to the <code>Response</code> object as <code>parsedJson</code></p>",optional:true,isSubParam:true}],scope:"static",returns:{type:"Promise",description:"<p>The fetch Promise, which can be aborted by calling a special <code>abort</code> method</p>"},async:true},{name:"fetch",description:"<p>Fetch the specified resource using the <code>fetch</code> API.</p>",parameters:[{name:"url",type:"String",description:"<p>object to fetch</p>"},{name:"options",type:"Object",description:'<p>The options for the <code>fetch</code> API. Please see <a href="https:%5C/%5C/developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch">https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch</a> for details</p>'},{name:"options.method",type:"Object",description:"<p>The request method, e.g., GET, POST</p>",optional:true,isSubParam:true},{name:"options.queryParams",type:"Object",description:"<p>A key-value pair Object containing the params to add to the query string</p>",optional:true,isSubParam:true},{name:"options.headers",type:"Object",description:"<p>Any headers you want to add to your request, contained within a `Headers object or an object literal with ByteString values</p>",optional:true,isSubParam:true},{name:"options.body",type:"Object",description:"<p>Any body that you want to add to your request: this can be a Blob, BufferSource, FormData, URLSearchParams, or USVString object. Note that a request using the GET or HEAD method cannot have a body.</p>",optional:true,isSubParam:true},{name:"options.mode",type:"Object",description:"<p>The mode you want to use for the request, e.g., cors, no-cors, or same-origin.</p>",optional:true,isSubParam:true},{name:"options.credentials",type:"Object",description:"<p>The request credentials you want to use for the request: omit, same-origin, or include. To automatically send cookies for the current domain, this option must be provided</p>",optional:true,isSubParam:true},{name:"options.parseJson",type:"Object",description:"<p>Specify <code>true</code> to parses the response and attach the resulting object to the <code>Response</code> object as <code>parsedJson</code></p>",optional:true,isSubParam:true}],scope:"static",returns:{type:"Promise",description:"<p>The fetch Promise, which can be aborted by calling a special <code>abort</code> method</p>"},async:true},{name:"mockUrl",description:"<p>Registers the passed URL to return the passed mocked up Fetch Response object to the\nAjaxHelper's promise resolve function.</p>",parameters:[{name:"url",type:"String",description:"<p>The url to return mock data for</p>"},{name:"response",type:["Object","function"],description:"<p>A mocked up Fetch Response object which must contain\nat least a <code>responseText</code> property, or a function to which the <code>url</code> and a <code>params</code> object\nand the <code>Fetch</code> <code>options</code> object is passed which returns that.</p>"},{name:"response.responseText",type:"String",description:"<p>The data to return.</p>",isSubParam:true},{name:"response.synchronous",type:"Boolean",description:"<p>resolve the Promise immediately</p>",optional:true,isSubParam:true},{name:"response.delay",type:"Number",description:"<p>resolve the Promise after this number of milliseconds.</p>",default:100,optional:true,isSubParam:true}],scope:"static"}]},{name:"module:Core/helper/ArrayHelper",classDescription:"<p>Helper with useful functions for handling Arrays</p>",access:"internal",constructor:{name:"constructor"},filename:"ArrayHelper.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/helper",lineno:9,functions:[{name:"remove",description:"<p>Remove one or more items from an array</p>",parameters:[{name:"array",type:"Array",description:"<p>Array to remove from</p>"},{name:"items",type:"Object",description:"<p>One or more items to remove</p>",isRestParam:true}],scope:"static",returns:{type:"boolean",description:"<p>Returns true if any item was removed</p>"}},{name:"binarySearch",description:"<p>This method returns the index that a given item would be inserted into the\ngiven (sorted) <code>array</code>. Note that the given <code>item</code> may or may not be in the\narray. This method will return the index of where the item <em>should</em> be.</p>\n<p>For example:</p>\n<pre><code> var array = [ 'A', 'D', 'G', 'K', 'O', 'R', 'X' ];\n var index = ArrayHelper.binarySearch(array, 'E');\n\n console.log('index: ' + index);\n // logs &quot;index: 2&quot;\n\n array.splice(index, 0, 'E');\n\n console.log('array : ' + array.join(''));\n // logs &quot;array: ADEGKORX&quot;</code></pre>",parameters:[{name:"array",type:"Array.<Object>",description:"<p>The array to search.</p>"},{name:"item",type:"Object",description:"<p>The item that you want to insert into the <code>array</code>.</p>"},{name:"begin",type:"Number",description:"<p>The first index in the <code>array</code> to consider.</p>",default:0,optional:true},{name:"end",type:"Number",description:"<p>The index that marks the end of the range\nto consider. The item at this index is <em>not</em> considered.</p>",default:"array.length",optional:true},{name:"compareFn",type:"function",description:"<p>The comparison function that matches the sort\norder of the <code>array</code>. The default <code>compareFn</code> compares items using less-than\nand greater-than operators.</p>",optional:true}],scope:"static",returns:{type:"Number",description:"<p>The index for the given item in the given array based on\nthe passed <code>compareFn</code>.</p>"}},{name:"fill",description:"<p>Similar to Array.prototype.fill(), but constructs a new array with the specified item count and fills it with\nclones of the supplied item.</p>",parameters:[{name:"count",type:"Number",description:"<p>Number of entries to create</p>"},{name:"itemOrArray",type:["Object","Array"],description:"<p>Item or array of items to clone (uses object spread to create shallow clone)</p>"},{name:"fn",type:"function",description:"<p>An optional function that is called for each item added, to allow processing</p>",optional:true}],scope:"static",returns:{type:"Array",description:"<p>A new populated array</p>"}},{name:"populate",description:"<p>Populates an array with the return value from <code>fn</code>.</p>",parameters:[{name:"count",type:"Number",description:"<p>Number of entries to create</p>"},{name:"fn",type:"function",description:"<p>A function that is called <code>count</code> times, return value is added to array</p>"},{name:"fn.index",type:"Number",description:"<p>Current index in the array</p>",isSubParam:true}],scope:"static",returns:{type:"Array",description:"<p>A new populated array</p>"}},{name:"include",description:"<p>Pushes <code>item</code> on to the <code>array</code> if not already included</p>",parameters:[{name:"array",type:"Array",description:"<p>Array to push to</p>"},{name:"item",type:"Object",description:"<p>Item to push if not already included</p>"}],scope:"static"}]},{name:"module:Core/helper/BrowserHelper",classDescription:"<p>Static helper class that does browser/feature detection.</p>",access:"internal",constructor:{name:"constructor"},filename:"BrowserHelper.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/helper",lineno:9,functions:[{name:"getVersion",access:"private",description:"<p>Returns matched version for userAgent</p>",parameters:[{name:"String",description:"<p>versionRe version match regular expression</p>"}],scope:"static",returns:{type:"Number",description:"<p>matched version</p>"}},{name:"searchParam",description:"<p>Returns parameter value from search string by parameter name.</p>",parameters:[{name:"paramName",type:"String",description:"<p>search parameter name</p>"},{name:"defaultValue",type:"*",description:"<p>default value if parameter not found</p>",optional:true},{name:"search",type:"String",description:"<p>search string. Defaults to <code>document.location.search</code></p>",optional:true}],scope:"static"}],properties:[{name:"isTouchDevice",description:"<p>Tries to determine if the user is using a touch device</p>",scope:"static",returns:[{type:{names:["Boolean"]}}],readonly:true},{name:"isMac",description:"<p>Checks if platform is mac</p>",scope:"static",returns:[{type:{names:["Boolean"]}}],readonly:true},{name:"isWindows",description:"<p>Checks if platform is windows</p>",scope:"static",returns:[{type:{names:["Boolean"]}}],readonly:true},{name:"isLinux",description:"<p>Checks if platform is linux</p>",scope:"static",returns:[{type:{names:["Boolean"]}}],readonly:true},{name:"isIE11",description:"<p>Checks if browser is IE11</p>",scope:"static",returns:[{type:{names:["Boolean"]}}],readonly:true},{name:"isEdge",description:"<p>Checks if browser is Edge</p>",scope:"static",returns:[{type:{names:["Boolean"]}}],readonly:true},{name:"edgeVersion",description:"<p>Find the major Edge version</p>",scope:"static",returns:[{type:{names:["Number"]},description:"<p>Edge version or 0 for other browsers</p>"}],readonly:true},{name:"isWebkit",description:"<p>Checks if browser is Webkit</p>",scope:"static",returns:[{type:{names:["Boolean"]}}],readonly:true},{name:"isChrome",description:"<p>Checks if browser is Chrome</p>",scope:"static",returns:[{type:{names:["Boolean"]}}],readonly:true},{name:"chromeVersion",description:"<p>Find the major Chrome version</p>",scope:"static",returns:[{type:{names:["Number"]},description:"<p>Chrome version or 0 for other browsers</p>"}],readonly:true},{name:"isFirefox",description:"<p>Checks if browser is Firefox</p>",scope:"static",returns:[{type:{names:["Boolean"]}}],readonly:true},{name:"firefoxVersion",description:"<p>Find the major Firefox version.</p>",scope:"static",returns:[{type:{names:["Number"]},description:"<p>Firefox version or 0 for other browsers</p>"}],readonly:true},{name:"isSafari",description:"<p>Checks if browser is Safari</p>",scope:"static",returns:[{type:{names:["Boolean"]}}],readonly:true},{name:"isMobileSafari",description:"<p>Checks if browser is mobile Safari</p>",scope:"static",returns:[{type:{names:["Boolean"]}}],readonly:true},{name:"supportsPassive",description:"<p>Returns <code>true</code> if the browser supports passive event listeners.</p>",scope:"static"}]},{name:"module:Core/helper/CSSHelper",classDescription:'<p>Provides methods to add and manipulate CSS style rules.</p>\n<p>Note that this class is incompatible with <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP">CSP</a></p>\n<pre class="prettyprint source"><code>this.criticalRule = CSSHelper.insertRule(`#${this.id} .b-sch-event.critical {background-color:${this.criticalColor}}`);\n</code></pre>',constructor:{name:"constructor"},filename:"CSSHelper.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/helper",lineno:16,functions:[{name:"insertRule",description:"<p>Inserts a CSS style rule based upon the passed text</p>",parameters:[{name:"cssText",type:"String",description:"<p>The text of the rule including selector and rule body just as it would\nbe specified in a CSS file.</p>"}],scope:"static",returns:{type:"CSSRule",description:"<p>The resulting CSS Rule object if the add was successful.</p>"}},{name:"findRule",description:"<p>Looks up the first rule which matched the passed selector.</p>",parameters:[{name:"selector",type:["String","function"],description:"<p>Either the selector string to exactly match or a function which\nwhen passed a required selector, returns <code>true</code>.</p>"}],scope:"static",returns:{type:"CSSRule",description:"<p>The first matching CSS Rule object if any found.</p>"}}]},{name:"module:Core/helper/DateHelper",classDescription:"<p>Helps with date manipulation, comparison, parsing, formatting etc.</p>\n<h2>Parsing strings</h2>\n<p>Use <code>DateHelper.parse()</code> to parse strings into dates. It accepts a date string and a format specifier.\nThe format specifier is string built up using the following tokens:</p>\n<table>\n<thead>\n<tr>\n<th>Unit</th>\n<th>Token</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Year</td>\n<td>YYYY</td>\n<td>2018</td>\n</tr>\n<tr>\n<td></td>\n<td>YY</td>\n<td>&lt; 68 -&gt; 2000, &gt; 68 -&gt; 1900</td>\n</tr>\n<tr>\n<td>Month</td>\n<td>MM</td>\n<td>01 - 12</td>\n</tr>\n<tr>\n<td>Date</td>\n<td>DD</td>\n<td>01 - 31</td>\n</tr>\n<tr>\n<td>Hour</td>\n<td>HH</td>\n<td>00 - 23 or 1 - 12</td>\n</tr>\n<tr>\n<td>Minute</td>\n<td>mm</td>\n<td>00 - 59</td>\n</tr>\n<tr>\n<td>Second</td>\n<td>ss</td>\n<td>00 - 59</td>\n</tr>\n<tr>\n<td>Millisecond</td>\n<td>S</td>\n<td>0 - 9</td>\n</tr>\n<tr>\n<td></td>\n<td>SS</td>\n<td>00 - 99</td>\n</tr>\n<tr>\n<td></td>\n<td>SSS</td>\n<td>000 - 999</td>\n</tr>\n<tr>\n<td>AM/PM</td>\n<td>A</td>\n<td>AM or PM</td>\n</tr>\n<tr>\n<td></td>\n<td>a</td>\n<td>am or pm</td>\n</tr>\n<tr>\n<td>TimeZone</td>\n<td>Z</td>\n<td>Z for UTC or +-HH:mm</td>\n</tr>\n<tr>\n<td>Predefined</td>\n<td>L</td>\n<td>Long date, MM/DD/YYYY</td>\n</tr>\n<tr>\n<td></td>\n<td>LT</td>\n<td>Long time, HH:mm A</td>\n</tr>\n</tbody>\n</table>\n<p>Default parse format is: <code>'YYYY-MM-DDTHH:mm:ss.SSSZ'</code> see <a href=\"#Core/helper/DateHelper#property-defaultParseFormat-static\">defaultParseFormat</a></p>\n<p>For example:</p>\n<pre class=\"prettyprint source\"><code>DateHelper.parse('2018-11-06', 'YYYY-MM-DD');\nDateHelper.parse('13:14', 'HH:mm');\nDateHelper.parse('6/11/18', 'DD/MM/YY');\n</code></pre>\n<h2>Formatting dates</h2>\n<p>Use <code>DateHelper.format()</code> to create a string from a date using a format specifier. The format specifier is similar to\nthat used when parsing strings. It can use the following tokens (input used for output below is\n<code>new Date(2018,8,9,18,7,8,145)</code>):</p>\n<table>\n<thead>\n<tr>\n<th>Unit</th>\n<th>Token</th>\n<th>Description &amp; output</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Year</td>\n<td>YYYY</td>\n<td>2018</td>\n</tr>\n<tr>\n<td></td>\n<td>YY</td>\n<td>18</td>\n</tr>\n<tr>\n<td></td>\n<td>Y</td>\n<td>2018</td>\n</tr>\n<tr>\n<td>Quarter</td>\n<td>Q</td>\n<td>3</td>\n</tr>\n<tr>\n<td></td>\n<td>Qo</td>\n<td>3rd</td>\n</tr>\n<tr>\n<td>Month</td>\n<td>MMMM</td>\n<td>September</td>\n</tr>\n<tr>\n<td></td>\n<td>MMM</td>\n<td>Sep</td>\n</tr>\n<tr>\n<td></td>\n<td>MM</td>\n<td>09</td>\n</tr>\n<tr>\n<td></td>\n<td>Mo</td>\n<td>9th</td>\n</tr>\n<tr>\n<td></td>\n<td>M</td>\n<td>9</td>\n</tr>\n<tr>\n<td>Week (iso)</td>\n<td>WW</td>\n<td>36 (2 digit)</td>\n</tr>\n<tr>\n<td></td>\n<td>Wo</td>\n<td>36th</td>\n</tr>\n<tr>\n<td></td>\n<td>W</td>\n<td>36</td>\n</tr>\n<tr>\n<td>Date</td>\n<td>DDDD</td>\n<td>Day of year, 3 digits</td>\n</tr>\n<tr>\n<td></td>\n<td>DDDo</td>\n<td>Day of year, ordinal</td>\n</tr>\n<tr>\n<td></td>\n<td>DDD</td>\n<td>Day of year</td>\n</tr>\n<tr>\n<td></td>\n<td>DD</td>\n<td>09</td>\n</tr>\n<tr>\n<td></td>\n<td>Do</td>\n<td>9th</td>\n</tr>\n<tr>\n<td></td>\n<td>D</td>\n<td>9</td>\n</tr>\n<tr>\n<td>Weekday</td>\n<td>dddd</td>\n<td>Sunday</td>\n</tr>\n<tr>\n<td></td>\n<td>ddd</td>\n<td>Sun</td>\n</tr>\n<tr>\n<td></td>\n<td>dd</td>\n<td>Su</td>\n</tr>\n<tr>\n<td></td>\n<td>do</td>\n<td>0th</td>\n</tr>\n<tr>\n<td></td>\n<td>d</td>\n<td>0</td>\n</tr>\n<tr>\n<td>Hour</td>\n<td>HH</td>\n<td>18 (00 - 23)</td>\n</tr>\n<tr>\n<td></td>\n<td>H</td>\n<td>18 (0 - 23)</td>\n</tr>\n<tr>\n<td></td>\n<td>hh</td>\n<td>06 (00 - 12)</td>\n</tr>\n<tr>\n<td></td>\n<td>h</td>\n<td>6 (0 - 12)</td>\n</tr>\n<tr>\n<td></td>\n<td>KK</td>\n<td>19 (01 - 24)</td>\n</tr>\n<tr>\n<td></td>\n<td>K</td>\n<td>19 (1 - 24)</td>\n</tr>\n<tr>\n<td></td>\n<td>kk</td>\n<td>06 or 18, locale determines</td>\n</tr>\n<tr>\n<td></td>\n<td>k</td>\n<td>6 or 18, locale determines</td>\n</tr>\n<tr>\n<td>Minute</td>\n<td>mm</td>\n<td>07</td>\n</tr>\n<tr>\n<td></td>\n<td>m</td>\n<td>7</td>\n</tr>\n<tr>\n<td>Second</td>\n<td>ss</td>\n<td>08</td>\n</tr>\n<tr>\n<td></td>\n<td>s</td>\n<td>8</td>\n</tr>\n<tr>\n<td>Millisecond</td>\n<td>S</td>\n<td>1</td>\n</tr>\n<tr>\n<td></td>\n<td>SS</td>\n<td>14</td>\n</tr>\n<tr>\n<td></td>\n<td>SSS</td>\n<td>145</td>\n</tr>\n<tr>\n<td>AM/PM</td>\n<td>A</td>\n<td>AM or PM</td>\n</tr>\n<tr>\n<td></td>\n<td>a</td>\n<td>am or pm</td>\n</tr>\n<tr>\n<td>Predefined</td>\n<td>LT</td>\n<td>H: 2-digit (2d), m: 2d</td>\n</tr>\n<tr>\n<td>(uses browser locale)</td>\n<td>LTS</td>\n<td>H: 2d, m: 2d, s : 2d</td>\n</tr>\n<tr>\n<td></td>\n<td>L</td>\n<td>Y: numeric (n), M : 2d, D : 2d</td>\n</tr>\n<tr>\n<td></td>\n<td>l</td>\n<td>Y: n, M : n, D : n</td>\n</tr>\n<tr>\n<td></td>\n<td>LL</td>\n<td>Y: n, M : long (l), D : n</td>\n</tr>\n<tr>\n<td></td>\n<td>ll</td>\n<td>Y: n, M : short (s), D : n</td>\n</tr>\n<tr>\n<td></td>\n<td>LLL</td>\n<td>Y: n, M : l, D : n, H: n, m: 2d</td>\n</tr>\n<tr>\n<td></td>\n<td>lll</td>\n<td>Y: n, M : s, D : n, H: n, m: 2d</td>\n</tr>\n<tr>\n<td></td>\n<td>LLLL</td>\n<td>Y: n, M : l, D : n, H: n, m: 2d, d: l</td>\n</tr>\n<tr>\n<td></td>\n<td>llll</td>\n<td>Y: n, M : s, D : n, H: n, m: 2d, d: s</td>\n</tr>\n</tbody>\n</table>\n<p>Default format is: <code>'YYYY-MM-DDTHH:mm:ssZ'</code> see <a href=\"#Core/helper/DateHelper#property-defaultFormat-static\">defaultFormat</a></p>\n<p>For example:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>DateHelper.format(new Date(2018,10,6), 'YYYY-MM-DD'); // 2018-11-06\nDateHelper.format(new Date(2018,10,6), 'M/D/YY'); // 11/6/18\n</code></pre>\n<p>Arbitrary text can be embedded in the format string by wrapping it with {}:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>DateHelper.format(new Date(2019, 7, 16), '{It is }dddd{, yay!}') -> It is Friday, yay!\n</code></pre>\n<h2>Unit names</h2>\n<p>Many DateHelper functions (for example add, as, set) accepts a unit among their params. The following units are\navailable:</p>\n<table>\n<thead>\n<tr>\n<th>Unit</th>\n<th>Aliases</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>millisecond</td>\n<td>millisecond, milliseconds, ms</td>\n</tr>\n<tr>\n<td>second</td>\n<td>second, seconds, s</td>\n</tr>\n<tr>\n<td>minute</td>\n<td>minute, minutes, m</td>\n</tr>\n<tr>\n<td>hour</td>\n<td>hour, hours, h</td>\n</tr>\n<tr>\n<td>day</td>\n<td>day, days, d</td>\n</tr>\n<tr>\n<td>week</td>\n<td>week, weeks, w</td>\n</tr>\n<tr>\n<td>month</td>\n<td>month, months, M</td>\n</tr>\n<tr>\n<td>quarter</td>\n<td>quarter, quarters, q</td>\n</tr>\n<tr>\n<td>year</td>\n<td>year, years, y</td>\n</tr>\n</tbody>\n</table>\n<p>For example:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>DateHelper.add(date, 2, 'days');\nDateHelper.as('hour', 7200, 'seconds');\n</code></pre>",constructor:{name:"constructor"},filename:"DateHelper.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/helper",lineno:593,properties:[{name:"defaultFormat",description:"<p>Get/set the default format used by <code>format()</code> and <code>parse()</code>. Defaults to <code>'YYYY-MM-DDTHH:mm:ssZ'</code>\n(~ISO 8601 Date and time, <code>'1962-06-17T09:21:34Z'</code>).</p>",type:{names:["String"]},scope:"static"},{name:"defaultParseFormat",description:"<p>Get/set the default format used by <code>parse()</code>. Defaults to <code>'YYYY-MM-DDTHH:mm:ss.SSSZ'</code> or <a href=\"#Core/helper/DateHelper#property-defaultFormat-static\">defaultFormat</a>\n(~ISO 8601 Date and time, <code>'1962-06-17T09:21:34.123Z'</code>).</p>",type:{names:["String"]},scope:"static"},{name:"weekStartDay",description:"<p>Get the first day of week, 0-6 (Sunday-Saturday).\nThis is determined by the current locale's <code>DateHelper.weekStartDay</code> parameter.</p>",scope:"static",readonly:true}],functions:[{name:"parse",description:'<p>Returns a date created from the supplied string using the specified format. Will try to create even if format\nis left out, by first using the default format (see <a href="#Core/helper/DateHelper#property-defaultFormat-static">defaultFormat</a>, by default\n<code>YYYY-MM-DDTHH:mm:ssZ</code>) and then using <code>new Date(dateString)</code>.\nSupported tokens:</p>\n<table>\n<thead>\n<tr>\n<th>Unit</th>\n<th>Token</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Year</td>\n<td>YYYY</td>\n<td>2018</td>\n</tr>\n<tr>\n<td></td>\n<td>YY</td>\n<td>&lt; 68 -&gt; 2000, &gt; 68 -&gt; 1900</td>\n</tr>\n<tr>\n<td>Month</td>\n<td>MM</td>\n<td>01 - 12</td>\n</tr>\n<tr>\n<td>Date</td>\n<td>DD</td>\n<td>01 - 31</td>\n</tr>\n<tr>\n<td>Hour</td>\n<td>HH</td>\n<td>00 - 23 or 1 - 12</td>\n</tr>\n<tr>\n<td>Minute</td>\n<td>mm</td>\n<td>00 - 59</td>\n</tr>\n<tr>\n<td>Second</td>\n<td>ss</td>\n<td>00 - 59</td>\n</tr>\n<tr>\n<td>Millisecond</td>\n<td>S</td>\n<td>0 - 9</td>\n</tr>\n<tr>\n<td></td>\n<td>SS</td>\n<td>00 - 99</td>\n</tr>\n<tr>\n<td></td>\n<td>SSS</td>\n<td>000 - 999</td>\n</tr>\n<tr>\n<td>AM/PM</td>\n<td>A</td>\n<td>AM or PM</td>\n</tr>\n<tr>\n<td></td>\n<td>a</td>\n<td>am or pm</td>\n</tr>\n<tr>\n<td>TimeZone</td>\n<td>Z</td>\n<td>Z for UTC or +-HH:mm</td>\n</tr>\n<tr>\n<td>Predefined</td>\n<td>L</td>\n<td>Long date, MM/DD/YYYY</td>\n</tr>\n<tr>\n<td></td>\n<td>LT</td>\n<td>Long time, HH:mm A</td>\n</tr>\n</tbody>\n</table>\n<p>Predefined formats and functions used to parse tokens can be localized, see for example the swedish locale SvSE.js</p>\n<p>NOTE: If no date parameters are provided then <code>Jan 01 2020</code> is used as a default date</p>',parameters:[{name:"dateString",type:"String",description:"<p>Date string</p>"},{name:"format",type:"String",description:'<p>Date format (or <a href="#Core/helper/DateHelper#property-defaultParseFormat-static">defaultParseFormat</a> if left out)</p>'}],scope:"static",category:"Parse & format",returns:{type:"Date"}},{name:"create",description:"<p>Creates a date from a date definition object. The object can have the following properties:</p>\n<ul>\n<li>year</li>\n<li>month</li>\n<li>date (day in month)</li>\n<li>hours</li>\n<li>minutes</li>\n<li>seconds</li>\n<li>milliseconds</li>\n<li>amPm : 'am' or 'pm', implies 12 hour clock</li>\n<li>timeZone : offset from UTC in minutes</li>\n</ul>",parameters:[{name:"definition",type:"Object"}],scope:"static",category:"Parse & format",returns:{type:"Date"}},{name:"format",description:"<p>Converts a date to string with the specified format. Formats heavily inspired by https://momentjs.com.\nAvailable formats (input used for output below is <code>new Date(2018,8,9,18,7,8,145)</code>):</p>\n<table>\n<thead>\n<tr>\n<th>Unit</th>\n<th>Token</th>\n<th>Description &amp; output</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Year</td>\n<td>YYYY</td>\n<td>2018</td>\n</tr>\n<tr>\n<td></td>\n<td>YY</td>\n<td>18</td>\n</tr>\n<tr>\n<td></td>\n<td>Y</td>\n<td>2018</td>\n</tr>\n<tr>\n<td>Quarter</td>\n<td>Q</td>\n<td>3</td>\n</tr>\n<tr>\n<td></td>\n<td>Qo</td>\n<td>3rd</td>\n</tr>\n<tr>\n<td>Month</td>\n<td>MMMM</td>\n<td>September</td>\n</tr>\n<tr>\n<td></td>\n<td>MMM</td>\n<td>Sep</td>\n</tr>\n<tr>\n<td></td>\n<td>MM</td>\n<td>09</td>\n</tr>\n<tr>\n<td></td>\n<td>Mo</td>\n<td>9th</td>\n</tr>\n<tr>\n<td></td>\n<td>M</td>\n<td>9</td>\n</tr>\n<tr>\n<td>Week (iso)</td>\n<td>WW</td>\n<td>36 (2 digit)</td>\n</tr>\n<tr>\n<td></td>\n<td>Wo</td>\n<td>36th</td>\n</tr>\n<tr>\n<td></td>\n<td>W</td>\n<td>36</td>\n</tr>\n<tr>\n<td>Date</td>\n<td>DDDD</td>\n<td>Day of year, 3 digits</td>\n</tr>\n<tr>\n<td></td>\n<td>DDDo</td>\n<td>Day of year, ordinal</td>\n</tr>\n<tr>\n<td></td>\n<td>DDD</td>\n<td>Day of year</td>\n</tr>\n<tr>\n<td></td>\n<td>DD</td>\n<td>09</td>\n</tr>\n<tr>\n<td></td>\n<td>Do</td>\n<td>9th</td>\n</tr>\n<tr>\n<td></td>\n<td>D</td>\n<td>9</td>\n</tr>\n<tr>\n<td>Weekday</td>\n<td>dddd</td>\n<td>Sunday</td>\n</tr>\n<tr>\n<td></td>\n<td>ddd</td>\n<td>Sun</td>\n</tr>\n<tr>\n<td></td>\n<td>dd</td>\n<td>Su</td>\n</tr>\n<tr>\n<td></td>\n<td>do</td>\n<td>0th</td>\n</tr>\n<tr>\n<td></td>\n<td>d</td>\n<td>0</td>\n</tr>\n<tr>\n<td>Hour</td>\n<td>HH</td>\n<td>18 (00 - 23)</td>\n</tr>\n<tr>\n<td></td>\n<td>H</td>\n<td>18 (0 - 23)</td>\n</tr>\n<tr>\n<td></td>\n<td>hh</td>\n<td>06 (00 - 12)</td>\n</tr>\n<tr>\n<td></td>\n<td>h</td>\n<td>6 (0 - 12)</td>\n</tr>\n<tr>\n<td></td>\n<td>KK</td>\n<td>19 (01 - 24)</td>\n</tr>\n<tr>\n<td></td>\n<td>K</td>\n<td>19 (1 - 24)</td>\n</tr>\n<tr>\n<td></td>\n<td>kk</td>\n<td>06 or 18, locale determines</td>\n</tr>\n<tr>\n<td></td>\n<td>k</td>\n<td>6 or 18, locale determines</td>\n</tr>\n<tr>\n<td>Minute</td>\n<td>mm</td>\n<td>07</td>\n</tr>\n<tr>\n<td></td>\n<td>m</td>\n<td>7</td>\n</tr>\n<tr>\n<td>Second</td>\n<td>ss</td>\n<td>08</td>\n</tr>\n<tr>\n<td></td>\n<td>s</td>\n<td>8</td>\n</tr>\n<tr>\n<td>Millisecond</td>\n<td>S</td>\n<td>1</td>\n</tr>\n<tr>\n<td></td>\n<td>SS</td>\n<td>14</td>\n</tr>\n<tr>\n<td></td>\n<td>SSS</td>\n<td>145</td>\n</tr>\n<tr>\n<td>AM/PM</td>\n<td>A</td>\n<td>AM or PM</td>\n</tr>\n<tr>\n<td></td>\n<td>a</td>\n<td>am or pm</td>\n</tr>\n<tr>\n<td>Predefined</td>\n<td>LT</td>\n<td>H: 2-digit (2d), m: 2d</td>\n</tr>\n<tr>\n<td>(uses browser locale)</td>\n<td>LTS</td>\n<td>H: 2d, m: 2d, s : 2d</td>\n</tr>\n<tr>\n<td></td>\n<td>L</td>\n<td>Y: numeric (n), M : 2d, D : 2d</td>\n</tr>\n<tr>\n<td></td>\n<td>l</td>\n<td>Y: n, M : n, D : n</td>\n</tr>\n<tr>\n<td></td>\n<td>LL</td>\n<td>Y: n, M : long (l), D : n</td>\n</tr>\n<tr>\n<td></td>\n<td>ll</td>\n<td>Y: n, M : short (s), D : n</td>\n</tr>\n<tr>\n<td></td>\n<td>LLL</td>\n<td>Y: n, M : l, D : n, H: n, m: 2d</td>\n</tr>\n<tr>\n<td></td>\n<td>lll</td>\n<td>Y: n, M : s, D : n, H: n, m: 2d</td>\n</tr>\n<tr>\n<td></td>\n<td>LLLL</td>\n<td>Y: n, M : l, D : n, H: n, m: 2d, d: l</td>\n</tr>\n<tr>\n<td></td>\n<td>llll</td>\n<td>Y: n, M : s, D : n, H: n, m: 2d, d: s</td>\n</tr>\n</tbody>\n</table>\n<p>Some examples:</p>\n<pre class=\"prettyprint source\"><code>DateHelper.format(new Date(2019, 7, 16), 'dddd') -> Friday\nDateHelper.format(new Date(2019, 7, 16, 14, 27), 'HH:mm') --\x3e 14:27\nDateHelper.format(new Date(2019, 7, 16, 14, 27), 'L HH') --\x3e 2019-07-16 14\n</code></pre>\n<p>Arbitrary text can be embedded in the format string by wrapping it with {}:</p>\n<pre class=\"prettyprint source\"><code>DateHelper.format(new Date(2019, 7, 16), '{It is }dddd{, yay!}') -> It is Friday, yay!\n</code></pre>",parameters:[{name:"date",type:"Date",description:"<p>Date</p>"},{name:"format",type:"String",description:"<p>Desired format (uses <code>defaultFormat</code> if left out)</p>"}],scope:"static",category:"Parse & format",returns:{type:"String",description:"<p>Formatted string</p>"}},{name:"asMilliseconds",description:"<p>Converts the specified amount of desired unit into milliseconds. Can be called by only specifying a unit as the\nfirst argument, it then uses amount = 1. For example: asMilliseconds('hour') == asMilliseconds(1, 'hour')</p>",parameters:[{name:"amount",type:["Number","String"],description:"<p>Amount, what of is decided by specifying unit (also takes a unit which implies an amount of 1)</p>"},{name:"unit",type:"String",description:"<p>Time unit (s, hour, months etc.)</p>"}],scope:"static",category:"Parse & format",returns:{type:"Number"}},{name:"formatDelta",description:"<p>Converts a millisecond time delta to a human readable form. For example <code>1000 * 60 * 60 * 50</code>\nmilliseconds would be rendered as &quot;2 days, 2 hours&quot;</p>",parameters:[{name:"delta",type:"Number",description:"<p>The millisecond delta value.</p>"},{name:"abbrev",type:"Boolean",description:"<p>Pass <code>true</code> to use abbreviated unit names, eg &quot;2d, 2h&quot; for the above example.</p>",default:false,optional:true}],scope:"static",category:"Parse & format"},{name:"as",description:"<p>Converts the specified amount of one unit (fromUnit) into an amount of another unit (toUnit)</p>",parameters:[{name:"toUnit"},{name:"amount"},{name:"fromUnit",default:"ms"}],scope:"static",category:"Parse & format",returns:{type:"Number"}},{name:"is24HourFormat",description:"<p>Returns true for 24 hour format.</p>",parameters:[{name:"format",type:"String",description:"<p>Date format</p>"}],scope:"static",category:"Parse & format",returns:{type:"Boolean"}},{name:"add",description:"<p>Add days, hours etc. to a date. Always clones the date, original will be left unaffected.</p>",parameters:[{name:"date",type:"Date",description:"<p>Original date</p>"},{name:"amount",type:"Number",description:"<p>Amount of days, hours etc</p>"},{name:"unit",type:"String",description:"<p>Unit for amount</p>",default:"ms"}],scope:"static",category:"Manipulate",returns:{type:"Date",description:"<p>New calculated date</p>"}},{name:"diff",description:"<p>Calculates the difference between two dates, in the specified unit.</p>",parameters:[{name:"start",type:"Date",description:"<p>First date</p>"},{name:"end",type:"Date",description:"<p>Second date</p>"},{name:"unit",type:"String",description:"<p>Unit to calculate difference in</p>",default:"ms"},{name:"fractional",type:"Boolean",description:"<p>Specify false to round result</p>",default:true}],scope:"static",category:"Manipulate",returns:{type:"Number",description:"<p>Difference in the specified unit</p>"}},{name:"startOf",description:"<p>Sets the date to the start of the specified unit, by default returning a clone of the date instead of changing it\ninplace.</p>",parameters:[{name:"date",type:"Date",description:"<p>Original date</p>"},{name:"unit",type:"String",description:"<p>Start of this unit, 'day', 'month' etc.</p>",default:"day"},{name:"clone",type:"Boolean",description:"<p>Manipulate a copy of the date</p>",default:true}],scope:"static",category:"Manipulate",returns:{type:"Date",description:"<p>Manipulated date</p>"}},{name:"clone",description:"<p>Creates a clone of the specified date</p>",parameters:[{name:"date",type:"Date",description:"<p>Original date</p>"}],scope:"static",category:"Manipulate",returns:{type:"Date",description:"<p>Cloned date</p>"}},{name:"clearTime",description:"<p>Removes time from a date (same as calling #startOf(date, 'day'))</p>",parameters:[{name:"date",type:"Date",description:"<p>Date to remove time from</p>"},{name:"clone",type:"Boolean",description:"<p>Manipulate a copy of the date</p>",default:true}],scope:"static",category:"Manipulate",returns:{type:"Date",description:"<p>Manipulated date</p>"}},{name:"set",description:"<p>Sets a part of a date (in place)</p>",parameters:[{name:"date",type:"Date",description:"<p>Date to manipulate</p>"},{name:"unit",type:["String","Object"],description:"<p>Part of date to set, for example 'minute'. Or an object like { second: 1, minute: 1 }</p>"},{name:"amount",type:"Number",description:"<p>Value to set</p>"}],scope:"static",category:"Manipulate",returns:{type:"Date",description:"<p>Modified date</p>"}},{name:"constrain",description:"<p>Constrains the date within a min and a max date</p>",parameters:[{name:"date",type:"Date",description:"<p>The date to constrain</p>"},{name:"min",type:"Date",description:"<p>Min date</p>",optional:true},{name:"max",type:"Date",description:"<p>Max date</p>",optional:true}],scope:"static",category:"Manipulate",returns:{type:"Date",description:"<p>The constrained date</p>"}},{name:"getTime",description:"<p>Returns time with default year, month, and day (Jan 1, 2020)</p>",parameters:[{name:"hours",type:["Number","Date"],description:"<p>Hours value or the full date to extract the time of.</p>"},{name:"minutes",type:"Number",description:"<p>Minutes value</p>",default:0},{name:"seconds",type:"Number",description:"<p>Seconds value</p>",default:0},{name:"ms",type:"Number",description:"<p>Milliseconds value</p>",default:0}],scope:"static",category:"Manipulate",returns:{type:"Date",description:"<p>A new default date with the time extracted from the given date or from the time values provided individually.</p>"}},{name:"copyTimeValues",description:"<p>Copies hours, minutes, seconds, milliseconds from one date to another</p>",parameters:[{name:"targetDate",type:"Date",description:"<p>The target date</p>"},{name:"sourceDate",type:"Date",description:"<p>The source date</p>"}],scope:"static",category:"Manipulate",returns:{type:"Date",description:"<p>The adjusted target date</p>"}},{name:"isBefore",description:"<p>Determines if a date precedes another.</p>",parameters:[{name:"first",description:"<p>First date</p>"},{name:"second",description:"<p>Second date</p>"}],scope:"static",category:"Comparison",returns:{type:"Boolean",description:"<p>true if first precedes second, otherwise false</p>"}},{name:"isAfter",description:"<p>Determines if a date succeeds another.</p>",parameters:[{name:"first",description:"<p>First date</p>"},{name:"second",description:"<p>Second date</p>"}],scope:"static",category:"Comparison",returns:{type:"Boolean",description:"<p>true if first succeeds second, otherwise false</p>"}},{name:"isEqual",description:"<p>Checks if two dates are equal.</p>",parameters:[{name:"first",description:"<p>First date</p>"},{name:"second",description:"<p>Second date</p>"},{name:"unit",description:"<p>If not given, the comparison will be done up to a millisecond</p>"}],scope:"static",category:"Comparison",returns:{type:"Boolean",description:"<p>true if the dates are equal</p>"}},{name:"compare",description:"<p>Compares two dates using the specified precision</p>",parameters:[{name:"first",type:"Date"},{name:"second",type:"Date"},{name:"unit",type:"String"}],scope:"static",category:"Comparison",returns:{type:"Number",description:"<p>0 = equal, -1 first before second, 1 first after second</p>"}},{name:"isStartOf",description:"<p>Checks if date is the start of specified unit</p>",parameters:[{name:"date",type:"Date"},{name:"unit",type:"String"}],scope:"static",category:"Comparison",returns:{type:"Boolean"}},{name:"betweenLesser",description:"<p>Checks if this date is &gt;= start and &lt; end.</p>",parameters:[{name:"date",type:"Date",description:"<p>The source date</p>"},{name:"start",type:"Date",description:"<p>Start date</p>"},{name:"end",type:"Date",description:"<p>End date</p>"}],scope:"static",category:"Comparison",returns:{type:"Boolean",description:"<p>true if this date falls on or between the given start and end dates.</p>"}},{name:"betweenLesserEqual",description:"<p>Checks if this date is &gt;= start and &lt;= end.</p>",parameters:[{name:"date",type:"Date",description:"<p>The source date</p>"},{name:"start",type:"Date",description:"<p>Start date</p>"},{name:"end",type:"Date",description:"<p>End date</p>"}],scope:"static",category:"Comparison",returns:{type:"Boolean",description:"<p>true if this date falls on or between the given start and end dates.</p>"}},{name:"intersectSpans",description:"<p>Returns true if dates intersect</p>",parameters:[{name:"date1Start",type:"Date"},{name:"date1End",type:"Date"},{name:"date2Start",type:"Date"},{name:"date2End",type:"Date"}],scope:"static",category:"Comparison",returns:{type:"Boolean",description:"<p>Returns true if dates intersect</p>"}},{name:"compareUnits",description:"<p>Returns 1 if first param is a greater unit than second param, -1 if the opposite is true or 0 if they're equal</p>",parameters:[{name:"unit1",type:"String",description:"<p>The 1st unit</p>"},{name:"unit2",type:"String",description:"<p>The 2nd unit</p>"}],scope:"static",category:"Comparison"},{name:"timeSpanContains",description:"<p>Returns true if the first time span completely 'covers' the second time span.</p>",parameters:[{name:"spanStart",type:"Date",description:"<p>The start date for initial time span</p>"},{name:"spanEnd",type:"Date",description:"<p>The end date for initial time span</p>"},{name:"otherSpanStart",type:"Date",description:"<p>The start date for the 2nd time span</p>"},{name:"otherSpanEnd",type:"Date",description:"<p>The end date for the 2nd time span</p>"}],examples:["DateHelper.timeSpanContains(new Date(2010, 1, 2), new Date(2010, 1, 5), new Date(2010, 1, 3), new Date(2010, 1, 4)) ==> true\nDateHelper.timeSpanContains(new Date(2010, 1, 2), new Date(2010, 1, 5), new Date(2010, 1, 3), new Date(2010, 1, 6)) ==> false"],scope:"static",category:"Comparison",returns:{type:"Boolean"}},{name:"get",description:"<p>Get the specified part of a date</p>",parameters:[{name:"date",type:"Date"},{name:"unit",type:"String",description:"<p>Part of date, hour, minute etc.</p>"}],scope:"static",category:"Query"},{name:"daysInMonth",description:"<p>Get number of days in the current month for the supplied date</p>",parameters:[{name:"date",type:"Date",description:"<p>Date which month should be checked</p>"}],scope:"static",category:"Query",returns:{type:"Number",description:"<p>Days in month</p>"}},{name:"getFirstDateOfMonth",description:"<p>Get the first date of the month for the supplied date</p>",parameters:[{name:"date",type:"Date"}],scope:"static",category:"Query",returns:{type:"Date"}},{name:"getLastDateOfMonth",description:"<p>Get the last date of the month for the supplied date</p>",parameters:[{name:"date",type:"Date"}],scope:"static",category:"Query",returns:{type:"Date"}},{name:"min",description:"<p>Get the earliest of two dates</p>",parameters:[{name:"first",type:"Date"},{name:"second",type:"Date"}],scope:"static",category:"Query",returns:{type:"Date",description:"<p>Earliest date</p>"}},{name:"max",description:"<p>Get the latest of two dates</p>",parameters:[{name:"first",type:"Date"},{name:"second",type:"Date"}],scope:"static",category:"Query",returns:{type:"Date",description:"<p>Latest date</p>"}},{name:"getNext",description:"<p>Get an incremented date. Incrementation based on specified unit and optional amount</p>",parameters:[{name:"date",type:"Date"},{name:"unit",type:"String"},{name:"increment",type:"Number",default:1,optional:true},{name:"weekStartDay",type:"Number",description:"<p>Will default to what is set in locale</p>",optional:true}],scope:"static",category:"Query",returns:{type:"Date"}},{name:"isValidDate",description:"<p>Checks if date object is valid.</p>\n<p>For example:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>date = new Date('foo')\ndate instanceof Date // true\ndate.toString() // &quot;Invalid Date&quot;\nisNaN(date) // true\nDateHelper.isValidDate(date) // false\n\ndate = new Date()\ndate instanceof Date // true\ndate.toString() // &quot;Mon Jan 13 2020 18:27:38 GMT+0300 (GMT+03:00)&quot;\nisNaN(date) // false\nDateHelper.isValidDate(date) // true\n</code></pre>",parameters:[{name:"date"}],scope:"static",returns:{type:"boolean"}},{name:"isDate",description:"<p>Checks if value is a date object. Allows to recognize date object even from another context,\nlike the top frame when used in an iframe.</p>",parameters:[{name:"value"}],scope:"static",returns:{type:"boolean"}},{name:"getStartOfNextDay",description:"<p>Get the start of the next day</p>",parameters:[{name:"date",type:"Date"},{name:"clone",type:"Boolean"},{name:"noNeedToClearTime",type:"Boolean"}],scope:"static",category:"Query",returns:{type:"Date"}},{name:"getEndOfPreviousDay",description:"<p>Get the end of previous day</p>",parameters:[{name:"date",type:"Date"},{name:"noNeedToClearTime",type:"Boolean"}],scope:"static",category:"Query",returns:{type:"Date"}},{name:"getWeekNumber",description:"<p>Get week number for the date.</p>",parameters:[{name:"date",type:"Date",description:"<p>date</p>"},{name:"weekStartDay",type:"Number",description:'<p>first day of week, 0-6 (Sunday-Saturday). Defaults to the <a href="#Core/helper/DateHelper#property-weekStartDay-static">weekStartDay</a>.</p>'}],scope:"static",category:"Query",returns:{type:"Array.<Number>",description:"<p>year and week number</p>"}},{name:"formatCount",description:"<p>Turns (10, 'day') into '10 days' etc.</p>",parameters:[{name:"count",type:"Number",description:"<p>Amount of unit</p>"},{name:"unit",type:"String",description:"<p>Unit, will be normalizes (days, d -&gt; day etc.)</p>"}],scope:"static",category:"Unit helpers",returns:{type:"String"}},{name:"getUnitToBaseUnitRatio",description:"<p>Get the ratio between two units ( year, month -&gt; 1/12 )</p>",parameters:[{name:"baseUnit",type:"String"},{name:"unit",type:"String"},{name:"acceptEstimate",type:"Boolean",description:"<p>If true, process negative values of validConversions. Defaults to false.</p>",default:false}],scope:"static",category:"Unit helpers",returns:{type:"Number",description:"<p>Ratio</p>"}},{name:"getMeasuringUnit",description:"<p>Get unit suitable to use in calculations (?)</p>",parameters:[{name:"unit"}],scope:"static",category:"Unit helpers",returns:{type:"*"}},{name:"getShortNameOfUnit",description:"<p>Returns a localized abbreviated form of the name of the duration unit.\nFor example in the <code>EN</code> locale, for <code>&quot;qrt&quot;</code> it will return <code>&quot;q&quot;</code>.</p>",parameters:[{name:"unit",type:"String",description:"<p>Duration unit</p>"}],scope:"static",category:"Unit helpers",returns:{type:"String"}},{name:"getLocalizedNameOfUnit",description:"<p>Returns a localized full name of the duration unit.\nFor for example in the <code>EN</code> locale, for <code>&quot;d&quot;</code> it will return either\n<code>&quot;day&quot;</code> or <code>&quot;days&quot;</code>, depending from the <code>plural</code> argument</p>",parameters:[{name:"unit",type:"String",description:"<p>Time unit</p>"},{name:"plural",type:"Boolean",description:"<p>Whether to return a plural name or singular</p>"}],scope:"static",category:"Unit helpers",returns:{type:"String"}},{name:"normalizeUnit",description:"<p>Normalizes a unit for easier usage in conditionals. For example year, years, y -&gt; year</p>",parameters:[{name:"unit",type:"String"}],scope:"static",category:"Unit helpers",returns:{type:"String"}},{name:"getDurationInUnit",description:"<p>Returns a duration of the timeframe in the given unit.</p>",parameters:[{name:"start",type:"Date",description:"<p>The start date of the timeframe</p>"},{name:"end",type:"Date",description:"<p>The end date of the timeframe</p>"},{name:"unit",type:"String",description:"<p>Duration unit</p>"}],scope:"static",category:"Unit helpers",returns:{type:"Number",description:"<p>The duration in the units</p>"}},{name:"doesUnitsAlign",access:"private",description:"<p>Checks if two date units align</p>",parameters:[{name:"majorUnit",type:"String"},{name:"minorUnit",type:"String"}],scope:"static",category:"Unit helpers",returns:{type:"Boolean"}},{name:"parseDuration",description:"<p>Parses a typed duration value according to locale rules.</p>\n<p>The value is taken to be a string consisting of the numeric magnitude and the units.\nThe units may be a recognised unit abbreviation of this locale or the full local unit name.</p>\n<p>For example: &quot;2d&quot;, &quot;2 d&quot;, &quot;2 day&quot;, &quot;2 days&quot; will be turned into <code>{ magnitude : 2, unit : &quot;day&quot; }</code></p>\n<p><strong>NOTE:</strong> Doesn't work with complex values like &quot;2 days, 2 hours&quot;</p>",parameters:[{name:"value",type:"String",description:"<p>The value to parse.</p>"},{name:"allowDecimals",type:"Boolean",description:"<p>Decimals are allowed in the magnitude.</p>",default:true,optional:true},{name:"defaultUnit",type:"String",description:"<p>Default unit to use if only magnitude passed.</p>",optional:true}],scope:"static",category:"Parse & format",returns:{type:"Object",description:"<p>If successfully parsed, the result contains two properties,\n<code>magnitude</code> being a number, and <code>unit</code> being the canonical unit name, <em>NOT</em>\na localized name. If parsing was unsuccessful, <code>null</code> is returned.</p>"}},{name:"parseTimeUnit",description:'<p>Parses a typed unit name, for example <code>&quot;ms&quot;</code> or <code>&quot;hr&quot;</code> or <code>&quot;yr&quot;</code> into the\ncanonical form of the unit name which may be passed to <a href="#Core/helper/DateHelper#function-add-static">add</a>\nor <a href="#Core/helper/DateHelper#function-diff-static">diff</a></p>',parameters:[{name:"unitName",type:"*"}],scope:"static",category:"Parse & format"}]},{name:"module:Core/helper/DomHelper",classDescription:"<p>Helps with dom querying and manipulation.</p>\n<pre class=\"prettyprint source\"><code>DomHelper.createElement({\n  tag: 'div',\n  className: 'parent',\n  style: 'background: red',\n  children: [\n     { tag: 'div', className: 'child' },\n     { tag: 'div', className: 'child' }\n  ]\n});\n</code></pre>",constructor:{name:"constructor"},filename:"DomHelper.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/helper",lineno:149,functions:[{name:"isFocusable",description:"<p>Returns <code>true</code> if the passed element is focusable either programatically or through pointer gestures.</p>",parameters:[{name:"element",type:"HTMLElement",description:"<p>The element to test.</p>"}],scope:"static"},{name:"isInView",description:"<p>Returns <code>true</code> if the passed element is currently visible in the browser viewport, i.e. user can find it on screen</p>",parameters:[{name:"element",type:"HTMLElement",description:"<p>The element to test.</p>"},{name:"whole",type:"Boolean",description:"<p>Whether to check that whole element is visible, not just part of it.</p>"}],scope:"static"},{name:"isVisible",description:"<p>Returns <code>true</code> if the passed element is deeply visible. Meaning it is not hidden using <code>display</code>\nor <code>visibility</code> and no ancestor node is hidden.</p>",parameters:[{name:"element",type:"HTMLElement",description:"<p>The element to test.</p>"}],scope:"static",returns:{type:"Boolean",description:"<p><code>true</code> if deeply visible.</p>"}},{name:"isCustomElement",description:"<p>Returns true if element has opened shadow root</p>",parameters:[{name:"element",type:"HTMLElement",description:"<p>Element to check</p>"}],scope:"static",returns:{type:"Boolean"}},{name:"elementFromPoint",description:"<p>Resolves element from point, checking shadow DOM if requried</p>",parameters:[{name:"x",type:"Number"},{name:"y",type:"Number"}],scope:"static",returns:{type:"HTMLElement"}},{name:"getId",description:"<p>Returns the <code>id</code> of the passed element. Generates a unique <code>id</code> if the element does not have one.</p>",parameters:[{name:"element",type:"HTMLElement",description:"<p>The element to return the <code>id</code> of.</p>"}],scope:"static"},{name:"getElement",access:"private",description:"<p>Internal convenience fn to allow specifying either an element or a CSS selector to retrieve one</p>",parameters:[{name:"elementOrSelector",type:["String","HTMLElement"],description:"<p>element or selector to lookup in DOM</p>"}],scope:"static",returns:{type:"HTMLElement"}},{name:"setAttributes",access:"private",description:"<p>Sets attributes passed as object to given element</p>",parameters:[{name:"elementOrSelector",type:["String","Element"]},{name:"attributes",type:"Object"}],scope:"static"},{name:"setLength",description:'<p>Sets a CSS <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/length">length</a> style value.</p>',parameters:[{name:"element",type:["String","HTMLElement"],description:"<p>The element to set the style in, or, if just the result is required,\nthe style magnitude to return with units added.</p>"},{name:"style",type:"String",description:'<p>The name of a style property which specifies a <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/length">length</a></p>',optional:true},{name:"value",type:["Number","String"],description:"<p>The magnitude. If a number is used, the value will be set in <code>px</code> units.</p>",optional:true}],scope:"static",returns:{type:"String",description:"<p>The style value string.</p>"}},{name:"getChild",description:"<p>Gets the first direct child of <code>element</code> that matches `selector.</p>",parameters:[{name:"element",type:"HTMLElement",description:"<p>Parent element</p>"},{name:"selector",type:"String",description:"<p>CSS selector</p>"}],scope:"static",category:"Query children",returns:{type:"HTMLElement"}},{name:"hasChild",description:"<p>Checks if <code>element</code> has any child that matches <code>selector</code>.</p>",parameters:[{name:"element",type:"HTMLElement",description:"<p>Parent element</p>"},{name:"selector",type:"String",description:"<p>CSS selector</p>"}],scope:"static",category:"Query children",returns:{type:"Boolean",description:"<p>true if any child matches selector</p>"}},{name:"children",description:"<p>Returns all child elements (not necessarily direct children) that matches `selector.</p>",parameters:[{name:"element",type:"HTMLElement",description:"<p>Parent element</p>"},{name:"selector",type:"String",description:"<p>CSS selector</p>"}],scope:"static",category:"Query children",returns:{type:"Array.<HTMLElement>",description:"<p>Matched elements, somewhere below `element</p>"}},{name:"down",description:"<p>Looks at the specified <code>element</code> and all of its children for the one that first matches `selector.</p>",parameters:[{name:"element",type:"HTMLElement",description:"<p>Parent element</p>"},{name:"selector",type:"String",description:"<p>CSS selector</p>"}],scope:"static",category:"Query children",returns:{type:"HTMLElement",description:"<p>Matched element, either element or an element below it</p>"}},{name:"isDescendant",description:"<p>Checks if childElement is a descendant of parentElement (contained in it or a sub element)</p>",parameters:[{name:"parentElement",type:"HTMLElement",description:"<p>Parent element</p>"},{name:"childElement",type:"HTMLElement",description:"<p>Child element, at any level below parent</p>"}],scope:"static",category:"Query children",returns:{type:"Boolean"}},{name:"forEachSelector",description:"<p>Iterates over each result returned from <code>element.querySelectorAll(selector)</code>. First turns it into an array to\nwork in IE. Can also be called with only two arguments, in which case the first argument is used as selector and\ndocument is used as the element.</p>",parameters:[{name:"element",type:"HTMLElement",description:"<p>Parent element</p>"},{name:"selector",type:"String",description:"<p>CSS selector</p>"},{name:"fn",type:"function",description:"<p>Function called for each found element</p>"}],scope:"static",category:"Query children"},{name:"forEachChild",description:"<p>Iterates over the direct child elements of the specified element. First turns it into an array to\nwork in IE.</p>",parameters:[{name:"element",type:"HTMLElement",description:"<p>Parent element</p>"},{name:"fn",type:"function",description:"<p>Function called for each child element</p>"}],scope:"static",category:"Query children"},{name:"removeEachSelector",description:"<p>Removes each element returned from <code>element.querySelectorAll(selector)</code>.</p>",parameters:[{name:"element",type:"HTMLElement"},{name:"selector",type:"String"}],scope:"static",category:"Query children"},{name:"up",description:"<p>Looks at the specified element and all of its parents for the one that first matches selector.</p>",parameters:[{name:"element",type:"HTMLElement",description:"<p>Element</p>"},{name:"selector",type:"String",description:"<p>CSS selector</p>"}],scope:"static",category:"Query parents",returns:{type:"HTMLElement",description:"<p>Matched element, either the passed in element or an element above it</p>"}},{name:"getParents",description:"<p>Retrieves all parents to the specified element.</p>",parameters:[{name:"element",type:"HTMLElement",description:"<p>Element</p>"}],scope:"static",category:"Query parents",returns:{type:"Array.<HTMLElement>",description:"<p>All parent elements, bottom up</p>"}},{name:"makeValidId",description:"<p>Converts the passed id to an id valid for usage as id on a DOM element.</p>",parameters:[{name:"id",type:"String"}],scope:"static",returns:{type:"String"}},{name:"createElement",description:"<p>Creates an Element. Example usage:</p>",parameters:[{name:"config",type:"Object",description:"<p>Element config, as in example</p>"},{name:"returnAll",type:"Boolean",description:"<p>Specify true to return all elements &amp; child elements created as an array</p>",default:false}],examples:["DomHelper.createElement({\n  tag         : 'table', // defaults to 'div'\n  cellSpacing : 0,\n  className   : 'nacho',\n  html        : 'I am a nacho',\n  children    : [ { tag: 'tr', ... }, myDomElement ],\n  parent      : myExistingElement // Or its id\n  style       : 'font-weight: bold;color: red',\n  dataset     : { index: 0, size: 10 },\n  tooltip     : 'Yay!',\n  ns          : 'http://www.w3.org/1999/xhtml'\n});"],scope:"static",category:"Creation",returns:{type:["HTMLElement","Array.<HTMLElement>","Object"],description:"<p>Single element or array of elements <code>returnAll</code> was set to true.\nIf any elements had a <code>reference</code> property, this will be an object containing a reference to\nall those elements, keyed by the reference name.</p>"}},{name:"createElementFromTemplate",access:"private",description:"<p>Create element(s) from a template (html string). Note that\n<code>textNode</code>s are discarded unless the <code>raw</code> option is passed\nas <code>true</code>.</p>\n<p>If the template has a single root element, then the single element will be returned\nunless the <code>array</code> option is passed as <code>true</code>.</p>\n<p>If there are multiple elements, then an Array will be returned.</p>",parameters:[{name:"template",type:"String",description:"<p>The HTML string from which to create DOM content</p>"},{name:"options",type:"Object",description:"<p>An object containing properties to modify how the DOM is created and returned.</p>",optional:true},{name:"options.array",type:"Boolean",description:"<p><code>true</code> to return an array even if there's only one resulting element.</p>",optional:true,isSubParam:true},{name:"options.raw",type:"Boolean",description:"<p>Return all child nodes, including text nodes.</p>",optional:true,isSubParam:true},{name:"options.fragment",type:"Boolean",description:"<p>Return a DocumentFragment.</p>",optional:true,isSubParam:true}],scope:"static"},{name:"insertFirst",description:"<p>Inserts an <code>element</code> at first position in <code>into</code>.</p>",parameters:[{name:"into",type:"HTMLElement",description:"<p>Parent element</p>"},{name:"element",type:"HTMLElement",description:"<p>Element to insert, or an element config passed on to createElement()</p>"}],scope:"static",category:"Creation",returns:{type:"HTMLElement"}},{name:"insertBefore",description:"<p>Inserts a <code>element</code> before <code>beforeElement</code> in <code>into</code>.</p>",parameters:[{name:"into",type:"HTMLElement",description:"<p>Parent element</p>"},{name:"element",type:"HTMLElement",description:"<p>Element to insert, or an element config passed on to createElement()</p>"},{name:"beforeElement",type:"HTMLElement",description:"<p>Element before which passed element should be inserted</p>"}],scope:"static",category:"Creation",returns:{type:"HTMLElement"}},{name:"append",description:"<p>Appends element to parentElement.</p>",parameters:[{name:"parentElement",type:"HTMLElement",description:"<p>Parent element</p>"},{name:"elementOrConfig",type:["HTMLElement","Object","String"],description:"<p>Element to insert, or an element config passed on to createElement(), or an html string passed to createElementFromTemplate</p>"}],scope:"static",category:"Creation",returns:{type:"HTMLElement"}},{name:"getTranslateX",description:"<p>Returns the element's <code>transform translateX</code> value in pixels.</p>",parameters:[{name:"element",type:"HTMLElement"}],scope:"static",category:"Position, get",returns:{type:"Number",description:"<p>X transform</p>"}},{name:"getTranslateY",description:"<p>Returns the element's <code>transform translateY</code> value in pixels.</p>",parameters:[{name:"element",type:"HTMLElement"}],scope:"static",category:"Position, get",returns:{type:"Number",description:"<p>Y coordinate</p>"}},{name:"getTranslateXY",description:"<p>Gets both X and Y coordinates as an array [x, y]</p>",parameters:[{name:"element",type:"HTMLElement"}],scope:"static",category:"Position, get",returns:{type:"Array.<Number>",description:"<p>[x, y]</p>"}},{name:"getOffsetX",description:"<p>Get elements X offset within a containing element</p>",parameters:[{name:"element",type:"HTMLElement"},{name:"container",type:"HTMLElement"}],scope:"static",category:"Position, get",returns:{type:"Number",description:"<p>X offset</p>"}},{name:"getOffsetY",description:"<p>Get elements Y offset within a containing element</p>",parameters:[{name:"element",type:"HTMLElement"},{name:"container",type:"HTMLElement"}],scope:"static",category:"Position, get",returns:{type:"Number",description:"<p>Y offset</p>"}},{name:"getOffsetXY",description:"<p>Gets elemnts X and Y offset within containing element as an array [x, y]</p>",parameters:[{name:"element",type:"HTMLElement"},{name:"container",type:"HTMLElement"}],scope:"static",category:"Position, get",returns:{type:"Array.<Number>",description:"<p>[x, y]</p>"}},{name:"focusWithoutScrolling",description:"<p>Focus element without scrolling the element into view.</p>",parameters:[{name:"element",type:"HTMLElement"}],scope:"static"},{name:"getPageX",description:"<p>Get elements X position on page</p>",parameters:[{name:"element",type:"HTMLElement"}],scope:"static",category:"Position, get",returns:{type:"Number"}},{name:"getPageY",description:"<p>Get elements Y position on page</p>",parameters:[{name:"element",type:"HTMLElement"}],scope:"static",category:"Position, get",returns:{type:"Number"}},{name:"getExtremalSizePX",access:"internal",description:"<p>Returns extremal (min/max) size (height/width) of the element in pixels</p>",parameters:[{name:"element",type:"HTMLElement"},{name:"style",type:"String",description:"<p>minWidth/minHeight/maxWidth/maxHeight</p>"}],scope:"static",returns:{type:"number"}},{name:"setTranslateX",description:"<p>Set element's <code>X</code> translation in pixels.</p>",parameters:[{name:"element",type:"HTMLElement"},{name:"x",type:"Number",description:"<p>The value by which the element should be translated from its default position.</p>"}],scope:"static",category:"Position, set"},{name:"setTranslateY",description:"<p>Set element's <code>Y</code> translation in pixels.</p>",parameters:[{name:"element",type:"HTMLElement"},{name:"y",type:"Number",description:"<p>The value by which the element should be translated from its default position.</p>"}],scope:"static",category:"Position, set"},{name:"setTop",description:"<p>Set element's style <code>top</code>.</p>",parameters:[{name:"element",type:"HTMLElement"},{name:"y",type:["Number","String"],description:"<p>The top position. If numeric, <code>'px'</code> is used as the unit.</p>"}],scope:"static",category:"Position, set"},{name:"setLeft",description:"<p>Set element's style <code>left</code>.</p>",parameters:[{name:"element",type:"HTMLElement"},{name:"x",type:["Number","String"],description:"<p>The top position. If numeric, <code>'px'</code> is used as the unit.</p>"}],scope:"static",category:"Position, set"},{name:"setTranslateXY",description:"<p>Set elements <code>X</code> and <code>Y</code> translation in pixels.</p>",parameters:[{name:"element",type:"HTMLElement"},{name:"x",type:"Number",description:"<p>The `X translation.</p>",optional:true},{name:"y",type:"Number",description:"<p>The `Y translation.</p>",optional:true}],scope:"static",category:"Position, set"},{name:"addTranslateX",description:"<p>Increase <code>X</code> translation</p>",parameters:[{name:"element",type:"HTMLElement"},{name:"x",type:"Number",description:"<p>The number of pixels by which to increase the element's <code>X</code> translation.</p>"}],scope:"static",category:"Position, set"},{name:"addTranslateY",description:"<p>Increase <code>Y</code> position</p>",parameters:[{name:"element",type:"HTMLElement"},{name:"y",type:"Number",description:"<p>The number of pixels by which to increase the element's <code>Y</code> translation.</p>"}],scope:"static",category:"Position, set"},{name:"addLeft",description:"<p>Increase X position</p>",parameters:[{name:"element",type:"HTMLElement"},{name:"x"}],scope:"static",category:"Position, set"},{name:"addTop",description:"<p>Increase Y position</p>",parameters:[{name:"element",type:"HTMLElement"},{name:"y"}],scope:"static",category:"Position, set"},{name:"alignTo",description:"<p>Align the passed element with the passed target according to the align spec.</p>",parameters:[{name:"element",type:"HTMLElement",description:"<p>The element to align.</p>"},{name:"target",type:["HTMLElement","Core.helper.util.Rectangle"],description:"<p>The target element or rectangle to align to</p>"},{name:"alignSpec",type:"Object",description:"<p>See <a href=\"#Core/helper/util/Rectangle#function-alignTo\">alignTo</a> Defaults to <code>{ align : 't0-t0' }</code></p>"}],scope:"static"},{name:"getStyleValue",description:"<p>Returns a style value or values for the passed element.</p>",parameters:[{name:"element",type:"HTMLElement",description:"<p>The element to read styles from</p>"},{name:"propName",type:["String","Array.<String>"],description:"<p>The property or properties to read</p>"},{name:"inline",type:"Boolean",description:"<p>Pass as <code>true</code> to read the element's inline style.\nNote that this could return inaccurate results if CSS rules apply to this element.</p>",default:false,optional:true}],scope:"static",category:"CSS",returns:{type:["String","Object"],description:"<p>The value or an object containing the values keyed by the requested property name.</p>"}},{name:"getEdgeSize",description:"<p>Returns an object with the parse style values for the top, right, bottom, and left\ncomponents of the given edge style.</p>\n<p>The return value is an object with <code>top</code>, <code>right</code>, <code>bottom</code>, and <code>left</code> properties\nfor the respective components of the edge style, as well as <code>width</code> (the sum of\n<code>left</code> and <code>right</code>) and <code>height</code> (the sum of <code>top</code> and <code>bottom</code>).</p>",parameters:[{name:"element",type:"HTMLElement"},{name:"edgeStyle",type:"String",description:"<p>The element's desired edge style such as 'padding', 'margin',\nor 'border'.</p>"},{name:"edges",type:"String",description:"<p>A string with one character codes for each edge. Only\nthose edges will be populated in the returned object. By default, all edges will be\npopulated.</p>",default:"'trbl'",optional:true}],scope:"static",returns:{type:"Object"}},{name:"applyStyle",description:"<p>Applies specified style to the passed element. Style can be an object or a string.</p>",parameters:[{name:"element",type:"HTMLElement",description:"<p>Target element</p>"},{name:"style",type:["String","Object"],description:"<p>Style to apply, 'border: 1px solid black' or { border: '1px solid black' }</p>"},{name:"overwrite",type:"Boolean",description:"<p>Specify <code>true</code> to replace style instead of applying changes</p>",default:false,optional:true}],scope:"static",category:"CSS"},{name:"addClasses",description:"<p>Add multiple classes to elements classList. Helper for IE11 which does not support it directly</p>",parameters:[{name:"element",type:"HTMLElement"},{name:"classes",type:"Array.<String>"}],scope:"static",category:"CSS"},{name:"removeClasses",description:"<p>Remove multiple classes to elements classList. Helper for IE11 which does not support it directly</p>",parameters:[{name:"element",type:"HTMLElement"},{name:"classes",type:"Array.<String>"}],scope:"static",category:"CSS"},{name:"toggleClasses",description:"<p>Toggle multiple classes in elements classList. Helper for IE11 which does not support toggling with force or for\nmultiple classes at once.</p>",parameters:[{name:"element",type:"HTMLElement"},{name:"classes",type:"Array.<String>"},{name:"force",type:"Boolean",description:"<p>Specify true to add classes, false to remove. Leave blank to toggle</p>",optional:true}],scope:"static",category:"CSS"},{name:"addTemporaryClass",description:"<p>Adds a CSS class to an element during the specified duration</p>",parameters:[{name:"element",type:"HTMLElement",description:"<p>Target element</p>"},{name:"cls",type:"String",description:"<p>CSS class to add temporarily</p>"},{name:"duration",type:"Number",description:"<p>Duration in ms, 0 means cls will not be applied</p>"},{name:"delayable",type:"Core.mixin.Delayable",description:"<p>The delayable to tie the setTimeout call to</p>"}],scope:"static",category:"CSS"},{name:"getPropertyTransitionDuration",access:"private",description:"<p>Reads computed style from the element and returns transition duration for a given property in milliseconds</p>",parameters:[{name:"el",type:"HTMLElement",description:"<p>Target DOM element</p>"},{name:"property",type:"String",description:"<p>Animatied property name</p>"}],scope:"static",returns:{type:"number/undefined",description:"<p>Duration in ms</p>"}},{name:"highlight",description:"<p>Highlights the passed element or Rectangle according to the theme's highlighting rules.\nUsually an animated framing effect.</p>",parameters:[{name:"element",type:["HTMLElement","Core.helper.util.Rectangle"],description:"<p>The element or Rectangle to highlight.</p>"}],scope:"static"},{name:"resetScrollBarWidth",description:"<p>Resets DomHelper.scrollBarWidth cache, triggering a new measurement next time it is read</p>",scope:"static"},{name:"measureText",description:"<p>Measures the text width using a hidden div</p>",parameters:[{name:"text",type:"String"},{name:"sourceElement",type:"HTMLElement"}],scope:"static",category:"Measure",returns:{type:"Number",description:"<p>width</p>"}},{name:"measureSize",description:"<p>Measures a relative size, such as a size specified in <code>em</code> units for the passed element.</p>",parameters:[{name:"size",type:"String",description:"<p>The CSS size value to measure.</p>"},{name:"sourceElement",type:"HTMLElement"}],scope:"static",category:"Measure",returns:{type:"Number",description:"<p>size The size in pixels of the passed relative measurement.</p>"}},{name:"sync",description:'<p>Sync one source element attributes, children etc. to a target element. Source element can be specified as a html\nstring or an actual HTMLElement.</p>\n<p>NOTE: This function is superseded by <a href="#Core/helper/DomSync#function-sync-static">DomSync.sync()</a>, which works\nwith DOM configs. For most usecases, use it instead.</p>',parameters:[{name:"sourceElement",type:["String","HTMLElement"],description:"<p>Source &quot;element&quot; to copy from</p>"},{name:"targetElement",type:"HTMLElement",description:"<p>Target element to apply to, can also be specified as part of the config object</p>"}],scope:"static",returns:{type:"HTMLElement",description:"<p>Returns the updated targetElement (which is also updated in place)</p>"}},{name:"syncAttributes",access:"private",description:"<p>Syncs attributes from sourceElement to targetElement.</p>",parameters:[{name:"sourceElement",type:"HTMLElement"},{name:"targetElement",type:"HTMLElement"}],scope:"static"},{name:"syncContent",access:"private",description:"<p>Sync content (innerText) from sourceElement to targetElement</p>",parameters:[{name:"sourceElement",type:"HTMLElement"},{name:"targetElement",type:"HTMLElement"}],scope:"static"},{name:"syncChildren",access:"private",description:"<p>Sync traversing children</p>",parameters:[{name:"sourceElement",type:"HTMLElement",description:"<p>Source element</p>"},{name:"targetElement",type:"HTMLElement",description:"<p>Target element</p>"},{name:"syncIdField",type:"String",description:"<p>Field in dataset to use for element re-usage</p>"}],scope:"static"},{name:"syncClassList",description:"<p>Synchronizes the passed element's <code>classList</code> with the class names\npassed in either Array or String format or Object. Avoiding mutating an element's\n<code>classList</code> or <code>className</code> can avoid browser style recalculations.</p>",parameters:[{name:"element",type:"HTMLElement",description:"<p>The element whose class list to synchronize.</p>"},{name:"newClasses",type:["Array.<String>","String","Object"],description:"<p>The incoming class names to set on the element.</p>"}],scope:"static",category:"CSS"},{name:"setTheme",description:"<p>Changes the theme to the passed theme name if possible.</p>\n<p>Theme names are case insensitive. The <code>href</code> used is all lower case.</p>\n<p>To use this method, the <code>&lt;link rel=&quot;stylesheet&quot;&gt;</code> <em>must</em> use the default,\nBryntum-supplied CSS files where the <code>href</code> end with <code>&lt;themeName&gt;.css</code>, so that\nit can be found in the document, and switched out for a new link with\nthe a modified <code>href</code>. The new <code>href</code> will use the same path, just\nwith the <code>themeName</code> portion subsituted for the new name.</p>\n<p>If no <code>&lt;link&gt;</code> with that name pattern can be found, an error will be thrown.</p>\n<p>If you use this method, you  must ensure that the theme files are\nall accessible on your server.</p>\n<p>Because this is an asynchronous operation, a <code>Promise</code> is returned.\nThe theme change event is passed to the success function. If the\ntheme was not changed, because the theme name passed is the current theme,\nnothing is passed to the success function.</p>\n<p>The theme change event contains two properties:</p>\n<ul>\n<li><code>prev</code> The previous Theme name.</li>\n<li><code>theme</code> The new Theme name.</li>\n</ul>",parameters:[{name:"newThemeName",type:"String"}],scope:"static",returns:{type:"Promise",description:"<p>A promise who's success callback receives the theme change\nevent if the theme in fact changed. If the theme <code>href</code> could not be loaded,\nthe failure callback is called, passing the error event caught.</p>"},async:true}],properties:[{name:"activeElement",description:"<p>Returns active element checking shadow dom too</p>",scope:"static",returns:[{type:{names:["HTMLElement"]}}]},{name:"scrollBarWidth",description:"<p>Measures the scrollbar width using a hidden div. Caches result</p>",scope:"static",returns:[{type:{names:["Number"]}}],readonly:true},{name:"themeInfo",description:"<p>A theme information object about the current theme.</p>\n<p>Currently this has only one property:</p>\n<ul>\n<li><code>name</code> The current theme name.</li>\n</ul>",scope:"static",readonly:true,properties:[{type:{names:["Object"]}}]}]},{name:"module:Core/helper/DomSync",classDescription:"<p>A utility class for syncing DOM config objects to DOM elements. Syncing compares the new config with the previously\nused for that element, only applying the difference. Very much like a virtual DOM approach on a per element basis\n(element + its children).</p>\n<p>Usage example:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>DomSync.sync({\n    domConfig: {\n        className : 'b-outer',\n        children : [\n            {\n                className : 'b-child',\n                html      : 'Child 1',\n                dataset   : {\n                    custom : true\n                }\n            },\n            {\n                className : 'b-child',\n                html      : 'Child 2',\n                style     : {\n                    fontWeight : 'bold',\n                    color      : 'blue'\n                }\n            }\n        ]\n    },\n    targetElement : target\n});\n</code></pre>",constructor:{name:"constructor"},filename:"DomSync.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/helper",lineno:86,functions:[{name:"sync",description:"<p>Sync a DOM config to a target element</p>",parameters:[{name:"options",type:"Object",description:"<p>Options object</p>"},{name:"options.domConfig",type:"Object",description:"<p>A DOM config object</p>",isSubParam:true},{name:"options.targetElement",type:"HTMLElement",description:"<p>Target element to apply to</p>",isSubParam:true},{name:"options.syncIdField",type:"String",description:"<p>Field in dataset to use to match elements for re-usage</p>",optional:true,isSubParam:true},{name:"options.callback",type:"function",description:"<p>A function that will be called on element re-usage, creation and similar</p>",optional:true,isSubParam:true},{name:"options.configEquality",type:"Boolean",description:'<p>A function that will be called to compare an incoming config to\nthe last config applied to the <code>targetElement</code>. Defaults to <a href="#Core/helper/ObjectHelper#function-isDeeplyEqual-static">isDeeplyEqual</a>.</p>',optional:true,isSubParam:true}],scope:"static",returns:{type:"HTMLElement",description:"<p>Returns the updated target element (which is also updated in place)</p>"}}]},{name:"module:Core/helper/DragHelper",classDescription:"<p>Helps with drag and drop. Supports two modes of dragging:</p>\n<ul>\n<li><code>container</code> - moving/rearranging elements within and between specified containers</li>\n<li><code>translateXY</code> - repositioning an element withing its container</li>\n</ul>\n<p>Usage examples:</p>\n<pre class=\"prettyprint source\"><code>// dragging element between containers\nlet dragHelper = new DragHelper({\n  mode       : 'container',\n  containers : [ container1, container2 ]\n});\n\n// dragging element within container\nlet dragHelper = new DragHelper({\n  mode    : 'translateXY',\n  targetSelector: 'div.moveable'\n});\n</code></pre>\n<p>In the various Drag event handlers, you will have access to the raw DOM event and some useful <code>context</code> of the drag operation:</p>\n<pre class=\"prettyprint source\"><code> myDrag.on({\n     drag : ({event , context}) {\n           // The element which we're moving, could be a cloned version of grabbed, or the grabbed element itself\n          const element = context.element;\n\n          // The original mousedown element upon which triggered the drag operation\n          const grabbed = context.grabbed;\n\n          // The target under the current mouse / pointer / touch position\n          const target = context.target;\n      }\n });\n</code></pre>\n<p>Simple drag drop with a drop target specified:</p>\n<pre class=\"prettyprint source\"><code>export default class MyDrag extends DragHelper {\n        static get defaultConfig() {\n            return {\n                // Don't drag the actual cell element, clone it\n                cloneTarget        : true,\n                mode               : 'translateXY',\n                // Only allow drops on DOM elements with 'yourDropTarget' CSS class specified\n                dropTargetSelector : '.yourDropTarget',\n\n                // Only allow dragging elements with the 'draggable' CSS class\n                targetSelector : '.draggable'\n            };\n        }\n\n        construct(config) {\n            const me = this;\n\n            super.construct(config);\n\n            me.on({\n                dragstart : me.onDragStart\n            });\n        }\n\n        onDragStart({ event, context }) {\n            const target = context.target;\n\n            // Here you identify what you are dragging (an image of a user, grid row in an order table etc) and map it to something in your\n            // data model. You can store your data on the context object which is available to you in all drag-related events\n            context.userId = target.dataset.userId;\n        }\n\n        onEquipmentDrop({ context, event }) {\n            const me = this;\n\n            if (context.valid) {\n                const userId   = context.userId,\n                      droppedOnTarget = context.target;\n\n                console.log(`You dropped user ${userStore.getById(userId).name} on ${droppedOnTarget}`, droppedOnTarget);\n\n                // Dropped on a scheduled event, display toast\n                WidgetHelper.toast(`You dropped user ${userStore.getById(userId).name} on ${droppedOnTarget}`);\n\n                // tell the drag helper the operation is finished\n                me.context.finalize();\n            }\n        }\n    };\n</code></pre>",extends:["Core/Base"],mixes:["Core/helper/mixin/DragHelperContainer","Core/helper/mixin/DragHelperTranslate","Core/mixin/Events"],constructor:{name:"constructor"},filename:"DragHelper.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/helper",lineno:121,configs:[{name:"dragProxyCls",access:"private",description:"<p>Drag proxy CSS class</p>",type:"String",scope:"inner",defaultvalue:"b-drag-proxy"},{name:"invalidCls",description:"<p>CSS class added when drag is invalid</p>",type:"String",scope:"inner",defaultvalue:"b-drag-invalid"},{name:"draggingCls",access:"private",description:"<p>CSS class added to the source element in Container drag</p>",type:"String",scope:"inner",defaultvalue:"b-dragging"},{name:"dropPlaceholderCls",access:"private",description:"<p>CSS class added to the source element in Container drag</p>",type:"String",scope:"inner",defaultvalue:"b-drop-placeholder"},{name:"dragThreshold",description:"<p>The amount of pixels to move mouse before it counts as a drag operation</p>",type:"Number",scope:"inner",defaultvalue:5},{name:"outerElement",description:"<p>The outer element where the drag helper will operate (attach events to it and use as outer limit when looking for ancestors)</p>",type:"HTMLElement",scope:"inner"},{name:"dragWithin",description:"<p>Outer element that limits where element can be dragged</p>",type:"HTMLElement",scope:"inner"},{name:"constrain",description:"<p>Constrain translate drag to dragWithin elements bounds (set to false to allow it to &quot;overlap&quot; edges)</p>",type:"Boolean",scope:"inner",defaultvalue:true},{name:"minX",description:"<p>Smallest allowed x when dragging horizontally.</p>",type:"Number",scope:"inner"},{name:"maxX",description:"<p>Largest allowed x when dragging horizontally.</p>",type:"Number",scope:"inner"},{name:"minY",description:"<p>Smallest allowed y when dragging horizontally.</p>",type:"Number",scope:"inner"},{name:"maxY",description:"<p>Largest allowed y when dragging horizontally.</p>",type:"Number",scope:"inner"},{name:"mode",description:"<p>Enabled dragging, specify mode:</p>\n<table>\n<tr><td>container<td>Allows reordering elements within one and/or between multiple containers\n<tr><td>translateXY<td>Allows dragging within a parent container\n</table>",type:"String",scope:"inner"},{name:"isElementDraggable",description:"<p>A function that determines if dragging an element is allowed. Gets called with the element as argument,\nreturn true to allow dragging or false to prevent.</p>",type:"function",scope:"inner"},{name:"targetSelector",description:"<p>A CSS selector used to determine if dragging an element is allowed.</p>",type:"String",scope:"inner"},{name:"dropTargetSelector",description:"<p>A CSS selector used to determine if a drop is allowed at the current position.</p>",type:"String",scope:"inner"},{name:"cloneTarget",description:"<p>Set to true to clone the dragged target, and not move the actual target DOM node.</p>",type:"Boolean",scope:"inner",defaultvalue:false},{name:"hideOriginalElement",description:"<p>Set to true to hide the original element while dragging (applicable when <code>cloneTarget</code> is true).</p>",type:"Boolean",scope:"inner",defaultvalue:false},{name:"containers",description:"<p>Containers whose elements can be rearranged (and moved between the containers). Used when\nmode is set to &quot;container&quot;.</p>",type:"Array.<HTMLElement>",scope:"inner"},{name:"ignoreSelector",description:"<p>A CSS selector used to exclude elements when using container mode</p>",type:"String",scope:"inner"},{name:"lockX",description:"<p>Configure as <code>true</code> to disallow dragging in the <code>X</code> axis. The dragged element will only move vertically.</p>",type:"Boolean",scope:"inner",defaultvalue:false},{name:"lockY",description:"<p>Configure as <code>true</code> to disallow dragging in the <code>Y</code> axis. The dragged element will only move horizontally.</p>",type:"Boolean",scope:"inner",defaultvalue:false},{name:"touchStartDelay",description:"<p>The amount of milliseconds to wait after a touchstart, before a drag gesture will be allowed to start.</p>",type:"Number",scope:"inner",defaultvalue:300}],events:[{name:"beforeDragStart",description:"<p>Fired before dragging starts, return false to prevent the drag operation.</p>",parameters:[{name:"source",type:"DragHelper"},{name:"context",type:"Object"},{name:"event",type:["MouseEvent","TouchEvent"]}],preventable:true},{name:"dragStart",description:"<p>Fired when dragging starts.</p>",parameters:[{name:"source",type:"DragHelper"},{name:"context",type:"Object"},{name:"event",type:["MouseEvent","TouchEvent"]}]},{name:"drag",description:"<p>Fired while dragging, you can signal that the drop is valid or invalid by setting <code>context.valid = false;</code></p>",parameters:[{name:"source",type:"DragHelper"},{name:"context",type:"Object"},{name:"context.valid",type:"Boolean",description:"<p>Set this to true or false to indicate whether the drop position is valid.</p>",isSubParam:true},{name:"event",type:"MouseEvent"}]},{name:"drop",description:"<p>Fires after drop. For valid drops, it exposes <code>context.async</code> which you can set to true to signal that additional\nprocessing is needed before finalizing the drop (such as showing some dialog). When that operation is done, call\n<code>context.finalize(true/false)</code> with a boolean that determines the outcome of the drop.</p>",parameters:[{name:"dragHelper",type:"DragHelper"},{name:"context",type:"Object"}]},{name:"reset",access:"private",description:"<p>Fired when a drag operation is completed or aborted</p>",parameters:[{name:"dragHelper",type:"DragHelper"}]}],functions:[{name:"constructor",description:"<p>Initializes a new DragHelper.</p>",parameters:[{name:"config",type:"Object",description:"<p>Configuration object, accepts options specified under Configs above</p>"}],examples:["new DragHelper({\n  containers: [div1, div2],\n  isElementDraggable: element => element.className.contains('handle'),\n  outerElement: topParent,\n  listeners: {\n    drop: onDrop,\n    thisObj: this\n  }\n});"],scope:"inner"},{name:"initListeners",access:"private",description:"<p>Initialize listener</p>",scope:"instance"},{name:"onTouchStart",access:"private",parameters:[{name:"event"}],scope:"instance"},{name:"onMouseDown",access:"private",description:"<p>Grab draggable element on mouse down.</p>",parameters:[{name:"event"}],scope:"instance"},{name:"onMouseMove",access:"private",description:"<p>Move drag element with mouse.</p>",parameters:[{name:"event"}],scope:"instance",fires:["event:beforeDragStart","event:dragStart"]},{name:"update",access:"private",description:"<p>Updates drag, called when an element is grabbed and mouse moves</p>",scope:"instance",fires:["event:drag"]},{name:"abort",description:"<p>Abort dragging</p>",scope:"instance",fires:["event:abort"]},{name:"onDocumentClick",access:"private",description:"<p>This is a capture listener, only added during drag, which prevents a click gesture\npropagating from the terminating mouseup gesture</p>",parameters:[{name:"event",type:"MouseEvent"}],scope:"instance"},{name:"onMouseUp",access:"private",description:"<p>Drop on mouse up (if dropped on valid target).</p>",parameters:[{name:"event"}],scope:"instance"},{name:"onKeyDown",access:"private",description:"<p>Cancel on ESC key</p>",parameters:[{name:"event"}],scope:"instance"},{name:"createProxy",description:'<p>Creates the proxy element to be dragged, when using <a href="#Core/helper/DragHelper#config-cloneTarget">cloneTarget</a>. Clones the original element by default</p>',scope:"instance"}]},{name:"module:Core/helper/EventHelper",classDescription:"<p>Utility methods for dealing with Events, normalizing Touch/Pointer/Mouse events.</p>",constructor:{name:"constructor"},filename:"EventHelper.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/helper",lineno:149,functions:[{name:"getXY",description:"<p>Returns the <code>[x, y]</code> coordinates of the event in the viewport coordinate system.</p>",parameters:[{name:"event",type:"Event",description:"<p>The event</p>"}],scope:"static",returns:{type:"Array.<Number>",description:"<p>The coordinate.</p>"}},{name:"getDistanceBetween",description:"<p>Returns the pixel distance between two mouse/touch/pointer events.</p>",parameters:[{name:"event1",type:"Event",description:"<p>The first event.</p>"},{name:"event2",type:"Event",description:"<p>The second event.</p>"}],scope:"static",returns:{type:"Number",description:"<p>The distance in pixels between the two events.</p>"}},{name:"getPagePoint",description:'<p>Returns a <a href="#Core/helper/util/Point">Core.helper.util.Point</a> which encapsulates the <code>pageX/Y</code> position of the event.\nMay be used in <a href="#Core/helper/util/Rectangle">Core.helper.util.Rectangle</a> events.</p>',parameters:[{name:"event",type:"Event",description:"<p>A browser mouse/touch/pointer event.</p>"}],scope:"static",returns:{type:"Core.helper.util.Point",description:"<p>The page point.</p>"}},{name:"getClientPoint",description:'<p>Returns a <a href="#Core/helper/util/Point">Core.helper.util.Point</a> which encapsulates the <code>clientX/Y</code> position of the event.\nMay be used in <a href="#Core/helper/util/Rectangle">Core.helper.util.Rectangle</a> events.</p>',parameters:[{name:"event",type:"Event",description:"<p>A browser mouse/touch/pointer event.</p>"}],scope:"static",returns:{type:"Core.helper.util.Point",description:"<p>The page point.</p>"}},{name:"addListener",description:"<p>Add a listener or listeners to an element</p>",parameters:[{name:"element",type:"HTMLElement",description:"<p>The element to add a listener/listeners to.</p>"},{name:"eventName",type:["String","Object"],description:'<p>Either a string, being the name of the event to listen for,\nor an options object containing event names and options as keys. See the options parameter\nfor details, or the <a href="#Core/helper/EventHelper#function-on-static">on</a> method for details.</p>'},{name:"handler",type:"function",description:"<p>If the second parameter is a string event name, this is the handler function.</p>",optional:true},{name:"options",type:"Object",description:"<p>If the second parameter is a string event name, this is the options.</p>",optional:true},{name:"options.element",type:"HTMLElement",description:"<p>The element to add the listener to.</p>",isSubParam:true},{name:"options.thisObj",type:"Object",description:"<p>The default <code>this</code> reference for all handlers added in this call.</p>",isSubParam:true},{name:"options.autoDetach",type:"Boolean",description:"<p>The listeners are automatically removed when the <code>thisObj</code> is destroyed.</p>",default:true,optional:true,isSubParam:true},{name:"options.delegate",type:"String",description:"<p>A CSS selector string which only fires the handler when the event takes place in a matching element.</p>",optional:true,isSubParam:true},{name:"options.once",type:"Boolean",description:"<p>Specify as <code>true</code> to have the listener(s) removed upon first invocation.</p>",optional:true,isSubParam:true},{name:"options.delay",type:"Number",description:"<p>The number of milliseconds to delay the handler call after the event fires:</p>\n<pre><code>{\n    once       : true,           // Removed upon first firing\n    delegate   : this.iconCls,   // Only when clicking the icon\n    thisObj    : this            // The this reference when the handler is called\n                                 // Listener is removed when thisObj is destroyed\n}</code></pre>",optional:true,isSubParam:true}],scope:"static",returns:{type:"function",description:"<p>A detacher function which removes all the listeners when called.</p>"}},{name:"on",description:"<p>Adds a listener or listeners to an element.\nall property names other than the options listed below are taken to be event names,\nand the values as handler specs.</p>\n<p>A handler spec is usually a function reference or the name of a function in the <code>thisObj</code>\noption.</p>\n<p>But a handler spec may also be an options object containing a <code>handler</code> property which is\nthe function or function name, and local options, including <code>element</code> and <code>thisObj</code>\nwhich override the top level options.</p>\n<p>Usage example</p>\n<pre class=\"prettyprint source lang-javascript\"><code>construct(config) {\n    super.construct(config);\n\n    // Add auto detaching event handlers to this Widget's reference elements\n    EventHelper.on({\n        element : this.iconElement,\n        click   : '_handleIconClick',\n        thisObj : this,\n        contextmenu : {\n            element : document,\n            handler : '_handleDocumentContextMenu'\n        }\n    });\n}\n</code></pre>\n<p>The <code>click</code> handler on the <code>iconElement</code> calls <code>this._handleIconClick</code>.</p>\n<p>The <code>contextmenu</code> handler is added to the <code>document</code> element, but the <code>thisObj</code>\nis defaulted in from the top <code>options</code> and calls <code>this._handleDocumentContextMenu</code>.</p>\n<p>Note that on touch devices, <code>dblclick</code> and <code>contextmenu</code> events are synthesized.\nSynthesized events contain a <code>browserEvent</code> property containing the final triggering\nevent of the gesture. For example a synthesized <code>dblclick</code> event would contain a\n<code>browserEvent</code> property which is the last <code>touchend</code> event. A synthetic <code>contextmenu</code>\nevent will contain a <code>browserEvent</code> property which the longstanding <code>touchstart</code> event.</p>",parameters:[{name:"options",type:"Object",description:"<p>The full listener specification.</p>"},{name:"options.element",type:"HTMLElement",description:"<p>The element to add the listener to.</p>",isSubParam:true},{name:"options.thisObj",type:"Object",description:"<p>The default <code>this</code> reference for all handlers added in this call.</p>",isSubParam:true},{name:"options.autoDetach",type:"Boolean",description:"<p>The listeners are automatically removed when the <code>thisObj</code> is destroyed.</p>",default:true,optional:true,isSubParam:true},{name:"options.delegate",type:"String",description:"<p>A CSS selector string which only fires the handler when the event takes place in a matching element.</p>",optional:true,isSubParam:true},{name:"options.once",type:"Boolean",description:"<p>Specify as <code>true</code> to have the listener(s) removed upon first invocation.</p>",optional:true,isSubParam:true},{name:"options.delay",type:"Number",description:"<p>The number of milliseconds to delay the handler call after the event fires.</p>",optional:true,isSubParam:true},{name:"options.throttled",type:"Number",description:"<p>For rapidly repeating events (Such as <code>wheel</code> or <code>scroll</code> or <code>mousemove</code>)\nthis is the number of milliseconds to delay subsequent handler calls after first invocation which happens immediately.</p>",optional:true,isSubParam:true}],scope:"static",returns:{type:"function",description:"<p>A detacher function which removes all the listeners when called.</p>"}},{name:"addElementListener",access:"private",description:"<p>Used internally to add a single event handler to an element.</p>",parameters:[{name:"element",type:"HTMLElement",description:"<p>The element to add the handler to.</p>"},{name:"eventName",type:"String",description:"<p>The name of the event to add a handler for.</p>"},{name:"handlerSpec",type:["function","String","Object"],description:"<p>Either a function to call, or\nthe name of a function to call in the <code>thisObj</code>, or an object containing\nthe handler local options.</p>"},{name:"handlerSpec.handler",type:["function","String"],description:"<p>Either a function to call, or\nthe name of a function to call in the <code>thisObj</code>.</p>",optional:true,isSubParam:true},{name:"handlerSpec.element",type:"HTMLElement",description:"<p>Optionally a local element for the listener.</p>",optional:true,isSubParam:true},{name:"handlerSpec.thisObj",type:"Object",description:"<p>A local <code>this</code> specification for the handler.</p>",optional:true,isSubParam:true},{name:"defaults",type:"Object",description:'<p>The <code>options</code> parameter from the <a href="#Core/helper/EventHelper#function-addListener-static">addListener</a> call.</p>'}],scope:"static"},{name:"createContextMenuWrapper",access:"private",description:"<p>Private function to wrap the passed function. The returned wrapper function to be used as\na <code>touchstart</code> handler which will call the passed function passing a fabricated <code>contextmenu</code>\nevent if there's no <code>touchend</code> or <code>touchmove</code> after a default of 400ms.</p>",parameters:[{name:"handler",type:["String","function"],description:"<p>The handler to call.</p>"},{name:"thisObj",type:"Object",description:"<p>The owner of the function.</p>"}],scope:"static"},{name:"createDblClickWrapper",access:"private",description:"<p>Private function to wrap the passed function. The returned wrapper function to be used as\na <code>touchend</code> handler which will call the passed function passing a fabricated <code>dblclick</code>\nevent if there is a <code>click</code> within 300ms.</p>",parameters:[{name:"handler",type:["String","function"],description:"<p>The handler to call.</p>"},{name:"thisObj",type:"Object",description:"<p>The owner of the function.</p>"}],scope:"static"}],properties:[{name:"longPressTime",description:"<p>The time in milliseconds for a <code>taphold</code> gesture to trigger a <code>contextmenu</code> event.</p>",type:{names:["Number"]},scope:"static",defaultvalue:500,readonly:true},{name:"dblClickTime",description:"<p>The time in milliseconds within which a second touch tap event triggers a <code>dblclick</code> event.</p>",type:{names:["Number"]},scope:"static",defaultvalue:300,readonly:true}]},{name:"module:Core/helper/FunctionHelper",classDescription:"<p>Provides functionality for working with functions</p>",access:"internal",constructor:{name:"constructor"},filename:"FunctionHelper.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/helper",lineno:9,functions:[{name:"createInterceptor",description:"<p>Returns a function which calls the passed <code>interceptor</code> function first, and the passed <code>original</code> after\nas long as the <code>interceptor</code> does not return <code>false</code>.</p>",parameters:[{name:"original",type:"function",description:"<p>The function to call second.</p>"},{name:"interceptor",type:"function",description:"<p>The function to call first.</p>"},{name:"thisObj",type:"Object",description:"<p>The <code>this</code> reference when the functions are called.</p>",optional:true}],scope:"static",returns:{description:"<p>The return value from the <code>original</code> function <strong>if it was called</strong>, else <code>false</code>.</p>"}},{name:"createSequence",description:"<p>Returns a function which calls the passed <code>sequence</code> function after calling\nthe passed <code>original</code>.</p>",parameters:[{name:"original",type:"function",description:"<p>The function to call first.</p>"},{name:"sequence",type:"function",description:"<p>The function to call second.</p>"},{name:"thisObj",type:"Object",description:"<p>The <code>this</code> reference when the functions are called.</p>",optional:true}],scope:"static",returns:{description:"<p>The value returned from the sequence if it returned a value, else the return\nvalue from the original function.</p>"}},{name:"createThrottled",description:"<p>Create a &quot;debounced&quot; function which will call on the &quot;leading edge&quot; of a timer period.\nWhen first invoked will call immediately, but invocations after that inside its buffer\nperiod will be rejected, and <em>one</em> invocation will be made after the buffer period has expired.</p>\n<p>This is useful for responding immediately to a first mousemove, but from then on, only\ncalling the action function on a regular timer while the mouse continues to move.</p>",parameters:[{name:"fn",type:"function",description:"<p>The function to call.</p>"},{name:"buffer",type:"Number",description:"<p>The milliseconds to wait after each execution before another execution takes place.</p>"},{name:"thisObj",type:"Object",description:"<p><code>this</code> reference for the function.</p>",optional:true},{name:"extraArgs",type:"Array",description:"<p>The argument list to append to those passed to the function.</p>",optional:true},{name:"alt",type:"function",description:"<p>A function to call when the invocation is rejected due to buffer time not having expired.</p>",optional:true}],scope:"static"},{name:"createBuffered",description:"<p>Create a &quot;debounced&quot; function which will call on the &quot;trailing edge&quot; of a timer period.\nWhen first invoked will wait until the buffer period has expired to call the function, and\nmore calls within that time will restart the timer.</p>\n<p>This is useful for responding to keystrokes, but deferring action until the user pauses typing.</p>",parameters:[{name:"fn",type:"function",description:"<p>The function to call.</p>"},{name:"buffer",type:"Number",description:"<p>The milliseconds to wait after each execution before another execution takes place.</p>"},{name:"thisObj",type:"Object",description:"<p><code>this</code> reference for the function.</p>",optional:true},{name:"args",type:"Array",description:"<p>The argument list to append to those passed to the function.</p>",optional:true}],scope:"static"}]},{name:"module:Core/helper/IdHelper",classDescription:"<p>IdHelper keeps an internal map of objects and ids, allowing easy retrieval by id. It can generate and assign\nunique ids (in IdHelper context, not guaranteed to be unique on page), either explicitly or when registering objects\nin its map.</p>\n<p>IdHelper also supplies some useful functions for querying Widgets.</p>\n<p>This class is not intended for application use, it is used internally by the Brytum infrastructure.</p>",access:"private",constructor:{name:"constructor"},filename:"IdHelper.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/helper",lineno:30,functions:[{name:"generateId",description:"<p>Generate a new id, using IdHelpers internal counter and a prefix</p>",parameters:[{name:"prefix",type:"String",description:"<p>Id prefix</p>",default:"generatedId"}],scope:"static",returns:{type:"String",description:"<p>Generated id</p>"}},{name:"register",description:"<p>Register an object with IdHelper, assigning it a generated id if it has none. Throws if objects id is already\nin use.</p>",parameters:[{name:"obj",type:"Object",description:"<p>Any object</p>"},{name:"prefix",type:"String",description:"<p>Prefix for generated id</p>"}],scope:"static"},{name:"unregister",description:"<p>Unregister from IdHelper, normally done on destruction</p>",parameters:[{name:"obj",type:"Object",description:"<p>Object to unregister</p>"}],scope:"static"},{name:"get",description:"<p>Get an object using id</p>",parameters:[{name:"id",type:"String",description:"<p>Object id</p>"}],scope:"static",returns:{type:"*",description:"<p>Object or undefined if none found</p>"}},{name:"query",description:"<p>Analogous to document.querySelector, finds the first Bryntum widget matching the passed\nselector. Right now, only class name (lowercased) selector strings, or\na filter function which returns <code>true</code> for required object are allowed:</p>\n<pre class=\"prettyprint source\"><code>bryntum.query('grid').destroy();\n</code></pre>",parameters:[{name:"selector",type:["String","function"],description:"<p>A lowercased class name, or a filter function.</p>"},{name:"deep",type:"Boolean",description:"<p>Specify <code>true</code> to search the prototype chain (requires supplying a string <code>selector</code>). For\nexample 'widget' would then find a Grid</p>",default:false,optional:true}],scope:"static",returns:{type:"Core.widget.Widget",description:"<p>The first matched widget if any.</p>"}},{name:"queryAll",description:"<p>Analogous to document.querySelectorAll, finds all Bryntum widgets matching the passed\nselector. Right now, only registered widget <code>type</code> strings, or a filter function which\nreturns <code>true</code> for required object are allowed:</p>\n<pre class=\"prettyprint source\"><code>let allFields = bryntum.queryAll('field', true);\n</code></pre>",parameters:[{name:"selector",type:["String","function"],description:"<p>A lowercased class name, or a filter function.</p>"},{name:"deep",type:"Boolean",description:"<p>Specify <code>true</code> to search the prototype chain (requires supplying a string <code>selector</code>). For\nexample 'widget' would then find a Grid</p>",default:false,optional:true}],scope:"static",returns:{type:"Array.<Core.widget.Widget>",description:"<p>The first matched widgets if any - an empty array will be returned\nif no matches are found.</p>"}},{name:"fromElement",description:"<p>Returns the Widget which owns the passed element (or event).</p>",parameters:[{name:"element",type:["HTMLElement","Event"],description:"<p>The element or event to start from</p>"},{name:"type",type:["String","function"],description:"<p>The type of Widget to scan upwards for. The lowercase\nclass name. Or a filter function which returns <code>true</code> for the required Widget.</p>",optional:true},{name:"limit",type:["HTMLElement","Number"],description:"<p>The number of components to traverse upwards to find a\nmatch of the type parameter, or the element to stop at.</p>",optional:true}],scope:"static",returns:{type:"Widget",description:"<p>The found Widget or null.</p>"}}]},{name:"module:Core/helper/ObjectHelper",classDescription:"<p>Helper for Object manipulation.</p>",constructor:{name:"constructor"},filename:"ObjectHelper.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/helper",lineno:35,functions:[{name:"isEqual",description:"<p>Checks if two values are equal. Basically === but special handling of dates.</p>",parameters:[{name:"a",description:"<p>First value</p>"},{name:"b",description:"<p>Second value</p>"}],scope:"static",returns:{type:"*",description:"<p>true if values are equal, otherwise false</p>"}},{name:"isDeeplyEqual",description:"<p>Checks if two objects are deeply equal</p>",parameters:[{name:"a",type:"Object"},{name:"b",type:"Object"},{name:"options",type:"Object",description:"<p>Additional comparison options</p>",optional:true},{name:"options.ignore",type:"Object",description:"<p>Map of property names to ignore when comparing</p>",optional:true,isSubParam:true},{name:"options.shouldEvaluate",type:"function",description:"<p>Function used to evaluate if a property should be compared or not.\nReturn false to prevent comparision</p>",optional:true,isSubParam:true},{name:"options.evaluate",type:"function",description:"<p>Function used to evaluate equality. Return <code>true</code>/<code>false</code> as evaluation\nresult or anything else to let <code>isEqual</code> handle the comparision</p>",optional:true,isSubParam:true}],scope:"static",returns:{type:"Boolean"}},{name:"isPartial",description:"<p>Checks if value B is partially equal to value A.</p>",parameters:[{name:"a",description:"<p>First value</p>"},{name:"b",description:"<p>Second value</p>"}],scope:"static",returns:{type:"Boolean",description:"<p>true if values are partially equal, false otherwise</p>"}},{name:"isLessThan",description:"<p>Checks if value a is smaller than value b.</p>",parameters:[{name:"a",description:"<p>First value</p>"},{name:"b",description:"<p>Second value</p>"}],scope:"static",returns:{type:"Boolean",description:"<p>true if a &lt; b</p>"}},{name:"isMoreThan",description:"<p>Checks if value a is bigger than value b.</p>",parameters:[{name:"a",description:"<p>First value</p>"},{name:"b",description:"<p>Second value</p>"}],scope:"static",returns:{type:"Boolean",description:"<p>true if a &gt; b</p>"}},{name:"fork",access:"private",description:"<p>Used by the Base class to make deep copies of defaultConfig blocks</p>",scope:"static"},{name:"copyProperties",description:"<p>Copies the named properties from the <code>source</code> parameter into the <code>dest</code> parameter.</p>",parameters:[{name:"dest",type:"Object",description:"<p>The destination into which properties are copied.</p>"},{name:"source",type:"Object",description:"<p>The source from which properties are copied.</p>"},{name:"props",type:"Array.<String>",description:"<p>The list of property names.</p>"}],scope:"static",returns:{description:"<p>The <code>dest</code> object.</p>"}},{name:"copyPropertiesIf",description:"<p>Copies the named properties from the <code>source</code> parameter into the <code>dest</code> parameter\nunless the property already exists in the <code>dest</code>.</p>",parameters:[{name:"dest",type:"Object",description:"<p>The destination into which properties are copied.</p>"},{name:"source",type:"Object",description:"<p>The source from which properties are copied.</p>"},{name:"props",type:"Array.<String>",description:"<p>The list of property names.</p>"}],scope:"static",returns:{description:"<p>The <code>dest</code> object.</p>"}},{name:"keys",description:"<p>Returns an array containing all enumerable property names from every prototype level for the object.</p>",parameters:[{name:"object",type:"Object",description:"<p>Object to retrieve property names from</p>"},{name:"ignore",type:"Object",description:"<p>Optional map of names to ignore</p>",optional:true}],scope:"static",returns:{type:"Array.<String>",description:"<p>All keys from every prototype level.</p>"}},{name:"isEmpty",description:"<p>Tests whether a passed object has any enumerable properties.</p>",parameters:[{name:"object",type:"Object"}],scope:"static",returns:{type:"Boolean",description:"<p><code>true</code> if the passed object has no enumerable properties.</p>"}},{name:"getTruthyKeys",description:"<p>Gathers the names of properties which have truthy values into an array.</p>\n<p>This is useful when gathering CSS class names for complex element production.\nInstead of appending to an array or string which may already contain the\nname, and instead of contending with space separation and concatenation\nand conditional execution, just set the properties of an object:</p>\n<pre><code>cls = {\n    [this.selectedCls] : this.isSelected(thing),\n    [this.dirtyCls] : this.isDirty(thing)\n};</code></pre>",parameters:[{name:"source",type:"Object",description:"<p>Source of keys to gather into an array.</p>"}],scope:"static",returns:{type:"Array.<String>",description:"<p>The keys which had a truthy value.</p>"}},{name:"getTruthyValues",description:"<p>Gathers the values of properties which are truthy into an array.</p>",parameters:[{name:"source",type:"Object",description:"<p>Source of values to gather into an array.</p>"}],scope:"static",returns:{type:"Array.<String>",description:"<p>The truthy values from the passed object.</p>"}},{name:"createTruthyKeys",description:'<p>Converts a list of names, either an a space separated string, or\nfrom an array, into a series of properties in an object with truthy\nvalues. The Converse of <a href="#Core/helper/ObjectHelper#function-getTruthyKeys-static">getTruthyKeys</a></p>',parameters:[{name:"The",type:["String","Array.<String>"],description:"<p>list of names to convert to object form.</p>"}],scope:"static"},{name:"allKeys",description:"<p>Returns an array of a given object's properties names including properties in\nall superclasses, in the same order as we get with a normal loop.</p>",parameters:[{name:"source",type:"Object",description:"<p>An object which may have properties in a prototype\nchain, such as a configuration (These are chained because of inheritance).</p>"}],scope:"static",returns:{type:"Array.<String>",description:"<p>The property names.</p>"}},{name:"pathExists",description:"<p>Checks if a given path exists in an object</p>",parameters:[{name:"object",type:"Object",description:"<p>Object to check path on</p>"},{name:"path",type:"String",description:"<p>Dot-separated path, e.g. 'object.childObject.someKey'</p>"}],scope:"static",returns:{type:"Boolean",description:"<p>Returns <code>true</code> if path exists or <code>false</code> if it does not</p>"}},{name:"getPath",description:"<p>Returns value for a given path in the object</p>",parameters:[{name:"object",type:"Object",description:"<p>Object to check path on</p>"},{name:"path",type:"String",description:"<p>Dot-separated path, e.g. 'object.childObject.someKey'</p>"}],scope:"static",returns:{type:"*",description:"<p>Value associated with passed key</p>"}},{name:"setPath",description:"<p>Sets value for a given path in the object</p>",parameters:[{name:"object",type:"Object",description:"<p>Target object</p>"},{name:"path",type:"String",description:"<p>Dot-separated path, e.g. 'object.childObject.someKey'</p>"},{name:"value",type:"*",description:"<p>Value for a given path</p>"}],scope:"static",returns:{type:"Object",description:"<p>Returns passed object</p>"}},{name:"pathifyKeys",access:"internal",description:"<p>Creates a simple single level key-value object from complex deep object.</p>",parameters:[{name:"object",type:"Object",description:"<p>Object to extract path and values from</p>"}],scope:"static",returns:{type:"Object",description:"<p>Key-value object where key is a path to the corresponding value</p>"}},{name:"deletePath",access:"internal",description:"<p>Removes value for a given path in the object. Doesn't cleanup empty objects.</p>",parameters:[{name:"object",type:"Object"},{name:"path",type:"String",description:"<p>Dot-separated path, e.g. <code>obj.child.someKey</code></p>"}],scope:"static"},{name:"getPropertyDescriptor",description:"<p>Finds a property descriptor for the passed object from all inheritance levels.</p>",parameters:[{name:"object",type:"Object",description:"<p>The Object whos property to find.</p>"},{name:"propertyName",type:"String",description:"<p>The name of the property to find.</p>"}],scope:"static",returns:{type:"Object",description:"<p>An ECMA property descriptor is the property was found, otherwise <code>null</code></p>"}},{name:"cleanupProperties",description:"<p>Changes the passed object and removes all null and undefined properties from it</p>",parameters:[{name:"object",type:"Object",description:"<p>Target object</p>"}],scope:"static",returns:{type:"Object",description:"<p>Passed object</p>"}},{name:"assertType",description:"<p>Checks that the supplied value is of the specified type. Throws if it is not</p>",parameters:[{name:"value",type:"Object",description:"<p>Value to check type of</p>"},{name:"type",type:"String",description:"<p>Expected type</p>"},{name:"name",type:"String",description:"<p>Name of the value, used in error message</p>"}],scope:"static"},{name:"assertNumber",description:"<p>Checks that the supplied value is a number.  Throws if it is not</p>",parameters:[{name:"value",type:"Object",description:"<p>Value to check type of</p>"},{name:"name",type:"String",description:"<p>Name of the value, used in error message</p>"}],scope:"static"},{name:"assertBoolean",description:"<p>Checks that the supplied value is a boolean.  Throws if it is not</p>",parameters:[{name:"value",type:"Object",description:"<p>Value to check type of</p>"},{name:"name",type:"String",description:"<p>Name of the value, used in error message</p>"}],scope:"static"},{name:"toFixed",description:"<p>Number.toFixed(), with polyfill for browsers that needs it</p>",parameters:[{name:"number",type:"Number"},{name:"digits",type:"Number"}],scope:"static",returns:{type:"String",description:"<p>A fixed point string representation of the passed number.</p>"}},{name:"roundTo",description:"<p>Round the passed number to closest passed step value.</p>",parameters:[{name:"number",type:"Number",description:"<p>The number to round.</p>"},{name:"step",type:"Number",description:"<p>The step value to round to.</p>",default:1,optional:true}],scope:"static",returns:{type:"Number",description:"<p>The number rounded to the closest step.</p>"}},{name:"round",description:"<p>Round the passed number to the passed number of decimals.</p>",parameters:[{name:"number",type:"Number",description:"<p>The number to round.</p>"},{name:"digits",type:"Number",description:"<p>The number of decimal places to round to.</p>"}],scope:"static",returns:{type:"Number",description:"<p>The number rounded to the passed number of decimal places.</p>"}},{name:"isPromise",access:"internal",description:"<p>Check if passed object is a Promise which contains <code>then</code> method.\nUsed to fix problems with detecting promises with <code>obj instanceof Promise</code> in code when Promise class is replaced with any other implementation.\nRelated to this issue https://github.com/bryntum/support/issues/791</p>",parameters:[{name:"obj",description:"<p>Promise object to check</p>"}],scope:"static",returns:{type:"Boolean",description:"<p>truthy value if object is Promise</p>"}}]},{name:"module:Core/helper/ResizeHelper",classDescription:"<p>Handles resizing of elements using handles. Handles can be actual elements or virtual handles specified as a border\narea on elements left and right edges.</p>\n<pre class=\"prettyprint source\"><code>// enable resizing all elements with class 'resizable'\nlet resizer = new ResizeHelper({\n  targetSelector: '.resizable'\n});\n</code></pre>",mixes:["Core/mixin/Events"],access:"internal",constructor:{name:"constructor"},filename:"ResizeHelper.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/helper",lineno:39,configs:[{name:"resizingCls",description:"<p>CSS class added when resizing</p>",type:"String",scope:"inner",defaultvalue:"b-resizing"},{name:"dragThreshold",description:"<p>The amount of pixels to move mouse before it counts as a drag operation</p>",type:"Number",scope:"inner",defaultvalue:5},{name:"handleSize",description:"<p>Resizing handle size</p>",type:"Number",scope:"inner",defaultvalue:10},{name:"dynamicHandleSize",description:'<p>Automatically shrink virtual handles when available space &lt; handleSize. The virtual handles will\ndecrease towards width/height 1, reserving space between opposite handles to for example leave room for\ndragging. To configure reserved space, see <a href="#Core/helper/ResizeHelper#config-reservedSpace">reservedSpace</a>.</p>',type:"Boolean",scope:"inner",defaultvalue:"false"},{name:"reservedSpace",description:'<p>Room in px to leave unoccupied by handles when shrinking them dynamically (see\n<a href="#Core/helper/ResizeHelper#config-dynamicHandleSize">dynamicHandleSize</a>).</p>',type:"Number",scope:"inner",defaultvalue:10},{name:"touchHandleSize",description:"<p>Resizing handle size on touch devices</p>",type:"Number",scope:"inner",defaultvalue:30},{name:"minWidth",description:"<p>Minimum width when resizing</p>",type:"Number",scope:"inner",defaultvalue:1},{name:"maxWidth",description:"<p>Max width when resizing.</p>",type:"Number",scope:"inner",defaultvalue:0},{name:"minHeight",description:"<p>Minimum height when resizing</p>",type:"Number",scope:"inner",defaultvalue:1},{name:"maxHeight",description:"<p>Max height when resizing</p>",type:"Number",scope:"inner",defaultvalue:0},{name:"scroller",description:"<p>Optional scroller used to read scroll position. If unspecified, the outer element will be used.</p>",type:"Core.helper.util.Scroller",scope:"inner"},{name:"allowResize",description:"<p>Assign a function to determine if a hovered element can be resized or not</p>",type:"function",scope:"inner"},{name:"dragWithin",description:"<p>Outer element that limits where element can be dragged</p>",type:"HTMLElement",scope:"inner"},{name:"isElementResizable",description:"<p>A function that determines if dragging an element is allowed. Gets called with the element as argument,\nreturn true to allow dragging or false to prevent.</p>",type:"function",scope:"inner"},{name:"targetSelector",description:"<p>A CSS selector used to determine if resizing an element is allowed.</p>",type:"String",scope:"inner"},{name:"leftHandle",description:"<p>Use left handle when resizing. Only applies when <code>direction</code> is 'horizontal'</p>",type:"Boolean",scope:"inner",defaultvalue:true},{name:"rightHandle",description:"<p>Use right handle when resizing. Only applies when <code>direction</code> is 'horizontal'</p>",type:"Boolean",scope:"inner",defaultvalue:true},{name:"topHandle",description:"<p>Use top handle when resizing. Only applies when <code>direction</code> is 'vertical'</p>",type:"Boolean",scope:"inner",defaultvalue:true},{name:"bottomHandle",description:"<p>Use bottom handle when resizing. Only applies when <code>direction</code> is 'vertical'</p>",type:"Boolean",scope:"inner",defaultvalue:true},{name:"handleSelector",description:"<p>A CSS selector used to determine where handles should be &quot;displayed&quot; when resizing. Defaults to\ntargetSelector if unspecified</p>",type:"String",scope:"inner"},{name:"handleContainerSelector",description:"<p>A CSS selector used to determine which inner element contains handles.</p>",type:"String",scope:"inner"},{name:"invalidCls",description:"<p>CSS class added when the resize state is invalid</p>",type:"String",scope:"inner",defaultvalue:"b-resize-invalid"},{name:"direction",description:"<p>Direction to resize in, either 'horizontal' or 'vertical'</p>",type:"String",scope:"inner",defaultvalue:"horizontal"}],events:[{name:"resizing",description:"<p>Fired while dragging</p>",parameters:[{name:"source",type:"Core.helper.ResizeHelper"},{name:"context",type:"Object",description:"<p>Resize context</p>"},{name:"event",type:"MouseEvent",description:"<p>Browser event</p>"}]},{name:"resizeStart",description:"<p>Fired when dragging starts.</p>",parameters:[{name:"source",type:"Core.helper.ResizeHelper"},{name:"context",type:"Object",description:"<p>Resize context</p>"},{name:"event",type:["MouseEvent","TouchEvent"],description:"<p>Browser event</p>"}]},{name:"resize",description:"<p>Fires after resize, and allows for asynchronous finalization by setting 'async' to <code>true</code> on the context object.</p>",parameters:[{name:"source",type:"Core.helper.ResizeHelper"},{name:"context",type:"Object",description:"<p>Context about the resize operation. Set 'async' to <code>true</code> to indicate asynchronous validation of the resize flow (for showing a confirmation dialog etc)</p>"}]},{name:"cancel",description:"<p>Fires when a resize is canceled (width is unchanged)</p>",parameters:[{name:"source",type:"Core.helper.ResizeHelper"},{name:"context",type:"Object",description:"<p>Resize context</p>"},{name:"event",type:["MouseEvent","TouchEvent"],description:"<p>Browser event</p>"}]}],functions:[{name:"initResize",access:"private",description:"<p>Initializes resizing</p>",scope:"instance"},{name:"initListeners",access:"private",description:"<p>Initialize listeners</p>",scope:"instance"},{name:"onMouseDown",access:"private",description:"<p>Grab draggable element on mouse down.</p>",parameters:[{name:"event"}],scope:"instance"},{name:"onMouseMove",access:"private",description:"<p>Move grabbed element with mouse.</p>",parameters:[{name:"event"}],scope:"instance",fires:["event:resizestart"]},{name:"onMouseUp",access:"private",description:"<p>Drop on mouse up (if dropped on valid target).</p>",parameters:[{name:"event"}],scope:"instance"},{name:"onDocumentClick",access:"private",description:"<p>This is a capture listener, only added during drag, which prevents a click gesture\npropagating from the terminating mouseup geature</p>",parameters:[{name:"event",type:"MouseEvent"}],scope:"instance"},{name:"onKeyDown",access:"private",description:"<p>Cancel on ESC key</p>",parameters:[{name:"event"}],scope:"instance"},{name:"update",access:"private",description:"<p>Updates resize, called when an element is grabbed and mouse moves</p>",scope:"instance",fires:["event:resizing"]},{name:"abort",description:"<p>Abort dragging</p>",scope:"instance"},{name:"grabResizeHandle",access:"private",description:"<p>Starts resizing, updates ResizeHelper#context with relevant info.</p>",parameters:[{name:"isTouch",type:"Boolean"},{name:"event",type:"MouseEvent"}],scope:"instance",returns:{type:"Boolean",description:"<p>True if handled, false if not</p>"}},{name:"checkResizeHandles",access:"private",description:"<p>Check if mouse is over a resize handle (virtual). If so, highlight.</p>",parameters:[{name:"event"}],scope:"instance"},{name:"updateResize",access:"private",description:"<p>Updates size of target (on mouse move).</p>",parameters:[{name:"event"}],scope:"instance"},{name:"finishResize",access:"private",description:"<p>Finalizes resize, fires drop.</p>",parameters:[{name:"event"}],scope:"instance",fires:["event:resize","event:cancel"]},{name:"abortResize",access:"private",description:"<p>Abort resizing</p>",scope:"instance",fires:["event:cancel"]},{name:"highlightHandle",access:"private",description:"<p>Highlights handles (applies css that changes cursor).</p>",scope:"instance"},{name:"unHighlightHandle",access:"private",description:"<p>Unhighlight handles (removes css).</p>",scope:"instance"},{name:"overLeftHandle",access:"private",description:"<p>Check if over left handle (virtual).</p>",parameters:[{name:"event",type:"MouseEvent",description:"<p>MouseEvent</p>"},{name:"target",type:"HTMLElement",description:"<p>The current target element</p>"}],scope:"instance",returns:{type:"Boolean",description:"<p>Returns true if mouse is over left handle, otherwise false</p>"}},{name:"overRightHandle",access:"private",description:"<p>Check if over right handle (virtual).</p>",parameters:[{name:"event",type:"MouseEvent",description:"<p>MouseEvent</p>"},{name:"target",type:"HTMLElement",description:"<p>The current target element</p>"}],scope:"instance",returns:{type:"Boolean",description:"<p>Returns true if mouse is over left handle, otherwise false</p>"}},{name:"overTopHandle",access:"private",description:"<p>Check if over top handle (virtual).</p>",parameters:[{name:"event",type:"MouseEvent",description:"<p>MouseEvent</p>"},{name:"target",type:"HTMLElement",description:"<p>The current target element</p>"}],scope:"instance",returns:{type:"Boolean",description:"<p>Returns true if mouse is over top handle, otherwise false</p>"}},{name:"overBottomHandle",access:"private",description:"<p>Check if over bottom handle (virtual).</p>",parameters:[{name:"event",type:"MouseEvent",description:"<p>MouseEvent</p>"},{name:"target",type:"HTMLElement",description:"<p>The current target element</p>"}],scope:"instance",returns:{type:"Boolean",description:"<p>Returns true if mouse is over bottom handle, otherwise false</p>"}}]},{name:"module:Core/helper/ResizeMonitor",classDescription:"<p>Allows size monitoring of elements (or optionally a Window instance).</p>\n<pre class=\"prettyprint source\"><code>ResizeMonitor.addResizeListener(\n  myElement,\n  element => {\n     console.log(element, ' changed size');\n  }\n);\n</code></pre>",access:"internal",constructor:{name:"constructor"},filename:"ResizeMonitor.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/helper",lineno:28,functions:[{name:"addResizeListener",description:"<p>Adds a resize listener to the passed element which is called when the element\nis resized by layout.</p>",parameters:[{name:"element",type:"HTMLElement",description:"<p>The element to listen for resizing.</p>"},{name:"handler",type:"function",description:"<p>The handling function. Will be passed the element.</p>"}],scope:"static"},{name:"removeResizeListener",description:"<p>Removes a resize listener from the passed element.</p>",parameters:[{name:"element",type:"HTMLElement",description:"<p>The element to listen for resizing.</p>"},{name:"handler",type:"function",description:"<p>The handling function to remove.</p>"}],scope:"static"}]},{name:"module:Core/helper/StringHelper",classDescription:"<p>Helper for string manipulation.</p>",constructor:{name:"constructor"},filename:"StringHelper.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/helper",lineno:22,functions:[{name:"capitalizeFirstLetter",description:"<p>Capitalizes the first letter of a string, myString -&gt; MyString.\nDoesn't alter the original string, use return value</p>",parameters:[{name:"string",description:"<p>String to capitalize</p>"}],scope:"static",returns:{type:"String",description:"<p>Capitalized string</p>"}},{name:"lowercaseFirstLetter",description:"<p>Makes the first letter of a string lowercase, MyString -&gt; myString.\nDoesn't alter the original string, use return value</p>",parameters:[{name:"string",description:"<p>String to alter</p>"}],scope:"static",returns:{type:"String",description:"<p>Altered string</p>"}},{name:"hyphenate",description:"<p>Converts the passed camelCased string to a hyphen-separated string. eg &quot;minWidth&quot; -&gt; &quot;min-width&quot;</p>",parameters:[{name:"string",description:"<p>The string to convert.</p>"}],scope:"static",returns:{type:"String",description:"<p>The string with adjoining lower and upper case letters\nseparated by hyphens and converted to lower case.</p>"}},{name:"safeJsonParse",description:"<p>Parses JSON within a try-catch.</p>",parameters:[{name:"string",type:"String",description:"<p>String to parse</p>"}],scope:"static",returns:{type:"Object",description:"<p>Resulting object or null if parse failed</p>"}},{name:"safeJsonStringify",description:"<p>Stringifies an object within a try-catch.</p>",parameters:[{name:"object",type:"Object",description:"<p>The object to stringify</p>"}],scope:"static",returns:{type:"Object",description:"<p>Resulting object or null if stringify failed</p>"}},{name:"createId",description:"<p>Creates an alphanuneric identifier from any passed string. Encodes spaces and non-alpha characters.</p>",parameters:[{name:"inString",description:"<p>The string from which to strip non-identifier characters.</p>"}],scope:"static",returns:{type:"String"}},{name:"joinPaths",description:"<p>Joins all given paths together using the separator as a delimiter and normalizes the resulting path.</p>",parameters:[{name:"paths",type:"Array",description:"<p>array of paths to join</p>"},{name:"pathSeparator",type:"String",description:"<p>[] path separator. Default value is '/'</p>",default:"/"}],scope:"static",returns:{type:"String"}}]},{name:"module:Core/helper/TemplateHelper",classDescription:"<p>Helper for template strings, use as tag function</p>",access:"internal",examples:["TemplateHelper.tpl`...`"],constructor:{name:"constructor"},filename:"TemplateHelper.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/helper",lineno:15,functions:[{name:"tpl",access:"private",description:"<p>Tag function for template literals that does some basic cleanup</p>",scope:"static"},{name:"docsTpl",access:"private",description:"<p>Tag function for template literals that does some basic cleanup. Version for docs that do not remove blank space,\nto keep code snippets formatting intact.</p>",scope:"static"}]},{name:"module:Core/helper/VersionHelper",classDescription:"<p>Helper for version handling</p>",access:"private",examples:["VersionHelper.setVersion('grid', '1.5');\n\nif (VersionHelper.getVersion('grid').isNewerThan('1.0')) {\n  ...\n}"],constructor:{name:"constructor"},filename:"VersionHelper.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/helper",lineno:25,functions:[{name:"setVersion",access:"private",description:"<p>Set version for specified product</p>",parameters:[{name:"product",type:"String"},{name:"version",type:"String"}],scope:"static"},{name:"getVersion",access:"private",description:"<p>Get (previously set) version for specified product</p>",parameters:[{name:"product",type:"String"}],scope:"static"},{name:"checkVersion",access:"internal",description:"<p>Checks the passed product against the passed version using the passed test.</p>",parameters:[{name:"product",type:"String",description:"<p>The name of the product to test the version of</p>"},{name:"version",type:"String",description:"<p>The version to test against</p>"},{name:"test",type:"String",description:"<p>The test operator, <code>&lt;=</code>, <code>&lt;</code>, <code>=</code>, <code>&gt;</code> or <code>&gt;=</code>.</p>"},{name:"message",type:"String",description:"<p>A warning message to log if the test is found to be true.</p>",optional:true}],scope:"static",returns:{type:"Boolean",description:"<p><code>true</code> if the test passes.</p>"}},{name:"deprecate",access:"internal",description:"<p>Based on a comparison of current product version and the passed version this method either outputs a console.warn or throws an error</p>",parameters:[{name:"product",type:"String",description:"<p>The name of the product</p>"},{name:"invalidAsOfVersion",type:"String",description:"<p>The version where the offending code is invalid (when any compatibility layer is actually removed)</p>"},{name:"message",type:"String",description:"<p>Required! A helpful warning message to show to the developer using a deprecated API.</p>"}],scope:"static"}]},{name:"module:Core/helper/WalkHelper",classDescription:"<p>Tree walking helper</p>",access:"internal",constructor:{name:"constructor"},filename:"WalkHelper.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/helper",lineno:9,functions:[{name:"preWalk",description:"<p>Pre-walks any hierarchical data structure</p>",parameters:[{name:"data",description:"<p>Walking starting point</p>"},{name:"childrenFn",type:"function",description:"<p>Function to return <code>data</code> children entries in an array\nor null if no children exists for the entry</p>"},{name:"fn",type:"function",description:"<p>Function to call on each entry</p>"}],scope:"static"},{name:"preWalkWithParent",description:"<p>Pre-walks any hierarchical data structure, passing along a link to the parent node</p>",parameters:[{name:"data",description:"<p>Walking starting point</p>"},{name:"childrenFn",type:"function",description:"<p>Function to return <code>data</code> children entries in an array\nor null if no children exists for the entry</p>"},{name:"fn",type:"function",description:"<p>Function to call on each entry, called with <code>parent</code> and <code>node</code></p>"}],scope:"static"},{name:"preWalkUnordered",description:'<p>Pre-walk unordered.</p>\n<p>Like <a href="#Core/helper/WalkHelper#function-preWalk-static">preWalk</a> but doesn\'t reverses children before walk,\nthus children will be walked last child first - first child last</p>',parameters:[{name:"data",description:"<p>Walking starting point</p>"},{name:"childrenFn",type:"function",description:"<p>Function to return <code>data</code> children entries in an array\nor null if no children exists for the entry</p>"},{name:"fn",type:"function",description:"<p>Function to call on each entry</p>"}],scope:"static"},{name:"postWalk",description:"<p>Post-walks any hierarchical data structure</p>",parameters:[{name:"data",description:"<p>Walking starting point</p>"},{name:"childrenFn",type:"function",description:"<p>Function to return <code>data</code> children entries in an array\nor null if no children exists for the entry</p>"},{name:"fn",type:"function",description:"<p>Function to call on each entry</p>"}],scope:"static"},{name:"prePostWalk",description:"<p>Pre/Post-walks any hierarchical data structure calling inFn each node when it walks in,\nand outFn when it walks out.</p>",parameters:[{name:"data",description:"<p>Walking starting point</p>"},{name:"childrenFn",type:"function",description:"<p>Function to return <code>data</code> children entries in an array\nor null if no children exists for the entry</p>"},{name:"inFn",type:"function",description:"<p>Function to call on each entry upon enter</p>"},{name:"outFn",type:"function",description:"<p>Function to call on each entry upon exit</p>"}],scope:"static"}]},{name:"module:Core/helper/WidgetHelper",classDescription:'<p>Helper for creating widgets. Needs an adapter to do the actual work, see\n<a href="#Core/adapter/widget/BryntumWidgetAdapter">Core.adapter.widget.BryntumWidgetAdapter</a> which is used in examples.</p>\n<p>NOTE: This concept is not yet fully realized.</p>',constructor:{name:"constructor"},filename:"WidgetHelper.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/helper",lineno:13,properties:[{name:"adapter",description:"<p>Gets/sets the adapter used for widgets. If not specified, it will default to <a href=\"#Core/adapter/widget/BryntumWidgetAdapter\">BryntumWidgetAdapter</a>\nautomatically as soon as this class is imported on the page. It's enough to use nameless import:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>import '../../lib/Core/adapter/widget/BryntumWidgetAdapter.js';\n</code></pre>\n<p><strong>Note:</strong> If you try to operate on widgets before adapter is set, you'll get an error.</p>",scope:"static",category:"Adapter",parameters:[{name:"adapterClass",description:"<p>Adapter class</p>"}]},{name:"hasAdapter",description:"<p>Checks if an adapter is assigned</p>",scope:"static",returns:[{type:{names:["Boolean"]}}],readonly:true,category:"Adapter"}],functions:[{name:"getById",description:"<p>Returns the widget with the specified id.</p>",parameters:[{name:"id",description:"<p>Id of widget to find</p>"}],scope:"static",category:"Querying",returns:{type:"Core.widget.Widget",description:"<p>The widget if any</p>"}},{name:"fromElement",description:"<p>Returns the Widget which owns the passed element (or event).</p>",parameters:[{name:"element",type:["HTMLElement","Event"],description:"<p>The element or event to start from</p>"},{name:"type",type:["String","function"],description:"<p>The type of Widget to scan upwards for. The lowercase\nclass name. Or a filter function which returns <code>true</code> for the required Widget.</p>",optional:true},{name:"limit",type:["HTMLElement","Number"],description:"<p>The number of components to traverse upwards to find a\nmatch of the type parameter, or the element to stop at.</p>",optional:true}],scope:"static",category:"Querying",typings:"any",returns:{type:"Core.widget.Widget",description:"<p>The found Widget or null.</p>"}},{name:"createWidget",description:"<p>Create a widget.</p>",parameters:[{name:"config",description:"<p>Widget config</p>"}],examples:["WidgetHelper.createWidget({\n  type: 'button',\n  icon: 'user',\n  text: 'Edit user'\n});"],scope:"static",category:"Widgets",returns:{type:"Object",description:"<p>The widget</p>"}},{name:"append",description:"<p>Appends a widget (array of widgets) to the DOM tree. If config is empty, widgets are appended to the DOM. To\nappend widget to certain position you can pass HTMLElement or its id as config, or as a config, that will be\napplied to all passed widgets.</p>\n<p>Usage:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>// Will append button as last item to element with id 'container'\nlet [button] = WidgetHelper.append({ type : 'button' }, 'container');\n\n// Same as above, but will add two buttons\nlet [button1, button2] = WidgetHelper.append([\n    { type : 'button' },\n    { type : 'button' }\n    ], { appendTo : 'container' });\n\n// Will append two buttons before element with id 'someElement'. Order will be preserved and all widgets will have\n// additional class 'my-cls'\nlet [button1, button2] = WidgetHelper.append([\n    { type : 'button' },\n    { type : 'button' }\n    ], {\n        insertBefore : 'someElement',\n        cls          : 'my-cls'\n    });\n</code></pre>",parameters:[{name:"widget",type:["Object","Array.<Object>"],description:"<p>Widget config or array of such configs</p>"},{name:"config",type:["HTMLElement","String","Object"],description:"<p>Element (or element id) to which to append the widget or config to apply to all passed widgets</p>",optional:true}],scope:"static",category:"Widgets",returns:{type:"Array.<Core.widget.Widget>",description:"<p>Array or widgets</p>"}},{name:"openPopup",description:"<p>Shows a popup (~tooltip) containing widgets connected to specified element.</p>",parameters:[{name:"element",description:"<p>Element to connect popup to</p>"},{name:"config",description:"<p>Config object, or string to use as html in popup</p>"}],examples:["WidgetHelper.openPopup(element, {\n  position: 'bottom center',\n  items: [\n     { widgetConfig }\n  ]\n});"],scope:"static",category:"Popups",returns:{type:["*","Object"]}},{name:"showContextMenu",description:"<p>Shows a context menu connected to the specified element.</p>",parameters:[{name:"element",type:["HTMLElement","Array.<Number>"],description:"<p>Element (or a coordinate) to show the context menu for</p>"},{name:"config",type:"Object",description:"<p>Context menu config, see example</p>"}],examples:["WidgetHelper.showContextMenu(element, {\n  items: [\n     { id: 'addItem', icon: 'add', text: 'Add' },\n     ...\n  ],\n  onItem: item => alert('Clicked ' + item.text)\n});"],scope:"static",category:"Popups",returns:{type:["*","Object"]}},{name:"attachTooltip",description:"<p>Attached a tooltip to the specified element.</p>",parameters:[{name:"element",description:"<p>Element to attach tooltip for</p>"},{name:"configOrText",description:"<p>Tooltip config or tooltip string, see example and source</p>"}],examples:["WidgetHelper.attachTooltip(element, {\n  text: 'Useful information goes here'\n});"],scope:"static",category:"Popups",returns:{type:"Object"}},{name:"hasTooltipAttached",description:"<p>Checks if element has tooltip attached</p>",parameters:[{name:"element",description:"<p>Element to check</p>"}],scope:"static",category:"Popups",returns:{type:"Boolean"}},{name:"destroyTooltipAttached",description:"<p>Destroys any tooltip attached to an element, removes it from the DOM and unregisters any tip related listeners\non the element.</p>",parameters:[{name:"element",description:"<p>Element to remove tooltip from</p>"}],scope:"static",category:"Popups"},{name:"mask",description:"<p>Masks the specified element, showing a message in the mask.</p>",parameters:[{name:"element",description:"<p>Element to mask</p>"},{name:"msg",description:"<p>Message to show in the mask</p>"}],scope:"static",category:"Mask"},{name:"unmask",description:"<p>Unmask the specified element.</p>",parameters:[{name:"element"}],scope:"static",category:"Mask"},{name:"toast",description:"<p>Show a toast</p>",parameters:[{name:"msg",type:"String",description:"<p>message to show in the toast</p>"}],scope:"static",category:"Mask"}]},{name:"module:Core/helper/mixin/DragHelperContainer",description:"<p>Mixin for DragHelper that handles dragging elements between containers (or rearranging within)</p>",mixin:true,constructor:{name:"constructor"},filename:"DragHelperContainer.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/helper/mixin",lineno:16,functions:[{name:"initContainerDrag",access:"private",description:"<p>Initialize container drag mode.</p>",scope:"instance"},{name:"grabContainerDrag",access:"private",description:"<p>Grab an element which can be dragged between containers.</p>",parameters:[{name:"event"}],scope:"instance",returns:{type:"Boolean"}},{name:"startContainerDrag",access:"private",description:"<p>Starts dragging, called when mouse moves first time after grabbing</p>",parameters:[{name:"event"}],scope:"instance"},{name:"updateContainerDrag",access:"private",description:"<p>Move the placeholder element into its new position on valid drag.</p>",parameters:[{name:"event"}],scope:"instance"},{name:"finishContainerDrag",access:"private",description:"<p>Finalize drag, fire drop.</p>",parameters:[{name:"event"}],scope:"instance",fires:["event:drop"]},{name:"abortContainerDrag",access:"private",description:"<p>Aborts a drag operation.</p>",parameters:[{name:"invalid",type:"Boolean",default:false,optional:true},{name:"event",type:"Object",optional:true},{name:"silent",type:"Boolean",default:false,optional:true}],scope:"instance"},{name:"updateContainerProxy",access:"private",description:"<p>Updates the drag proxy position.</p>",parameters:[{name:"event"}],scope:"instance"},{name:"moveNextTo",access:"private",description:"<p>Positions element being dragged in relation to targetElement.</p>",parameters:[{name:"targetElement"},{name:"event"}],scope:"instance"},{name:"revertPosition",access:"private",description:"<p>Moves element being dragged back to its original position.</p>",scope:"instance"}]},{name:"module:Core/helper/mixin/DragHelperTranslate",description:"<p>Mixin for DragHelper that handles repositioning (translating) an element within its container</p>",mixin:true,constructor:{name:"constructor"},filename:"DragHelperTranslate.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/helper/mixin",lineno:17,functions:[{name:"initTranslateDrag",access:"private",description:"<p>Initialize translation drag mode.</p>",scope:"instance"},{name:"grabTranslateDrag",access:"private",description:"<p>Grab an element which can be moved using translation.</p>",parameters:[{name:"event"}],scope:"instance",returns:{type:"Boolean"}},{name:"startTranslateDrag",access:"private",description:"<p>Start translating, called on first mouse move after dragging</p>",parameters:[{name:"event"}],scope:"instance"},{name:"applyConstraints",access:"private",description:"<p>Limit translation to outer bounds and specified constraints</p>",parameters:[{name:"element"},{name:"x"},{name:"y"}],scope:"instance",returns:{type:"Object"}},{name:"updateTranslateProxy",access:"private",description:"<p>Update elements translation on mouse move.</p>",parameters:[{name:"event"}],scope:"instance"},{name:"finishTranslateDrag",access:"private",description:"<p>Finalize drag, fire drop.</p>",parameters:[{name:"event"}],scope:"instance",fires:["event:drop"]},{name:"abortTranslateDrag",access:"private",description:"<p>Abort translation</p>",parameters:[{name:"invalid",default:false}],scope:"instance",fires:["event:abort"]}]},{name:"module:Core/helper/util/DomClassList",classDescription:"<p>This class encapsulates a list of CSS classes which can be set as the <code>className</code>\non an <code>HTMLElement</code>.</p>\n<p>Properties names set on this class equate to <em>adding</em> a class if the property's value\nis <em>truthy</em>, or removing a class if the value is <em>falsy</em>.</p>\n<pre class=\"prettyprint source lang-javascript\"><code>const myClassList = new DomClassList('b-test-button');\n\nmyClassList.add('test-class');\nmyClassList.important = 1;\n\nmyHtmlElement.className = myClassList; // Sets it to &quot;b-test-button test-class important&quot;\n</code></pre>",constructor:{name:"constructor"},filename:"DomClassList.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/helper/util",lineno:30,functions:[{name:"constructor",description:"<p>Initializes a new DomClassList.</p>",parameters:[{name:"classes",type:"String",description:"<p>CSS classes to create with</p>"}],scope:"inner"},{name:"clone",description:"<p>Returns a clone of this DomClassList with all the same keys set.</p>",scope:"instance",returns:{type:"Core.helper.util.DomClassList",description:"<p>A clone of this DomClassList.</p>"}},{name:"contains",description:"<p>Returns a Boolean value, indicating whether this ClassList has the specified CSS class name.</p>",parameters:[{name:"className",type:"String",description:"<p>CSS class name to check</p>"}],scope:"instance",returns:{type:"Boolean",description:"<p>true if this ClassList contains the passed CSS class name, false otherwise</p>"}},{name:"trim",description:"<p>Analogous to string.trim, returns the string value of this <code>DomClassList</code> with no trailing space.</p>",scope:"instance",returns:{type:"String",description:"<p>A concatenated string value of all the class names in this <code>DomClassList</code>\nseparated by spaces.</p>"}},{name:"isEqual",description:"<p>Compares this ClassList to another ClassList (or class name string of space separated classes).\nIf the <em>same class names, regardless of order</em> are present, the two are considered equal.</p>\n<p>So <code>new DomClassList('foo bar bletch').isEqual('bletch bar foo')</code> would return <code>true</code></p>",parameters:[{name:"other",type:["Core.helper.util.DomClassList","String"],description:"<p>The <code>DomClassList</code> or string of classes to compare to.</p>"}],scope:"instance",returns:{type:"Boolean",description:"<p><code>true</code> if the two contain the same class names.</p>"}},{name:"add",description:"<p>Add CSS class(es)</p>\n<pre class=\"prettyprint source\"><code>myClassList.add('bold', 'small');\n</code></pre>",parameters:[{name:"classes",type:"String",description:"<p>CSS classes to add</p>",isRestParam:true}],scope:"instance"},{name:"remove",description:"<p>Remove CSS class(es)</p>\n<pre class=\"prettyprint source\"><code>myClassList.remove('bold', 'small');\n</code></pre>",parameters:[{name:"classes",type:"String",description:"<p>CSS classes to remove</p>",isRestParam:true}],scope:"instance"},{name:"split",description:"<p>Analogous to the <code>String#split</code> method, but with no delimiter\nparameter. This method returns an array containing the individual\nCSS class names set.</p>",scope:"instance",returns:{type:"Array.<String>",description:"<p>The individual class names in this <code>DomClassList</code></p>"}}],properties:[{name:"value",description:"<p>Get/set string value.\nClass names separated with space.</p>",scope:"instance",properties:[{type:{names:["String"]}}]}]},{name:"module:Core/helper/util/Fullscreen",classDescription:"<p>Encapsulates the functionality related to switching cross-browser to full screen view and back.</p>",constructor:{name:"constructor"},filename:"Fullscreen.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/helper/util",lineno:10,properties:[{name:"enabled",description:"<p>True if the fullscreen mode is supported and enabled, false otherwise</p>",scope:"static",properties:[{type:{names:["Boolean"]}}]},{name:"isFullscreen",description:"<p>True if fullscreen mode is currently active, false otherwise</p>",scope:"static",returns:[{type:{names:["Boolean"]}}]}],functions:[{name:"request",description:"<p>Request entering the fullscreen mode.</p>",parameters:[{name:"element",type:"HTMLElement",description:"<p>Element to be displayed fullscreen</p>"}],scope:"static"},{name:"exit",description:"<p>Exit the previously entered fullscreen mode.</p>",scope:"static"},{name:"onFullscreenChange",description:"<p>Installs the passed listener to fullscreenchange event</p>",parameters:[{name:"fn",type:"function",description:"<p>The listener to install</p>"}],scope:"static"},{name:"unFullscreenChange",description:"<p>Uninstalls the passed listener from fullscreenchange event</p>",parameters:[{name:"fn",type:"function"}],scope:"static"}]},{name:"module:Core/helper/util/Navigator",classDescription:'<p>A helper class which allows keyboard navigation within the <a href="#Core/helper/util/Navigator#config-target">target</a> element.</p>',access:"private",constructor:{name:"constructor"},filename:"Navigator.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/helper/util",lineno:14,configs:[{name:"ownerCmp",description:"<p>The owning Widget which is using this Navigator.</p>",type:"Core.widget.Widget",scope:"inner"},{name:"target",description:"<p>The encapsulating element in which navigation takes place.</p>",type:"HTMLElement",scope:"inner"},{name:"keyEventTarget",description:'<p>The element which provides key events for navigation. Optional. Defaults to the <a href="#Core/helper/util/Navigator#config-target">target</a> element.</p>',type:"HTMLElement",scope:"inner"},{name:"processEvent",description:"<p>An optional key event processor which may preprocess the key event. Returning <code>null</code> prevents processing of the event.</p>",type:"function",scope:"inner"},{name:"itemSelector",description:'<p>A query selector which identifies descendant elements within the <a href="#Core/helper/util/Navigator#config-target">target</a> which are navigable.</p>',type:"String",scope:"inner"},{name:"focusCls",description:"<p>A CSS class name to add to focused elements.</p>",type:"String",scope:"inner",defaultvalue:"b-active"},{name:"keys",description:"<p>An object containing key definitions keys by the key name eg:</p>\n<pre class=\"prettyprint source lang-javascript\"><code> keys : {\n     &quot;CTRL+SPACE&quot; : 'onCtrlSpace',\n     ENTER        : 'onEnterKey'\n }```\n\nThe <a href=\"#Core/helper/util/Navigator#config-ownerCmp\">ownerCmp</a> is used as the `this` reference and to resolve string method names.\n\nModified key names must be created prepending one or more `'CTRL+'`, `'SHIFT+'`, `'ALT+'`\nin that order, for example `&quot;CTRL+SHIFT+ENTER&quot; : 'showMenu'`</code></pre>",type:"Object",scope:"inner"},{name:"allowCtrlKey",description:"<p>Configure as <code>true</code> to also navigate when the <code>CTRL</code> modifier key is used along with\nnavigation keys.</p>",type:"Boolean",scope:"inner",defaultvalue:"false"},{name:"allowShiftKey",description:"<p>Configure as <code>true</code> to also navigate when the <code>SHIFT</code> modifier key is used along with\nnavigation keys.</p>",type:"Boolean",scope:"inner",defaultvalue:"false"}],events:[{name:"navigate",description:"<p>Fired when a user gesture causes the active item to change <em>or become <code>null</code></em>.</p>",parameters:[{name:"event",type:"Event",description:"<p>The browser event which instigated navigation. May be a click or key or focus move event.</p>"},{name:"item",type:"HTMLElement",description:"<p>The newly active item, or <code>null</code> if focus moved out.</p>"}]}]},{name:"module:Core/helper/util/Point",classDescription:"<p>Encapsulates an X,Y coordinate point.</p>",description:"<p>Constructs a Point</p>",extends:["Core/helper/util/Rectangle"],constructor:{name:"constructor",parameters:[{name:"x",description:"<p>The X coordinate</p>"},{name:"y",description:"<p>The Y coordinate</p>"}]},filename:"Point.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/helper/util",lineno:29,functions:[{name:"from",description:"<p>Creates a new Point encapsulating the event's page position.</p>",parameters:[{name:"event",type:"Event"}],scope:"static",typings:"ignore",returns:{type:"Core.helper.util.Point"}},{name:"constrain",description:"<p>Coerces this Point to be within the passed Rectangle. Translates it into the bounds.</p>",parameters:[{name:"into",type:"Core.helper.util.Rectangle",description:"<p>The Rectangle into which to coerce this Point.</p>"}],scope:"instance"}]},{name:"module:Core/helper/util/RandomGenerator",classDescription:"<p>Generates pseudo random numbers from predefined sequence of 100 numbers</p>",constructor:{name:"constructor"},filename:"RandomGenerator.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/helper/util",lineno:10,functions:[{name:"nextRandom",description:"<p>Returns next pseudo random integer number from sequence between 0 and max parameter value (99 is maximum value)</p>",parameters:[{name:"max",description:"<p>max value</p>"}],scope:"instance",returns:{type:"number"}},{name:"reset",description:"<p>Resets sequence to initial number</p>",scope:"instance"},{name:"fromArray",description:"<p>Returns pseudo random array element</p>",parameters:[{name:"array",description:"<p>input array</p>"}],scope:"instance",returns:{type:"*"}}]},{name:"module:Core/helper/util/Rectangle",classDescription:"<p>Encapsulates rectangular areas for comparison, intersection etc.</p>\n<p>Note that the <code>right</code> and <code>bottom</code> properties are <em>exclusive</em>.</p>",description:"<p>Constructs a Rectangle</p>",constructor:{name:"constructor",parameters:[{name:"x",type:"Number",description:"<p>The X coordinate</p>"},{name:"y",type:"Number",description:"<p>The Y coordinate</p>"},{name:"width",type:"Number",description:"<p>The width</p>"},{name:"height",type:"Number",description:"<p>The height</p>"}]},filename:"Rectangle.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/helper/util",lineno:308,functions:[{name:"from",description:"<p>Returns the Rectangle in document based coordinates of the passed element.</p>\n<p><em>Note:</em> If the element passed is the <code>document</code> or <code>window</code> the <code>window</code>'s\nrectangle is returned which is always at <code>[0, 0]</code> and encompasses the\nbrowser's entire document viewport.</p>",parameters:[{name:"element",type:"HTMLElement",description:"<p>The element to calculate the Rectangle for.</p>"},{name:"relativeTo",type:"HTMLElement",description:"<p>Optionally, a parent element in whose space to calculate the Rectangle.</p>",optional:true},{name:"ignorePageScroll",type:"Boolean",description:"<p>Use browser viewport based coordinates.</p>",default:false,optional:true}],scope:"static",returns:{type:"Core.helper.util.Rectangle",description:"<p>The Rectangle in document based (or, optionally viewport based) coordinates. Relative to the <em>relativeTo</em> parameter if passed.</p>"}},{name:"inner",description:"<p>Returns the inner Rectangle (within border) in document based coordinates\nof the passed element.</p>",parameters:[{name:"element",description:"<p>The element to calculate the Rectangle for.</p>"},{name:"relativeTo",type:"HTMLElement",description:"<p>Optionally, a parent element in whose space to calculate the Rectangle.</p>",optional:true},{name:"ignorePageScroll",type:"Boolean",description:"<p>Use browser viewport based coordinates.</p>",default:false,optional:true}],scope:"static",returns:{type:"Core.helper.util.Rectangle",description:"<p>The Rectangle in document based (or, optionally viewport based) coordinates. Relative to the <em>relativeTo</em> parameter if passed.</p>"}},{name:"content",description:"<p>Returns the content Rectangle (within border and padding) in document based coordinates\nof the passed element.</p>",parameters:[{name:"element",description:"<p>The element to calculate the Rectangle for.</p>"},{name:"relativeTo",type:"HTMLElement",description:"<p>Optionally, a parent element in whose space to calculate the Rectangle.</p>",optional:true},{name:"ignorePageScroll",type:"Boolean",description:"<p>Use browser viewport based coordinates.</p>",default:false,optional:true}],scope:"static",returns:{type:"Core.helper.util.Rectangle",description:"<p>The Rectangle in document based (or, optionally viewport based) coordinates. Relative to the <em>relativeTo</em> parameter if passed.</p>"}},{name:"client",description:"<p>Returns the client Rectangle (within border and padding and scrollbars) in document based coordinates\nof the passed element.</p>",parameters:[{name:"element",description:"<p>The element to calculate the Rectangle for.</p>"},{name:"relativeTo",type:"HTMLElement",description:"<p>Optionally, a parent element in whose space to calculate the Rectangle.</p>",optional:true},{name:"ignorePageScroll",type:"Boolean",description:"<p>Use browser viewport based coordinates.</p>",default:false,optional:true}],scope:"static",returns:{type:"Core.helper.util.Rectangle",description:"<p>The Rectangle in document based (or, optionally viewport based) coordinates. Relative to the <em>relativeTo</em> parameter if passed.</p>"}},{name:"union",description:"<p>Returns a new rectangle created as the union of all supplied rectangles.</p>",parameters:[{name:"rectangles",type:"Array.<Core.helper.util.Rectangle>",isRestParam:true}],scope:"static",returns:{type:"Core.helper.util.Rectangle"}},{name:"round",description:'<p>Rounds this Rectangle to the pixel resolution of the current display or to the nearest\npassed unit which defaults to the current display\'s <a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/devicePixelRatio"><code>devicePixelRatio</code></a>.</p>',scope:"instance",deprecated:true},{name:"roundPx",description:'<p>Rounds this Rectangle to the pixel resolution of the current display or to the nearest\npassed unit which defaults to the current display\'s <a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/devicePixelRatio"><code>devicePixelRatio</code></a>.</p>',parameters:[{name:"devicePixelRatio",description:"<p>device pixel ratio which defaults to <code>window.devicePixelRatio</code></p>",optional:true}],scope:"instance"},{name:"clone",description:"<p>Creates a copy of this Rectangle.</p>",scope:"instance"},{name:"contains",description:'<p>Returns <code>true</code> if this Rectangle wholly contains the passed rectangle.</p>\n<p>Note that a <a href="#Core/helper/util/Point">Core.helper.util.Point</a> may be passed.</p>',parameters:[{name:"other",description:"<p>The Rectangle to test for containment within this Rectangle</p>"}],scope:"instance",returns:{type:"Boolean",description:"<p><code>true</code> if the other Rectangle is wholly contained within this Rectangle</p>"}},{name:"intersect",description:"<p>Checks if this Rectangle intersects the passed Rectangle</p>",parameters:[{name:"other",type:"Core.helper.util.Rectangle",description:"<p>The Rectangle to intersect with this.</p>"},{name:"useBoolean",type:"Boolean",description:"<p>Specify <code>true</code> to return a boolean value instead of constructing a new Rectangle</p>",default:false},{name:"allowZeroDimensions",type:"Boolean",description:"<p><code>true</code> to consider zero-width or zero-hight rectangles as intersecting if coordinates indicate the intersection</p>",default:false}],scope:"instance",returns:{type:["Core.helper.util.Rectangle","Boolean"],description:"<p>Returns the intersection Rectangle or <code>false</code> if there is no intersection.</p>"}},{name:"translate",description:"<p>Translates this Rectangle by the passed vector. Size is maintained.</p>",parameters:[{name:"x",type:"Number",description:"<p>The X translation vector.</p>"},{name:"y",type:"Number",description:"<p>The Y translation vector.</p>"}],scope:"instance",returns:{description:"<p>This Rectangle;</p>"}},{name:"moveTo",description:"<p>Moves this Rectangle to the passed <code>x</code>, <code>y</code> position. Size is maintained.</p>",parameters:[{name:"x",type:"Number",description:"<p>The new X position.</p>"},{name:"y",type:"Number",description:"<p>The new Y position.</p>"}],scope:"instance",returns:{description:"<p>This Rectangle;</p>"}},{name:"getDelta",description:"<p>Returns the vector which would translate this Rectangle (or Point) to the same position as the other Rectangle (or point)</p>",parameters:[{name:"other",type:["Core.helper.util.Rectangle","Core.helper.util.Point"],description:"<p>The Rectangle or Point to calculate the delta to.</p>"}],scope:"instance"},{name:"adjust",description:"<p>Modifies the bounds of this Rectangle by the specified deltas.</p>",parameters:[{name:"x",type:"Number",description:"<p>How much to <em>add</em> to the x position.</p>"},{name:"y",type:"Number",description:"<p>How much to <em>add</em> to the y position.</p>"},{name:"width",type:"Number",description:"<p>How much to add to the width.</p>"},{name:"height",type:"Number",description:"<p>How much to add to the height.</p>"}],scope:"instance",returns:{description:"<p>This Rectangle</p>"}},{name:"inflate",description:"<p>Modifies the bounds of this rectangle by moving them by the specified amount in all directions.</p>",parameters:[{name:"amount",type:"Number",description:"<p>How much to inflate</p>"}],scope:"instance",returns:{type:"Core.helper.util.Rectangle",description:"<p>This Rectangle</p>"}},{name:"constrainTo",description:"<p>Attempts constrain this Rectangle into the passed Rectangle. If the <code>strict</code> parameter is <code>true</code>\nthen this method will return <code>false</code> if constraint could not be acheived.</p>\n<p>If this Rectangle has a <code>minHeight</code> or <code>minWidth</code> property, size will be adjusted while attempting to constrain.</p>\n<p>Right and bottom are adjusted first leaving the top and bottom sides to &quot;win&quot; in the case that this Rectangle overflows\nthe constrainTo Rectangle.</p>",parameters:[{name:"constrainTo",type:"Core.helper.util.Rectangle",description:"<p>The Rectangle to constrain this Rectangle into if possible.</p>"},{name:"strict",type:"Boolean",description:"<p>Pass <code>true</code> to return false, and leave this Rectangle unchanged if constraint\ncould not be achieved.</p>"}],scope:"instance",returns:{description:"<p>This Rectangle. If <code>strict</code> is true, and constraining was not successful, <code>false</code>.</p>"}},{name:"alignTo",description:'<p>Returns a cloned version of this Rectangle aligned to a target Rectangle, or element or <a href="#Core/widget/Widget">Core.widget.Widget</a>.</p>',parameters:[{name:"spec",type:"Object",description:"<p>Alignment specification.</p>"},{name:"spec.target",type:["HTMLElement","Core.widget.Widget","Core.helper.util.Rectangle"],description:"<p>The Widget or element or Rectangle to align to.</p>",isSubParam:true},{name:"spec.anchorSize",type:"Array.<Number>",description:"<p>The <code>[width, height]</code> of the anchor pointer when in <code>top</code> position. The\nwidth is the baseline length, and the height is the height of the arrow. If passed, the anchor position\nwill be calculated to be at the centre of the overlap of the two aligned edges and returned in the <code>anchor</code>\nproperty of the resulting Rectangle:</p>\n<pre><code>{\n    edge: 'top',         // or 'right' or 'bottom' or 'left'\n    x/y: offset          // dimension to translate and value to translate by.\n}</code></pre>",optional:true,isSubParam:true},{name:"spec.anchorPosition",type:"Object",description:"<p>an <code>{ x: n, y: n }</code> anchor translation to be used <em>if the requested alignment\nsucceeds without violating constraints</em>. If a fallback alignment is used, the anchor will be centered in the\noverlap of the aligned edges as usual.</p>",optional:true,isSubParam:true},{name:"spec.overlap",type:"Boolean",description:"<p>True to allow this to overlap the target.</p>",optional:true,isSubParam:true},{name:"spec.align",type:"String",description:"<p>The edge alignment specification string, specifying two points to bring together.\nThe form is <code>[trblc][n]-[trblc][n]. The </code>n<code>is a percentage offset along that edge which defines the alignment point. This is not valid for alignment point</code>c<code>. For example </code>t0-b0' would align this Rectangle's top left corner with the bottom left corner of the <code>target</code>.</p>",isSubParam:true},{name:"spec.constrainTo",type:["HTMLElement","Core.widget.Widget","Core.helper.util.Rectangle"],description:"<p>The Widget or Element or Rectangle to constrain to.\nIf the requested alignment cannot be constrained (it will first shrink the resulting Rectangle according\nto the <code>minWidth</code> and <code>minHeight</code> properties of this rectangle), then it will try aligning at other edges\n(honouring the <code>axisLock</code> option), and pick the fallback alignment which results in the shortest translation.</p>",optional:true,isSubParam:true},{name:"spec.axisLock",type:"Boolean",description:"<p>Specify as a truthy value to fall back to aligning against the opposite\nedge first if the requested alignment cannot be constrained into the <code>constrainTo</code> option. If specified\nas <code>'flexible'</code>, then fallback will continue searching for solutions on the remaining two sides.</p>",optional:true,isSubParam:true},{name:"spec.offset",type:["Number","Array.<Number>"],description:"<p>The 'x' and 'y' offset values to create an extra margin round the target\nto offset the aligned widget further from the target. May be configured as -ve to move the aligned widget\ntowards the target - for example producing the effect of the anchor pointer piercing the target.</p>",optional:true,isSubParam:true},{name:"spec.constrainPadding",type:"Number",description:"<p>The amount of pixels to pad from the constraining element</p>",optional:true,isSubParam:true}],scope:"instance",returns:{type:"Core.helper.util.Rectangle",description:"<p>A new Rectangle aligned as requested if possible, but if the requested position violates\nthe <code>constrainTo</code> Rectangle, the shortest translation from the requested position which obeys constraints will be used.</p>"}},{name:"getAlignmentPoint",description:"<p>Returns the <code>[x, y]</code> position of the specified anchor point of this Rectangle in <edge><offset> format.\nfor example passing &quot;t50&quot; will return the centre point of the top edge, passing &quot;r0&quot; will return the start\nposition of the right edge (the top right corner).</p>\n<p>Note that the offset defaults to 50, so &quot;t&quot; means the centre of the top edge.</p>",parameters:[{name:"alignmentPoint",type:"String",description:"<p>The alignment point to calculate. Must match the RegExp <code>[trbl]\\d*</code></p>"},{name:"margins",type:"Array.<Number>",description:"<p>The <code>[x, y]</code> margins to add from the left/right, top/bottom edge.</p>"}],scope:"instance"},{name:"highlight",description:'<p>Highlights this Rectangle using the highlighting effect of <a href="#Core/helper/DomHelper">Core.helper.DomHelper</a>\non a transient element which encapsulates the region\'s area.</p>',scope:"instance"}],properties:[{name:"center",description:"<p>The center point of this rectangle.</p>",scope:"instance",properties:[{type:{names:["Core.helper.util.Point"]}}]},{name:"x",description:'<p>Get/sets the X coordinate of the Rectangle. Note that this does <em>not</em> translate the\nRectangle. The requested <a href="#Core/helper/util/Rectangle#property-width">width</a> will change.</p>',scope:"instance",properties:[{type:{names:["Number"]}}]},{name:"left",description:"<p>Alias for x. To match DOMRect.</p>",scope:"instance",properties:[{type:{names:["Number"]}}]},{name:"top",description:"<p>Alias for y. To match DOMRect.</p>",scope:"instance",properties:[{type:{names:["Number"]}}]},{name:"y",description:'<p>Get/sets the Y coordinate of the Rectangle. Note that this does <em>not</em> translate the\nRectangle. The requested <a href="#Core/helper/util/Rectangle#property-height">height</a> will change.</p>',scope:"instance",properties:[{type:{names:["Number"]}}]},{name:"width",description:'<p>Get/sets the width of the Rectangle. Note that the requested <a href="#Core/helper/util/Rectangle#property-right">right</a> will change.</p>',scope:"instance",properties:[{type:{names:["Number"]}}]},{name:"height",description:'<p>Get/sets the height of the Rectangle. Note that the requested <a href="#Core/helper/util/Rectangle#property-bottom">bottom</a> will change.</p>',scope:"instance",properties:[{type:{names:["Number"]}}]},{name:"right",description:'<p>Get/sets the right edge of the Rectangle. Note that the requested <a href="#Core/helper/util/Rectangle#property-width">width</a> will change.</p>\n<p>The right edge value is exclusive of the calculated rectangle width. So x=0 and right=10\nmeans a width of 10.</p>',scope:"instance",properties:[{type:{names:["Number"]}}]},{name:"bottom",description:'<p>Get/sets the bottom edge of the Rectangle. Note that the requested <a href="#Core/helper/util/Rectangle#property-height">height</a> will change.</p>\n<p>The bottom edge value is exclusive of the calculated rectangle height. So y=0 and bottom=10\nmeans a height of 10.</p>',scope:"instance",properties:[{type:{names:["Number"]}}]}]},{name:"module:Core/helper/util/Scroller",classDescription:'<p>Encapsulates scroll functionality for a Widget. All requests for scrolling and scrolling information\nmust go through a Widget\'s <a href="#Core/widget/Widget#config-scrollable">scrollable</a> property.</p>',extends:["Core/Base"],mixes:["Core/mixin/Events","Core/mixin/Delayable"],constructor:{name:"constructor"},filename:"Scroller.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/helper/util",lineno:43,configs:[{name:"element",description:"<p>The element which is to scroll.</p>",type:"HTMLElement",scope:"inner"},{name:"overflowX",description:"<p>How to handle overflowing in the <code>X</code> axis.\nMay be:</p>\n<ul>\n<li><code>'auto'</code></li>\n<li><code>'visible'</code></li>\n<li><code>'hidden'</code></li>\n<li><code>'scroll'</code></li>\n<li><code>'hidden-scroll'</code> Meaning scrollable from the UI but with no scrollbar,\nfor example a grid header. Only on platforms which support this feature.</li>\n<li><code>true</code> - meaning <code>'auto'</code></li>\n<li><code>false</code> - meaning <code>'hidden'</code></li>\n</ul>",type:["String","Boolean"],scope:"inner"},{name:"overflowY",description:"<p>How to handle overflowing in the <code>Y</code> axis.\nMay be:</p>\n<ul>\n<li><code>'auto'</code></li>\n<li><code>'visible'</code></li>\n<li><code>'hidden'</code></li>\n<li><code>'scroll'</code></li>\n<li><code>'hidden-scroll'</code> Meaning scrollable from the UI but with no scrollbar.\nOnly on platforms which support this feature.</li>\n<li><code>true</code> - meaning <code>'auto'</code></li>\n<li><code>false</code> - meaning <code>'hidden'</code></li>\n</ul>",type:["String","Boolean"],scope:"inner"},{name:"translate",description:'<p>If configured as <code>true</code>, the <a href="#Core/helper/util/Scroller#config-element">element</a> is not scrolled\nbut is translated using CSS transform when controlled by this class\'s API.\nScroll events are fired when the element is translated.</p>',type:"Boolean",scope:"inner"}],events:[{name:"scroll",description:"<p>Fired when scrolling happens on this Scroller's element. The event object is a native <code>scroll</code> event\nwith the described extra properties injected.</p>",parameters:[{name:"widget",type:"Core.widget.Widget",description:"<p>The owning Widget which has been scrolled.</p>"},{name:"source",type:"Core.helper.util.Scroller",description:"<p>This Scroller</p>"}]},{name:"scrollend",description:"<p>Fired when scrolling finished on this Scroller's element. The event object is the last native <code>scroll</code> event\nfires by the element with the described extra properties injected.</p>",parameters:[{name:"widget",type:"Core.widget.Widget",description:"<p>The owning Widget which has been scrolled.</p>"},{name:"source",type:"Core.helper.util.Scroller",description:"<p>This Scroller</p>"}]}],functions:[{name:"addPartner",description:"<p>Partners this Scroller with the passed scroller in order to sync the scrolling position in the passed axes</p>",parameters:[{name:"otherScroller",type:"Core.helper.util.Scroller"},{name:"axes",type:["String","Object"],description:"<p><code>'x'</code> or <code>'y'</code> or <code>{x: true/false, y: true/false}</code> axes to sync</p>",default:"'x'",optional:true}],scope:"instance"},{name:"removePartner",description:'<p>Breaks the link between this Scroller and the passed Scroller set up by the\n<a href="#Core/helper/util/Scroller#function-addPartner">addPartner</a> method.</p>',parameters:[{name:"otherScroller",type:"Core.helper.util.Scroller",description:"<p>The Scroller to unlink from.</p>"}],scope:"instance"},{name:"scrollIntoView",description:'<p>Scrolls the passed element or <a href="#Core/helper/util/Rectangle">Core.helper.util.Rectangle</a> into view according to the passed options.</p>',parameters:[{name:"element",type:["HTMLElement","Core.helper.util.Rectangle"],description:"<p>The element or a Rectangle in document space to scroll into view.</p>"},{name:"options",type:"Object",description:"<p>How to scroll.</p>",optional:true},{name:"options.block",type:"String",description:"<p>How far to scroll the element: <code>start/end/center/nearest</code>.</p>",optional:true,isSubParam:true},{name:"options.edgeOffset",type:"Number",description:"<p>edgeOffset A margin around the element or rectangle to bring into view.</p>",optional:true,isSubParam:true},{name:"options.animate",type:["Object","Boolean","Number"],description:"<p>Set to <code>true</code> to animate the scroll by 300ms,\nor the number of milliseconds to animate over, or an animation config object.</p>",optional:true,isSubParam:true},{name:"options.animate.duration",type:"Number",description:"<p>The number of milliseconds to animate over.</p>",optional:true,isSubParam:true},{name:"options.animate.easing",type:"String",description:"<p>The name of an easing function.</p>",optional:true,isSubParam:true},{name:"options.highlight",type:"Boolean",description:"<p>Set to <code>true</code> to highlight the element when it is in view.</p>",optional:true,isSubParam:true},{name:"options.focus",type:"Boolean",description:"<p>Set to <code>true</code> to focus the element when it is in view.</p>",optional:true,isSubParam:true},{name:"options.x",type:"Boolean",description:"<p>Pass as <code>false</code> to disable scrolling in the <code>X</code> axis.</p>",optional:true,isSubParam:true},{name:"options.y",type:"Boolean",description:"<p>Pass as <code>false</code> to disable scrolling in the <code>Y</code> axis.</p>",optional:true,isSubParam:true}],scope:"instance",returns:{type:"Promise",description:"<p>A promise which is resolved when the element has been scrolled into view.</p>"},async:true},{name:"scrollBy",description:"<p>Scrolls by the passed deltas according to the passed options.</p>",parameters:[{name:"xDelta",type:"Number",description:"<p>How far to scroll in the X axis.</p>",default:0,optional:true},{name:"yDelta",type:"Number",description:"<p>How far to scroll in the Y axis.</p>",default:0,optional:true},{name:"options",type:["Object","Boolean"],description:"<p>How to scroll. May be passed as <code>true</code> to animate.</p>",optional:true},{name:"options.silent",type:"Boolean",description:"<p>Set to <code>true</code> to suspend <code>scroll</code> events during scrolling.</p>",optional:true,isSubParam:true},{name:"options.animate",type:["Object","Boolean","Number"],description:"<p>Set to <code>true</code> to animate the scroll by 300ms,\nor the number of milliseconds to animate over, or an animation config object.</p>",optional:true,isSubParam:true},{name:"options.animate.duration",type:"Number",description:"<p>The number of milliseconds to animate over.</p>",optional:true,isSubParam:true},{name:"options.animate.easing",type:"String",description:"<p>The name of an easing function.</p>",optional:true,isSubParam:true}],scope:"instance",returns:{type:"Promise",description:"<p>A promise which is resolved when the scrolling has fnished.</p>"},async:true},{name:"scrollTo",description:"<p>Scrolls to the passed position according to the passed options.</p>",parameters:[{name:"toX",type:"Number",description:"<p>Where to scroll to in the X axis.</p>",default:0,optional:true},{name:"toY",type:"Number",description:"<p>Where to scroll to in the Y axis.</p>",default:0,optional:true},{name:"options",type:["Object","Boolean"],description:"<p>How to scroll. May be passed as <code>true</code> to animate.</p>",optional:true},{name:"options.animate",type:["Object","Boolean","Number"],description:"<p>Set to <code>true</code> to animate the scroll by 300ms,\nor the number of milliseconds to animate over, or an animation config object.</p>",optional:true,isSubParam:true},{name:"options.animate.duration",type:"Number",description:"<p>The number of milliseconds to animate over.</p>",optional:true,isSubParam:true},{name:"options.animate.easing",type:"String",description:"<p>The name of an easing function.</p>",optional:true,isSubParam:true}],scope:"instance",returns:{type:"Promise",description:"<p>A promise which is resolved when the scrolling has finished.</p>"},async:true},{name:"onElMutation",access:"private",description:"<p>Respond to style changes to monitor scroll <em>when this Scroller is in <code>translate: true</code> mode.</em></p>",parameters:[{name:"mutations",type:"Array.<Object>",description:"<p>The ElementMutation records.</p>"}],scope:"instance"},{name:"getDeltaTo",access:"internal",description:"<p>Returns the xDelta and yDelta values in an object from the current scroll position to the\npassed element or Rectangle.</p>",parameters:[{name:"element",type:["HTMLElement","Core.helper.util.Rectangle"],description:"<p>The element or a Rectangle to calculate deltas for.</p>"},{name:"options",type:"Object",description:"<p>How to scroll.</p>",optional:true},{name:"options.block",type:"String",description:"<p>How far to scroll the element: <code>start/end/center/nearest</code>.</p>",optional:true,isSubParam:true},{name:"options.edgeOffset",type:"Number",description:"<p>A margin around the element or rectangle to bring into view.</p>",optional:true,isSubParam:true},{name:"options.x",type:"Boolean",description:"<p>Pass as <code>false</code> to disable scrolling in the <code>X</code> axis.</p>",optional:true,isSubParam:true},{name:"options.y",type:"Boolean",description:"<p>Pass as <code>false</code> to disable scrolling in the <code>Y</code> axis.</p>",optional:true,isSubParam:true}],scope:"instance",returns:{type:"Object",description:"<p><code>{ xDelta, yDelta }</code></p>"}}],properties:[{name:"viewport",description:'<p>A <a href="#Core/helper/util/Rectangle">Rectangle</a> describing the bounds of the scrolling viewport.</p>',scope:"instance",properties:[{type:{names:["Core.helper.util.Rectangle"]}}]},{name:"x",description:"<p>The horizontal scroll position of the widget.</p>",scope:"instance",properties:[{type:{names:["Number"]}}]},{name:"y",description:"<p>The vertical scroll position of the widget.</p>",scope:"instance",properties:[{type:{names:["Number"]}}]},{name:"maxX",description:"<p>The maximum <code>X</code> scrollable position of the widget.</p>",scope:"instance",readonly:true,properties:[{type:{names:["Number"]}}]},{name:"maxY",description:"<p>The maximum <code>Y</code> scrollable position of the widget.</p>",scope:"instance",readonly:true,properties:[{type:{names:["Number"]}}]},{name:"overflowX",description:"<p>The <code>overflow-x</code> setting for the widget. <code>true</code> means <code>'auto'</code>.</p>",scope:"instance",properties:[{type:{names:["Boolean","String"]}}]},{name:"overflowY",description:"<p>The <code>overflow-y</code> setting for the widget. <code>true</code> means <code>'auto'</code>.</p>",scope:"instance",properties:[{type:{names:["Boolean","String"]}}]},{name:"scrollWidth",description:"<p>The horizontal scroll range of the widget.</p>",scope:"instance",readonly:true,properties:[{type:{names:["Number"]}}]},{name:"scrollHeight",description:"<p>The vertical scroll range of the widget. May be set to larger than the actual data\nheight to enable virtual scrolling. This is how the grid extends its scroll range\nwhile only rendering a small subset of the dataset.</p>",scope:"instance",properties:[{type:{names:["Number"]}}]},{name:"clientWidth",description:"<p>The client width of the widget.</p>",scope:"instance",readonly:true,properties:[{type:{names:["Number"]}}]},{name:"clientHeight",description:"<p>The client height of the widget.</p>",scope:"instance",readonly:true,properties:[{type:{names:["Number"]}}]},{name:"id",description:"<p>The unique ID of this Scroller</p>",scope:"instance",readonly:true,properties:[{type:{names:["String"]}}]}]},{name:"module:Core/localization/LocaleHelper",classDescription:"<p>Provides locale management methods.</p>",constructor:{name:"constructor"},filename:"LocaleHelper.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/localization",lineno:8,functions:[{name:"mergeLocales",description:"<p>Merges all properties of provided locales into new locale.\nLocales are merged in order they provided and locales wich go later replace same properties of previous locales.</p>",parameters:[{name:"locales",type:"Object",description:"<p>Locales to merge</p>",isRestParam:true}],scope:"static",returns:{type:"Object",description:"<p>Merged locale</p>"}},{name:"trimLocale",description:"<p>Removes all properties from <code>locale</code> that are present in the provided <code>trimLocale</code>.</p>",parameters:[{name:"locale",type:"Object",description:"<p>locales to merge</p>"},{name:"trimLocale",type:"Object",description:"<p>locales to merge</p>"}],scope:"static"},{name:"publishLocale",description:"<p>Put the locale under <code>window.bryntum.locales</code> to make sure it can be discovered automatically</p>",parameters:[{name:"localeName",type:"String",description:"<p>Locale name</p>"},{name:"config",type:"Object",description:"<p>Locale config</p>"}],scope:"static"}]},{name:"LocaleManager",classDescription:"<p>Singleton that handles switching locale. Locales can be included on page with <code>&lt;script type=&quot;module&quot;&gt;</code> tags or\nloaded using ajax. When using script tags the first locale loaded is used per default, if another should be used as\ndefault specify it on the script tag for the grid (see example below).</p>\n<pre class=\"prettyprint source\"><code>// Using Ecma 6 modules\n&lt;script type=&quot;module&quot; src=&quot;./Core/localization/SvSE.js&quot;&gt;\n\n// Specify default when using scripts\n&lt;script src=&quot;build/locales/grid.locale.SvSE.js&quot;&gt;\n&lt;script data-default-locale=&quot;En&quot; src=&quot;build/grid-all.js&quot;&gt;\n\nimport LocaleManager from 'Core/localization/LocaleManager.js';\n// Set locale using method\nLocaleManager.applyLocale('SvSE');\n// Or set locale using property\nLocaleManager.locale = LocaleManager.locales.SvSE;\n</code></pre>",constructor:{name:"constructor"},filename:"LocaleManager.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/localization",lineno:32,singleton:true,demo:{product:"grid",demo:"localization"},properties:[{name:"locales",description:'<p>Get currently registered locales.\nReturns an object with locale names (<code>localeName</code>) as properties.</p>\n<p>Example:</p>\n<pre class="prettyprint source"><code>const englishLocale = LocaleManager.locales.En;\n</code></pre>\n<p>this returns registered English locale object.</p>\n<pre class="prettyprint source"><code>{\n  &quot;desc&quot;: &quot;English&quot;,\n  &quot;locale&quot;: {\n    &quot;localeName&quot;: &quot;En&quot;,\n    &quot;localeDesc&quot;: &quot;English&quot;,\n\n    ... (localization goes here)\n\n  }\n}\n</code></pre>',scope:"static",readonly:true,properties:[{type:{names:["Object"]}}]},{name:"locale",description:"<p>Get/set currently used locale. Set a name of a locale to have it applied, or give a locale configuration to\nhave it registered and then applied</p>",scope:"static",properties:[{type:{names:["String","Object"]}}]},{name:"throwOnMissingLocale",description:'<p>Specifies if <a href="#Core/localization/Localizable#function-L-static">Localizable.L()</a> function would throw error if no localization found in runtime</p>',scope:"static",defaultvalue:"false",properties:[{type:{names:["Boolean"]}}]}],functions:[{name:"registerLocale",description:'<p>Register a locale to make it available for applying.\nRegistered locales are available in <a href="#Core/localization/LocaleManager#property-locales-static">locales</a>.</p>',parameters:[{name:"name",type:"String",description:"<p>Name of locale (for example <code>En</code> or <code>SvSE</code>)</p>"},{name:"config",type:"Object",description:"<p>Object with localized properties</p>"}],scope:"static"},{name:"extendLocale",description:"<p>Extend an already loaded locale to add additional translations.</p>",parameters:[{name:"name",type:"String",description:"<p>Name of locale (for example <code>En</code> or <code>SvSE</code>)</p>"},{name:"config",type:"Object",description:"<p>Object with localized properties</p>"}],scope:"static"},{name:"applyLocale",description:'<p>Apply a locale. Locale must be defined in <a href="#Core/localization/LocaleManager#property-locales-static">locales</a>.\nIf it is not loaded it will be loaded using AjaxHelper <a href="#Core/helper/AjaxHelper#function-get-static">get</a> request and then applied.</p>',parameters:[{name:"name",type:"String",description:"<p>Name of locale to apply (for example <code>En</code> or <code>SvSE</code>)</p>"}],scope:"static",returns:{type:["boolean","Promise"]}},{name:"loadLocale",access:"private",description:'<p>Loads a locale using AjaxHelper <a href="#Core/helper/AjaxHelper#function-get-static">get</a> request.</p>',parameters:[{name:"path",type:"String",description:"<p>Path to locale file</p>"}],scope:"static",returns:{type:"Promise"},async:true}]},{name:"module:Core/localization/Localizable",description:"<p>Mixin that simplifies localization of strings in a class.</p>\n<pre class=\"prettyprint source\"><code>// Get localized string\ngrid.L('foo');\ngrid.L('L{foo});\n</code></pre>",mixin:true,constructor:{name:"constructor"},filename:"Localizable.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/localization",lineno:25,functions:[{name:"buildLocalizableProperties",access:"private",description:"<p>Builds <code>localizableProperties</code> config value for the class instance by iterating\nthough the class ancestor classes and concatenating their <code>localizableProperties</code> values.</p>",parameters:[{name:"config",type:"Object",description:"<p>The class instance configuration object.</p>"}],scope:"instance"},{name:"localize",access:"internal",description:"<p>Get localized string, returns <code>null</code> if no localized string found.</p>",parameters:[{name:"text",type:"String",description:"<p>String key</p>"},{name:"templateData",type:"Object",description:"<p>Data to supply to template if localized string is a function</p>",optional:true}],scope:"static",returns:{type:"String"}},{name:"L",description:"<p>Get localized string, returns value of <code>text</code> if no localized string found.\nIf <a href=\"#Core/localization/LocaleManager#property-throwOnMissingLocale-static\">LocaleManager.throwOnMissingLocale</a> is <code>true</code>\nand localization text is in <code>L{foo}</code> format then call to <code>L('L{foo})</code> will throw\n<code>Localization is not found for 'text' in 'ClassName'</code> exception when no localization is found.</p>",parameters:[{name:"text",type:"String",description:"<p>String key</p>"},{name:"templateData",type:"Object",description:"<p>Data to supply to template if localized string is a function</p>",optional:true}],scope:"static",returns:{type:"String"}},{name:"L",description:"<p>Convenience function that can be called directly on the class that mixes Localizable in</p>",parameters:[{name:"text",type:"String",description:"<p>String key</p>"},{name:"templateData",type:"Object",description:"<p>Data to supply to template if localized string is a function</p>",optional:true}],examples:["button.text = grid.L('group');"],scope:"instance",category:"Misc",returns:{type:"String"}}],properties:[{name:"localeManager",description:"<p>Get the global LocaleManager</p>",scope:"instance",returns:[{type:{names:["Core.localization.LocaleManager"]}}],category:"Misc"}]},{name:"module:Core/mixin/Delayable",description:"<p>Tracks setTimeout, setInterval and requestAnimationFrame calls and clears them on destroy.</p>",mixin:true,examples:["someClass.setTimeout(() => console.log('hi'), 200);\nsomeClass.setInterval(() => console.log('annoy'), 100);\n// can also use named timeouts for easier tracking\nsomeClass.setTimeout(() => console.log('named'), 300, 'named');\nsomeClass.clearTimeout('named');"],constructor:{name:"constructor"},filename:"Delayable.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/mixin",lineno:34,functions:[{name:"hasTimeout",access:"internal",description:"<p>Check if a named timeout is active</p>",parameters:[{name:"name"}],scope:"instance"},{name:"setTimeout",access:"internal",description:"<p>Same as native setTimeout, but will be cleared automatically on destroy. If a propertyName is supplied it will\nbe used to store the timeout id.</p>",parameters:[{name:"timeoutSpec",type:"Object",description:"<p>An object containing the details about that function, and the time delay.</p>"},{name:"timeoutSpec.fn",type:["function","String"],description:"<p>The function to call, or name of function in this object to call. Used as the <code>name</code> parameter if a string.</p>",isSubParam:true},{name:"timeoutSpec.delay",type:"Number",description:"<p>The milliseconds to delay the call by.</p>",isSubParam:true},{name:"timeoutSpec.args",type:"Array.<Object>",description:"<p>The arguments to pass.</p>",isSubParam:true},{name:"timeoutSpec.name",type:"String",description:"<p>The name under which to register the timer. Defaults to <code>fn.name</code>.</p>",optional:true,isSubParam:true},{name:"timeoutSpec.runOnDestroy",type:"Boolean",description:"<p>Pass <code>true</code> if this function should be executed if the Delayable instance is destroyed while function is scheduled.</p>",optional:true,isSubParam:true},{name:"timeoutSpec.cancelOutstanding",type:"Boolean",description:"<p>Pass <code>true</code> to cancel any outstanding invocation of the passed function.</p>",optional:true,isSubParam:true}],scope:"instance",returns:{type:"Number"}},{name:"clearTimeout",access:"internal",description:"<p>clearTimeout wrapper, either call with timeout id as normal clearTimeout or with timeout name (if you specified\na name to setTimeout())\nproperty to null.</p>",parameters:[{name:"idOrName",type:["Number","String"],description:"<p>timeout id or name</p>"}],scope:"instance"},{name:"clearInterval",access:"internal",description:"<p>clearInterval wrapper</p>",parameters:[{name:"id",type:"Number"}],scope:"instance"},{name:"setInterval",access:"internal",description:"<p>Same as native setInterval, but will be cleared automatically on destroy</p>",parameters:[{name:"fn"},{name:"delay"}],scope:"instance",returns:{type:"Number"}},{name:"requestAnimationFrame",access:"internal",description:"<p>Relays to native requestAnimationFrame and adds to tracking to have call automatically canceled on destroy.</p>",parameters:[{name:"fn",type:"function"},{name:"extraArgs",type:"Array.<Object>",description:"<p>The argument list to append to those passed to the function.</p>",optional:true},{name:"thisObj",type:"Object",description:"<p><code>this</code> reference for the function.</p>",optional:true}],scope:"instance",returns:{type:"Number"}},{name:"createOnFrame",access:"internal",description:"<p>Creates a function which will execute once, on the next animation frame. However many time it is\ncalled in one event run, it will only be scheduled to run once.</p>",parameters:[{name:"fn",type:["function","String"],description:"<p>The function to call, or name of function in this object to call.</p>"},{name:"args",type:"Array.<Object>",description:"<p>The argument list to append to those passed to the function.</p>",optional:true},{name:"thisObj",type:"Object",description:"<p><code>this</code> reference for the function.</p>",optional:true},{name:"cancelOutstanding",type:"Boolean",description:"<p>Cancel any outstanding queued invocation upon call.</p>",optional:true}],scope:"instance"},{name:"cancelAnimationFrame",access:"internal",description:"<p>Relays to native cancelAnimationFrame and removes from tracking.</p>",parameters:[{name:"handle",type:"Number"}],scope:"instance"},{name:"buffer",access:"internal",description:"<p>Wraps a function with another function that delays it specified amount of time, repeated calls to the wrapper\nresets delay.</p>",parameters:[{name:"fn",type:["function","String"],description:"<p>Function to buffer, or name of function in this object to call.</p>"},{name:"delay",type:"Number",description:"<p>Delay in ms</p>"},{name:"thisObj",type:"Object",description:"<p><code>this</code> reference for the function.</p>",optional:true}],scope:"instance",returns:{type:"function",description:"<p>Wrapped function, call this</p>"}},{name:"throttle",access:"internal",description:"<p>Create a &quot;debounced&quot; function which will call on the &quot;leading edge&quot; of a timer period.\nWhen first invoked will call immediately, but invocations after that inside its buffer\nperiod will be rejected, and <em>one</em> invocation will be made after the buffer period has expired.</p>\n<p>This is useful for responding immediately to a first mousemove, but from then on, only\ncalling the action function on a regular timer while the mouse continues to move.</p>",parameters:[{name:"fn",type:"function",description:"<p>The function to call.</p>"},{name:"buffer",type:"Number",description:"<p>The milliseconds to wait after each execution before another execution takes place.</p>"},{name:"thisObj",type:"Object",description:"<p><code>this</code> reference for the function.</p>",optional:true},{name:"extraArgs",type:"Array",description:"<p>The argument list to append to those passed to the function.</p>",optional:true},{name:"alt",type:"function",description:"<p>A function to call when the invocation is rejected due to buffer time not having expired.</p>",optional:true}],scope:"instance"}]},{name:"module:Core/mixin/Events",description:'<p>Mix this into another class to enable event handling.</p>\n<h2>Basic usage</h2>\n<p>Listeners can be added either through config:</p>\n<pre class="prettyprint source lang-javascript"><code>let button = new Button({\n  listeners: {\n    click: () => {},\n    press: () => {},\n    ...\n  }\n});\n</code></pre>\n<p><em>NOTE</em>: Do not reuse listeners config object, use new every time:</p>\n<pre class="prettyprint source lang-javascript"><code>// wrong\nlet config = { click : () => {} }\nnew Button({\n    listeners : config\n})\nnew Button({\n    listeners : config\n})\n// right\nnew Button({\n    listeners : { click : () => {} }\n})\nnew Button({\n    listeners : { click : () => {} }\n})\n</code></pre>\n<p>Or by calling on()/addListener():</p>\n<pre class="prettyprint source lang-javascript"><code>let button = new Button();\n\nbutton.addListener(\'press\', () => {});\n// on is an alias for addListener\nbutton.on(\'click\', () => {});\n</code></pre>\n<p>This style also accepts multiple listeners in same way as when using config:</p>\n<pre class="prettyprint source lang-javascript"><code>button.on({\n  click: () => {},\n  press: () => {},\n  ...\n});\n</code></pre>\n<h2>Options</h2>\n<h3>Once</h3>\n<p>Listeners can be configured to automatically deregister after first trigger by specifing config option <code>once</code>:</p>\n<pre class="prettyprint source lang-javascript"><code>button.on({\n  click: () => {},\n  once: true\n});\n</code></pre>\n<h3>Priority</h3>\n<p>Specifying priority affects the order in which listeners are called when triggering an event. Higher prios will be\ncalled before lower. Default value is 0.</p>\n<pre class="prettyprint source lang-javascript"><code>button.on({\n  click: this.onClick,\n  prio: 1\n});\n</code></pre>\n<h3>This reference</h3>\n<p>If desired, you can specify thisObj when configuring listeners. There is no need if you are using arrow functions as\nlisteners, but might be handy in other cases. Of course, you can also use bind to set <code>this</code> reference.</p>\n<pre class="prettyprint source lang-javascript"><code>button.on({\n  click: this.onClick,\n  thisObj: this\n});\n\n// or\n\nbutton.on({\n  click: this.onClick.bind(this)\n});\n</code></pre>\n<h3>Detacher</h3>\n<p>A convenient way of unregistering events is to use a detacher, a function returned when adding listeners that you\ncall later to deregister them. As of version 1.0, detachable defaults to true.</p>\n<pre class="prettyprint source lang-javascript"><code>let detacher = button.on({\n  click: () => {},\n  press: () => {},\n  detachable: true\n});\n\n// when you want to detach, for example in destroy()\ndetacher();\n</code></pre>\n<h3>Auto detaching</h3>\n<p>When listeners are bound to a class instance using <code>thisObj</code>, the <code>thisObj</code>\'s <code>doDestroy</code> method\nis overridden to remove the listeners before calling the overridden doDestroy.</p>\n<pre class="prettyprint source lang-javascript"><code>class MyClass extends Base {\n  construct() {\n    let button = new Button({\n      listeners: {\n        click: () => {},\n        thisObj: this\n      }\n    });\n  }\n\n  doDestroy() {\n    // clean up stuff\n  }\n}\n\nlet myObj = new MyClass();\n// clean up, also removes listeners\nmyObj.destroy();\n</code></pre>\n<h3>On-functions</h3>\n<p>When mixing Events into another class it can be configured to call on-functions when events are triggered.\nOn-functions are functions named \'onEventname\', for example \'onClick\', \'onPress\' declared on the class triggering\nthe event.</p>\n<pre class="prettyprint source lang-javascript"><code>// mix Events in with on-functions activated\nlet button = new Button({\n  callOnFunctions: true,\n\n  onClick: () => {}\n});\n\n// or add a getter in class declaration\n</code></pre>\n<h3>Catching all events</h3>\n<p>By specifying a listener for <code>catchAll</code> a function can be notified when any event is triggered:</p>\n<pre class="prettyprint source lang-javascript"><code>const button = new Button({\n   listeners : {\n       catchAll(event) {\n           // All events on the button will pass through here\n       }\n   }\n});\n</code></pre>',mixin:true,constructor:{name:"constructor"},filename:"Events.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/mixin",lineno:190,events:[{name:"beforeDestroy",description:"<p>Fires before an object is destroyed.</p>",parameters:[{name:"source",type:"Object",description:"<p>The Object that is being destroyed.</p>"}]},{name:"destroy",description:"<p>Fires when an object is destroyed.</p>",parameters:[{name:"source",type:"Object",description:"<p>The Object that is being destroyed.</p>"}]}],configs:[{name:"listeners",description:'<p>Listeners can be specified in target class config.</p>\n<pre class="prettyprint source"><code>let store = new Store({\n  listeners: {\n    load: () => {},\n    ...\n  }\n});\n</code></pre>',type:"Object",scope:"inner",category:"Common"}],functions:[{name:"constructor",access:"private",description:"<p>Adds configured listeners</p>",scope:"inner"},{name:"doDestroy",access:"internal",description:"<p>Auto detaches listeners registered from start, if set as detachable</p>",scope:"instance"},{name:"addListener",description:"<p>Adds an event listener. This method accepts parameters in the following format:</p>\n<pre class=\"prettyprint source lang-javascript\"><code> {\n     thisObj    : this,          // The this reference for the handlers\n     eventname2 : 'functionName' // Resolved at invocation time using the thisObj,\n     otherevent : {\n         fn      : 'handlerFnName',\n         once    : true          // Just this handler is auto-removed on fire\n     },\n     yetanother  : {\n         fn      : 'yetAnotherHandler',\n         args    : [ currentState1, currentState2 ] // Capture info to be passed to handler\n     }\n     prio        : 100           // Higher prio listeners are called before lower\n }\n</code></pre>\n<p>When listeners have a <code>thisObj</code> option, they are linked to the lifecycle of that object.\nWhen it is destroyed, those listeners are removed.</p>",parameters:[{name:"config",type:"Object",description:"<p>An object containing listener definitions.</p>"},{name:"config.thisObj",type:"Object",description:"<p>The <code>this</code> reference for all listeners.\n(May be overridden if a handler is specified in object form)</p>",optional:true,isSubParam:true},{name:"config.once",type:"Boolean",description:"<p>Specify as <code>true</code> to remove the listener as soon as it is invoked.</p>",optional:true,isSubParam:true},{name:"config.args",type:"Array.<Object>",description:"<p>An array of arguments to be passed to the handler before the event object.</p>",optional:true,isSubParam:true},{name:"thisObj",type:"Object",description:"<p><code>this</code> reference for all listeners.</p>",optional:true},{name:"prio",type:"Number",description:"<p>The priority for all listeners; higher priority listeners are caled before lower.</p>",optional:true}],scope:"instance",returns:{type:"function",description:"<p>Returns a detacher function unless configured with <code>detachable: false</code>. Call detacher to remove listeners</p>"}},{name:"on",description:"<p>Shorthand for addListener</p>",parameters:[{name:"config"},{name:"thisObj",optional:true}],scope:"instance"},{name:"un",description:"<p>Shorthand for removeListener</p>",parameters:[{name:"config"},{name:"thisObj"}],scope:"instance"},{name:"removeListener",description:'<p>Removes an event listener. Same API signature as <a href="#Core/mixin/Events#function-addListener">addListener</a></p>',parameters:[{name:"config",type:"Object",description:"<p>Listeners</p>"},{name:"thisObj",type:"Object",description:"<p><code>this</code> reference for all listeners</p>"}],scope:"instance"},{name:"hasListener",description:"<p>Check if any listener is registered for the specified eventName</p>",parameters:[{name:"eventName",type:"String"}],scope:"instance",returns:{type:"Boolean",description:"<p><code>true</code> if listener is registered, otherwise <code>false</code></p>"}},{name:"relayAll",description:"<p>Relays all events through another object that also implements Events mixin. Adds a prefix to the event name\nbefore relaying, for example add -&gt; storeAdd</p>\n<pre class=\"prettyprint source\"><code>// Relay all events from store through grid, will make it possible to listen for store events prefixed on grid:\n'storeLoad', 'storeChange', 'storeRemoveAll' etc.\nstore.relayAll(grid, 'store');\n\ngrid.on('storeLoad', () => console.log('Store loaded');\n</code></pre>",parameters:[{name:"through",type:"Core.mixin.Events",description:"<p>Object to relay the events through, needs to mix Events mixin in</p>"},{name:"prefix",type:"String",description:"<p>Prefix to add to event name</p>"},{name:"transformCase",type:"Boolean",description:"<p>Specify false to prevent making first letter of event name uppercase</p>",default:true,optional:true}],scope:"instance"},{name:"removeAllListeners",description:"<p>Removes all listeners registered to this object</p>",scope:"instance"},{name:"attachAutoDetacher",access:"private",description:"<p>Internal function used to hook destroy() calls when using thisObj</p>",scope:"instance"},{name:"detachAutoDetacher",access:"private",description:"<p>Internal function used restore hooked destroy() calls when using thisObj</p>",scope:"instance"},{name:"callPreventable",access:"internal",description:"<p>Wraps a function with event triggering. First triggers before[eventName] with the supplied eventObject. If it is\nnot prevented (by returning false) the supplied fn is called with the eventObject as first argument and any\noptional arguments after that. It then triggers [eventName] with the eventObject (that might have been altered in\nfn). Finally it returns the return value from the fn.</p>",parameters:[{name:"eventName",type:"String",description:"<p>Event name, used to trigger 'beforeEventName' and 'eventName'</p>"},{name:"eventObject",type:"Object",description:"<p>Passed when triggering events</p>"},{name:"fn",type:"function",description:"<p>Function to call if before is not prevented</p>"},{name:"args",type:"Array",description:"<p>Arguments to pass to fn</p>"},{name:"quiet",type:"Boolean",description:"<p>Specify true to not trigger events</p>",default:false}],scope:"instance",returns:{type:"*",description:"<p>Result returned from calling fn, or false if prevented</p>"}},{name:"trigger",description:"<p>Triggers an event, calling all registered listeners with the supplied arguments. Returning false from any listener\nmakes function return false.</p>",parameters:[{name:"eventName",type:"String",description:"<p>Event name for which to trigger listeners</p>"},{name:"param",type:"Object",description:"<p>Single parameter passed on to listeners, source property will be added to it (this)</p>"},{name:"param.bubbles",type:"Boolean",description:"<p>Pass as <code>true</code> to indicate that the event will bubble up the widget\nownership hierarchy. For example up a Menu-&gt;parent Menu tree, or a Field-&gt;Container tree.</p>",optional:true,isSubParam:true}],scope:"instance",returns:{type:"Boolean",description:"<p>Returns false if any listener returned false, otherwise true</p>"}},{name:"suspendEvents",description:'<p>Prevents events from being triggered until <a href="#Core/mixin/Events#function-resumeEvents">resumeEvents()</a> is called. Optionally queues events that are triggered while\nsuspended. Multiple calls stack to require matching calls to <code>resumeEvents()</code> before actually resuming.</p>',parameters:[{name:"queue",type:"Boolean",description:"<p>Specify true to queue events triggered while suspended</p>",default:false}],scope:"instance"},{name:"resumeEvents",description:'<p>Resume event triggering after a call to <a href="#Core/mixin/Events#function-suspendEvents">suspendEvents()</a>. If any triggered events were queued they will be triggered.</p>',scope:"instance",returns:{description:"<p><code>true</code> if events have been resumed (multiple calls to suspend require an equal number of resume calls to resume).</p>"}}],properties:[{name:"listeners",description:"<p>Sets the listener set for this object. Removes any existing listeners and adds the\nspecified set of listeners.</p>",scope:"instance",category:"Common",properties:[{description:"<p><em>setting</em>, this is the listeners to add in object form, see {@link #function addListener}.\nWhen <em>getting</em>, this is an object map keys by event name, but each value is an <em>array</em> of listener definitions.</p>",type:{names:["Object"]},name:"When"}]}]},{name:"module:Core/mixin/InstancePlugin",classDescription:"<p>Base class for plugins. Published functions will be available from the other class. <code>this</code> in published functions is\nreferenced to the plugin, access the other class using <code>this.pluggedInto</code> (deprecated in 2.3) or <code>this.client</code>.</p>\n<p>Observe that plugin doesn't apply itself on class level but instead on instance level. Plugin is its own instance\nthat can have own functions and data that is not exposed to target class.</p>\n<p>Functions can be published in four ways:</p>\n<ul>\n<li><code>assign</code> (when function is not already available on target)</li>\n<li><code>before</code> (when function is already available on target, will be called before original function)</li>\n<li><code>after</code> (when function is already available on target, will be called after original function)</li>\n<li><code>override</code> (replaces function on target, but old function can be reached)</li>\n</ul>\n<p>To configure which functions get published and in what way, specify <code>pluginConfig</code> getter on plugin:</p>\n<pre class=\"prettyprint source\"><code>class Sort extends InstancePlugin {\n  static get pluginConfig {\n     return {\n         before   : ['init'],\n         after    : ['destroy', 'onElementClick'],\n         override : ['render']\n     };\n  }\n}\n</code></pre>",mixes:["Core/localization/Localizable","Core/mixin/Events"],constructor:{name:"constructor"},filename:"InstancePlugin.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/mixin",lineno:40,configs:[{name:"disabled",description:"<p>The plugin disabled state</p>",type:"Boolean",scope:"inner",defaultvalue:false,category:"Common"}],functions:[{name:"initPlugins",access:"internal",description:"<p>Call from another instance to add plugins to it.</p>",parameters:[{name:"plugInto",description:"<p>Instance to mix into (usually this)</p>"},{name:"plugins",description:"<p>Classes to plug in</p>",isRestParam:true}],examples:["InstancePlugin.initPlugins(this, Search, Stripe);"],scope:"static"},{name:"constructor",access:"internal",description:"<p>Initializes the plugin.</p>",parameters:[{name:"plugInto",description:"<p>Target instance to plug into</p>"}],scope:"inner"},{name:"applyPluginConfig",access:"private",description:"<p>Applies config as found in plugInto.pluginConfig, or published all if no config found.</p>",parameters:[{name:"plugInto",description:"<p>Target instance to plug into</p>"}],scope:"instance"},{name:"applyAssign",access:"private",description:"<p>Applies assigning for specified functions.</p>",parameters:[{name:"plugInto"},{name:"fnNames"}],scope:"instance"},{name:"applyChain",access:"private",description:"<p>Applies chaining for specified functions.</p>",parameters:[{name:"plugInto"},{name:"fnNames"},{name:"after",default:true}],scope:"instance"},{name:"applyOverride",access:"private",description:"<p>Applies override for specified functions.</p>",parameters:[{name:"plugInto"},{name:"fnNames"}],scope:"instance"},{name:"assign",access:"private",description:"<p>Assigns specified functions.</p>",parameters:[{name:"plugInto"},{name:"fnName"}],scope:"instance"},{name:"chain",access:"private",description:"<p>Chains functions. When the function is called on the target class all functions in the chain will be called in\nthe order they where added.</p>",parameters:[{name:"plugInto"},{name:"key"}],scope:"instance"},{name:"functionChainRunner",access:"private",description:"<p>Used to run multiple plugged in functions with the same name, see chain above. Returning false from a\nfunction will abort chain.</p>",parameters:[{name:"fnName"},{name:"params",isRestParam:true}],scope:"instance",returns:{description:"<p>value returned from last function in chain (or false if any returns false)</p>"}},{name:"doDisable",description:"<p>Called when disabling/enabling the plugin. By default removes the cls of the plugin from its client.\nOverride in subclasses to take any other actions necessary.</p>",scope:"instance"}],properties:[{name:"client",description:"<p>The Widget which was passed into the constructor,\nwhich is the Widget we are providing extra services for.</p>",scope:"instance",readonly:true,category:"Misc",properties:[{type:{names:["Core.widget.Widget"]}}]},{name:"disabled",description:"<p>Get/set the plugin disabled state</p>",scope:"instance",category:"Common",properties:[{type:{names:["Boolean"]}}]}],events:[{name:"disable",description:"<p>Fired when the plugin/feature is disabled.</p>",parameters:[{name:"source",type:"Core.mixin.InstancePlugin"}]},{name:"enable",description:"<p>Fired when the plugin/feature is enabled.</p>",parameters:[{name:"source",type:"Core.mixin.InstancePlugin"}]}]},{name:"module:Core/mixin/Override",classDescription:'<p>Simplifies overriding class methods by allowing methods from another class to be used as overrides.\nOverrides are defined as own classes. They must at a minimum contain a static getter named targetClass, which\nshould return the class to override. Apply the override by calling <a href="#Core/mixin/Override#function-apply-static">apply()</a>.</p>',examples:["class TemplateColumnOverride {\n  static get target() {\n    return {\n            class: TemplateColumn,\n            product: 'grid',\n            minVersion: '1.0',\n            maxVersion: '1.5'\n    }\n  }\n\n  renderer(renderData) {\n      // call overridden function (optional)\n      const value = this._overridden.renderer.call(this, renderData);\n\n      return 'HELLO' + value;\n  }\n}\nOverride.apply(TemplateColumnOverride);"],constructor:{name:"constructor"},filename:"Override.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/mixin",lineno:43,functions:[{name:"apply",description:"<p>Apply override. We strongly suggest that you at least specify a maxVersion for your overrides.</p>\n<pre class=\"prettyprint source\"><code>class OriginalOverride {\n    static get target() {\n        return {\n            class: Original,\n            product: 'grid',\n            minVersion: '1.0',\n            maxVersion: '1.5'\n        }\n    }\n}\n</code></pre>",parameters:[{name:"override",description:"<p>An override class definition</p>"}],scope:"static"},{name:"shouldApplyOverride",access:"private",description:"<p>Checks versions if an override should be applied. Specify version in your overrides target config</p>",parameters:[{name:"override"}],examples:["class OriginalOverride {\n    static get target() {\n        return {\n            class: Original,\n            product: 'grid',\n            minVersion: '1.0',\n            maxVersion: '1.5'\n        }\n    }\n}"],scope:"static",returns:{type:"Boolean"}}]},{name:"module:Core/mixin/Pluggable",description:"<p>Enables using plugins for a class by specifying property plugins as an array of plugin classes. If only a single plugin\nis used, just give the plugin class instead of an array. This class isn't required for using plugins, just makes it\neasier. Without mixin you can otherwise use <code>InstancePlugin.initPlugins(this, PluginClass)</code>.</p>",mixin:true,examples:["new Store({\n  plugins: [PluginClass, ...]\n});"],constructor:{name:"constructor"},filename:"Pluggable.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/mixin",lineno:20,configs:[{name:"plugins",description:"<p>Specify plugins (an array of classes) in config</p>",type:"Array.<function()>",scope:"inner",category:"Misc"}],properties:[{name:"plugins",description:"<p>Map of applied plugins</p>",scope:"instance",readonly:true,category:"Misc",properties:[{type:{names:["Object"]}}]}],functions:[{name:"initPlugins",access:"internal",description:"<p>Template method which may be implemented in subclasses to initialize any plugins.\nThis method is empty in the <code>Pluggable</code> base class.</p>",scope:"instance"},{name:"addPlugins",description:"<p>Adds plugins to an instance.</p>",parameters:[{name:"plugins",description:"<p>Plugins to add</p>",isRestParam:true}],scope:"instance"},{name:"hasPlugin",description:"<p>Checks if instance has plugin.</p>",parameters:[{name:"pluginClassOrName",description:"<p>Plugin or name to check for</p>"}],scope:"instance",returns:{type:"Boolean"}},{name:"getPlugin",description:"<p>Get a plugin instance.</p>",parameters:[{name:"pluginClassOrName"}],scope:"instance",returns:{type:"Object"}}]},{name:"module:Core/mixin/State",description:'<p>Mixin that simplifies handling state for an ui component. Classes that uses this mixin must implement <code>getState()</code> and\n<code>applyState(state)</code>.</p>\n<pre class="prettyprint source"><code>class MyUIComponent extends State() {\n  getState() {\n    return {\n      this.text,\n      this.size\n    }\n  }\n\n  applyState(state) {\n     this.text = state.text;\n     this.size = state.size;\n  }\n}\n</code></pre>',mixin:true,constructor:{name:"constructor"},filename:"State.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/mixin",lineno:30,demo:{product:"grid",demo:"state"},properties:[{name:"state",description:"<p>Gets or sets a component's state</p>",scope:"instance",properties:[{type:{names:["Object"]}}]}]},{name:"module:Core/test/docs/Child",classDescription:"<p>Child of TestDocsBase.\nThis class is required to check how docs are generated.</p>",extends:["Core/test/docs/TestDocsBase"],mixes:["Core/test/docs/ChildMixin"],access:"internal",constructor:{name:"constructor"},filename:"Child.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/test/docs",lineno:17,configs:[{name:"_testGrandChildDescription",access:"private",description:"<p>Child node. This description is NOT used in the docs of GrandChild because description is specified in GrandChild.</p>",type:"Object",scope:"inner",category:"Test"},{name:"_testChildDescription",access:"private",description:"<p>Child node. This description is USED in the docs of GrandChild because there is no description in GrandChild and ChildMixin, and Child is the closest relative.</p>",type:"Object",scope:"inner",category:"Test"},{name:"_testMixinGrandChildDescription",access:"private",description:"<p>Child node. This description is NOT used in the docs of GrandChild because description is specified in GrandChild.</p>",type:"Object",scope:"inner",category:"Test"},{name:"_testMixinChildDescription",access:"private",description:"<p>Child node. This description is NOT used in the docs of GrandChild because description is specified in ChildMixin and there is no description in GrandChild.</p>",type:"Object",scope:"inner",category:"Test"}]},{name:"module:Core/test/docs/ChildMixin",classDescription:"<p>Mixin for children of TestDocsBase.\nThis class is required to check how docs are generated.</p>",mixin:true,access:"internal",constructor:{name:"constructor"},filename:"ChildMixin.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/test/docs",lineno:14,configs:[{name:"_testMixinGrandChildDescription",access:"private",description:"<p>ChildMixin node. This description is NOT used in the docs of GrandChild because description is specified in GrandChild.</p>",type:"Object",scope:"inner",category:"Test"},{name:"_testMixinChildDescription",access:"private",description:"<p>ChildMixin node. This description is USED in the docs of GrandChild because there is no description in GrandChild and mixin is more important than relatives.</p>",type:"Object",scope:"inner",category:"Test"},{name:"_testMixinBaseDescription",access:"private",description:"<p>ChildMixin node. This description is USED in the docs of GrandChild because there is no description in GrandChild and mixin is more important than relatives.</p>",type:"Object",scope:"inner",category:"Test"}]},{name:"module:Core/test/docs/GrandChild",classDescription:"<p>Child of Child of TestDocsBase.\nThis class is required to check how docs are generated.</p>",extends:["Core/test/docs/Child"],access:"internal",constructor:{name:"constructor"},filename:"GrandChild.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/test/docs",lineno:14,configs:[{name:"_testGrandChildDescription",access:"private",description:"<p>GrandChild node. This description is USED in the docs of GrandChild.</p>",type:"Object",scope:"inner",category:"Test"},{name:"_testMixinGrandChildDescription",access:"private",description:"<p>GrandChild node. This description is USED in the docs of GrandChild.</p>",type:"Object",scope:"inner",category:"Test"}]},{name:"module:Core/test/docs/TestDocsBase",classDescription:"<p>Base class for subclassing.\nThis class is required to check how docs are generated.</p>",extends:["Core/Base"],access:"internal",virtual:true,constructor:{name:"constructor"},filename:"TestDocsBase.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/test/docs",lineno:15,configs:[{name:"_testGrandChildDescription",access:"private",description:"<p>TestDocsBase node. This description is NOT used in the docs of GrandChild because description is specified in GrandChild.</p>",type:"Object",scope:"inner",category:"Test"},{name:"_testChildDescription",access:"private",description:"<p>TestDocsBase node. This description is NOT used in the docs of GrandChild because description is specified in Child and there is no description in GrandChild and ChildMixin.</p>",type:"Object",scope:"inner",category:"Test"},{name:"_testBaseDescription",access:"private",description:"<p>TestDocsBase node. This description is USED in the docs of GrandChild because there is no description in Child, GrandChild and ChildMixin.</p>",type:"Object",scope:"inner",category:"Test"},{name:"_testMixinGrandChildDescription",access:"private",description:"<p>TestDocsBase node. This description is NOT used in the docs of GrandChild because description is specified in GrandChild.</p>",type:"Object",scope:"inner",category:"Test"},{name:"_testMixinChildDescription",access:"private",description:"<p>TestDocsBase node. This description is NOT used in the docs of GrandChild because description is specified in ChildMixin and there is no description in GrandChild.</p>",type:"Object",scope:"inner",category:"Test"},{name:"_testMixinBaseDescription",access:"private",description:"<p>TestDocsBase node. This description is NOT used in the docs of GrandChild because description is specified in ChildMixin and there is no description in Child and GrandChild.</p>",type:"Object",scope:"inner",category:"Test"}]},{name:"module:Core/util/Bag",classDescription:"<p>A simple collection class to contain unique, keyed items.</p>",constructor:{name:"constructor"},filename:"Bag.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/util",lineno:11,functions:[{name:"get",description:"<p>Returns the item with the passed <code>id</code>.</p>",parameters:[{name:"id",type:"*",description:"<p>The <code>id</code> to find.</p>"}],scope:"instance",returns:{type:"Object",description:"<p>The found item, or <code>undefined</code>.</p>"}},{name:"add",description:"<p>Adds the passed item(s) to this Bag. Existing items with the same ID\nwill be replaced.</p>",parameters:[{name:"toAdd",type:["Object","Array.<Object>"],description:"<p>Item(s) to add.</p>",isRestParam:true}],scope:"instance"},{name:"remove",description:"<p>Removes the passed item(s) from this Bag.</p>",parameters:[{name:"toRemove",type:["Object","Array.<Object>"],description:"<p>Item(s) to remove.</p>"}],scope:"instance"},{name:"changeId",description:"<p>Change the id of an existing member by mutating its idProperty.</p>",parameters:[{name:"item",type:["String","Number","Object"],description:"<p>The item or id of the item to change.</p>"},{name:"newId",type:["String","Number"],description:"<p>The id to set in the existing member.</p>"}],scope:"instance"},{name:"includes",description:"<p>Returns <code>true</code> if this Collection includes an item with the same <code>id</code> as the passed item.</p>",parameters:[{name:"item",type:["Object","String","Number"],description:"<p>The item to find, or an <code>id</code> to find.</p>"}],scope:"instance",returns:{type:"Boolean",description:"<p>True if the passed item is found.</p>"}},{name:"map",description:"<p>Extracts the content of this Bag into an array based upon the passed\nvalue extraction function.</p>",parameters:[{name:"fn",type:"function",description:"<p>A function, which, when passed an item, returns a value to place into the resulting array.</p>"},{name:"thisObj",type:"Object",description:"<p>The <code>this</code> reference when the function is called.</p>",optional:true}],scope:"instance",returns:{type:"Array.<Object>",description:"<p>An array of values extracted from this Bag.</p>"}},{name:"forEach",description:"<p>Executes the passed function for each item in this Bag, passing in the item.</p>",parameters:[{name:"fn",type:"function",description:"<p>The function to execute.</p>"},{name:"thisObj",type:"Object",description:"<p>The <code>this</code> reference when the function is called.</p>",optional:true}],scope:"instance"},{name:"find",description:"<p>Returns the first item in this Bag which elicits a <em>truthy</em> return value from the passed funtion.</p>",parameters:[{name:"fn",type:"function",description:"<p>A function, which, when passed an item, returns <code>true</code> to select it as the item to return.</p>"}],scope:"instance",returns:{type:"Object",description:"<p>The matched item, or <code>undefined</code>.</p>"}},{name:"sort",description:"<p>Sort the values of this Bag using the passed comparison function.</p>\n<p>Setting this property replaces the data set.</p>",parameters:[{name:"fn",type:"function",description:"<p>Comparison function which returns -ve, 0, or +ve</p>"}],scope:"instance"}],properties:[{name:"count",description:"<p>The number of items in this Bag.</p>",scope:"instance",readonly:true,properties:[{type:{names:["Number"]}}]},{name:"values",description:"<p>The set of values of this Bag.</p>\n<p>Setting this property replaces the data set.</p>",scope:"instance",properties:[{type:{names:["Array.<Object>"]}}]}]},{name:"module:Core/util/ClickRepeater",classDescription:'<p>A helper class, which, when applied to an <a href="#Core/util/ClickRepeater#config-element">element</a> means that a mousedown\nand hold on that element will, after a configured <a href="#Core/util/ClickRepeater#config-delay">delay</a>, begin\nautorepeating <code>click</code> events on that element, starting at a rate of\n<a href="#Core/util/ClickRepeater#config-startRate">startRate</a> clicks per second, and over <a href="#Core/util/ClickRepeater#config-accelerateDuration">accelerateDuration</a>\nmilliseconds, accelerate to firing clicks at <a href="#Core/util/ClickRepeater#config-endRate">endRate</a> times per second.</p>\n<p>An example of this is used by the <a href="#Core/widget/NumberField">NumberField</a>\'s\nspinner triggers.</p>',constructor:{name:"constructor"},filename:"ClickRepeater.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/util",lineno:20,configs:[{name:"element",description:"<p>The element on which to fire autorepeating <code>click</code> events when the mouse is held down.</p>",type:"HTMLElement",scope:"inner"},{name:"delegate",description:'<p>A query selector which specifies subtargets of this ClickRepeater\'s <a href="#Core/util/ClickRepeater#config-element">element</a>\nwhich act as the click auto repeat event targets.</p>',type:"String",scope:"inner"},{name:"delay",description:"<p>How long in milliSeconds to pause before starting the click repeats.</p>",type:"Number",scope:"inner",defaultvalue:500},{name:"startRate",description:'<p>Clicks per second to start firing after the initial <a href="#Core/util/ClickRepeater#config-delay">delay</a></p>',type:"Number",scope:"inner",defaultvalue:2},{name:"endRate",description:'<p>Clicks per second to fire at top speed, after accelerating over the <a href="#Core/util/ClickRepeater#config-accelerateDuration">accelerateDuration</a></p>',type:"Number",scope:"inner",defaultvalue:20},{name:"accelerateDuration",description:'<p>How long in millieconds to accelerate from the\n<a href="#Core/util/ClickRepeater#config-startRate">startRate</a> to the <a href="#Core/util/ClickRepeater#config-startRate">startRate</a>.</p>',type:"Number",scope:"inner",defaultvalue:4e3}]},{name:"module:Core/util/Collection",classDescription:'<p>A class which encapsulates a <a href="#Core/util/Collection#function-get">keyed</a>,\n<a href="#Core/util/Collection#function-addFilter">filterable</a>, <a href="#Core/util/Collection#function-addSorter">sortable</a>\ncollection of objects. Entries may not be atomic data types such as <code>string</code> or <code>number</code>.</p>\n<p>The entries are keyed by their <code>id</code> which is determined by interrogating the <a href="#Core/util/Collection#config-idProperty">idProperty</a>.</p>\n<p>To filter a Collection, add a <a href="#Core/util/CollectionFilter">CollectionFilter</a>\nusing the <a href="#Core/util/Collection#function-addFilter">addFilter</a> method. A Filter config object may be specified here\nwhich will be promoted to a CollectionFilter instance.</p>\n<p>To sort a Collection, add a <a href="#Core/util/CollectionSorter">CollectionSorter</a>\nusing the <a href="#Core/util/Collection#function-addSorter">addSorter</a> method. A Sorter config object may be specified here\nwhich will be promoted to a CollectionSorter instance.</p>',constructor:{name:"constructor"},filename:"Collection.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/util",lineno:60,configs:[{name:"idProperty",description:"<p>Specify the name of the property of added objects which provides the lookup key</p>",type:"String",scope:"inner",defaultvalue:"id"},{name:"extraKeys",description:"<p>Specify the names of properties which are to be indexed for fast lookup.</p>",type:"Array.<String>",scope:"inner"},{name:"autoFilter",description:"<p>Automatically apply filters on item add.</p>",type:"Array.<String>",scope:"inner",defaultvalue:true}],properties:[{name:"generation",description:'<p>A counter which is incremented whenever the Collection is mutated in a meaningful way.</p>\n<p>If a <a href="#Core/util/Collection#function-splice">splice</a> call results in no net replacement, removal or addition,\nthen the <code>generation</code> will not be incremented.</p>',scope:"instance",readonly:true,properties:[{type:{names:["Number"]}}]},{name:"values",description:'<p>The set of values of this Collection. If this Collection <a href="#Core/util/Collection#property-isFiltered">isFiltered</a>,\nthis yields the filtered data set.</p>\n<p>Setting this property replaces the data set.</p>',scope:"instance",properties:[{type:{names:["Array.<Object>"]}}]},{name:"allValues",description:"<p>The set of all values of this Collection regardless of filters applied.</p>",scope:"instance",readonly:true,properties:[{type:{names:["Array.<Object>"]}}]},{name:"count",description:'<p>The number of items in this collection. Note that this honours filtering.\nSee <a href="#Core/util/Collection#property-totalCount">totalCount</a>;</p>',scope:"instance",readonly:true,properties:[{type:{names:["Number"]}}]},{name:"totalCount",description:"<p>The number of items in this collection regardless of filtering.</p>",scope:"instance",readonly:true,properties:[{type:{names:["Number"]}}]},{name:"idProperty",description:"<p>The property name used to extract item <code>id</code>s from added objects.</p>",scope:"instance",properties:[{type:{names:["String"]}}]},{name:"sorters",description:'<p>The Collection of <a href="#Core/util/CollectionSorter">Sorters</a> for this Collection.</p>',scope:"instance",readonly:true,properties:[{type:{names:["Core.util.Collection"]}}]},{name:"isSorted",description:'<p>A flag which is <code>true</code> if this Collection has active <a href="#Core/util/Collection#property-sorters">sorters</a>.</p>',scope:"instance",readonly:true,properties:[{type:{names:["Boolean"]}}]},{name:"sortFunction",description:'<p>A sorter function which encapsulates the <a href="#Core/util/CollectionSorter">Sorters</a>\nfor this Collection.</p>',scope:"instance",readonly:true,properties:[{type:{names:["function"]}}]},{name:"filters",description:'<p>The Collection of <a href="#Core/util/CollectionFilter">Filters</a> for this Collection.</p>',scope:"instance",readonly:true,properties:[{type:{names:["Core.util.Collection"]}}]},{name:"isFiltered",description:'<p>A flag which is <code>true</code> if this Collection has active <a href="#Core/util/Collection#property-filters">filters</a>.</p>',scope:"instance",readonly:true,properties:[{type:{names:["Boolean"]}}]},{name:"filterFunction",description:'<p>A filter function which encapsulates the <a href="#Core/util/CollectionFilter">Filters</a>\nfor this Collection.</p>',scope:"instance",readonly:true,properties:[{type:{names:["function"]}}]}],functions:[{name:"clear",description:"<p>Clears this collection.</p>",scope:"instance"},{name:"replaceValues",access:"internal",description:"<p>Replaces the internal <code>values</code> array with the passed <code>values</code>, or <code>filteredValues</code> array with the passed <code>filteredValues</code>.\nIf <code>filteredValues</code> are not passed explicitly, but storage is filtered, decides internally <code>values</code> or <code>filteredValues</code> should\nbe replaced by passed <code>values</code>.</p>\n<p>Note that this takes ownership of the array, and the array must not be mutated by outside code.</p>\n<p>This is an internal utility method, not designed for use by application code.</p>",parameters:[{name:"params",type:"Object",description:"<p>Values and parameters to replace</p>"},{name:"params.values",type:"Array.<Object>",description:"<p>The new <code>values</code> array</p>",isSubParam:true},{name:"params.filteredValues",type:"Array.<Object>",description:"<p>The new <code>filteredValues</code> array. Applicable only when storage is filtered.</p>",optional:true,isSubParam:true},{name:"params.silent",type:"Boolean",description:"<p>If true, <code>change</code> event will not be fired</p>",default:false,optional:true,isSubParam:true},{name:"params.isNewDataset",type:"Boolean",description:"<p>If true, <code>values</code> is a new dataset</p>",default:false,optional:true,isSubParam:true}],scope:"instance",fires:["event:change"]},{name:"forEach",description:"<p>Executes the passed function for each item in this Collection, passing in the item,\nths index, and the full item array.</p>",parameters:[{name:"fn",type:"function",description:"<p>The function to execute.</p>"},{name:"ignoreFilters",type:"Boolean",description:"<p>Pass <code>true</code> to include all items, bypassing filters.</p>",default:false,optional:true}],scope:"instance"},{name:"map",description:"<p>Extracts ths content of this Collection into an array based upon the passed\nvalue extraction function.</p>",parameters:[{name:"fn",type:"function",description:"<p>A function, which, when passed an item, returns a value to place into the resulting array.</p>"},{name:"ignoreFilters",type:"Boolean",description:"<p>Pass <code>true</code> to process an item even if it is filtered out.</p>",default:false,optional:true}],scope:"instance",returns:{type:"Array.<Object>",description:"<p>An array of values extracted from this Collection.</p>"}},{name:"find",description:"<p>Returns the first item in this Collection which elicits a <em>truthy</em> return value from the passed funtion.</p>",parameters:[{name:"fn",type:"function",description:"<p>A function, which, when passed an item, returns <code>true</code> to select it as the item to return.</p>"},{name:"ignoreFilters",type:"Boolean",description:"<p>Pass <code>true</code> to include filtered out items.</p>",default:false,optional:true}],scope:"instance",returns:{type:"Object",description:"<p>The matched item, or <code>undefined</code>.</p>"}},{name:"add",description:'<p>Adds items to this Collection. Multiple new items may be passed.</p>\n<p>By default, new items are appended to the existing values.</p>\n<p>Any <a href="#Core/util/Collection#property-sorters">sorters</a> <a href="#Core/util/Collection#property-sorters">sorters</a> present are re-run.</p>\n<p>Any <a href="#Core/util/Collection#property-filters">filters</a> <a href="#Core/util/Collection#property-filters">filters</a> present are re-run.</p>\n<p><em>Note that if application functionality requires add and remove, the\n<a href="#Core/util/Collection#function-splice">splice</a> operation is preferred as it performs both\noperations in an atomic manner</em></p>',parameters:[{name:"items",type:"Object",description:"<p>The item(s) to add.</p>",isRestParam:true}],scope:"instance"},{name:"remove",description:'<p>Removes items from this Collection. Multiple items may be passed.</p>\n<p>Any <a href="#Core/util/Collection#property-sorters">sorters</a> <a href="#Core/util/Collection#property-sorters">sorters</a> present are re-run.</p>\n<p>Any <a href="#Core/util/Collection#property-filters">filters</a> <a href="#Core/util/Collection#property-filters">filters</a> present are re-run.</p>\n<p><em>Note that if application functionality requires add and remove, the\n<a href="#Core/util/Collection#function-splice">splice</a> operation is preferred as it performs both\noperations in an atomic manner</em></p>',parameters:[{name:"items",type:"Object",description:"<p>The item(s) to remove.</p>",isRestParam:true}],scope:"instance"},{name:"move",description:"<p>Moves an individual item to another location.</p>",parameters:[{name:"item",type:"Object",description:"<p>The item to move.</p>"},{name:"beforeItem",type:"Object",description:"<p>the item to insert the first item before. If omitted, the <code>item</code>\nis moved to the end of the Collection.</p>",optional:true}],scope:"instance",returns:{type:"Number",description:"<p>The new index of the <code>item</code>.</p>"}},{name:"splice",description:"<p>The core data set mutation method. Removes and adds at the same time. Analogous\nto the <code>Array</code> <code>splice</code> method.</p>\n<p>Note that if items that are specified for removal are also in the <code>toAdd</code> array,\nthen those items are <em>not</em> removed then appended. They remain in the same position\nrelative to all remaning items.</p>",parameters:[{name:"index",type:"Number",description:"<p>Index at which to remove a block of items. Only valid if the\nsecond, <code>toRemove</code> argument is a number.</p>",default:0},{name:"toRemove",type:["Array.<Object>","Number"],description:"<p>Either the number of items to remove starting\nat the passed <code>index</code>, or an array of items to remove (If an array is passed, the <code>index</code> is ignored).</p>",optional:true},{name:"toAdd",type:["Array.<Object>","Object"],description:"<p>An item, or an array of items to add.</p>",optional:true,isRestParam:true}],scope:"instance"},{name:"changeId",description:'<p>Change the id of an existing member by mutating its <a href="#Core/util/Collection#config-idProperty">idProperty</a>.</p>',parameters:[{name:"item",type:["String","Number","Object"],description:"<p>The item or id of the item to change.</p>"},{name:"newId",type:["String","Number"],description:"<p>The id to set in the existing member.</p>"}],scope:"instance"},{name:"get",description:"<p>Returns the item with the passed <code>id</code>. By default, filtered are honoured, and\nif the item with the requested <code>id</code> is filtered out, nothing will be returned.</p>\n<p>To return the item even if it has been filtered out, pass the second parameter as <code>true</code>.</p>",parameters:[{name:"id",type:"*",description:"<p>The <code>id</code> to find.</p>"},{name:"ignoreFilters",type:"Boolean",description:"<p>Pass <code>true</code> to return an item even if it is filtered out.</p>",default:false,optional:true}],scope:"instance",returns:{type:"Object",description:"<p>The found item, or <code>undefined</code>.</p>"}},{name:"getBy",description:"<p>Returns the item with passed property name equal to the passed value. By default,\nfiltered are honoured, and if the item with the requested <code>id</code> is filtered out,\nnothing will be returned.</p>\n<p>To return the item even if it has been filtered out, pass the third parameter as <code>true</code>.</p>",parameters:[{name:"propertyName",type:"String",description:"<p>The property to test.</p>"},{name:"value",type:"*",description:"<p>The value to find.</p>"},{name:"ignoreFilters",type:"Boolean",description:"<p>Pass <code>true</code> to return an item even if it is filtered out.</p>",default:false,optional:true}],scope:"instance",returns:{type:"Object",description:"<p>The found item, or <code>undefined</code>.</p>"}},{name:"addSorter",description:"<p>Adds a Sorter to the Collection of Sorters which are operating on this Collection.</p>\n<p>A Sorter may be an specified as an instantiated <a href=\"#Core/util/CollectionSorter\">CollectionSorter</a>, or a config object for a CollectionSorter of the form</p>\n<pre><code>{\n    property  : 'age',\n    direction : 'desc'\n}\n</code></pre>\n<p>Note that by default, a Sorter <em>replaces</em> a Sorter with the same <code>property</code> to make\nit easy to change existing Sorters. A Sorter's <code>id</code> is its <code>property</code> by default. You\ncan avoid this and add multiple Sorters for one property by configuring Sorters with <code>id</code>s.</p>\n<p>A Sorter may also be specified as a function which compares two objects eg:</p>\n<pre><code>(lhs, rhs) =&gt; lhs.customerDetails.age - rhs.customerDetails.age</code></pre>",parameters:[{name:"sorter",type:"Object",description:"<p>A Sorter of Sorter configuration object to add to the Collection\nof Sorters operating on this Collection.</p>"}],scope:"instance",returns:{type:"Core.util.CollectionSorter",description:"<p>The resulting Sorter to make it easy to remove Sorters.</p>"}},{name:"addFilter",description:"<p>Adds a Filter to the Collection of Filters which are operating on this Collection.</p>\n<p>A Filter may be an specified as an instantiated <a href=\"#Core/util/CollectionFilter\">CollectionFilter</a>, or a config object for a CollectionFilter of the form</p>\n<pre><code>{\n    property : 'age',\n    operator : '&gt;=',\n    value    : 21\n}\n</code></pre>\n<p>Note that by default, a Filter <em>replaces</em> a Filter with the same <code>property</code> to make\nit easy to change existing Filters. A Filter's <code>id</code> is its <code>property</code> by default. You\ncan avoid this and add multiple Filters for one property by configuring Filters with <code>id</code>s.</p>\n<p>A Filter may also be specified as a function which filters candidate objects eg:</p>\n<pre><code>candidate =&gt; candidate.customerDetails.age &gt;= 21</code></pre>",parameters:[{name:"filter",type:"Object",description:"<p>A Filter or Filter configuration object to add to the Collection\nof Filters operating on this Collection.</p>"}],scope:"instance",returns:{type:"Core.util.CollectionFilter",description:"<p>The resulting Filter to make it easy to remove Filters.</p>"}},{name:"addIndex",access:"internal",description:"<p>Adds a lookup index for the passed property name. The index is built lazily when\nan index is serched,</p>",parameters:[{name:"indexProperty",type:"String",description:"<p>The property name to add an index for.</p>"}],scope:"instance"},{name:"findIndex",description:"<p>Return the index of the item with the specified key having the specified value.\nBy default, filtering is taken into account and this returns the index in the filtered\ndataset if present. To bypass this, pass the third parameter as <code>true</code>.</p>",parameters:[{name:"propertyName",type:"String",description:"<p>The name of the property to test.</p>"},{name:"value",type:"*",description:"<p>The value to test for.</p>"},{name:"ignoreFilters",type:"Boolean",description:"<p>Pass <code>true</code> to return the index in\nthe original data set if the item is filtered out.</p>",default:false,optional:true}],scope:"instance",returns:{type:"Number",description:"<p>The index of the item, or <code>-1</code> if not found.</p>"}},{name:"indexOf",description:"<p>Returns the index of the item with the same <code>id</code> as the passed item.</p>\n<p>By default, filtering is honoured, so if the item in question has been added,\nbut is currently filtered out of visibility, <code>-1</code> will be returned.</p>\n<p>To find the index in the master, unfiltered dataset, pass the second parameter as <code>true</code>;</p>",parameters:[{name:"item",type:["Object","String","Number"],description:"<p>The item to find, or an <code>id</code> to find.</p>"},{name:"ignoreFilters",type:"Boolean",description:"<p>Pass <code>true</code> to find the index in the master, unfiltered data set.</p>",default:false,optional:true}],scope:"instance",returns:{type:"Number",description:"<p>The index of the item, or <code>-1</code> if not found.</p>"}},{name:"includes",description:"<p>Returns <code>true</code> if this Collection includes an item with the same <code>id</code> as the passed item.</p>\n<p>By default, filtering is honoured, so if the item in question has been added,\nbut is currently filtered out of visibility, <code>false</code> will be returned.</p>\n<p>To query inclusion in the master, unfiltered dataset, pass the second parameter as <code>true</code>;</p>",parameters:[{name:"item",type:["Object","String","Number"],description:"<p>The item to find, or an <code>id</code> to find.</p>"},{name:"ignoreFilters",type:"Boolean",description:"<p>Pass <code>true</code> to find the index in the master, unfiltered data set.</p>",default:false,optional:true}],scope:"instance",returns:{type:"Boolean",description:"<p>True if the passed item is found.</p>"}},{name:"rebuildIndices",access:"internal",description:"<p>Called when the Collection is mutated and the indices have been flagged as invalid.</p>\n<p>Rebuilds the indices object to allow lookup by keys.</p>",scope:"instance"}],events:[{name:"change",description:"<p>Fired when items are added, replace or removed</p>",parameters:[{name:"action",type:"String",description:"<p>The underlying operation which caused data change.\nMay be <code>'splice'</code> (meaning an atomic add/remove operation, <code>'sort'</code> or <code>'filter'</code>)</p>"},{name:"source",type:"Core.util.Collection",description:"<p>This Collection.</p>"},{name:"removed",type:"Array.<Object>",description:"<p>An array of removed items.</p>"},{name:"added",type:"Array.<Object>",description:"<p>An array of added items.</p>"},{name:"replaced",type:"Array.<Object>",description:"<p>An array of replacements, each entry of which contains <code>[oldValue, newValue]</code>.</p>"},{name:"oldCount",type:"Number",description:"<p>The number of items in the full, untiltered collection prior to the splice operation.</p>"}]},{name:"noChange",description:"<p>Fired when a <a href=\"#Core/util/Collection#function-splice\">splice</a> operation is requested but the operation\nis a no-op and has caused no change to this Collection's dataset. The splice\nmethod's parameters are passed for reference.</p>",parameters:[{name:"index",type:"Number",description:"<p>Index at which to remove a block of items.</p>"},{name:"toRemove",type:["Array.<Object>","Number"],description:"<p>Either the number of items to remove starting\nat the passed <code>index</code>, or an array of items to remove (If an array is passed, the <code>index</code> is ignored).</p>",optional:true},{name:"toAdd",type:["Array.<Object>","Object"],description:"<p>An item, or an array of items to add.</p>",optional:true}]}]},{name:"module:Core/util/CollectionFilter",classDescription:"<p>A class which encapsulates a single filter operation which may be applied to any object to decide whether to\ninclude or exclude it from a set.</p>\n<p>A CollectionFilter generally has at least three main properties:</p>\n<ul>\n<li><code>property</code> - The name of a property in candidate objects from which to extract the value to test</li>\n<li><code>value</code> - The value which  this filter uses to test against.</li>\n<li><code>operator</code> - The comparison operator, eg: <code>'='</code> or <code>'&gt;'</code> etc.</li>\n</ul>\n<p>Given these three essential values, further configurations may affect how the filter is applied:</p>\n<ul>\n<li><code>caseSensitive</code> - If configured as <code>false</code>, string comparisons are case insensitive.</li>\n<li><code>convert</code> - A function which, when passed the extracted value from the candidate object, returns the value to test.</li>\n</ul>\n<p>A filter may also be configured with a single <code>filterBy</code> property. This function is just passed the raw\ncandidate object and must return <code>true</code> or <code>false</code>.</p>\n<p>A CollectionFilter may be configured to encapsulate a single filtering function by passing that function as the sole\nparameter to the constructor:</p>\n<pre><code>new CollectionFilter(candidate =&gt; candidate.title.contains('search string'));</code></pre>",constructor:{name:"constructor"},filename:"CollectionFilter.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/util",lineno:34,configs:[{name:"property",description:'<p>The name of a property of candidate objects which yields the value to compare against this CollectionFilter\'s <a href="#Core/util/CollectionFilter#config-value">value</a>.</p>',type:"String",scope:"inner"},{name:"value",description:'<p>The value against which to compare the <a href="#Core/util/CollectionFilter#config-property">property</a> of candidate objects.</p>',type:"*",scope:"inner"},{name:"operator",description:"<p>The operator to use when comparing a candidate object's <a href=\"#Core/util/CollectionFilter#config-property\">property</a> with this CollectionFilter's <a href=\"#Core/util/CollectionFilter#config-value\">value</a>.\nMay be: <code>'='</code>, <code>'!='</code>, <code>'&gt;'</code>, <code>'&gt;='</code>, <code>'&lt;'</code>, <code>'&lt;='</code>, <code>'*'</code>, <code>'startsWith'</code>, <code>'endsWith'</code></p>",type:"String",scope:"inner"},{name:"filterBy",description:'<p>May be used in place of the <a href="#Core/util/CollectionFilter#config-property">property</a>, <a href="#Core/util/CollectionFilter#config-value">value</a> and <a href="#Core/util/CollectionFilter#config-property">property</a> configs. A function which\naccepts a candidate object and returns <code>true</code> or <code>false</code></p>',type:"function",scope:"inner"},{name:"convert",description:'<p>A function which accepts a value extracted from a candidate object using the <a href="#Core/util/CollectionFilter#config-property">property</a> name, and\nreturns the value which the filter should use to compare against its <a href="#Core/util/CollectionFilter#config-value">value</a>.</p>',type:"function",scope:"inner"},{name:"caseSensitive",description:"<p>Configure as <code>false</code> to have string comparisons case insensitive.</p>",type:"Boolean",scope:"inner"},{name:"id",description:'<p>The <code>id</code> of this Filter for when used by a <a href="#Core/util/Collection">Core.util.Collection</a> Collection.\nBy default the <code>id</code> is the <a href="#Core/util/CollectionFilter#config-property">property</a> value.</p>',type:"String",scope:"inner"}],properties:[{name:"id",access:"private",description:"<p>When in a Collection (A Collection holds its Filters in a Collection), we need an id.</p>",scope:"instance",properties:[{type:{names:["String"]}}]},{name:"filterBy",description:'<p>May be used in place of the <a href="#Core/util/CollectionFilter#config-property">property</a>, <a href="#Core/util/CollectionFilter#config-value">value</a> and <a href="#Core/util/CollectionFilter#config-property">property</a> configs. A function which\naccepts a candidate object and returns <code>true</code> or <code>false</code></p>',type:{names:["function"]},scope:"instance"},{name:"property",description:'<p>The name of a property of candidate objects which yields the value to compare against this CollectionFilter\'s <a href="#Core/util/CollectionFilter#config-value">value</a>.</p>',type:{names:["String"]},scope:"instance"},{name:"value",description:'<p>The value against which to compare the <a href="#Core/util/CollectionFilter#config-property">property</a> of candidate objects.</p>',type:{names:["*"]},scope:"instance"},{name:"operator",description:"<p>The operator to use when comparing a candidate object's <a href=\"#Core/util/CollectionFilter#config-property\">property</a> with this CollectionFilter's <a href=\"#Core/util/CollectionFilter#config-value\">value</a>.\nMay be: <code>'='</code>, <code>'!='</code>, <code>'&gt;'</code>, <code>'&gt;='</code>, <code>'&lt;'</code>, <code>'&lt;='</code>, <code>'*'</code>, <code>'startsWith'</code>, <code>'endsWith'</code></p>",type:{names:["String"]},scope:"instance"}]},{name:"module:Core/util/CollectionSorter",classDescription:'<p>A class which encapsulates a single sorter operation which may be applied to any object to decide whether to\ninclude or exclude it from a set.</p>\n<p>A CollectionSorter generally has two properties:</p>\n<ul>\n<li><code>property</code> - The name of a property in collection objects by which to sort</li>\n<li><code>direction</code> - The sort direction, <code>\'ASC\'</code> or <code>\'DESC\'</code>.</li>\n</ul>\n<p>It may also be configured with just a <a href="#Core/util/CollectionSorter#config-sortFn">sortFn</a> function which returns the desired comparison\nresult when passed two objects to compare. Note that this does <em>not</em> require or use the\n<a href="#Core/util/CollectionSorter#config-property">property</a> config. Two collection items are passed for comparison.</p>\n<p>Further configurations may affect how the sorter is applied:</p>\n<ul>\n<li><code>convert</code> - A function which, when passed the <a href="#Core/util/CollectionSorter#config-property">property</a> value from\na collection object, returns the value to sort by.</li>\n</ul>\n<p>A CollectionSorter may be configured to encapsulate a <a href="#Core/util/CollectionSorter#config-sortFn">sortFn</a> by passing that function as the sole\nparameter to the constructor:</p>\n<pre><code>new CollectionSorter((lhs, rhs) =&gt; {\n    lhs = lhs.customerDetails.companyName.toLowerCase();\n    rhs = rhs.customerDetails.companyName.toLowerCase();\n\n    if (lhs &lt; rhs) {\n        return -1;\n    }\n    else if (lhs &gt; rhs) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n});</code></pre>',constructor:{name:"constructor"},filename:"CollectionSorter.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/util",lineno:45,configs:[{name:"property",description:"<p>The name of a property of collection objects which yields the value to sort by.</p>",type:"String",scope:"inner"},{name:"direction",description:"<p>The direction to sort in, <code>'ASC'</code> or <code>'DESC'</code></p>",type:"String",scope:"inner",defaultvalue:"ASC"},{name:"sortFn",description:'<p>A function which takes the place of using <a href="#Core/util/CollectionSorter#config-property">property</a> and <a href="#Core/util/CollectionSorter#config-direction">direction</a>.\nThe function is passed two objects from the collection to compare and must return the comparison result.</p>',type:"function",scope:"inner"},{name:"convert",description:'<p>When using <a href="#Core/util/CollectionSorter#config-property">property</a>, this may be specified as a function which takes the raw\nproperty value and returns the value to actually sort by.</p>',type:"function",scope:"inner"},{name:"id",description:'<p>The <code>id</code> of this Sorter for when used by a <a href="#Core/util/Collection">Core.util.Collection</a> Collection.\nBy default the <code>id</code> is the <a href="#Core/util/CollectionSorter#config-property">property</a> value.</p>',type:"String",scope:"inner"},{name:"useLocaleSort",description:"<p>Use <code>localeCompare()</code> when sorting, which lets the browser sort in a locale specific order. Set to <code>true</code>,\na locale string or a locale config to enable.</p>\n<p>Enabling this has big negative impact on sorting\nperformance. For more info on <code>localeCompare()</code>, see <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/localeCompare\">MDN</a>.</p>\n<pre class=\"prettyprint source lang-javascript\"><code>collection.addSorter({ field: 'name', useLocaleSort : 'sv-SE' });\n</code></pre>",type:["Boolean","String","Object"],scope:"inner",defaultvalue:"false"}],properties:[{name:"id",access:"private",description:"<p>When in a Collection (A Collection holds its Sorters in a Collection), we need an id.</p>",scope:"instance",properties:[{type:{names:["String"]}}]}],functions:[{name:"defaultSortFn",access:"private",description:'<p>Default sortFn used when no sortFn specified. Uses the <a href="#Core/util/CollectionSorter#config-property">property</a>,\n<a href="#Core/util/CollectionSorter#config-direction">direction</a>, and <a href="#Core/util/CollectionSorter#config-convert">convert</a>.</p>',scope:"instance"}]},{name:"module:Core/util/Month",classDescription:"<p>A class which encapsulates a calendar view of a month, and offers information about\nthe weeks and days within that calendar view.</p>\n<pre class=\"prettyprint source\"><code>  const m = new Month({\n      date         : '2018-12-01',\n      weekStartDay : 1\n  }) // December 2018 using Monday as week start\n  m.eachWeek((week, dates) => console.log(dates.map(d => d.getDate())))\n</code></pre>",constructor:{name:"constructor"},filename:"Month.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/util",lineno:33,functions:[{name:"constructor",description:"<p>Constructs a Month from a config object which <em>must</em> contain a <code>date</code> property.</p>",parameters:[{name:"config",type:"Object",description:"<p>An object containing initialization properties.</p>"},{name:"config.date",type:["Date","String","Number"],description:"<p>The date which the month should encapsulate. May be\na <code>Date</code> object, or a value, which, when passed to the <code>Date</code> constructor yields a\nvalid <code>Date</code> object. Mutating a passed <code>Date</code> after initializing a <code>Month</code> object\nhas no effect on the <code>Month</code> object.</p>",isSubParam:true},{name:"config.weekStartDay",type:"Number",description:'<p>Optional. Week start day override. Defaults to the\nlocale\'s <a href="#Core/helper/DateHelper#property-weekStartDay-static">weekStartDay</a>.</p>',optional:true,isSubParam:true},{name:"config.sixWeeks",type:"Boolean",description:"<p>Optional. Pass <code>true</code> to always have the month encapsulate six weeks.\nThis is ueful for UIs which must be a fixed height.</p>",optional:true,isSubParam:true}],scope:"inner"},{name:"eachDay",description:"<p>Iterates through all calendar cells in this month, calling the passed function\nfor each date.</p>",parameters:[{name:"fn",type:"function",description:"<p>The function to call.</p>\n<h4>Parameters</h4>\n - date [Date](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date) The date for the cell."}],scope:"instance"},{name:"eachWeek",description:"<p>Iterates through all weeks in this month, calling the passed function\nfor each week. The function is passed the following parameters:</p>",parameters:[{name:"fn",type:"function",description:"<p>The function to call.</p>\n<h4>Parameters</h4>\n - week [Number[]](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number) An array containing `[year, weekNumber]`.\n - date [Date[]](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date) The dates for the week."}],scope:"instance"}],properties:[{name:"dayCount",description:"<p>The number of days in the calendar for this month. This will always be\na multiple of 7, because this represents the number of calendar cells\noccupied by this month.</p>",scope:"instance",readonly:true,properties:[{type:{names:["Number"]}}]},{name:"weekCount",description:"<p>The number of weeks in the calendar for this month.</p>",scope:"instance",readonly:true,properties:[{type:{names:["Number"]}}]},{name:"startDate",description:"<p>The date of the first cell in the calendar view of this month.</p>",scope:"instance",readonly:true,properties:[{type:{names:["Date"]}}]},{name:"endDate",description:"<p>The date of the last cell in the calendar view of this month.</p>",scope:"instance",readonly:true,properties:[{type:{names:["Date"]}}]}]},{name:"module:Core/widget/Button",classDescription:"<p>Button widget, wraps and styles a regular <code>&lt;button&gt;</code> element. Can display text and icon and allows specifying button color.</p>",extends:["Core/widget/Widget"],mixes:["Core/widget/mixin/Badge"],examples:["// button with text and icon\nlet button = new Button({\n  icon: 'b-fa-plus-circle',\n  text: 'Add',\n  color: 'green',\n  onClick: () => {}\n});"],constructor:{name:"constructor"},filename:"Button.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/widget",lineno:38,classType:"button",externalExamples:["widget/Button.js"],configs:[{name:"icon",description:"<p>Button icon class.</p>\n<p>All <a href=\"https://fontawesome.com/cheatsheet\">Font Awesome</a> icons may also be specified as <code>'b-fa-' + iconName</code>.</p>\n<p>Otherwise this is a developer-defined CSS class string which results in the desired icon.</p>",type:"String",scope:"inner"},{name:"pressedIcon",description:"<p>Icon class for the buttons pressed state. Only applies to toggle buttons</p>\n<p>All <a href=\"https://fontawesome.com/cheatsheet\">Font Awesome</a> icons may also be specified as <code>'b-fa-' + iconName</code>.</p>\n<p>Otherwise this is a developer-defined CSS class string which results in the desired icon.</p>\n<pre class=\"prettyprint source\"><code>new Button({\n   // Icon for unpressed button\n   icon        : 'b-fa-wine-glass',\n\n   // Icon for pressed button\n   pressedIcon : 'b-fa-wine-glass-alt',\n\n   // Only applies to toggle buttons\n   toggleable  : true\n});\n</code></pre>",type:"String",scope:"inner"},{name:"iconAlign",description:"<p>Button icon alignment. May be <code>'start'</code> or <code>'end'</code>. Defaults to <code>'start'</code></p>",type:"String",scope:"inner"},{name:"text",description:"<p>Button text</p>",type:"String",scope:"inner"},{name:"color",description:"<p>Button color (should have match in button.scss or your custom styling). Valid values in Bryntum themes\nare:</p>\n<ul>\n<li>b-amber</li>\n<li>b-blue</li>\n<li>b-dark-gray</li>\n<li>b-deep-orange</li>\n<li>b-gray</li>\n<li>b-green</li>\n<li>b-indigo</li>\n<li>b-lime</li>\n<li>b-light-gray</li>\n<li>b-light-green</li>\n<li>b-orange</li>\n<li>b-purple</li>\n<li>b-red</li>\n<li>b-teal</li>\n<li>b-white</li>\n<li>b-yellow\nCombine with specifying <code>b-raised</code> for raised/filled style (theme dependent).</li>\n</ul>\n<pre class=\"prettyprint source\"><code>new Button({\n   color : 'b-teal b-raised'\n});\n</code></pre>",type:"String",scope:"inner"},{name:"toggleable",description:"<p>Enabled toggling of the button (stays pressed when pressed).</p>",type:"Boolean",scope:"inner",defaultvalue:false},{name:"pressed",description:"<p>Initially pressed or not. Only applies with <code>toggleable = true</code>.</p>\n<pre class=\"prettyprint source\"><code>const toggleButton = new Button({\n   toggleable : true,\n   text : 'Enable cool action'\n});\n</code></pre>",type:"Boolean",scope:"inner",defaultvalue:false},{name:"toggleGroup",description:"<p>Indicate that this button is part of a group where only one button can be pressed. Assigning a value\nalso sets <code>toggleable</code> to <code>true</code>.</p>\n<pre class=\"prettyprint source\"><code>const yesButton = new Button({\n   toggleGroup : 'yesno',\n   text        : 'Yes'\n});\n\nconst noButton = new Button({\n   toggleGroup : 'yesno',\n   text        : 'No'\n});\n</code></pre>",type:"String",scope:"inner"},{name:"menu",description:'<p>A submenu configuration object, or an array of MenuItem configuration\nobjects from which to create a submenu which is shown when this button is pressed.</p>\n<p>Note that this does not have to be a Menu. The <code>type</code> config can be used\nto specify any widget as the submenu.</p>\n<p>May also be specified as a fully instantiated <a href="#Core/widget/Widget#config-floating">floating Widget</a>\nsuch as a <a href="#Core/widget/Popup">Popup</a>.</p>',type:["Object","Array.<Object>","Core.widget.Widget"],scope:"inner"},{name:"href",description:"<p>If provided, turns the button into a link</p>",type:"String",scope:"inner"},{name:"target",description:'<p>The <code>target</code> attribute for the <a href="#Core/widget/Button#config-href">href</a> config</p>',type:"String",scope:"inner"}],properties:[{name:"text",description:"<p>Get/set text displayed on the button.</p>",scope:"instance",properties:[{type:{names:["String"]}}]},{name:"menu",description:'<p>Returns the instantiated menu widget as configured by <a href="#Core/widget/Button#config-menu">menu</a>.</p>',scope:"instance",readonly:true,properties:[{type:{names:["Core.widget.Widget"]}}]},{name:"pressed",description:"<p>Get/set button pressed state</p>",scope:"instance",properties:[{type:{names:["Boolean"]}}]},{name:"icon",description:"<p>Get/set the Button icon</p>",scope:"instance",properties:[{type:{names:["String"]}}]},{name:"pressedIcon",description:"<p>Get/set the Button pressed icon</p>",scope:"instance",properties:[{type:{names:["String"]}}]},{name:"iconAlign",description:"<p>Get/Set the Button icon alignment.\nMay be <code>'start'</code> or <code>'end'</code>. Defaults to <code>'start'</code></p>",scope:"instance",properties:[{type:{names:["String"]}}]}],functions:[{name:"onInternalClick",access:"private",description:"<p>Triggers events when user clicks button</p>",scope:"instance",fires:["event:click","event:action"]},{name:"toggle",description:"<p>Toggle button state (only use with toggleable = true)</p>",parameters:[{name:"pressed",type:"Boolean",description:"<p>Specify to force a certain toggle state</p>"}],scope:"instance",fires:["event:toggle"]}],events:[{name:"click",description:"<p>User clicked button</p>"},{name:"action",description:"<p>User performed the default action (clicked the button)</p>"},{name:"toggle",description:"<p>Button state was toggled</p>"}]},{name:"module:Core/widget/ButtonGroup",classDescription:"<p>A specialized container that holds buttons, displaying them in a horizontal group with borders adjusted to make them\nstick together.</p>\n<p>Trying to add other widgets than buttons will throw an exception.</p>\n<pre class=\"prettyprint source lang-javascript\"><code>new ButtonGroup({\n  items : [\n      { icon : 'b-fa b-fa-kiwi-bird' },\n      { icon : 'b-fa b-fa-kiwi-otter' },\n      { icon : 'b-fa b-fa-kiwi-rabbit' },\n      ...\n  ]\n});\n</code></pre>",extends:["Core/widget/Container"],constructor:{name:"constructor"},filename:"ButtonGroup.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/widget",lineno:31,externalExamples:["widget/ButtonGroup.js"],classType:"buttonGroup",configs:[{name:"cls",description:"<p>Custom CSS class to add to element. When using raised buttons (cls 'b-raised' on the buttons), the group\nwill look nicer if you also set that cls on the group.</p>\n<pre class=\"prettyprint source\"><code>new ButtonGroup({\n  cls : 'b-raised,\n  items : [\n      { icon : 'b-fa b-fa-unicorn', cls : 'b-raised' },\n      ...\n  ]\n});\n</code></pre>",type:"String",scope:"inner",category:"CSS"},{name:"items",description:"<p>An array of Buttons or typed Button config objects.</p>",type:["Array.<Object>","Array.<Core.widget.Button>"],scope:"inner"},{name:"color",description:'<p>Default color to apply to all contained buttons, see <a href="#Core/widget/Button#config-color">Button#color</a>.\nIndividual buttons can override the default.</p>',type:"String",scope:"inner"}],properties:[{name:"toggleGroup",description:'<p>Set to <code>true</code> to turn the ButtonGroup into a toggle group, assigning a generated value to each contained\nbuttons <a href="#Core/widget/Button#config-toggleGroup">toggleGroup config</a>. Individual buttons can\noverride the default.</p>',scope:"inner"}]},{name:"module:Core/widget/CalendarPanel",classDescription:"<p>A Panel which can display a month of date cells.</p>\n<p>This is a base class for UI widgets which need to make use of a calendar layout\nand should not be used directly.</p>",constructor:{name:"constructor"},filename:"CalendarPanel.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/widget",lineno:17,configs:[{name:"weekStartDay",description:"<p>The week start day, 0 meaning Sunday, 6 meaning Saturday.\nDefaults to the locale's week start day.</p>",type:"Number",scope:"inner"},{name:"sixWeeks",description:"<p>Configure as <code>true</code> to always show a six week calendar.</p>",type:"Boolean",scope:"inner",defaultvalue:true},{name:"showWeekNumber",description:"<p>Configure as <code>true</code> to show a week number column at the start of the calendar block.</p>",type:"Boolean",scope:"inner"},{name:"disabledDates",description:"<p>Either an array of <code>Date</code> objects which are to be disabled, or\na function, which, when passed a <code>Date</code> returns <code>true</code> if the\ndate is disabled.</p>",type:["function","Array.<Date>"],scope:"inner"},{name:"headerRenderer",description:'<p>A function which creates content in, and may mutate a day header element.\nThe following parameters are passed:</p>\n<ul>\n<li>cell <a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement">HTMLElement</a> The header element.</li>\n<li>day <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number">Number</a> The day number conforming to the specified <a href="#Core/widget/CalendarPanel#config-weekStartDay">weekStartDay</a>. Will be in the range 0 to 6.</li>\n</ul>',type:"function",scope:"inner"},{name:"weekRenderer",description:'<p>A function which creates content in, and may mutate the week cell element at the start of a week row.\nThe following parameters are passed:</p>\n<ul>\n<li>cell <a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement">HTMLElement</a> The header element.</li>\n<li>week <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number">Number[]</a> An array containing <code>[year, weekNumber]</code>.</li>\n</ul>',type:"function",scope:"inner"},{name:"cellRenderer",description:'<p>A function which creates content in, and may mutate a day cell element.\nThe following parameters are passed:</p>\n<ul>\n<li>cell <a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement">HTMLElement</a> The header element.</li>\n<li>date <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date">Date</a> The date for the cell.</li>\n</ul>',type:"function",scope:"inner"},{name:"disableWeekends",description:'<p>Configure as <code>true</code> to render weekends as <a href="#Core/widget/CalendarPanel#config-disabledDates">disabledDates</a>.</p>',type:"Boolean",scope:"inner"},{name:"tip",description:"<p>A config object to create a tooltip which will show on hover of a date cell\nincluding disabled, weekend, and &quot;other month&quot; cells.</p>\n<p>It is the developer's responsibility to hook the <code>beforeshow</code> event\nto either veto the show by returning <code>false</code> or provide contextual\ncontent for the date.</p>\n<p>The tip instance will be primed with a <code>currentDate</code> property.</p>",type:"Object",scope:"inner"},{name:"cellCls",access:"private",description:"<p>The class name to add to calendar cells.</p>",type:"String",scope:"inner"},{name:"disabledCls",access:"private",description:"<p>The class name to add to disabled calendar cells.</p>",type:"String",scope:"inner"},{name:"otherMonthCls",access:"private",description:"<p>The class name to add to calendar cells which are in the previous or next month.</p>",type:"String",scope:"inner"},{name:"weekendCls",access:"private",description:"<p>The class name to add to calendar cells which are weekend dates.</p>",type:"String",scope:"inner"},{name:"todayCls",access:"private",description:"<p>The class name to add to the calendar cell which contains today's date.</p>",type:"String",scope:"inner"}],properties:[{name:"date",description:"<p>The date which this CalendarPanel encapsulates. Setting this causes the\ncontent to be refreshed.</p>",scope:"instance",properties:[{type:{names:["Date"]}}]},{name:"weekStartDay",description:"<p>Set to 0 for Sunday (the default), 1 for Monday etc.</p>",scope:"instance",properties:[{type:{names:["Number","null"]}}]}]},{name:"module:Core/widget/Checkbox",classDescription:'<p>Checkbox field, wraps <code>&lt;input type=&quot;checkbox&quot;&gt;</code>.\nColor can be specified and you can optionally configure <a href="#Core/widget/Checkbox#config-text">text</a>\nto display in a label to the right of the checkbox in addition to a standard\nfield <a href="#Core/widget/Checkbox#config-label">label</a>.</p>\n<p>This field can be used as an <a href="#Grid/column/Column#config-editor">editor</a> for the <a href="#Grid/column/Column">Column</a>.</p>',extends:["Core/widget/Field"],examples:["// checkbox with a label and a handler\nlet checkbox = new Checkbox({\n  text: 'Check me, please',\n  onAction: () => {}\n});"],constructor:{name:"constructor"},filename:"Checkbox.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/widget",lineno:31,classType:"checkbox",externalExamples:["widget/Checkbox.js"],configs:[{name:"text",description:"<p>Text to display on checkbox label</p>",type:"String",scope:"inner"},{name:"color",description:"<p>Checkbox color, must have match in css</p>",type:"String",scope:"inner"},{name:"value",description:"<p>Sets input fields value attribute</p>",type:"String",scope:"inner"}],properties:[{name:"text",description:"<p>Get/set label</p>",scope:"instance",properties:[{type:{names:["String"]}}]},{name:"value",description:"<p>Get/set value</p>",scope:"instance",properties:[{type:{names:["String"]}}]},{name:"checked",description:"<p>Get/set checked state</p>",scope:"instance",properties:[{type:{names:["Boolean"]}}]},{name:"readOnly",description:"<p>Get/set readonly state (disabled underlying input)</p>",scope:"instance",properties:[{type:{names:["Boolean"]}}]}],functions:[{name:"check",description:"<p>Check the box</p>",scope:"instance"},{name:"uncheck",description:"<p>Uncheck the box</p>",scope:"instance"},{name:"toggle",description:'<p>Toggle checked state. If you want to force a certain state, assign to <a href="#Core/widget/Checkbox#property-checked">checked</a> instead.</p>',scope:"instance"},{name:"internalOnChange",access:"private",description:"<p>Triggers events when user toggles the checkbox</p>",scope:"instance",fires:["event:beforeChange","event:change","event:action"]},{name:"triggerChange",access:"private",description:"<p>Triggers events when checked state is changed</p>",scope:"instance",fires:["event:beforeChange","event:change","event:action"]}],events:[{name:"beforeChange",description:"<p>Fired before checkbox is toggled. Returning false from a listener prevents the checkbox from being toggled.</p>",parameters:[{name:"source",type:"Core.widget.Checkbox",description:"<p>Checkbox</p>"},{name:"checked",type:"Boolean",description:"<p>Checked or not</p>"}],preventable:true},{name:"change",description:"<p>Fired when checkbox is toggled</p>",parameters:[{name:"source",type:"Core.widget.Checkbox",description:"<p>Checkbox</p>"},{name:"checked",type:"Boolean",description:"<p>Checked or not</p>"}]},{name:"action",description:"<p>User performed the default action (toggled the checkbox)</p>",parameters:[{name:"source",type:"Core.widget.Checkbox",description:"<p>Checkbox</p>"},{name:"checked",type:"Boolean",description:"<p>Checked or not</p>"}]}]},{name:"module:Core/widget/ChipView",classDescription:"<p>Displays an inline series of Chips which may be navigated to, selected and deleted.</p>",extends:["Core/widget/List"],constructor:{name:"constructor"},filename:"ChipView.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/widget",lineno:15,classType:"chipview",configs:[{name:"closable",description:'<p>Configure as <code>true</code> to display a clickable close icon after the <a href="#Core/widget/List#config-itemTpl">itemTpl</a>.\nWhen tapped, the configured <a href="#Core/widget/ChipView#config-closeHandler">closeHandler</a> is called passing the\nassociated record.</p>\n<p>Chips may also be selected using the <code>LEFT</code> and <code>RIGHT</code> arrows (And the <code>Shift</code> key to\ndo multiple, contiguous election). Pressing the <code>DELETE</code> or <code>BACKSPACE</code> key passes the\nselected records to the <a href="#Core/widget/ChipView#config-closeHandler">closeHandler</a></p>',type:"Boolean",scope:"inner",defaultvalue:true},{name:"iconTpl",description:'<p>A template function, which, when passed a record, returns the markup which\nencapsulates a chip\'s icon to be placed before the <a href="#Core/widget/List#config-itemTpl">itemTpl</a>.</p>',type:"function",scope:"inner"},{name:"closeHandler",description:'<p>If <a href="#Core/widget/ChipView#config-closable">closable</a> is <code>true</code>, this is the name of a callback function\nto handle what the &quot;close&quot; action means.</p>',type:["String","function"],scope:"inner"}]},{name:"module:Core/widget/Combo",classDescription:'<p>Combo (dropdown) widget. Consists of a text field with a trigger icon, which displays a List. Can be\npopulated from a Store.</p>\n<p>This field can be used as an <a href="#Grid/column/Column#config-editor">editor</a> for the <a href="#Grid/column/Column">Column</a>.</p>',extends:["Core/widget/PickerField"],examples:["// items as strings\nlet combo = new Combo({\n  items: ['Small', 'Smaller', 'Really small', 'Tiny', 'Super tiny', '?'],\n  placeholder: 'Pick size of diamond for ring'\n});","// items as configs\nlet combo = new Combo({\n  items: [{ value: 'a', text: 'First' }, { value: 'z', text: 'Last' }]\n});","// items from store\nlet combo = new Combo({\n  store: memberStore,\n  valueField: 'id',\n  displayField: 'name'\n});"],constructor:{name:"constructor"},filename:"Combo.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/widget",lineno:58,classType:"combo",externalExamples:["widget/Combo.js"],configs:[{name:"items",description:"<p>Rows to display in the dropdown (list items).</p>\n<p>If an object, the property names provide the <a href=\"#Core/widget/Combo#config-value\">value</a> for the Combo, and\nthe property values provide the displayed test in the list and input area eg:</p>\n<pre><code>items : {\n    small  : 'Small',\n    medium : 'Medium',\n    large  : 'Large'\n}\n</code></pre>\n<p>If an array, each entry may be</p>\n<ul>\n<li>an object containing properties which must include\nthe <a href=\"#Core/widget/Combo#config-valueField\">valueField</a> and <a href=\"#Core/widget/Combo#config-displayField\">displayField</a> which populates the dropdown\nwith text and provides the corresponding field value.</li>\n<li>An array whos first value provides the <a href=\"#Core/widget/Combo#config-value\">value</a> for the Combo and whos\nsecond value provides the displayed test in the list and input area.</li>\n<li>An array of values where the <a href=\"#Core/widget/Combo#config-valueField\">valueField</a> and <a href=\"#Core/widget/Combo#config-displayField\">displayField</a> are the same.</li>\n</ul>\n<p>eg:</p>\n<pre><code>items : [\n    {value : 'small',  text : 'Small'},\n    {value : 'medium', text : 'Medium'},\n    {value : 'large',  text : 'Large'},\n]\n</code></pre>\n<p>or</p>\n<pre><code>items : [\n    ['small',  'Small'],\n    ['medium', 'Medium'],\n    ['large',  'Large'],\n]\n</code></pre>\n<p>or</p>\n<pre><code>items : [ 'Small', 'Medium', 'Large' ]</code></pre>",type:["Array.<Object>","Array.<String>","Object"],scope:"inner"},{name:"store",description:"<p>A store used to populate items</p>",type:"Core.data.Store",scope:"inner"},{name:"valueField",description:"<p>Field used for item value when populating from store</p>",type:"String",scope:"inner"},{name:"displayField",description:"<p>Field used for item text when populating from store</p>",type:"String",scope:"inner"},{name:"pickerWidth",description:'<p>Width of picker, defaults to this combo\'s <a href="#Core/widget/Combo#config-pickerAlignElement">pickerAlignElement</a> width</p>',type:"Number",scope:"inner"},{name:"minChars",description:'<p>The minimum string length to trigger the filtering, only relevant when <a href="#Core/widget/Combo#config-editable">editable</a> is <code>true</code>.</p>\n<p>This defaults to <code>1</code> in the case of local filtering, but <code>4</code> if the\n<a href="#Core/widget/Combo#config-filterParamName">filterParamName</a> is set to cause remote dropdown loading.</p>',type:"Number",scope:"inner"},{name:"listItemTpl",description:"<p>Template for rendering list items contents</p>",type:"function",scope:"inner"},{name:"displayValueRenderer",description:"<p>Template function that can be used to customize the displayed value</p>",type:"function",scope:"inner"},{name:"listCls",description:"<p>CSS class to add to picker</p>",type:"String",scope:"inner"},{name:"filterParamName",description:'<p>If the dropdown is to be populated with a filtered query to a remote server, specify the\nname of the parameter to pass the typed string here. By default, the string is simply sent\nas the value of the parameter. For special encoding, configure the combo with <a href="#Core/widget/Combo#config-encodeFilterParams">encodeFilterParams</a></p>',type:"String",scope:"inner"},{name:"encodeFilterParams",description:'<p>A function which creates an array of values for the {#config-filterParamName} to pass\nany filters to the server upon load.</p>\n<p>The default behaviour is just to set the parameter value to the filter\'s <code>value</code>,\nbut the filter can be fully encoded for example:</p>\n<pre class="prettyprint source lang-javascript"><code>   {\n       encodeFilterParams(filters) {\n           const result = [];\n\n           for (const { property, operator, value, caseSensitive } of filters) {\n               result.push(JSON.stringify({\n                   field : property,\n                   operator,\n                   value,\n                   caseSensitive\n               }));\n          }\n       return result;\n   }\n</code></pre>',type:"function",scope:"inner"},{name:"hideTrigger",description:'<p>Configure as <code>true</code> to hide the expand trigger. This is automatically set to <code>true</code> if\nremote filtering is enabled by setting the <a href="#Core/widget/Combo#config-filterParamName">filterParamName</a> config.</p>',type:"Boolean",scope:"inner",defaultvalue:"false"},{name:"overlayAnchor",description:'<p>This implies that the picker will display an anchor pointer, but also means that the picker will align closer\nto the input field so that the pointer pierces the <a href="#Core/widget/Combo#config-pickerAlignElement">pickerAlignElement</a></p>',type:"Boolean",scope:"inner",defaultvalue:"false"},{name:"keyStrokeFilterDelay",description:"<p>The delay in milliseconds to wait after the last keystroke before filtering the list.</p>",type:"Number",scope:"inner"},{name:"triggerAction",description:"<p>How to query the store upon click of the expand trigger. There are two constants provided:</p>\n<ul>\n<li><code>Combo.queryAll</code> - Clear the filter and display the whole dataset in the dropdown.</li>\n<li><code>Combo.queryLast</code> - Filter the dataset using the last filter value.</li>\n<li><code>null</code>/any other - Use the value in the input field to filter the dataset.</li>\n</ul>",type:"Object",scope:"inner",defaultvalue:"Combo.QueryAll"},{name:"filterOperator",description:"<p>The name of an operator type as implemented in <a href=\"#Core/util/CollectionFilter#config-operator\">operator</a>\nto use when filtering the dropdown list based upon the typed value.</p>\n<p>This defaults to <code>'startsWith'</code>, but the <code>'*'</code> operator may be used to match all\nvalues which <em>contain</em> the typed value.</p>\n<p>Not used when <a href=\"#Core/widget/Combo#config-filterParamName\">filterParamName</a> is set to cause remote dropdown loading.\nThe exact filtering operation is up to the server.</p>",type:"String",scope:"inner"},{name:"caseSensitive",description:"<p>Configure as <code>true</code> to force case matching when filtering the dropdown list based upon the typed value.</p>",type:"Boolean",scope:"inner",defaultvalue:"false"},{name:"multiSelect",description:"<p>Configure as <code>true</code> to allow selection of multiple values from the dropdown list.</p>\n<p>Each value is displayed as a &quot;Chip&quot; to the left of the input area. Chips may be\nselected using the <code>LEFT</code> and <code>RIGHT</code> arrow keys and deleted using the <code>DELETE</code> key\nto remove values from the field. There is also a clickable close icon in each chip.</p>",type:"Boolean",scope:"inner",defaultvalue:"false"},{name:"chipView",description:'<p>A config object to configure the <a href="#Core/widget/ChipView">Core.widget.ChipView</a> to display the\nselected value set when <a href="#Core/widget/Combo#config-multiSelect">multiSelect</a> is `true.</p>\n<p>For example the <a href="#Core/widget/List#config-itemTpl">itemTpl</a> or\n<a href="#Core/widget/ChipView#config-iconTpl">iconTpl</a> might be configured to display\nricher chips for selected items.</p>',type:"Boolean",scope:"inner"},{name:"filterSelected",description:'<p>When <a href="#Core/widget/Combo#config-multiSelect">multiSelect</a> is <code>true</code>, you may configure <code>filterSelected</code> as\n<code>true</code> to hide items in the dropdown when they are added to the selection.\nIt will appear as if the requested item has &quot;moved&quot; into the field\'s\n<a href="#Core/widget/Combo#config-chipView">ChipView</a>.</p>',type:"Boolean",scope:"inner",defaultvalue:"false"},{name:"emptyText",description:"<p>Text to display in the drop down when there are no items in the underlying store</p>",type:"String",scope:"inner"},{name:"value",description:'<p>The initial value of this Combo box. In single select mode (default) it\'s a simple string value, for <a href="#Core/widget/Combo#config-multiSelect">multiSelect</a> mode, it should be an array of record ids.</p>',type:["String","Array.<Number>","Array.<String>"],scope:"inner"},{name:"validateFilter",description:"<p><code>true</code> to cause the field to be in an invalid state while the typed filter string does not match a record in the store.</p>",type:"Boolean",scope:"inner",defaultvalue:true},{name:"clearTextOnPickerHide",description:"<p><code>true</code> to clear value typed to a multiselect combo when picker is collapsed</p>",type:"Boolean",scope:"inner",defaultvalue:true}],properties:[{name:"hidePickerOnSelect",description:'<p>By default, the picker is hidden on selection in single select mode, and\nremains to allow more selections when <a href="#Core/widget/Combo#config-multiSelect">multiSelect</a> is <code>true</code>.\nSetting this to a <code>Boolean</code> value can override that default.</p>',scope:"inner"},{name:"items",access:"private",description:"<p>Prepares items to work in attached menu (converts strings to items)</p>",scope:"instance"},{name:"value",description:'<p>Get/sets combo value, selects corresponding item in the list\nSetting null clears the field.</p>\n<p>If <a href="#Core/widget/Combo#config-multiSelect">multiSelect</a> is <code>true</code>, then multiple values may be passed as an array.\nIf the values are records, these become the selected record set held by <a href="#Core/widget/Combo#property-valueCollection">valueCollection</a>,\nand the <code>value</code> yielded by this field is an array of all the <a href="#Core/widget/Combo#config-valueField">valueField</a>s from the records.</p>',scope:"instance",properties:[{type:{names:["Object"]}}]},{name:"valueCollection",description:'<p>A <a href="#Core/util/Collection">Collection</a> which holds the currently seleted records\nfrom the store which dictates this field\'s value.</p>\n<p>Usually, this will contain one record, the record selected.</p>\n<p>When <a href="#Core/widget/Combo#config-multiSelect">multiSelect</a> is <code>true</code>, there may be several records selected.</p>',scope:"instance"},{name:"store",description:"<p>Get/set store to display items from. Also accepts a Store config object</p>",scope:"instance",properties:[{type:{names:["Core.data.Store","Object"]}}]},{name:"record",description:"<p>Get selected record.</p>",scope:"instance",readonly:true,properties:[{type:{names:["Array.<Core.data.Model>"]}}]},{name:"records",description:"<p>Get the selected record(s).</p>",scope:"instance",readonly:true,properties:[{type:{names:["Array.<Core.data.Model>"]}}]},{name:"queryAll",description:'<p>A constant value for the <a href="#Core/widget/Combo#config-triggerAction">triggerAction</a> config to indicate that clicking the trigger should\nclear the filter and display the whole dataset in the dropdown.</p>',type:{names:["Symbol"]},scope:"static",readonly:true},{name:"queryLast",description:'<p>A constant value for the <a href="#Core/widget/Combo#config-triggerAction">triggerAction</a> config to indicate that clicking the trigger should\nfilter the dataset usiong the last filter query string, <em>not</em> the input field value.</p>',type:{names:["Symbol"]},scope:"static",readonly:true}],functions:[{name:"onEditComplete",access:"internal",description:"<p>Check if field value is valid</p>",scope:"instance"},{name:"onTriggerClick",access:"private",description:"<p>User clicked trigger icon, toggle list.</p>",scope:"instance"},{name:"internalOnInput",access:"private",description:"<p>User types into input field in editable combo, show list and filter it.</p>",scope:"instance"},{name:"onValueCollectionChange",access:"private",description:'<p>This reacts to our <a href="#Core/widget/Combo#property-valueCollection">valueCollection</a> being mutated in any way.\nThe <code>change</code>, <code>select</code> and <code>action</code> events are fired here.</p>\n<p>This could happen in four ways:</p>\n<ul>\n<li>User selected or deselected an item in the dropdown list.</li>\n<li><code>set value</code> changes the content.</li>\n<li>The <a href="#Core/widget/Combo#config-multiSelect">multiSelect</a> Chip view (which uses this in its store) deletes a record.</li>\n<li>The application programmatically mutates the <a href="#Core/widget/Combo#property-valueCollection">valueCollection</a>.</li>\n</ul>',scope:"instance"},{name:"onValueCollectionNoChange",access:"private",description:'<p>This listens for when a record from the list is selected, but is already part of\nthe selection and so the <a href="#Core/widget/Combo#property-valueCollection">valueCollection</a> rejects that as a no-op.\nAt this point, the user will still expect the picker to hide.</p>',parameters:[{name:"event",type:"Object",description:"<p>The noChange event containing the splice parameters</p>"}],scope:"instance"},{name:"createPicker",access:"internal",description:"<p>Creates default picker widget</p>",scope:"instance"}],events:[{name:"input",description:"<p>User typed into the field. Please note that the value attached to this event is the raw input field value and\nnot the combos value</p>",parameters:[{name:"source",type:"Core.widget.Combo",description:"<p>The combo</p>"},{name:"value",type:"String",description:"<p>Raw input value</p>"}]},{name:"select",description:"<p>User selected an item in the list</p>"},{name:"action",description:"<p>User performed the default action in the list (selected an item)</p>"}]},{name:"module:Core/widget/Container",classDescription:"<p>Widget that can contain other widgets. Layout is flexbox by default, see the <a href=\"#Core/widget/Container#config-layout\">layout</a> config.</p>\n<pre class=\"prettyprint source lang-javascript\"><code>// create a container with two widgets\nlet container = new Container({\n    items : [\n        { type : 'text', label : 'Name' },\n        { type : 'number', label : 'Score' }\n    ]\n});\n</code></pre>\n<p>Containers can have child widgets added, or removed during their lifecycle to accommodate business needs.</p>\n<p>For example:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>myTaskPopup.on({\n    beforeShow() {\n        if (task.type === task.MASTER) {\n            // Insert the childTask multiselect before the masterTask field\n            myPopyup.insert(childTaskMultiselect, masterTaskField)\n\n            // We don't need this for master tasks\n            myPopup.remove(masterTaskField);\n        }\n        else {\n            // Insert the masterTask combo before the childTask multiselect\n            myPopyup.insert(masterTaskField, childTaskMultiselect)\n\n            // We don't need this for child tasks\n            myPopup.remove(childTaskMultiselect);\n        }\n    }\n});\n</code></pre>",extends:["Core/widget/Widget"],constructor:{name:"constructor"},filename:"Container.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/widget",lineno:61,classType:"container",externalExamples:["widget/Container.js"],configs:[{name:"items",description:"<p>An array of Widgets or typed Widget config objects.</p>\n<p>If configured as an Object, the property names are used as the child component's\n<a href=\"#Core/widget/Widget#config-ref\">ref</a> name, and the value is the child component's config object.</p>\n<pre class=\"prettyprint source lang-javascript\"><code> new Panel({\n     title    : 'Test Panel',\n     floating : true,\n     centered : true,\n     width    : 600,\n     height   : 400,\n     layout   : 'fit',\n     items    : {\n         tabs : {\n             type : 'tabpanel',\n             items : {\n                 general : {\n                     title : 'General',\n                     html  : 'General content'\n                 },\n                 details : {\n                     title : 'Details',\n                     html  : 'Details content'\n                 }\n             }\n         }\n     }\n }).show();\n</code></pre>",type:["Array.<Object>","Array.<Core.widget.Widget>","Object"],scope:"inner"},{name:"widgets",description:'<p>Synonym for the <a href="#Core/widget/Container#config-items">items</a> config option.</p>',type:["Array.<Object>","Array.<Core.widget.Widget>","Object"],scope:"inner",deprecated:true},{name:"defaults",description:"<p>A config object containing default settings to apply to all child widgets.</p>",type:"Object",scope:"inner"},{name:"layoutStyle",description:'<p>The CSS style properties to apply to the <a href="#Core/widget/Widget#property-contentElement">contentElement</a>.</p>\n<p>By default, a Container\'s <a href="#Core/widget/Widget#property-contentElement">contentElement</a> uses flexbox layout, so this config\nmay contain the following properties:</p>\n<ul>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/flex-direction">flexDirection</a> default \'<code>row</code>\'</li>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/flex-wrap">flexWrap</a></li>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/flex-flow">flexFlow</a></li>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/justify-content">justifyContent</a></li>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/align-items">alignItems</a></li>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/align-content">alignContent</a></li>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/place-content">placeContent</a></li>\n</ul>',type:"Object",scope:"inner"},{name:"itemCls",description:"<p>An optional CSS class to add to child items of this container.</p>",type:"String",scope:"inner"},{name:"layout",description:'<p>The short name of a helper class which manages rendering and styling of child items.</p>\n<p>By default, the only special processing that is applied is that the Container class\'s\n<a href="#Core/widget/Container#config-itemCls">itemCls</a> is added to child items.</p>\n<p>Containers use CSS flexbox in its default configuration to arrange child items. You may either\nuse the <a href="#Core/widget/Container#config-layoutStyle">layoutStyle</a> configuration to tune how child items are layed out,\nor use one of the built in helper classes which include:</p>\n<ul>\n<li><code>card</code> Child items are displayed one at a time, size to fit the <a href="#Core/widget/Widget#property-contentElement">contentElement</a>\nand are slid in from the side when activated.</li>\n</ul>',type:"String",scope:"inner"},{name:"namedItems",description:'<p>An object containing named config objects which may be referenced by name in any <a href="#Core/widget/Container#config-items">items</a>\nobject. For example, a specialized <a href="#Core/widget/Menu">Menu</a> subclass may have a <code>namedItems</code>\ndefault value defined like this:</p>\n<pre class="prettyprint source lang-javascript"><code> namedItems : {\n     removeRow : {\n         text : \'Remove row\',\n         onItem() {\n             this.ownerGrid.remove(this.ownerGrid.selectedRecord);\n         }\n     }\n }\n</code></pre>\n<p>Then whenever that subclass is instantiated and configured with an <a href="#Core/widget/Container#config-items">items</a>\nobject, the items may be configured like this:</p>\n<pre class="prettyprint source lang-javascript"><code> items : {\n     removeRow : true,   // The referenced namedItem will be applied to this\n     otherItemRef : {\n         text : \'Option 2\',\n         onItem() {\n         }\n     }\n}\n</code></pre>',type:"Object",scope:"inner"}],properties:[{name:"textContent",description:"<p>Specify <code>true</code> for a container used to show text markup. It will apply the <code>b-text-content</code>\nclass which specifies a default max-width that makes long text more readable. This is automatically set to\nfalse if the container adds/defines child Widgets.</p>",scope:"inner"},{name:"items",description:"<p>The array of instantiated child Widgets.</p>",scope:"instance",readonly:true,properties:[{type:{names:["Array.<Core.widget.Widget>"]}}]},{name:"widgetMap",description:'<p>An object which contains a map of descendant widgets keyed by their <a href="#Core/widget/Widget#config-ref">ref</a>.\nAll descendant widgets will be available in the <code>widgetMap</code>.</p>',scope:"instance",readonly:true,typings:"any",properties:[{type:{names:["Object"]}}]},{name:"record",description:'<p>The <a href="#Core/data/Model">record</a> to be applied to the fields contained in this Container.\nAny descendant widgets of this Container with a <code>name</code> property will have its value set to the\nvalue of that named property of the record. If no record is passed, the widget has its value\nset to <code>null</code>.</p>',scope:"instance",properties:[{type:{names:["Core.data.Model"]}}]},{name:"layoutStyle",description:'<p>Sets multiple flexbox settings which affect how child widgets are arranged.</p>\n<p>By default, Containers use flexbox layout, so this property\nmay contain the following properties:</p>\n<ul>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/flex-direction">flexDirection</a> default \'<code>row</code>\'</li>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/flex-wrap">flexWrap</a></li>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/flex-flow">flexFlow</a></li>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/justify-content">justifyContent</a></li>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/align-items">alignItems</a></li>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/align-content">alignContent</a></li>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/place-content">placeContent</a></li>\n</ul>',scope:"instance",category:"Layout",properties:[{type:{names:["Object"]}}]},{name:"isValid",description:"<p>Checks that all descendant fields are valid.</p>",scope:"instance",returns:[{type:{names:["Boolean"]},description:"<p>Returns <code>true</code> if all contained fields are valid, otherwise <code>false</code></p>"}]},{name:"values",description:'<p>Retrieves or sets all values from/to contained fields.\nAccepts and returns a map, using <a href="#Core/widget/Field#config-name">name</a>,\n<a href="#Core/widget/Widget#config-ref">ref</a> or <a href="#Core/widget/Widget#config-id">id</a> (in that order) as keys.</p>\n<pre class="prettyprint source lang-javascript"><code>container.values = {\n    firstName : \'Clark\',\n    surname : \'Kent\'\n};\n</code></pre>',scope:"instance",properties:[{type:{names:["Object"]}}]},{name:"isSettingValues",description:"<p>Returns <code>true</code> if currently setting values. Allows fields change highlighting to distinguishing between initially\nsetting values and later on changing values.</p>",scope:"instance",properties:[{type:{names:["boolean"]}}]}],functions:[{name:"remove",description:"<p>Removes the passed child/children from this Container.</p>",parameters:[{name:"toRemove",type:"Core.widget.Widget",description:"<p>The child or children to remove.</p>",isRestParam:true}],scope:"instance",returns:{type:["Core.widget.Widget","Array.<Core.widget.Widget>"],description:"<p>All the removed items. An array if multiple items\nwere removed, otherwise, just the item removed.</p>"}},{name:"removeAll",description:"<p>Removes all children from this Container.</p>",scope:"instance",returns:{type:"Array.<Core.widget.Widget>",description:"<p>All the removed items.</p>"}},{name:"add",description:"<p>Appends the passed widget/widgets to this Container.</p>",parameters:[{name:"toAdd",type:"Core.widget.Widget",description:"<p>The child or children to add.</p>",isRestParam:true}],scope:"instance",returns:{type:["Core.widget.Widget","Array.<Core.widget.Widget>"],description:"<p>All the added widgets. An array if multiple items\nwere added, otherwise, just the item added.</p>"}},{name:"insert",description:"<p>Inserts the passed widget into this Container at the specified position.</p>",parameters:[{name:"toAdd",type:"Core.widget.Widget",description:"<p>The child to insert.</p>"},{name:"The",type:["Number","Core.widget.Widget"],description:"<p>index to insert at or the existing child to insert before.</p>"}],scope:"instance",returns:{type:"Core.widget.Widget",description:"<p>The added widget.</p>"}},{name:"eachWidget",description:"<p>Iterate over all widgets in this container and below.</p>\n<p><em>Note</em>: Due to this method aborting when the function returns\n<code>false</code>, beware of using short form arrow functions. If the expression\nexecuted evaluates to <code>false</code>, iteration will terminate.</p>",parameters:[{name:"fn",type:"function",description:"<p>A function to execute upon all descendant widgets.\nIteration terminates if this function returns <code>false</code>.</p>"},{name:"deep",type:"Boolean",description:"<p>Pass as <code>false</code> to only consider immediate child widgets.</p>",default:true,optional:true}],scope:"instance",returns:{type:"Boolean",description:"<p>Returns <code>true</code> if iteration was not aborted by a step returning <code>false</code></p>"}},{name:"queryAll",description:"<p>Returns an array of all descendant widgets which the passed\nfilter function returns <code>true</code> for.</p>",parameters:[{name:"filter",type:"function",description:"<p>A function which, when passed a widget,\nreturns <code>true</code> to include the widget in the results.</p>"}],scope:"instance",returns:{type:"Array.<Core.widget.Widget>",description:"<p>All matching descendant widgets.</p>"}},{name:"query",description:"<p>Returns the first descendant widgets which the passed\nfilter function returns <code>true</code> for.</p>",parameters:[{name:"filter",type:"function",description:"<p>A function which, when passed a widget,\nreturns <code>true</code> to return the widget as the sole result.</p>"}],scope:"instance",returns:{type:"Core.widget.Widget",description:"<p>The first matching descendant widget.</p>"}},{name:"getWidgetById",description:"<p>Returns a directly contained widget by id</p>",parameters:[{name:"id",type:"String",description:"<p>The widget id</p>"}],scope:"instance",returns:{type:"Core.widget.Widget"}},{name:"processWidgetConfig",description:"<p>This function is called prior to creating widgets, override it in subclasses to allow containers to modify the\nconfiguration of each widget. When adding a widget to a container hierarchy each parent containers\n<code>processWidgetConfig</code> will be called. Returning false from the function prevents the widget from being added at\nall.</p>",scope:"instance"},{name:"createWidget",access:"internal",description:"<p>This function converts a Widget config object into a Widget.</p>",parameters:[{name:"widget",type:"Object",description:"<p>A Widget config object.</p>"}],scope:"instance"}]},{name:"module:Core/widget/DateField",classDescription:'<p>Date field widget (text field + date picker).</p>\n<p>This field can be used as an <a href="#Grid/column/Column#config-editor">editor</a> for the <a href="#Grid/column/Column">Column</a>.\nIt is used as the default editor for the <a href="#Grid/column/DateColumn">DateColumn</a>.</p>',extends:["Core/widget/PickerField"],examples:["// minimal DateField config with date format specified\nlet dateField = new DateField({\n  format: 'YYMMDD'\n});"],constructor:{name:"constructor"},filename:"DateField.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/widget",lineno:30,classType:"datefield",externalExamples:["widget/DateField.js"],configs:[{name:"format",description:"<p>Format for date displayed in field. Defaults to using long date format, as defined by current locale (<code>L</code>)</p>",type:"String",scope:"inner",defaultvalue:"L"},{name:"keepTime",description:"<p>A flag which indicates what time should be used for selected date.\n<code>false</code> by default which means time is reset to midnight.</p>\n<p>Possible options are:</p>\n<ul>\n<li><code>false</code> to reset time to midnight</li>\n<li><code>true</code> to keep original time value</li>\n<li><code>17:00</code> a string which is parsed automatically</li>\n<li><code>new Date(2020, 0, 1, 17)</code> a date object to copy time from</li>\n</ul>",type:["Boolean","Date","String"],scope:"inner",defaultvalue:false},{name:"pickerFormat",description:'<p>Format for date in the <a href="#Core/widget/DateField#config-picker">picker</a>. Uses localized format per default</p>',type:"String",scope:"inner"},{name:"min",description:"<p>Min value</p>",type:["String","Date"],scope:"inner"},{name:"max",description:"<p>Max value</p>",type:["String","Date"],scope:"inner"},{name:"step",description:"<p>Time increment duration value. If specified, <code>forward</code> and <code>back</code> triggers are displayed.\nThe value is taken to be a string consisting of the numeric magnitude and the units.\nThe units may be a recognised unit abbreviation of this locale or the full local unit name.\nFor example <code>'1d'</code> or <code>'1w'</code> or <code>'1 week'</code>. This may be specified as an object containing\ntwo properties: <code>magnitude</code>, a Number, and <code>unit</code>, a String</p>",type:["String","Number","Object"],scope:"inner"},{name:"weekStartDay",description:'<p>The week start day in the <a href="#Core/widget/DateField#config-picker">picker</a>, 0 meaning Sunday, 6 meaning Saturday.\nUses localized value per default.</p>',type:"Number",scope:"inner"},{name:"picker",description:'<p>A config object used to configure the <a href="#Core/widget/DatePicker">datePicker</a>.</p>\n<pre class="prettyprint source lang-javascript"><code>dateField = new DateField({\n     picker    : {\n         multiSelect : true\n     }\n });\n</code></pre>',type:"Object",scope:"inner"},{name:"value",description:'<p>Value, which can be a Date or a string. If a string is specified, it will be converted using the\nspecified <a href="#Core/widget/DateField#config-format">format</a></p>',type:["String","Date"],scope:"inner"}],functions:[{name:"createPicker",access:"internal",description:"<p>Creates default picker widget</p>",scope:"instance"}],properties:[{name:"min",description:'<p>Get/set min value, which can be a Date or a string. If a string is specified, it will be converted using the\nspecified <a href="#Core/widget/DateField#config-format">format</a></p>',scope:"instance",properties:[{type:{names:["String","Date"]}}]},{name:"max",description:'<p>Get/set max value, which can be a Date or a string. If a string is specified, it will be converted using the\nspecified <a href="#Core/widget/DateField#config-format">format</a></p>',scope:"instance",properties:[{type:{names:["String","Date"]}}]},{name:"weekStartDay",description:"<p>Set to 0 for Sunday (the default), 1 for Monday etc.</p>",scope:"instance",properties:[{type:{names:["Number","null"]}}]},{name:"value",description:'<p>Get/set value, which can be a Date or a string. If a string is specified, it will be converted using the\nspecified <a href="#Core/widget/DateField#config-format">format</a></p>',scope:"instance",properties:[{type:{names:["String","Date"]}}]},{name:"step",description:'<p>The <code>step</code> property may be set in Object form specifying two properties,\n<code>magnitude</code>, a Number, and <code>unit</code>, a String.</p>\n<p>If a Number is passed, the steps\'s current unit is used (or <code>day</code> if no current step set)\nand just the magnitude is changed.</p>\n<p>If a String is passed, it is parsed in accordance with (see <a href="#Core/helper/DateHelper#function-format-static">format</a>.\nThe string is taken to be the numeric magnitude then an abbreviation, or name of the unit.</p>\n<p>Upon read, the value is always returned in object form containing <code>magnitude</code> and <code>unit</code>.</p>',scope:"instance",properties:[{type:{names:["String","Number","Object"]}}]},{name:"format",description:'<p>Get/Set format for date displayed in field (see <a href="#Core/helper/DateHelper#function-format-static">format</a> for formatting options)</p>',scope:"instance",properties:[{type:{names:["String"]}}]}]},{name:"module:Core/widget/DatePicker",classDescription:'<p>A Panel which can display a month of date cells, which navigates between the cells,\nfires events upon user selection actions, optionally navigates to other months\nin response to UI gestures, and optionally displays information about each date cell.</p>\n<p>This class is not intended for use in applications. It is used internally by the\n<a href="#Core/widget/DateField">Core.widget.DateField</a> class.</p>',constructor:{name:"constructor"},filename:"DatePicker.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/widget",lineno:23,classType:"datepicker",configs:[{name:"minDate",description:"<p>The minimum selectable date. Selection of and navigtion to dates prior\nto this date will not be possible.</p>",type:"Date",scope:"inner"},{name:"maxDate",description:"<p>The maximum selectable date. Selection of and navigtion to dates after\nthis date will not be possible.</p>",type:"Date",scope:"inner"},{name:"outOfRangeCls",access:"private",description:'<p>The class name to add to the calendar cell whose date which is outside of the\n<a href="#Core/widget/DatePicker#config-minDate">minDate</a>/<a href="#Core/widget/DatePicker#config-maxDate">maxDate</a> range.</p>',type:"String",scope:"inner"},{name:"activeCls",access:"private",description:"<p>The class name to add to the currently focused calendar cell.</p>",type:"String",scope:"inner"},{name:"selectedCls",access:"private",description:"<p>The class name to add to selected calendar cells.</p>",type:"String",scope:"inner"},{name:"focusDisabledDates",description:"<p>By default, disabled dates cannot be navigated to, and they are skipped over\nduring keyboard navigation. Configure this as <code>true</code> to enable navigation to\ndisabled dates.</p>",type:"Boolean",scope:"inner"},{name:"multiSelect",description:"<p>Configure as <code>true</code> to enable selecting a single date range by selecting a\nstart and end date.</p>",type:"Boolean",scope:"inner",defaultvalue:false},{name:"editOnHover",description:"<p>By default, the month and year show their editor on hover instead of click.\nOn a touch platform, they both show the editor on tap.</p>",scope:"inner",defaultvalue:true}],events:[{name:"selectionChange",description:'<p>Fires when a date is selected. If <a href="#Core/widget/DatePicker#config-multiSelect">multiSelect</a> is specified, this\nwill fire upon deselection and selection of dates.</p>',parameters:[{name:"selection",type:"Array.<Date>",description:'<p>The selected date. If <a href="#Core/widget/DatePicker#config-multiSelect">multiSelect</a> is specified\nthis may be a two element array specifying start and end dates.</p>'}]}]},{name:"module:Core/widget/DisplayField",classDescription:"<p>DisplayField widget used to show a read only value</p>",extends:["Core/widget/Field"],examples:["let displayField = new DisplayField({\n  label: 'name',\n  value : 'John Doe'\n});"],constructor:{name:"constructor"},filename:"DisplayField.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/widget",lineno:22,classType:"DisplayField",externalExamples:["widget/DisplayField.js"]},{name:"module:Core/widget/DurationField",classDescription:'<p>A specialized field allowing a user to also specify duration unit when editing the duration value.</p>\n<p>This field can be used as an <a href="#Grid/column/Column#config-editor">editor</a> for the <a href="#Grid/column/Column">Column</a>.\nIt is used as the default editor for the <code>DurationColumn</code>.</p>',extends:["Core/widget/TextField"],constructor:{name:"constructor"},filename:"DurationField.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/widget",lineno:21,classType:"durationfield",configs:[{name:"value",description:"<p>The <code>value</code> config may be set in Object form specifying two properties,\n<code>magnitude</code>, a Number, and <code>unit</code>, a String.</p>\n<p>If a String is passed, it is parsed in accordance with current locale rules.\nThe string is taken to be the numeric magnitude, followed by whitespace, then an abbreviation, or name of the unit.</p>",type:["Object","String"],scope:"inner"},{name:"step",description:"<p>Step size for spin button clicks.</p>",type:"Number",scope:"inner",defaultvalue:1},{name:"unit",description:"<p>The duration unit to use with the current magnitude value.</p>",type:"String",scope:"inner"},{name:"magnitude",description:"<p>The duration magnitude to use with the current unit value.</p>",type:"Number",scope:"inner"},{name:"useAbbreviation",description:'<p>When set to <code>true</code> the field will use short names of unit durations\n(as returned by <a href="#Core/helper/DateHelper#function-getShortNameOfUnit-static">getShortNameOfUnit</a>) when creating the\ninput field\'s display value.</p>',type:"Boolean",scope:"inner"},{name:"allowNegative",description:"<p>Set to <code>true</code> to allow negative duration</p>",type:"Boolean",scope:"inner"},{name:"decimalPrecision",description:"<p>The number of decimal places to allow. Defaults to no constraint.</p>",type:"Number",scope:"inner"}],properties:[{name:"unit",description:"<p>Get/Set duration unit to use with the current magnitude value.\nValid values are:</p>\n<ul>\n<li>&quot;millisecond&quot; - Milliseconds</li>\n<li>&quot;second&quot; - Seconds</li>\n<li>&quot;minute&quot; - Minutes</li>\n<li>&quot;hour&quot; - Hours</li>\n<li>&quot;day&quot; - Days</li>\n<li>&quot;week&quot; - Weeks</li>\n<li>&quot;month&quot; - Months</li>\n<li>&quot;quarter&quot; - Quarters</li>\n<li>&quot;year&quot;- Years</li>\n</ul>",scope:"instance",properties:[{type:{names:["String"]}}]},{name:"magnitude",description:"<p>Get/Set numeric magnitude <code>value</code> to use with the current unit value.</p>",scope:"instance",properties:[{type:{names:["Number"]}}]},{name:"value",description:"<p>The <code>value</code> property may be set in Object form specifying two properties,\n<code>magnitude</code>, a Number, and <code>unit</code>, a String.</p>\n<p>If a Number is passed, the field's current unit is used and just the magnitude is changed.</p>\n<p>If a String is passed, it is parsed in accordance with current locale rules.\nThe string is taken to be the numeric magnitude, followed by whitespace, then an abbreviation, or name of the unit.</p>\n<p>Upon read, the value is always returned in object form containing <code>magnitude</code> and <code>unit</code>.</p>",scope:"instance",properties:[{type:{names:["String","Number","Object","Duration"]}}]},{name:"milliseconds",description:"<p>The <code>milliseconds</code> property is a read only property which returns the\nnumber of milliseconds in this field's value</p>",scope:"instance",properties:[{type:{names:["Number"]}}]}]},{name:"module:Core/widget/Editor",classDescription:"<p>Displays an input field, optionally editing a field of a record at a particular position.</p>\n<p>Offers events to signal edit completion upon <code>ENTER</code> or focus loss (if configured to do so),\nor edit cancellation on <code>ESC</code>, or focus loss if configured that way.</p>",extends:["Core/widget/Container"],constructor:{name:"constructor"},filename:"Editor.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/widget",lineno:28,classType:"Editor",configs:[{name:"inputField",description:'<p>A config object, or the <code>type</code> string of the widget (usually a <a href="#Core/widget/Field">Field</a> subclass,\ni.e. <a href="#Core/widget/TextField">TextField</a>) which this editor will encapsulate.</p>',type:["Object","String"],scope:"inner",defaultvalue:"textfield"},{name:"blurAction",description:"<p>What action should be taken when focus moves out of the editor, either by <code>TAB</code> or clicking outside.\nMay be <code>'complete'</code> or <code>'cancel</code>'. Any other value results in no action being taken upon focus leaving the editor\nleaving the application to listen for the <a href=\"#Core/widget/Widget#event-focusout\">focusout</a> event.</p>",type:"String",scope:"inner",defaultvalue:"complete"},{name:"completeKey",description:"<p>The name of the <code>key</code> which completes the edit.</p>\n<p>See https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values for key names.</p>",type:"String",scope:"inner",defaultvalue:"Enter"},{name:"cancelKey",description:"<p>The name of the <code>key</code> which cancels the edit.</p>\n<p>See https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values for key names.</p>",type:"String",scope:"inner",defaultvalue:"Escape"},{name:"allowInvalid",description:'<p>Configure as <code>true</code> to allow editing to complete when the field is invalid. Editing may always be <em>canceled</em>.\nThis is deprecated and has been replaced by the more flexible <a href="#Core/widget/Editor#config-invalidAction">invalidAction</a> option.</p>',type:"Boolean",scope:"inner",defaultvalue:"false",deprecated:true},{name:"invalidAction",description:"<p>How to handle a request to complete the edit if the field is invalid. There are three choices:</p>\n<ul>\n<li><code>block</code> The default. The edit is not exited, the field remains focused.</li>\n<li><code>allow</code> Allow the edit to be completed.</li>\n<li><code>revert</code> The field value is reverted and the edit is completed.</li>\n</ul>",type:"String",scope:"inner",defaultvalue:"block"},{name:"completeOnChange",description:"<p>Configure as <code>true</code> to have editing complete as soon as the field fires its <code>change</code> event.</p>",type:"Boolean",scope:"inner",defaultvalue:"false"}],events:[{name:"beforestart",description:"<p>Fired before the editor is shown to start an edit operation. Returning <code>false</code> from a handler vetoes the edit operation.</p>",parameters:[{name:"value",type:"Object",description:"<p>The value to be edited.</p>"}],preventable:true},{name:"start",description:"<p>Fired when an edit operation has begun.</p>",parameters:[{name:"value",type:"Object",description:"<p>The starting value of the field.</p>"},{name:"source",type:"Core.widget.Editor",description:"<p>The Editor that triggered the event.</p>"}]},{name:"beforeComplete",description:"<p>Fired when an edit completion has been requested, either by <code>ENTER</code>, or focus loss (if configured to complete on blur).\nThe completion may be vetoed, in which case, focus is moved back into the editor.</p>",parameters:[{name:"oldValue",type:"Object",description:"<p>The original value.</p>"},{name:"value",type:"Object",description:"<p>The new value.</p>"},{name:"source",type:"Core.widget.Editor",description:"<p>The Editor that triggered the event.</p>"},{name:"finalize",type:"function",description:"<p>An async function may be injected into this property\nwhich performs asynchronous finalization tasks such as complex validation of confirmation. The\nvalue <code>true</code> or <code>false</code> must be returned.</p>",optional:true},{name:"finalize.context",type:"Object",description:"<p>An object describing the editing context upon requested completion of the edit.</p>",optional:true,isSubParam:true}],preventable:true},{name:"complete",description:"<p>Edit has been completed, and any associated record or element has been updated.</p>",parameters:[{name:"oldValue",type:"Object",description:"<p>The original value.</p>"},{name:"value",type:"Object",description:"<p>The new value.</p>"},{name:"source",type:"Core.widget.Editor",description:"<p>The Editor that triggered the event.</p>"}]},{name:"beforeCancel",description:"<p>Fired when cancellation has been requested, either by <code>ESC</code>, or focus loss (if configured to cancel on blur).\nThe cancellation may be vetoed, in which case, focus is moved back into the editor.</p>",parameters:[{name:"oldValue",type:"Object",description:"<p>The original value.</p>"},{name:"value",type:"Object",description:"<p>The new value.</p>"},{name:"source",type:"Core.widget.Editor",description:"<p>The Editor that triggered the event.</p>"}],preventable:true},{name:"cancel",description:"<p>Edit has been canceled without updating the associated record or element.</p>",parameters:[{name:"oldValue",type:"Object",description:"<p>The original value.</p>"},{name:"value",type:"Object",description:"<p>The value of the field.</p>"},{name:"source",type:"Core.widget.Editor",description:"<p>The Editor that triggered the event.</p>"}]},{name:"keypress",description:"<p>Fire to relay a <code>keypress</code> event from the field.</p>",parameters:[{name:"event",type:"Event",description:"<p>The key event.</p>"}]}],functions:[{name:"startEdit",description:"<p>Start editing</p>",parameters:[{name:"editObject",type:"Object",description:"<p>An object containing details about what to edit.</p>"},{name:"editObject.target",type:["HTMLElement","Core.helper.util.Rectangle"],description:"<p>the element or Rectangle to align to.</p>",isSubParam:true},{name:"editObject.align",type:"String",description:"<p>How to align to the target.</p>",default:"t0-t0",optional:true,isSubParam:true},{name:"editObject.matchSize",type:"Boolean",description:"<p>Match editor size to target size.</p>",default:true,optional:true,isSubParam:true},{name:"editObject.matchFont",type:"Boolean",description:"<p>Match editor's font-size size to target's font-size.</p>",default:true,optional:true,isSubParam:true},{name:"editObject.record",type:"Core.data.Model",description:"<p>The record to edit.</p>",optional:true,isSubParam:true},{name:"editObject.field",type:"String",description:'<p>The field name in the record to edit. This defaults to the <code>name</code> of the <a href="#Core/widget/Editor#config-inputField">inputField</a>.\nAlso if record has method set + capitalized field, method will be called, e.g. if record has method named\n<code>setFoobar</code> and this config is <code>foobar</code>, then instead of <code>record.foobar = value</code>, <code>record.setFoobar(value)</code> will be called.</p>',optional:true,isSubParam:true},{name:"editObject.value",type:"Object",description:"<p>The value to edit.</p>",optional:true,isSubParam:true},{name:"editObject.focus",type:"Boolean",description:"<p>Focus the field.</p>",default:true,optional:true,isSubParam:true},{name:"editObject.fitTargetContent",type:"Boolean",description:"<p>Pass <code>true</code> to allow the Editor to expand beyond the\nwidth of its target element if its content overflows horizontally. This is useful if the editor has\ntriggers to display, such as a combo.</p>",optional:true,isSubParam:true}],scope:"instance"},{name:"completeEdit",description:'<p>Complete the edit, and, if associated with a record, update the record if possible.\nIf editing is completed, the editor is hidden.</p>\n<p>If the field is invalid, the <code><a href="#Core/widget/Editor#config-invalidAction">invalidAction</a></code> config is used to decide\nupon the course of action.</p>\n<p>If a <a href="#Core/widget/Editor#event-beforeComplete">beforeComplete</a> handler returns <code>false</code> then editing is not completed.</p>\n<p>If the field\'s valus has not been changed, then editing is terminated through <a href="#Core/widget/Editor#function-cancelEdit">cancelEdit</a>.</p>',scope:"instance",returns:{description:"<p><code>true</code> if editing ceased, <code>false</code> if the editor is still active.</p>"}},{name:"cancelEdit",description:"<p>Cancel the edit and hide the editor.</p>",scope:"instance"}]},{name:"module:Core/widget/Field",classDescription:'<p>Base class for <a href="#Core/widget/TextField">TextField</a> and <a href="#Core/widget/NumberField">NumberField</a>. Not to be used directly.\nAll subclasses can be used as editors for the <a href="#Grid/column/Column">Column</a>. The most popular are:</p>\n<ul>\n<li><a href="#Core/widget/TextField">TextField</a>;</li>\n<li><a href="#Core/widget/NumberField">NumberField</a>;</li>\n<li><a href="#Core/widget/DateField">DateField</a>;</li>\n<li><a href="#Core/widget/TimeField">TimeField</a>;</li>\n<li><a href="#Core/widget/Combo">Combo</a>;</li>\n</ul>',extends:["Core/widget/Widget"],mixes:["Core/widget/mixin/Badge"],virtual:true,constructor:{name:"constructor"},filename:"Field.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/widget",lineno:35,configs:[{name:"placeHolder",description:"<p>Text to display in empty field.</p>",type:"String",scope:"inner"},{name:"value",description:"<p>Default value</p>",type:"String",scope:"inner"},{name:"name",description:'<p>Name of the field which is used as a key to get/set values from/to the field.\nUsed prior to <a href="#Core/widget/Widget#config-ref">ref</a> and <a href="#Core/widget/Widget#config-id">id</a> in\n<a href="#Core/widget/Container#property-values">Container.values</a>.</p>\n<p>The config is useful when the field is used in EventEditor or TaskEditor to load/save values automatically.</p>',type:"String",scope:"inner"},{name:"label",description:"<p>Label, prepended to field</p>",type:"String",scope:"inner"},{name:"labels",description:"<p>The labels to add either before or after the input field.\nEach label may have the following properties:</p>\n<ul>\n<li><code>html</code> The label text.</li>\n<li><code>align</code> <code>'start'</code> or <code>'end'</code> which end of the field the label should go.</li>\n</ul>",type:"Object",scope:"inner"},{name:"required",description:"<p>Configure as <code>true</code> to indicate that a <code>null</code> field value is to be marked as invalid.</p>",type:"Boolean",scope:"inner",defaultvalue:"false"},{name:"clearable",description:'<p>Show a trigger to clear field, and allow <code>ESC</code> key to clear field if this field is\nnot <a href="#Core/widget/Field#config-readOnly">readOnly</a>. The trigger is available in the <a href="#Core/widget/Field#property-triggers">triggers</a> object\nunder the name <code>clear</code>.</p>',type:"Boolean",scope:"inner",defaultvalue:"false"},{name:"revertOnEscape",description:'<p>If this field is not <a href="#Core/widget/Field#config-readOnly">readOnly</a>, then setting this option means that pressing\nthe <code>ESCAPE</code> key after editing the field will revert the field to the value it had when\nthe user focused the field. If the field is <em>not</em> changed from when focused, the <a href="#Core/widget/Field#config-clearable">clearable</a>\nbehaviour will be activated.</p>',type:"Boolean",scope:"inner",defaultvalue:"false"},{name:"labelWidth",description:"<p>The width to apply to the <code>&lt;label&gt;</code> element. If a number is specified, <code>px</code> will be used.</p>",type:["String","Number"],scope:"inner"},{name:"inputWidth",description:"<p>The width to apply to the <code>&lt;input&gt;</code> element. If a number is specified, <code>px</code> will be used.</p>",type:["String","Number"],scope:"inner"},{name:"keyStrokeChangeDelay",description:"<p>The delay in milliseconds to wait after the last keystroke before triggering a change event.\nSet to 0 to not trigger change events from keystrokes (listen for input event instead to have\nimmediate feedback, change will still be triggered on blur)</p>",type:"Number",scope:"inner",defaultvalue:0},{name:"readOnly",description:'<p>Makes the field unmodifiable by user action. The input area is not editable, and triggers\nare unresponsive.</p>\n<p>This is a wider-acting setting than <a href="#Core/widget/Field#config-editable">editable</a> which <em>only</em> sets the\n<code>readOnly</code> attribute of the <code>&lt;input&gt;</code> field.</p>\n<p>PickerFields such as <code>Combo</code> and <code>DateField</code> can be <code>edtable : false</code>, but still\nmodifiable through the UI.</p>',type:"Boolean",scope:"inner"},{name:"editable",description:'<p>Set to false to prevent user from editing the field. For TextFields it is basically the same as setting\n<a href="#Core/widget/Field#config-readOnly">readOnly</a>, but for PickerFields there is a distinction where it allows you to pick a value\nbut not to type one in the field.</p>\n<p>PickerFields such as <code>Combo</code> and <code>DateField</code> can be <code>edtable : false</code>, but still\nmodifiable through the UI.</p>',type:"Boolean",scope:"inner",defaultvalue:"true"},{name:"triggers",description:"<p>The triggers to add either before or after the input field. Each property name is the reference by which an\ninstantiated Trigger Widget may be retrieved from the live <code><a href=\"#Core/widget/Field#property-triggers\">triggers</a></code> property.\nEach trigger may have the following properties:</p>\n<ul>\n<li><code>cls</code> The CSS class to apply.</li>\n<li><code>handler</code> A method in the field to call upon click</li>\n<li><code>align</code> <code>'start'</code> or <code>'end'</code> which end of the field the trigger should go.</li>\n<li><code>weight</code> (Optional) Heigher weighted triggers gravitate towards the input field.</li>\n</ul>",type:"Object",scope:"inner"},{name:"highlightExternalChange",description:"<p>Specify <code>false</code> to prevent field from being highlighted when on external value changes</p>",type:"Boolean",scope:"inner"},{name:"autoComplete",description:'<p>Sets the native <code>autocomplete</code> property of the underlying input element. For more information, please refer to\n<a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete">MDN</a></p>',type:"String",scope:"inner",defaultvalue:"off"},{name:"inputAttributes",description:'<p>Sets custom attributes of the underlying input element. For more information, please refer to\n<a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes">MDN</a></p>',type:"Object",scope:"inner"}],properties:[{name:"errorTip",description:"<p>A singleton error tooltip which activates on hover of invalid fields.\nbefore show, it gets a reference to the field and interrogates its\nactive error list to display as the tip content.</p>",type:{names:["Core.widget.Tooltip"]},scope:"instance",readonly:true},{name:"errorTip",description:"<p>A singleton error tooltip which activates on hover of invalid fields.\nbefore show, it gets a reference to the field and interrogates its\nactive error list to display as the tip content.</p>",type:{names:["Core.widget.Tooltip"]},scope:"static",readonly:true},{name:"triggers",description:'<p>The trigger Widgets as specified by the <a href="#Core/widget/Field#config-triggers">triggers</a> configuration and the <a href="#Core/widget/Field#config-clearable">clearable</a> configuration.\nEach is a <a href="#Core/widget/Widget">Widget</a> instance which may be hidden, shown and observed and styled just like any other widget.</p>',scope:"instance",properties:[{type:{names:["Object"]}}]},{name:"label",description:"<p>Get/set fields label. Please note that the Field needs to have a label specified from start for this to work,\notherwise no element is created.</p>",scope:"instance",properties:[{type:{names:["String"]}}]},{name:"readOnly",description:"<p>Get/set read only</p>",scope:"instance",properties:[{type:{names:["Boolean"]}}]},{name:"isValid",description:"<p>Returns true if the field value is valid</p>",type:{names:["Boolean"]},scope:"instance",readonly:true},{name:"isEmpty",description:"<p>Returns true if the field value is empty</p>",type:{names:["boolean"]},scope:"instance",readonly:true},{name:"isEmptyInput",description:"<p>Returns true if the field's input is empty</p>",type:{names:["boolean"]},scope:"instance",readonly:true},{name:"value",description:'<p>Gets or sets the value. The returned type will depend upon the Field subclass.</p>\n<p><code>TextField</code> returns a <code>String</code>.</p>\n<p><code>NumberField</code> returns a <code>Number</code>.</p>\n<p><code>DateField</code> and <code>TimeField</code> return a <code>Date</code> object, and <code>null</code> if the field is empty.</p>\n<p><code>Combo</code> will return a <code>String</code> if configured with <code>items</code> as a simple string array.\nOtherwise it will return the <a href="#Core/widget/Combo#config-valueField">valueField</a> value from the\nselected record, or <code>null</code> if no selection has been made.</p>',scope:"instance",properties:[{type:{names:["*"]}}]},{name:"inputValue",access:"internal",description:'<p>A String representation of the value of this field for <a href="#Core/widget/Field#function-syncInputFieldValue">syncInputFieldValue</a> to use\nas the input element\'s value.</p>\n<p>Subclasses may override this to create string representations.</p>\n<p>For example, <a href="#Core/widget/DateField">Core.widget.DateField</a>\'s implementation will format the field date\nvalue according to its configured <a href="#Core/widget/DateField#config-format">format</a>. And <a href="#Core/widget/Combo">Core.widget.Combo</a>\'s\nimplementation will return the <a href="#Core/widget/Combo#config-displayField">displayField</a> of the selected record.</p>',scope:"instance",readonly:true}],events:[{name:"input",description:"<p>User typed into the field</p>",parameters:[{name:"source",type:"Core.widget.Field",description:"<p>The field</p>"},{name:"value",type:"String",description:"<p>Value</p>"}]},{name:"change",description:"<p>Fired when the field value changes</p>",parameters:[{name:"value",type:"String",description:"<p>Value</p>"},{name:"oldValue",type:"String",description:"<p>Previous value</p>"},{name:"userAction",type:"Boolean",description:"<p>Triggered by user taking an action (<code>true</code>) or by setting a value (<code>false</code>)</p>"},{name:"source",type:"Core.widget.Field",description:"<p>Field</p>"}]},{name:"click",description:"<p>User performed default action (typed into the field)</p>",parameters:[{name:"field",type:"Core.widget.Field",description:"<p>Field</p>"},{name:"value",type:"String",description:"<p>Value</p>"}]},{name:"clear",description:"<p>User clicked fields clear icon</p>",parameters:[{name:"field",type:"Core.widget.Field",description:"<p>Field</p>"}]}],functions:[{name:"onEditComplete",access:"internal",description:"<p>Template function which may be implemented by subclasses to synchronize\ninput state and validity state upon completion of the edit.</p>",scope:"instance"},{name:"select",description:"<p>Selects the field contents. Optionally may be passed a start and end.\nNOTE: This method is async for IE11</p>",parameters:[{name:"start",type:"Number",description:"<p>The start index from which to select the input.</p>",optional:true},{name:"end",type:"Number",description:"<p>The index at which to end the selection of the input.</p>",optional:true}],scope:"instance"},{name:"hasChanged",access:"private",description:"<p>Compare's this field's value with its previous value. May be overridden in subclasses\nwhich have more complex value types. See, for example, <a href=\"#Core/widget/DurationField\">Core.widget.DurationField</a>.</p>",parameters:[{name:"oldValue",type:"*"},{name:"newValue",type:"*"}],scope:"instance"},{name:"syncInputFieldValue",access:"private",description:"<p>Called by the base Field class's <code>set value</code> to sync the state of the UI with the field's value.</p>\n<p>Relies upon the class implementation of <code>get inputValue</code> to return a string representation of\nthe value for user consumption and editing.</p>",scope:"instance"},{name:"internalOnChange",access:"private",description:"<p>Trigger event when fields input changes</p>",scope:"instance",fires:["event:change"]},{name:"internalOnInput",access:"private",description:"<p>Trigger event when user inputs into field</p>",parameters:[{name:"event"}],scope:"instance",fires:["event:input"]},{name:"onDisabled",access:"private",description:"<p>Called when disabled state is changed.\nUsed to add or remove 'b-invalid' class for the invalid field based on current disabled state.</p>",scope:"instance"},{name:"setError",description:"<p>Adds an error message to the list of errors on this field.\nBy default the field's valid/invalid state is updated; pass\n<code>false</code> as the second parameter to disable that if multiple\nchanges are being made to the error state.</p>",parameters:[{name:"error",type:"String",description:"<p>A locale string, or message to use as an error message.</p>"},{name:"silent",type:"Boolean",description:"<p>Pass as <code>true</code> to skip updating the field's valid/invalid state.</p>",default:false,optional:true}],scope:"instance"},{name:"clearError",description:"<p>Removes an error message from the list of errors on this field.\nBy default the field's valid/invalid state is updated; pass\n<code>false</code> as the second parameter to disable that if multiple\nchanges are being made to the error state.</p>",parameters:[{name:"error",type:"String",description:"<p>A locale string, or message to remove. If not passed, all errors are cleared.</p>",optional:true},{name:"silent",type:"Boolean",description:"<p>Pass as <code>true</code> to skip updating the field's valid/invalid state.</p>",default:false,optional:true}],scope:"instance"},{name:"getErrors",description:'<p>Returns an array of error messages as set by <a href="#Core/widget/Field#function-setError">setError</a>, or\n<code>undefined</code> if there are currently no errors.</p>',scope:"instance",returns:{type:"Array.<String>",description:"<p>The errors for this field, or <code>undefined</code> if there are no errors.</p>"}}]},{name:"module:Core/widget/FileField",classDescription:'<p>Filefield widget. Wraps native &lt;input type=&quot;file&quot;&gt;.</p>\n<p>There is a nicer styled wrapper for this field, see <a href="#Core/widget/FilePicker">Core/widget/FilePicker</a></p>',extends:["Core/widget/Field"],examples:['let fileField = new FileField({\n  multiple : true,\n  accept   : "image/*"\n});'],constructor:{name:"constructor"},filename:"FileField.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/widget",lineno:25,classType:"filefield",externalExamples:["widget/FileField.js"],configs:[{name:"multiple",description:"<p>Set to true to allow picking multiple files</p>",type:"Boolean",scope:"inner",defaultvalue:false},{name:"accept",description:"<p>Comma-separated list of file extensions or MIME type to to accept. E.g.\n&quot;.jpg,.png,.doc&quot; or &quot;image/*&quot;. Null by default, allowing all files.</p>",type:"String",scope:"inner"}],properties:[{name:"files",description:"<p>Returns list of selected files</p>",scope:"instance",returns:[{type:{names:["FileList"]}}],readonly:true}],functions:[{name:"pickFile",access:"internal",description:"<p>Opens browser file picker</p>",scope:"instance"},{name:"clear",description:"<p>Clears field value</p>",scope:"instance"}]},{name:"module:Core/widget/FilePicker",classDescription:'<p>File input field wrapped into <a href="#Core/widget/Button">button</a>. Clicking button opens browser file picker window.\nWhen files are chosen, badge appears showing amount of files. Hovering the button shows tip with file names.</p>\n<p>By default only single file allowed.</p>',extends:["Core/widget/Container"],examples:["let fileField = new FilePicker({\n  fileFieldConfig : {\n     multiple : true,\n     accept   : \"image/*\"\n  },\n  buttonConfig : {\n      text : 'Pick file...'\n  }\n});"],constructor:{name:"constructor"},filename:"FilePicker.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/widget",lineno:33,classType:"filepicker",externalExamples:["widget/FilePicker.js"],configs:[{name:"defaultBindProperty",description:"<p>The name of the property to set when a single value is to be applied to this FilePicker. Such as when used\nin a grid WidgetColumn, this is the property to which the column's <code>field</code> is applied.</p>",type:"String",scope:"inner",defaultvalue:"value",category:"Misc"},{name:"buttonConfig",description:'<p>Wrapper button config object. See <a href="#Core/widget/Button">Core/widget/Button</a> for list of available configs.</p>',type:"Object",scope:"inner"},{name:"fileFieldConfig",description:'<p>Underlying field config object. See <a href="#Core/widget/FileField">Core/widget/FileField</a> for list of available configs.</p>',type:"Object",scope:"inner"}],events:[{name:"change",description:"<p>Fires after user closes file picker dialog.</p>",parameters:[{name:"files",type:"FileList",description:"<p>List of picked files</p>"}]},{name:"clear",description:'<p>Fires when field is cleared with <a href="#Core/widget/FilePicker#function-clear">clear</a> method</p>'}],properties:[{name:"files",description:"<p>List of selected files</p>",scope:"instance",returns:[{type:{names:["FileList"]}}],readonly:true}],functions:[{name:"clear",description:"<p>Clears field</p>",scope:"instance"}]},{name:"module:Core/widget/FlagField",classDescription:'<p>DEPRECATED! Flag field is a checkbox which is driven by its boolean value and vice-versa.\nWhen value is <code>true</code> then checkbox is checked, when it\'s <code>false</code> then checkbox\nis unchecked.</p>\n<p>This field can be used as an <a href="#Grid/column/Column#config-editor">editor</a> for the <a href="#Grid/column/Column">Column</a>.</p>',constructor:{name:"constructor"},filename:"FlagField.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/widget",lineno:16},{name:"module:Core/widget/List",classDescription:"<p>Displays a list of items which the user can navigate using the keyboard and select using either pointer gestures or the keyboard.</p>",extends:["Core/widget/Widget"],constructor:{name:"constructor"},filename:"List.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/widget",lineno:23,classType:"list",externalExamples:["widget/List.js"],configs:[{name:"items",description:'<p>An array of Objects which are converted into records and used to create this\nList\'s <a href="#Core/widget/List#config-store">store</a></p>',type:"Array.<Object>",scope:"inner"},{name:"store",description:'<p>A <a href="#Core/data/Store">Core.data.Store</a> which provides the records which map to List items. Each record is passed through the\n<a href="#Core/widget/List#config-itemTpl">itemTpl</a> to produce the DOM structure of the List. May be generated from an array of <a href="#Core/widget/List#config-items">items</a>.</p>',type:["Object","Core.data.Store"],scope:"inner"},{name:"itemTpl",description:"<p>Template function which, when passed a record, returns the textual HTML for that item. Defaults to a\nfunction returning the value of records <code>text</code> field</p>",type:"function",scope:"inner"},{name:"selected",description:'<p>A <a href="#Core/util/Collection">Collection</a>, or Collection config object\nto use to contain this List\'s selected records.</p>',type:["Core.util.Collection","Object"],scope:"inner"},{name:"activateOnMouseover",description:"<p>Configure as <code>true</code> to activate items on mouseover. This is used by the Combo\nfield when using a List as its dropdown.</p>",type:"Boolean",scope:"inner"}],events:[{name:"item",description:"<p>User activated an item in the list either by pointer or keyboard.\nThe active record, list item index, and the triggering event are passed.</p>"}],properties:[{name:"items",description:'<p>May be <em>set</em> as an array of Objects which are converted into records and used to create this\nList\'s <a href="#Core/widget/List#config-store">store</a></p>',scope:"instance",properties:[{type:{names:["Array.<Object>"]}}]},{name:"store",description:'<p>Get the backing store, a <a href="#Core/data/Store">Core.data.Store</a> holding the records used to generate list items</p>',scope:"instance",readonly:true,properties:[{type:{names:["Core.data.Store"]}}]}],functions:[{name:"restoreActiveItem",access:"internal",description:"<p>Sets the passed record as the current focused record for keyboard navigation and selection purposes.</p>",parameters:[{name:"activeItem",type:"Core.data.Model",description:"<p>The item to highlight as the active (&quot;focused&quot;) item.</p>"},{name:"block",type:["String","boolean"],description:"<p>The block scroll specification to scroll\nthe item into view. Defaults to <code>'nearest'</code> which means a minimal scroll, only if\nthe item is actually out of view. Passing <code>true</code> is for when the List is aligned\nto a picker and the selected item should be scrolled to be close to the picker,\nhowever that is aligned. See <code>Combo.showPicker</code> for usage.</p>",default:"'nearest'",optional:true}],scope:"instance"},{name:"onMouseOver",access:"private",description:"<p>Focuses list items on hover.</p>",scope:"instance"},{name:"onClick",access:"private",description:"<p>Selects list items on click.</p>",scope:"instance"},{name:"onInternalKeyDown",access:"private",description:"<p>Key events which are not navigation are delegated up to here by the Navigator</p>",scope:"instance"},{name:"onSelectionChange",access:"private",description:"<p>Handles items being added or removed from the selected Collection</p>",parameters:[{name:"changeEvent",type:"Object"}],scope:"instance"}]},{name:"module:Core/widget/Mask",classDescription:"<p>Masks an element (document.body if no element specified). Call static methods for ease of use or make instance for\nreusability.</p>",examples:["Mask.mask('hello');\nMask.unmask();"],constructor:{name:"constructor"},filename:"Mask.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/widget",lineno:19,externalExamples:["widget/Mask.js"],configs:[{name:"mode",description:"<p>Mode: bright, bright-blur, dark or dark-blur</p>",type:"String",scope:"inner",defaultvalue:"dark"},{name:"icon",description:"<p>The icon to show next to the text. Defaults to showing a spinner</p>",type:"String",scope:"inner",defaultvalue:"b-icon b-icon-spinner"},{name:"text",description:"<p>The text (or HTML) to show in mask</p>",type:"String",scope:"inner"}],functions:[{name:"create",access:"private",description:"<p>Creates mask element</p>",scope:"instance"},{name:"mask",description:"<p>Shows a mask with the specified message</p>",parameters:[{name:"text",type:["String","Object"],description:"<p>Message</p>"},{name:"element",type:"HTMLElement",description:"<p>Element to mask</p>"}],scope:"static",returns:{type:"Core.widget.Mask"}},{name:"unmask",description:"<p>Unmask</p>",parameters:[{name:"element",type:"HTMLElement",description:"<p>Element to unmask</p>"}],scope:"static",returns:{type:"Promise",description:"<p>A promise which is resolved when the mask is gone</p>"},async:true},{name:"show",description:"<p>Show mask</p>",scope:"instance"},{name:"hide",description:"<p>Hide mask</p>",scope:"instance",returns:{type:"Promise",description:"<p>A promise which is resolved when the mask is hidden, or immediately if already hidden</p>"},async:true},{name:"close",description:"<p>Close mask (removes it)</p>",scope:"instance",returns:{type:"Promise",description:"<p>A promise which is resolved when the mask is closed</p>"},async:true}],properties:[{name:"text",description:"<p>Gets or sets the text displayed in the mask</p>",scope:"instance",properties:[{type:{names:["String"]}}]}]},{name:"module:Core/widget/Menu",classDescription:"<p>Menu widget, displays a list of items which the user can select from using mouse or keyboard. Can have submenus.</p>",extends:["Core/widget/Popup"],examples:["let menu = new Menu({\n    forElement : btn.element,\n    items      : [\n        {\n            icon : 'b-icon b-icon-add',\n            text : 'Add'\n        },\n        {\n            icon : 'b-icon b-icon-trash',\n            text : 'Remove'\n        },\n        {\n            icon     : 'b-icon b-icon-lock',\n            disabled : true,\n            text     : 'I am disabled'\n        },\n        {\n            text : 'Sub menu',\n            menu : [{\n                icon : 'b-icon b-fa-play',\n                text : 'Play'\n            }]\n        }\n    ],\n    // Method is called for all ancestor levels\n    onItem({ item }) {\n        Toast.show('You clicked ' + item.text);\n    }\n});"],constructor:{name:"constructor"},filename:"Menu.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/widget",lineno:60,classType:"menu",externalExamples:["widget/Menu.js"],configs:[{name:"focusOnHover",description:"<p>Specify false to prevent the menu from getting focus when hovering items</p>",type:"Boolean",scope:"inner"}],events:[{name:"item",description:'<p>A descendant menu item has been activated.</p>\n<p>Note that this event bubbles up through parents and can be\nlistened for on a top level <a href="#Core/widget/Menu">Menu</a> for convenience.</p>',parameters:[{name:"item",type:"Core.widget.MenuItem",description:"<p>The menu item which is being actioned.</p>"},{name:"menu",type:"Core.widget.Menu",description:"<p>Menu containing the menu item</p>"}]},{name:"toggle",description:'<p>The checked state of a descendant menu item has changed.</p>\n<p>Note that this event bubbles up through parents and can be\nlistened for on a top level <a href="#Core/widget/Menu">Menu</a> for convenience.</p>',parameters:[{name:"item",type:"Core.widget.MenuItem",description:"<p>The menu item whose checked state changed.</p>"},{name:"menu",type:"Core.widget.Menu",description:"<p>Menu containing the menu item</p>"},{name:"checked",type:"Boolean",description:"<p>The <em>new</em> checked state.</p>"}]}],functions:[{name:"onMouseClick",access:"private",description:"<p>Activates a menu item if user clicks on it</p>",scope:"instance"},{name:"onMouseOver",access:"private",description:"<p>Activates menu items on hover. On real mouse hover, not on a touchstart.</p>",scope:"instance"},{name:"onInternalKeyDown",access:"private",description:"<p>Keyboard navigation. Up/down, close with esc, activate with enter</p>",scope:"instance"},{name:"triggerElement",access:"private",description:"<p>Activate a menu item (from its element)</p>",parameters:[{name:"menuItemElement"}],scope:"instance",fires:["event:item"]},{name:"openSubMenu",access:"private",description:"<p>Opens a submenu anchored to a menu item</p>",parameters:[{name:"element"},{name:"item"}],scope:"instance"}],properties:[{name:"isSubMenu",description:'<p>Returns true if this menu is a sub menu.\nTo find out which menu is the parent, check <a href="#Core/widget/Menu#property-parentMenu">parentMenu</a>.</p>',type:{names:["boolean"]},scope:"instance",readonly:true},{name:"currentSubMenu",description:"<p>Currently open sub menu, if any</p>",type:{names:["Core.widget.Menu"]},scope:"inner",readonly:true},{name:"selectedElement",description:"<p>Get/set focused menu item.\nShows submenu if newly focused item has a menu and is not disabled.</p>",scope:"instance",properties:[{type:{names:["HTMLElement"]}}]},{name:"parentMenu",description:"<p>Gets the parent Menu if this Menu is a submenu.</p>",scope:"instance",returns:[{type:{names:["Core.widget.Menu"]},description:"<p>The parent menu if this is a submenu, otherwise, <code>undefined</code>.</p>"}]},{name:"rootMenu",access:"private",description:"<p>Gets this menus root menu, the very first menu shown in a sub menu hierarchy</p>",scope:"instance",properties:[{type:{names:["Core.widget.Menu"]}}]}]},{name:"module:Core/widget/MenuItem",classDescription:'<p>Menu item widget, encapsulates a menu item within a Menu.</p>\n<p>May be configured with a <a href="#Core/widget/MenuItem#config-checked">checked</a> state which creates a checkbox which may be toggled.</p>\n<p>May be configured as <a href="#Core/widget/Widget#config-disabled">disabled</a>, which affects item appearance and blocks interactions.</p>\n<p>Fires events when activated which bubble up through the parent hierarchy\nand may be listened for on an ancestor. See <a href="#Core/widget/Menu">Menu</a>\nfor more details on usage.</p>',extends:["Core/widget/Widget"],constructor:{name:"constructor"},filename:"MenuItem.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/widget",lineno:29,classType:"menuitem",configs:[{name:"menu",description:"<p>A submenu configuration object, or an array of MenuItem configuration\nobjects from which to create a submenu.</p>\n<p>Note that this does not have to be a Menu. The <code>type</code> config can be used\nto specify any widget as the submenu.</p>",type:["Object","Array.<Object>"],scope:"inner"},{name:"icon",description:"<p>Item icon class.</p>\n<p>All <a href=\"https://fontawesome.com/cheatsheet\">Font Awesome</a> icons may also be specified as <code>'b-fa-' + iconName</code>.</p>\n<p>Otherwise this is a developer-defined CSS class string which results in the desired icon.</p>",type:"String",scope:"inner"},{name:"text",description:"<p>The text to be displayed in the item</p>",type:"String",scope:"inner"},{name:"checked",description:'<p>If configured with a <code>Boolean</code> value, a checkbox is displayed\nas the start icon, and the <a href="#Core/widget/MenuItem#event-toggle">toggle</a> event is fired\nwhen the checked state changes.</p>',type:"Boolean",scope:"inner"},{name:"closeParent",description:"<p>By default, upon activate, non-checkbox menu items will collapse\nthe owning menu hierarchy.</p>\n<p>Configure this as <code>false</code> to cause the menu to persist after\nactivating an item</p>",type:"Boolean",scope:"inner"},{name:"href",description:"<p>If provided, turns the menu item into a link</p>",type:"String",scope:"inner"},{name:"target",description:'<p>The <code>target</code> attribute for the <a href="#Core/widget/MenuItem#config-href">href</a> config</p>',type:"String",scope:"inner"}],functions:[{name:"doAction",description:'<p>Actions this item. Fires the <a href="#Core/widget/MenuItem#event-item">item</a> event, and if this\nif a <a href="#Core/widget/MenuItem#config-checked">checked</a> item, toggles the checked state, firing\nthe <a href="#Core/widget/MenuItem#event-toggle">toggle</a> event.</p>',scope:"instance"}],events:[{name:"item",description:'<p>This menu item has been activated.</p>\n<p>Note that this event bubbles up through parents and can be\nlistened for on a top level <a href="#Core/widget/Menu">Menu</a> for convenience.</p>',parameters:[{name:"item",type:"Core.widget.MenuItem",description:"<p>The menu item which is being actioned.</p>"},{name:"menu",type:"Core.widget.Menu",description:"<p>Menu containing the menu item</p>"}]},{name:"toggle",description:'<p>The checked state of this menu item has changed.</p>\n<p>Note that this event bubbles up through parents and can be\nlistened for on a top level <a href="#Core/widget/Menu">Menu</a> for convenience.</p>',parameters:[{name:"item",type:"Core.widget.MenuItem",description:"<p>The menu item whose checked state changed.</p>"},{name:"menu",type:"Core.widget.Menu",description:"<p>Menu containing the menu item</p>"},{name:"checked",type:"Boolean",description:"<p>The <em>new</em> checked state.</p>"}]}],properties:[{name:"checked",description:'<p>Get/sets the checked state of thie <code>MenuItem</code> and fires the <a href="#Core/widget/MenuItem#event-toggle">toggle</a>\nevent upon change.</p>\n<p>Note that this must be configured as a <code>Boolean</code> to enable the checkbox UI.</p>',scope:"instance",properties:[{type:{names:["Boolean"]}}]},{name:"menu",description:'<p>Returns the instantiated menu widget as configured by <a href="#Core/widget/MenuItem#config-menu">menu</a>.</p>',scope:"instance",readonly:true,properties:[{type:{names:["Core.widget.Widget"]}}]}]},{name:"MessageDialog",classDescription:"<p>A singleton modal dialog box which can be used to ask the user to confirm or reject actions.</p>\n<p>Usage:</p>\n<pre class=\"prettyprint source lang-javascript\"><code> MessageDialog.confirm({\n     title: 'Dialog Title',\n     message : 'Are you sure?'\n }).then(result => {\n     if (result === MessageDialog.yesButton) {\n         // The YES button was clicked, so go ahead!\n     }\n });```</code></pre>",extends:["Core/widget/Popup"],constructor:{name:"constructor"},filename:"MessageDialog.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/widget",lineno:23,singleton:true,functions:[{name:"confirm",description:"<p>Shows a confirm dialog with &quot;Yes&quot; and &quot;No&quot; buttons. The returned promise resolves passing <code>true</code>\nif the &quot;yes&quot; button is pressed, and <code>false</code> if the &quot;No&quot; button is pressed. Typing <code>ESC</code> rejects.</p>",parameters:[{name:"options",type:"Object",description:"<p>An options object for what to show.</p>"},{name:"options.title",type:"String",description:"<p>The title to show in the dialog header.</p>",optional:true,isSubParam:true},{name:"options.message",type:"String",description:"<p>The message to show in the dialog body.</p>",optional:true,isSubParam:true}],scope:"static",returns:{type:"Promise",description:"<p>A promise which is resolved when the dialog is shown</p>"},async:true}]},{name:"module:Core/widget/NumberField",classDescription:'<p>Number field widget. Wraps native <code>&lt;input type=&quot;number&quot;&gt;</code>.</p>\n<p>This field can be used as an <a href="#Grid/column/Column#config-editor">editor</a> for the <a href="#Grid/column/Column">Column</a>.\nIt is used as the default editor for the <a href="#Grid/column/NumberColumn">NumberColumn</a>,\n<a href="#Grid/column/PercentColumn">PercentColumn</a>, <a href="#Grid/column/AggregateColumn">AggregateColumn</a>.</p>',extends:["Core/widget/Field"],examples:["let number = new NumberField({\n  min: 1,\n  max: 5,\n  value: 3\n});"],constructor:{name:"constructor"},filename:"NumberField.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/widget",lineno:31,classType:"numberfield",externalExamples:["widget/NumberField.js"],configs:[{name:"min",description:"<p>Min value</p>",type:"Number",scope:"inner"},{name:"max",description:"<p>Max value</p>",type:"Number",scope:"inner"},{name:"step",description:"<p>Step size for spin button clicks.</p>",type:"Number",scope:"inner",defaultvalue:1},{name:"value",description:"<p>Initial value</p>",type:"Number",scope:"inner"},{name:"decimalPrecision",description:"<p>The number of decimal places to allow. Defaults to no constraint.</p>",type:"Number",scope:"inner"},{name:"leadingZeroes",description:"<p>The maximum number of leading zeroes to show. Defaults to no constraint.</p>",type:"Number",scope:"inner"},{name:"changeOnSpin",description:"<p>Controls how change events are triggered when stepping the value up or down using either spinners or\narrow keys.</p>\n<p>Configure with:</p>\n<ul>\n<li><code>true</code> to trigger a change event per step</li>\n<li><code>false</code> to not trigger change while stepping. Will trigger on blur/Enter</li>\n<li>A number of milliseconds to buffer the change event, triggering when no steps are performed during that\nperiod of time.</li>\n</ul>",type:["Boolean","Number"],scope:"inner",defaultvalue:true}],properties:[{name:"step",description:"<p>Step size for spin button clicks.</p>",scope:"instance",properties:[{type:{names:["Number"]}}]},{name:"min",description:"<p>Min value</p>",scope:"instance",properties:[{type:{names:["Number"]}}]},{name:"max",description:"<p>Max value</p>",scope:"instance",properties:[{type:{names:["Number"]}}]},{name:"value",description:"<p>Get/set the NumberField's value, or <code>undefined</code> if the input field is empty</p>",scope:"instance",properties:[{type:{names:["Number"]}}]}]},{name:"module:Core/widget/PagingToolbar",classDescription:'<p>A special Toolbar class, which, when attached to an <a href="#Core/data/AjaxStore">AjaxStore</a>,\nwhich has been configured to be <a href="#Core/data/AjaxStore#property-isPaged">paged</a>, controls\nthe loading of that store to page through the data set.</p>\n<pre class="prettyprint source lang-javascript"><code>new Panel({\n     layout : \'fit\',\n     items  : [\n         myGrid\n     ],\n     bbar : {\n         type  : \'pagingtoolbar\',\n         store : myGrid.store\n     }\n});\n</code></pre>',extends:["Core/widget/Toolbar"],constructor:{name:"constructor"},filename:"PagingToolbar.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/widget",lineno:29,classType:"toolbar",configs:[{name:"store",description:'<p>The <a href="#Core/data/AjaxStore">AjaxStore</a> that this PagingToolbar is to control.</p>',type:"Core.data.AjaxStore",scope:"inner"}]},{name:"module:Core/widget/Panel",classDescription:'<p>Panel widget. A general pupose container which may be used to contain child <a href="#Core/widget/Container#config-items">items</a>\nor <a href="#Core/widget/Widget#config-html">html</a>.</p>\n<p>Also may dock a <a href="#Core/widget/Panel#config-header">header</a> and <a href="#Core/widget/Panel#config-footer">footer</a> either at top/bottom or left/right</p>',extends:["Core/widget/Container"],examples:["let panel = new Panel({\n  title   : 'A Test Panel',\n  items : [\n    { type : 'text', placeholder: 'Text' },\n  ],\n  bbar : [{\n    text : 'Proceed',\n    onClick : () => {\n      alert('Proceeding!');\n    }\n  }]\n});"],constructor:{name:"constructor"},filename:"Panel.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/widget",lineno:49,classType:"panel",configs:[{name:"trapFocus",description:"<p>By default, tabbing within a Panel is not contained, ie you can TAB out of the Panel\nforwards or backwards.\nConfigure this as <code>true</code> to disallow tabbing out of the Panel, and make tabbing circular within this Panel.</p>",type:"Boolean",scope:"inner",defaultvalue:"false"},{name:"title",description:'<p>A title to display in the header. Causes creation and docking of a header\nto the top if no header is configured.</p>\n<p>If specified, overrides any title configured within the <a href="#Core/widget/Panel#config-header">header</a> configuration.</p>',type:"String",scope:"inner"},{name:"header",description:"<p>Config object of a header. May contain a <code>title</code>, <code>titleAlign</code>, <code>dock</code>\nand a <code>cls</code> property. If passed as a string, the value is used\nas the title, dock is defaulted to <code>'top', and titleAlign</code> is defaulted to <code>start</code>.</p>\n<p>The <code>dock</code> property may be <code>top</code>, <code>right</code>, <code>bottom</code> or <code>left</code>.\nThe <code>titleAlign</code> property may be <code>start</code>, <code>center</code> or <code>end</code>.</p>",type:["Object","String"],scope:"inner"},{name:"footer",description:"<p>Config object of a footer. May contain a <code>dock</code>\nand a <code>cls</code> property.</p>\n<p>The <code>dock</code> property may be <code>top</code>, <code>right</code>, <code>bottom</code> or <code>left</code>.</p>",type:["Object","String"],scope:"inner"},{name:"tools",description:"<p>The tools to add either before or after the title in the Panel header.\nEach property name is the reference by which an instantiated Tool Widget\nmay be retrieved from the live <code><a href=\"#Core/widget/Panel#property-tools\">tools</a></code> property.\nEach tool may have the following properties:</p>\n<ul>\n<li><code>cls</code> The CSS class to apply.</li>\n<li><code>handler</code> A method in the field to call upon click</li>\n<li><code>align</code> <code>'start'</code> or <code>'end'</code> which end of the header the tool should go.</li>\n<li><code>weight</code> (Optional) Heigher weighted tools gravitate towards the centre.</li>\n</ul>",type:"Object",scope:"inner"},{name:"tbar",description:'<p>A Config object representing the configuration of a <a href="#Core/widget/Toolbar">Core.widget.Toolbar</a>,\nor array of config objects representing the child items of a Toolbar.</p>\n<p>This creates a toolbar docked to the top of the panel immediately below the header.</p>',type:["Array.<Object>","Object"],scope:"inner"},{name:"bbar",description:'<p>A Config object representing the configuration of a <a href="#Core/widget/Toolbar">Core.widget.Toolbar</a>,\nor array of config objects representing the child items of a Toolbar.</p>\n<p>This creates a toolbar docked to the bottom of the panel immediately above the footer.</p>',type:["Array.<Object>","Object"],scope:"inner"}],events:[{name:"toolclick",description:'<p>A header <a href="#Core/widget/Panel#config-tools">tool</a> has been clicked.</p>',parameters:[{name:"source",type:"Core.widget.Tool",description:"<p>This Panel.</p>"},{name:"tool",type:"Core.widget.Tool",description:"<p>The tool which is being clicked.</p>"}]}],properties:[{name:"tbar",description:'<p>Get toolbar <a href="#Core/widget/Toolbar">Core.widget.Toolbar</a> docked to the top of the panel,</p>',scope:"instance",readonly:true,typings:"Toolbar",properties:[{type:{names:["Object"]}}]},{name:"bbar",description:'<p>Get toolbar <a href="#Core/widget/Toolbar">Core.widget.Toolbar</a> docked to the bottom of the panel,</p>',scope:"instance",readonly:true,typings:"Toolbar",properties:[{type:{names:["Object"]}}]},{name:"tools",description:'<p>The tool Widgets as specified by the <a href="#Core/widget/Panel#config-tools">tools</a> configuration\n(and the <a href="#Core/widget/Popup#config-closable">closable</a> configuration in the Popup subclass).\nEach is a <a href="#Core/widget/Widget">Widget</a> instance which may be hidden, shown and observed and styled just like any other widget.</p>',scope:"instance",properties:[{type:{names:["Object"]}}]}]},{name:"module:Core/widget/PickerField",classDescription:'<p>Base class used for <a href="#Core/widget/Combo">Combo</a>, <a href="#Core/widget/DateField">DateField</a>, and <a href="#Core/widget/TimeField">TimeField</a>.\nDisplays a picker (<a href="#Core/widget/List">List</a>, <a href="#Core/widget/DatePicker">DatePicker</a>) anchored to the field.\nNot intended to be used directly.</p>\n<p>This field\'s subclasses can be used as editors for the <a href="#Grid/column/Column">Column</a>.</p>\n<p>When focused by means of <em>touch</em> tapping on the trigger element (eg, the down arrow on a Combo)\non a tablet, the keyboard will not be shown by default to allow for interaction with the dropdown.</p>\n<p>A second tap on the input area will then show the keyboard is required.</p>',extends:["Core/widget/TextField"],virtual:true,constructor:{name:"constructor"},filename:"PickerField.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/widget",lineno:26,configs:[{name:"editable",description:"<p>User can edit text in text field (otherwise only pick from attached picker)</p>",type:"Boolean",scope:"inner",defaultvalue:true},{name:"pickerAlignElement",description:"<p>The name of the element property to which the picker should size and align itself.</p>",type:"String",scope:"inner",defaultvalue:"element"},{name:"autoClose",description:'<p>By default PickerFiled\'s picker is transient, and will <a href="#Core/widget/PickerField#function-hidePicker">hidePicker</a> when the user clicks or\ntaps outside or when focus moves outside picker.</p>\n<p>Configure as <code>false</code> to make picker non-transient.</p>',type:"Boolean",scope:"inner",defaultvalue:true},{name:"autoExpand",description:"<p>Configure as <code>true</code> to have the picker expand upon focus enter.</p>",type:"Boolean",scope:"inner"},{name:"picker",description:"<p>A config object which is merged into the generated picker configuration to allow specific use cases\nto override behaviour. For example:</p>\n<pre><code>picker: {\n    align: {\n        anchor: true\n    }\n}</code></pre>",type:"Object",scope:"inner"}],functions:[{name:"onEditComplete",access:"internal",description:"<p>Check if field value is valid</p>",scope:"instance"},{name:"internalOnKeyPress",access:"private",description:"<p>Allows using arrow keys to open/close list. Relays other keypresses to list if open.</p>",scope:"instance"},{name:"onTriggerClick",access:"private",description:"<p>User clicked trigger icon, toggle list.</p>",scope:"instance"},{name:"showKeyboard",access:"private",description:"<p>User clicked on an editable input field. If it's a touch event\nensure that the keyboard is shown.</p>",scope:"instance"},{name:"togglePicker",description:"<p>Toggle picker display</p>",scope:"instance"},{name:"showPicker",description:"<p>Show picker</p>",scope:"instance"},{name:"hidePicker",description:"<p>Hide picker</p>",scope:"instance"}]},{name:"module:Core/widget/Popup",classDescription:"<p>Popup widget, used as base class for Menu but can also be used as is to contain widgets or html</p>",extends:["Core/widget/Panel"],examples:["let popup = new Popup({\n  forElement : document.querySelector('button'),\n  items      : [\n    { type : 'text', placeholder: 'Text' },\n    { type: 'button', text: 'Okey', style: 'width: 100%', color: 'b-orange'}\n  ]\n});"],constructor:{name:"constructor"},filename:"Popup.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/widget",lineno:29,classType:"popup",externalExamples:["widget/Popup.js"],configs:[{name:"autoShow",description:"<p>Auto show flag for Popup.\nIf truthy then Popup is shown automatically upon hover.</p>",type:"Boolean",scope:"inner",defaultvalue:true},{name:"autoClose",description:'<p>By default a Popup is transient, and will <a href="#Core/widget/Popup#function-close">close</a> when the user clicks or\ntaps outside its owned widgets and when focus moves outside its owned widgets.</p>\n<p><strong>Note</strong>: <a href="#Core/widget/Popup#config-modal">Modal</a> popups won\'t <a href="#Core/widget/Popup#function-close">close</a> when focus moves outside even if autoClose is <code>true</code>.</p>\n<p>Configure as <code>false</code> to make a Popup non-transient.</p>',type:"Boolean",scope:"inner",defaultvalue:true},{name:"showOnClick",description:"<p>Show popup when user clicks the element that it is anchored to. Cannot be combined with showOnHover</p>",type:"Boolean",scope:"inner",defaultvalue:false},{name:"forElement",description:"<p>DOM element to attach popup.</p>",type:"HTMLElement",scope:"inner"},{name:"closeAction",description:"<p>The action to take when calling the <a href=\"#Core/widget/Popup#function-close\">close</a> method.\nBy default, the popup is hidden.</p>\n<p>This may be set to <code>'destroy'</code> to destroy the popup upon close.</p>",type:"String",scope:"inner",defaultvalue:"hide"},{name:"trapFocus",description:"<p>By default, tabbing within a Popup is circular - that is it does not exit.\nConfigure this as <code>false</code> to allow tabbing out of the Popup.</p>",type:"Boolean",scope:"inner",defaultvalue:true},{name:"focusOnToFront",description:"<p>By default a Popup is focused when it is shown.\nConfigure this as <code>false</code> to prevent automatic focus on show.</p>",type:"Boolean",scope:"inner",defaultvalue:true},{name:"closable",description:'<p>Show a tool in the header to close this Popup, and allow <code>ESC</code> close it.\nThe tool is available in the <a href="#Core/widget/Popup#property-tools">tools</a> object\nunder the name <code>close</code>. It uses the CSS class <code>b-popup-close</code> to apply a\ndefault close icon. This may be customized with your own CSS rules.</p>',type:"Boolean",scope:"inner"},{name:"modal",description:'<p>Optionally show an opaque mask below this Popup when shown.\nConfigure this as <code>true</code> to show the mask.</p>\n<p>When a Popup is modal, it defaults to being <a href="#Core/widget/Widget#config-centered">centered</a>.\nAlso it won\'t <a href="#Core/widget/Popup#function-close">close</a> when focus moves outside even if <a href="#Core/widget/Popup#config-autoClose">autoClose</a> is <code>true</code>.</p>\n<p>May also be an object containing the following properties:</p>\n<ul>\n<li><code>closeOnMaskTap</code> Specify as <code>true</code> to <a href="#Core/widget/Popup#function-close">close</a> when mask is tapped.\nThe default action is to focus the popup.</li>\n</ul>\n<p>Usage:</p>\n<pre class="prettyprint source lang-javascript"><code>new Popup({\n    title  : \'I am modal\',\n    modal  : {\n        closeOnMaskTap : true\n    },\n    height : 100,\n    width  : 200\n});\n</code></pre>',type:"Boolean",scope:"inner"}],functions:[{name:"close",description:'<p>Performs the configured <a href="#Core/widget/Popup#config-closeAction">closeAction</a> upon this popup.\nBy default, the popup hides. The <a href="#Core/widget/Popup#config-closeAction">closeAction</a> may be\nconfigured as <code>\'destroy\'</code>.</p>',scope:"instance",fires:["event:beforeclose If popup is not hidden"]}],events:[{name:"beforeClose",description:'<p>Fired when the <a href="#Core/widget/Popup#function-close">close</a> method is called and the popup is not hidden.\nMay be vetoed by returning <code>false</code> from a handler.</p>',parameters:[{name:"source",type:"Core.widget.Popup",description:"<p>me Popup</p>"}]}]},{name:"module:Core/widget/Slider",classDescription:"<p>Wraps native &lt;input type=&quot;range&quot;&gt;</p>",extends:["Core/widget/Widget"],examples:["let slider = new Slider({\n  text: 'Choose value'\n});"],constructor:{name:"constructor"},filename:"Slider.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/widget",lineno:24,classType:"slider",externalExamples:["widget/Slider.js"],configs:[{name:"text",description:"<p>Slider label text</p>",type:"String",scope:"inner"},{name:"showValue",description:"<p>Show value in label (appends in () if text is set)</p>",type:"Boolean",scope:"inner",defaultvalue:true},{name:"showTooltip",description:"<p>Show value in tooltip</p>",type:"Boolean",scope:"inner",defaultvalue:false},{name:"min",description:"<p>Minimum value</p>",type:"Number",scope:"inner",defaultvalue:0},{name:"max",description:"<p>Maximum value</p>",type:"Number",scope:"inner",defaultvalue:100},{name:"step",description:"<p>Step size</p>",type:"Number",scope:"inner",defaultvalue:1},{name:"value",description:"<p>Initial value</p>",type:"Number",scope:"inner"}],events:[{name:"input",description:"<p>Fired while slider thumb is being dragged</p>",parameters:[{name:"source",type:"Core.widget.Slider",description:"<p>The slider</p>"},{name:"value",type:"String",description:"<p>The value</p>"}]},{name:"change",description:"<p>Fired after the slider value changes (on mouse up following slider interaction)</p>",parameters:[{name:"value",type:"String",description:"<p>Value</p>"},{name:"userAction",type:"Boolean",description:"<p>Triggered by user taking an action (<code>true</code>) or by setting a value (<code>false</code>)</p>"},{name:"source",type:"Core.widget.Slider",description:"<p>The slider</p>"}]}],properties:[{name:"text",description:"<p>Get/Set text. Appends value if Slider.showValue is true</p>",scope:"instance",properties:[{type:{names:["String"]}}]},{name:"value",description:"<p>Get/set value</p>",scope:"instance",properties:[{type:{names:["Number"]}}]},{name:"min",description:"<p>Get/set min value</p>",scope:"instance",properties:[{type:{names:["Number"]}}]},{name:"max",description:"<p>Get/set max value</p>",scope:"instance",properties:[{type:{names:["Number"]}}]},{name:"step",description:"<p>Get/set step size</p>",scope:"instance",properties:[{type:{names:["Number"]}}]}],functions:[{name:"updateLabel",access:"private",description:"<p>Refresh label text</p>",scope:"instance"},{name:"updateTooltipPosition",access:"private",description:"<p>Refresh tooltip position</p>",scope:"instance"},{name:"updateUI",access:"private",description:"<p>Refresh slider UI</p>",scope:"instance"}]},{name:"module:Core/widget/Splitter",classDescription:"<p>A simple splitter widget that resizes the elements next to it or above/below it depending on orientation.</p>",extends:["Core/widget/Widget"],constructor:{name:"constructor"},filename:"Splitter.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/widget",lineno:20,classType:"splitter",externalExamples:["widget/Splitter.js"],configs:[{name:"orientation",description:"<p>The splitters orientation, configurable with 'auto', 'horizontal' or 'vertical'.</p>\n<p>'auto' tries to determine the orientation by either checking the <code>flex-direction</code> of the parent element\nor by comparing the positions of the closest sibling elements to the splitter. If they are above and\nbelow 'horizontal' is used, if not it uses 'vertical'.</p>\n<pre class=\"prettyprint source\"><code>new Splitter({\n   orientation : 'horizontal'\n});\n</code></pre>\n<p>To receive the actully used orienatation when configured with 'auto', see\n<a href=\"#Core/widget/Splitter#property-currentOrientation\">currentOrientation</a>.</p>",type:"String",scope:"inner",defaultvalue:"auto"}],properties:[{name:"currentOrientation",description:"<p>Get actually used orientation, which is either the configured value for <code>orientation</code> or if configured with\n'auto' the currently used orientation.</p>",scope:"instance",readonly:true,properties:[{type:{names:["String"]}}]},{name:"orientation",description:'<p>Splitter orientation, see <a href="#Core/widget/Splitter#config-orientation">orientation</a>. When set to \'auto\' then actually used orientation can be\nretrieved using <a href="#Core/widget/Splitter#property-currentOrientation">currentOrientation</a>.</p>',scope:"instance",readonly:true,properties:[{type:{names:["String"]}}]}]},{name:"module:Core/widget/TabPanel",classDescription:"<p>Tab panel widget, displays a collection of tabs which each can contain other widgets. Layout is handled using css</p>",extends:["Core/widget/Container"],examples:["let tabPanel = new TabPanel({\n items: [\n     {\n         title: 'First',\n         items: [\n             { type: 'textfield', label: 'Name' },\n             ...\n         ]\n     }, {\n         title: 'Last',\n         items: [\n             ...\n         ]\n     }\n ]\n});"],constructor:{name:"constructor"},filename:"TabPanel.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/widget",lineno:37,classType:"tabpanel",externalExamples:["widget/TabPanel.js"],configs:[{name:"activeTab",description:"<p>The index of the initially active tab.</p>",type:"Number",scope:"inner",defaultvalue:0},{name:"tabMinWidth",description:"<p>Min width of a tab title. 0 means no minimum width. This is default.</p>",type:"Number",scope:"inner"},{name:"tabMaxWidth",description:"<p>Max width of a tab title. 0 means no maximum width. This is default.</p>",type:"Number",scope:"inner"},{name:"animateTabChange",description:"<p>Specifies whether to slide tabs in and out of visibility.</p>",type:"Boolean",scope:"inner",defaultvalue:true}],properties:[{name:"activeTab",description:"<p>Get/set active tab, using index or the Widget to activate.</p>",scope:"instance",properties:[{type:{names:["Core.widget.Widget","Number"]}}]},{name:"activeIndex",description:'<p>The active tab index. Setting must be done through <a href="#Core/widget/TabPanel#property-activeTab">activeTab</a></p>',scope:"instance",readonly:true,properties:[{type:{names:["Number"]}}]},{name:"activeItem",description:'<p>The active child widget. Setting must be done through <a href="#Core/widget/TabPanel#property-activeTab">activeTab</a></p>',scope:"instance",readonly:true,properties:[{type:{names:["Core.widget.Widget"]}}]}],events:[{name:"tabchange",description:"<p>The active tab has changed.</p>",parameters:[{name:"prevActiveItem",type:"Core.widget.Widget",description:"<p>The previous active child widget.</p>"},{name:"prevActiveIndex",type:"Number",description:"<p>The previous active index.</p>"},{name:"activeItem",type:"Core.widget.Widget",description:"<p>The new active child widget.</p>"},{name:"activeIndex",type:"Number",description:"<p>The new active index.</p>"}]}]},{name:"module:Core/widget/TextAreaField",classDescription:'<p>TextAreaField widget. Wraps native &lt;input type=&quot;text&quot;&gt;</p>\n<p>This field can be used as an <a href="#Grid/column/Column#config-editor">editor</a> for the <a href="#Grid/column/Column">Column</a>.</p>',extends:["Core/widget/Field"],examples:["let textAreaField = new TextAreaField({\n  placeholder: 'Enter some text'\n});"],constructor:{name:"constructor"},filename:"TextAreaField.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/widget",lineno:26,classType:"textareafield",configs:[{name:"inline",description:"<p>Configure as <code>false</code> to have the field render as a non-editable picker field which\nshows a <code>&lt;textarea&gt;</code> input when expanded.</p>",type:"Boolean",scope:"inner",defaultvalue:true},{name:"resize",description:"<p>The resize style to apply to the <code>&lt;textarea&gt;</code> element.</p>",type:"String",scope:"inner",defaultvalue:"none"}]},{name:"module:Core/widget/TextField",classDescription:'<p>Textfield widget. Wraps native &lt;input type=&quot;text&quot;&gt;</p>\n<p>This field can be used as an <a href="#Grid/column/Column#config-editor">editor</a> for the <a href="#Grid/column/Column">Column</a>.\nIt is used as the default editor for the <a href="#Grid/column/Column">Column</a>, <a href="#Grid/column/TemplateColumn">TemplateColumn</a>,\n<a href="#Grid/column/TreeColumn">TreeColumn</a>, and for other columns if another editor is not specified explicitly,\nor disabled by setting <code>false</code> value.</p>',extends:["Core/widget/Field"],examples:["let textField = new TextField({\n  placeholder: 'Enter some text'\n});"],constructor:{name:"constructor"},filename:"TextField.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/widget",lineno:30,classType:"textfield",externalExamples:["widget/TextField.js"],configs:[{name:"tabIndex",description:"<p>The tab index of the input field</p>",type:"Number",scope:"inner"},{name:"minLength",description:"<p>The min number of characters for the input field</p>",type:"Number",scope:"inner"},{name:"maxLength",description:"<p>The max number of characters for the input field</p>",type:"Number",scope:"inner"}]},{name:"module:Core/widget/TimeField",classDescription:'<p>Time field widget (text field + time picker).</p>\n<p>This field can be used as an <a href="#Grid/column/Column#config-editor">editor</a> for the <a href="#Grid/column/Column">Column</a>.\nIt is used as the default editor for the <a href="#Grid/column/TimeColumn">TimeColumn</a>.</p>',extends:["Core/widget/PickerField"],examples:["let field = new TimeField({\n  format: 'HH'\n});"],constructor:{name:"constructor"},filename:"TimeField.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/widget",lineno:27,classType:"timefield",externalExamples:["widget/TimeField.js"],configs:[{name:"format",description:"<p>Format for date displayed in field (see Core.helper.DateHelper#function-format-static for formatting options)</p>",type:"String",scope:"inner",defaultvalue:"LT"},{name:"min",description:"<p>Min time value</p>",type:["String","Date"],scope:"inner"},{name:"max",description:"<p>Max time value</p>",type:["String","Date"],scope:"inner"},{name:"step",description:"<p>Time increment duration value. Defaults to 5 minutes.\nThe value is taken to be a string consisting of the numeric magnitude and the units.\nThe units may be a recognised unit abbreviation of this locale or the full local unit name.\nFor example <code>&quot;10m&quot;</code> or <code>&quot;5min&quot;</code> or <code>&quot;2 hours&quot;</code></p>",type:"String",scope:"inner"},{name:"value",description:'<p>Value, which can be a Date or a string. If a string is specified, it will be converted using the\nspecified <a href="#Core/widget/TimeField#config-format">format</a></p>',type:["String","Date"],scope:"inner"}],functions:[{name:"showPicker",description:"<p>Show picker</p>",scope:"instance"},{name:"focusPicker",description:"<p>Focus time picker</p>",scope:"instance"}],properties:[{name:"min",description:'<p>Get/set min value, which can be a Date or a string. If a string is specified, it will be converted using the\nspecified <a href="#Core/widget/TimeField#config-format">format</a></p>',scope:"instance",properties:[{type:{names:["String","Date"]}}]},{name:"max",description:'<p>Get/set max value, which can be a Date or a string. If a string is specified, it will be converted using the\nspecified <a href="#Core/widget/TimeField#config-format">format</a></p>',scope:"instance",properties:[{type:{names:["String","Date"]}}]},{name:"value",description:'<p>Get/set value, which can be a Date or a string. If a string is specified, it will be converted using the\nspecified <a href="#Core/widget/TimeField#config-format">format</a></p>',scope:"instance",properties:[{type:{names:["String","Date"]}}]},{name:"step",description:'<p>The <code>step</code> property may be set in Object form specifying two properties,\n<code>magnitude</code>, a Number, and <code>unit</code>, a String.</p>\n<p>If a Number is passed, the steps\'s current unit is used and just the magnitude is changed.</p>\n<p>If a String is passed, it is parsed in accordance with (see <a href="#Core/helper/DateHelper#function-format-static">format</a>.\nThe string is taken to be the numeric magnitude then an abbreviation, or name of the unit.</p>\n<p>Upon read, the value is always returned in object form containing <code>magnitude</code> and <code>unit</code>.</p>',scope:"instance",properties:[{type:{names:["String","Number","Object"]}}]},{name:"format",description:'<p>Get/Set format for time displayed in field (see <a href="#Core/helper/DateHelper#function-format-static">format</a> for formatting options)</p>',scope:"instance",properties:[{type:{names:["String"]}}]}]},{name:"module:Core/widget/TimePicker",classDescription:'<p>A Popup which displays hour and minute number fields and AM/PM switcher buttons for 12 hour time format.\nFires timeChange event upon user changes time.</p>\n<p>This class is not intended for use in applications. It is used internally by the\n<a href="#Core/widget/TimeField">Core.widget.TimeField</a> class.</p>',access:"private",constructor:{name:"constructor"},filename:"TimePicker.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/widget",lineno:20,classType:"timepicker",configs:[{name:"value",description:"<p>Default time value</p>",type:"Date",scope:"inner"},{name:"format",description:"<p>Time format. Used to set appropriate 12/24 hour format to display.\nSee Core.helper.DateHelper#format for formatting options.</p>",type:"String",scope:"inner"}],events:[{name:"timeChange",description:"<p>Fires when a time is changed.</p>",parameters:[{name:"time",type:"Date",description:"<p>The selected time.</p>"}]}],properties:[{name:"value",description:'<p>Get/set value, which can be a Date or a string. If a string is specified, it will be converted using the\nspecified <a href="#Core/widget/TimePicker#config-format">format</a></p>',scope:"instance",properties:[{type:{names:["Date","String"]}}]},{name:"format",description:"<p>Get/Set format for time displayed in field (see Core.helper.DateHelper#format for formatting options)</p>",scope:"instance",properties:[{type:{names:["String"]}}]},{name:"min",description:'<p>Get/set max value, which can be a Date or a string. If a string is specified, it will be converted using the\nspecified <a href="#Core/widget/TimePicker#config-format">format</a></p>',scope:"instance",properties:[{type:{names:["Date","String"]}}]},{name:"max",description:'<p>Get/set min value, which can be a Date or a string. If a string is specified, it will be converted using the\nspecified <a href="#Core/widget/TimePicker#config-format">format</a></p>',scope:"instance",properties:[{type:{names:["Date","String"]}}]},{name:"initialValue",description:'<p>Get/set initial value and value, which can be a Date or a string. If a string is specified,\nit will be converted using the specified <a href="#Core/widget/TimePicker#config-format">format</a>. Initial value is restored on Escape click</p>',scope:"instance",properties:[{type:{names:["Date","String"]}}]}]},{name:"module:Core/widget/Toast",classDescription:"<p>Basic toast. Toasts are stacked on top of each other</p>",examples:["// simplest possible\nToast.show('Just toasting');\n\n// with config\nToast.show({\n  html: 'Well toasted',\n  showProgress: false\n});\n\n// as instance (instance is also returned from Toast.show()\nlet toast = new Toast({\n  html: 'Not going away',\n  timeout: 0\n});\n\ntoast.show();"],constructor:{name:"constructor"},filename:"Toast.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/widget",lineno:33,classType:"toast",externalExamples:["widget/Toast.js"],configs:[{name:"timeout",description:"<p>Timeout (in ms) until the toast is automatically dismissed. Set to 0 to never hide.</p>",type:"Number",scope:"inner",defaultvalue:2500},{name:"showProgress",description:"<p>Show a progress bar indicating the time remaining until the toast is dismissed.</p>",type:"Boolean",scope:"inner",defaultvalue:true},{name:"color",description:"<p>Toast color (should have match in toast.scss or your custom styling).\nValid values in Bryntum themes are:</p>\n<ul>\n<li>b-amber</li>\n<li>b-blue</li>\n<li>b-dark-gray</li>\n<li>b-deep-orange</li>\n<li>b-gray</li>\n<li>b-green</li>\n<li>b-indigo</li>\n<li>b-lime</li>\n<li>b-light-gray</li>\n<li>b-light-green</li>\n<li>b-orange</li>\n<li>b-purple</li>\n<li>b-red</li>\n<li>b-teal</li>\n<li>b-white</li>\n<li>b-yellow</li>\n</ul>\n<pre class=\"prettyprint source\"><code>new Toast({\n   color : 'b-blue'\n});\n</code></pre>",type:"String",scope:"inner"}],functions:[{name:"show",description:"<p>Show the toast</p>",scope:"instance"},{name:"hide",description:"<p>Hide the toast</p>",scope:"instance"},{name:"hideAll",description:"<p>Hide all visible toasts</p>",scope:"static"},{name:"show",description:"<p>Easiest way to show a toast</p>",parameters:[{name:"msgOrConfig",type:["String","Object"],description:"<p>Message or toast config object</p>"}],examples:["Toast.show('Hi');","Toast.show({\n  html   : 'Read quickly, please',\n  timeout: 1000\n});"],scope:"static",returns:{type:"Core.widget.Toast"}}]},{name:"module:Core/widget/Tool",classDescription:"<p>Base class for tools.</p>\n<p>May be configured with a <code>cls</code> and a <code>handler</code> which is a function (or name of a function)\nin the owning Panel.</p>",extends:["Core/widget/Widget"],constructor:{name:"constructor"},filename:"Tool.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/widget",lineno:18,classType:"tool"},{name:"module:Core/widget/Toolbar",classDescription:"<p>Widget that is themed to contain Buttons which is docked to the bottom or top of\na <a href=\"#Core/widget/Panel\">Panel</a>.</p>\n<pre class=\"prettyprint source lang-javascript\"><code>// create a toolbar with two buttons\nlet container = new Toolbar({\n  items : [\n    { text : 'Add' },\n    { text : 'Delete' }\n  ]\n});\n</code></pre>",extends:["Core/widget/Container"],constructor:{name:"constructor"},filename:"Toolbar.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/widget",lineno:25,classType:"toolbar",configs:[{name:"widgetCls",description:"<p>Custom CSS class to add to toolbar widgets</p>",type:"String",scope:"inner",category:"CSS"}]},{name:"module:Core/widget/Tooltip",classDescription:'<p>Tooltip. Easiest way of assigning a tooltip to a widget is by setting <a href="#Core/widget/Widget#config-tooltip">tooltip</a>, see example below.</p>\n<pre class="prettyprint source lang-javascript"><code>new Button {\n    text    : \'Hover me\',\n    tooltip : \'Click me and you wont believe what happens next\'\n});\n</code></pre>\n<p>By default, tooltips of widgets use a singleton Tooltip instance which may be accessed from the\n<code><a href="#Core/widget/Widget">Widget</a></code> class under the name <code>Widget.tooltip</code>.\nThis is configured according to the config object on pointer over.</p>\n<p>To request a separate instance be created just for this widget, add <code>newInstance : true</code>\nto the configuration:</p>\n<pre class="prettyprint source lang-javascript"><code>new Button {\n    text    : \'Hover me\',\n    tooltip : {\n        html        : \'Click me and you wont believe what happens next\',\n        newInstance : true\n    }\n});\n</code></pre>\n<p>You can ask for the singleton instance to display configured tips for your own DOM structure using\n<code>data-btip</code> element attributes:</p>\n<pre class="prettyprint source lang-html"><code>&lt;button class=&quot;my-button&quot; data-btip=&quot;Contextual help for my button&quot; data-btip-scroll-action=&quot;realign&quot;>Hover me&lt;/button>\n</code></pre>\n<h2>Showing async content</h2>\n<p>To load remote content into a simple tooltip, just load your data in the <code>beforeShow</code> listener (but ensure that the <a href="#Core/widget/Tooltip#property-activeTarget">activeTarget</a> is the same when the data arrives)</p>\n<pre class="prettyprint source lang-javascript"><code>new Tooltip({\n    listeners : {\n        beforeShow : ({ source : tip }) => tip.html = AjaxHelper.get(\'someurl\').then(response => response.text());\n    }\n});\n</code></pre>\n<p>If you have multiple targets that should show a tooltip when hovered over, look at <a href="#Core/widget/Tooltip#config-forSelector">forSelector</a> and <a href="#Core/widget/Tooltip#config-getHtml">getHtml</a>.</p>\n<pre class="prettyprint source lang-javascript"><code>new Tooltip({\n    forSelector : \'.myCssClass\',\n    getHtml     : ({ source : tip }) => AjaxHelper.fetch(\'data\').then(response => response.text())\n});\n</code></pre>',extends:["Core/widget/Popup"],constructor:{name:"constructor"},filename:"Tooltip.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/widget",lineno:84,classType:"tooltip",externalExamples:["widget/Tooltip.js"],events:[{name:"beforeShow",description:"<p>Triggered before tooltip widget is shown. Return <code>false</code> to prevent the action.</p>",parameters:[{name:"source",type:"Core.widget.Tooltip",description:"<p>The Tooltip</p>"},{name:"source.triggeredByEvent",type:"Event",description:"<p>The event that triggered this Tooltip to show.</p>",isSubParam:true}],preventable:true},{name:"pointerOver",description:"<p>Triggered when a mouseover event is detected on a potential target element.\nReturn false to prevent the action</p>",parameters:[{name:"sourceThe",type:"Core.widget.Tooltip",description:"<p>tooltip instance.</p>"},{name:"event",type:"Event",description:"<p>The mouseover event.</p>"}]}],configs:[{name:"mouseOffsetX",description:'<p>Horizontal offset from mouse when <a href="#Core/widget/Tooltip#config-anchorToTarget">anchorToTarget</a> is <code>false</code></p>',type:"Number",scope:"inner",defaultvalue:15},{name:"mouseOffsetY",description:'<p>Vertical offset from mouse when <a href="#Core/widget/Tooltip#config-anchorToTarget">anchorToTarget</a> is <code>false</code></p>',type:"Number",scope:"inner",defaultvalue:15},{name:"getHtml",description:"<p>A method called to update the tooltip's content when the cursor is moved over a target. It receives one argument containing context about the tooltip and show operation.\nThe function should return a string, or a Promise yielding a string.</p>",type:"function",scope:"inner",returns:[{type:{names:["String","Promise"]}}],parameters:[{name:"context",type:"Object"},{name:"context.tip",type:"Core.widget.Tooltip",description:"<p>The tooltip instance</p>",isSubParam:true},{name:"context.element",type:"HTMLElement",description:"<p>The Element for which the Tooltip is monitoring mouse movement</p>",isSubParam:true},{name:"context.activeTarget",type:"HTMLElement",description:"<p>The target element that triggered the show</p>",isSubParam:true},{name:"context.event",type:"Event",description:"<p>The raw DOM event</p>",isSubParam:true}]},{name:"forElement",description:'<p>DOM element to attach tooltip to. By default, the mouse entering this element will kick off a timer\n(see <a href="#Core/widget/Tooltip#config-hoverDelay">hoverDelay</a>) to show itself.</p>\n<p>If the <a href="#Core/widget/Tooltip#config-forSelector">forSelector</a> is specified, then mouse entering matching elements within the <code>forElement</code>\nwill trigger the show timer to start.</p>\n<p>Note that when moving from matching element to matching element within the <code>forElement</code>, the tooltip\nwill remain visible for <a href="#Core/widget/Tooltip#config-hideDelay">hideDelay</a> milliseconds after exiting one element, so that rapidly\nentering another matching element will not cause hide+show flicker. To prevent this behaviour configure\nwith <code>hideDelay: 0</code>.</p>',type:"HTMLElement",scope:"inner"},{name:"updateContentOnMouseMove",access:"private",description:"<p>By default, a tooltip displays static content. In the Scheduler however, there are\nplenty of uses cases when the tip content is based on the current mouse position (dragging events, resizing events, schedule hover tip, drag creation of events etc). Set\nto <code>true</code> to update contents on mouse movement.</p>",type:"Boolean",scope:"inner"},{name:"forSelector",description:'<p>A CSS selector which targets child elements of the <a href="#Core/widget/Tooltip#config-forElement">forElement</a> that should produce a tooltip when hovered over.</p>',type:"String",scope:"inner"},{name:"hideOnDelegateChange",description:"<p>By default, when moving rapidly from target to target, if, when mouseing over\na new target, the tip is still visible, the tooltip does not hide, it remains\nvisible, but updates its content however it is configured to do so.</p>\n<p>Configure <code>hideOnDelegateChange : true</code> to have the tip hide, and then trigger\na new show delay upon entry of a new target while still visible.</p>",type:"Boolean",scope:"inner",defaultvalue:"false"},{name:"anchorToTarget",description:"<p>Set to true to anchor tooltip to the triggering target. If set to <code>false</code>, the tooltip\nwill align to the mouse position. When set to <code>false</code>, it will also set <code>anchor: false</code>\nto hide anchor arrow.</p>",type:"Boolean",scope:"inner",defaultvalue:"true"},{name:"showOnHover",description:"<p>Show on hover</p>",type:"Boolean",scope:"inner",defaultvalue:false},{name:"hoverDelay",description:"<p>The amount of time to hover before showing</p>",type:"Number",scope:"inner",defaultvalue:500},{name:"autoShow",description:"<p>Show immediately when created</p>",type:"Boolean",scope:"inner",defaultvalue:false},{name:"dismissDelay",description:"<p>The time (in milliseconds) that the Tooltip should stay visible for when it shows over its\ntarget. If the tooltip is anchored to its target, then moving the mouse during this time\nresets the timer so that the tooltip will remain visible.</p>\n<p>Defaults to <code>0</code> which means the Tooltip will persist until the mouse leaves the target.</p>",type:"Number",scope:"inner",defaultvalue:0},{name:"hideDelay",description:"<p>The time (in milliseconds) for which the Tooltip remains visible when the mouse leaves the target.</p>\n<p>May be configured as <code>false</code> to persist visible after the mouse exits the target element. Configure it\nas 0 to always retrigger <code>hoverDelay</code> even when moving mouse inside <code>fromElement</code></p>",type:"Number",scope:"inner",defaultvalue:500},{name:"loadingMsg",description:"<p>The message to show while an async tooltip is fetching its content.</p>",type:"String",scope:"inner",defaultvalue:"Loading..."},{name:"allowOver",description:"<p>Keep the tooltip open if user hovers it</p>",type:"Boolean",scope:"inner",defaultvalue:false}],properties:[{name:"activeTarget",description:"<p>The HTML element that triggered this Tooltip to show</p>",type:{names:["HTMLElement"]},scope:"inner"},{name:"html",description:"<p>Get/set the HTML to display. When specifying HTML, this widget's element will also have <code>b-html</code> added to its\nclassList, to allow targeted styling. To create async tooltip and show the <a href=\"#Core/widget/Tooltip#config-loadingMsg\">loadingMsg</a>, see code below:\nFor example:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>new Tooltip({\n    listeners : {\n        beforeShow : ({ source : tip }) => {\n            tip.showAsyncMessage();\n            AjaxHelper.get('someurl').then(response => tip.html = 'Done!');\n        }\n    }\n});\n</code></pre>",scope:"instance",category:"DOM",properties:[{type:{names:["String"]}}]},{name:"triggeredByEvent",description:"<p>The DOM event that triggered this tooltip to show</p>",type:{names:["Event"]},scope:"inner",readonly:true},{name:"currentOverElement",description:"<p>Updated dynamically with the current element that the mouse is over. For use when showing a Tooltip\nfrom code which is not triggered by a pointer event so that a tooltip can be positioned.</p>",type:{names:["HTMLElement"]},scope:"static",readonly:true}],functions:[{name:"showAsyncMessage",description:"<p>Shows a spinner and a message to indicate an async flow is ongoing</p>",parameters:[{name:"message",type:"String",description:'<p>The message, defaults to <a href="#Core/widget/Tooltip#config-loadingMsg">loadingMsg</a></p>'}],scope:"instance"},{name:"abortDelayedHide",access:"private",description:"<p>Stops both timers which may hide this tooltip, the one which counts down from mouseout\nand the one which counts down from mouseover show for dismissDelay ms</p>",scope:"instance"},{name:"onMouseMove",access:"private",description:"<p>Mouse move event listener which updates tooltip</p>",scope:"instance"}]},{name:"module:Core/widget/Widget",classDescription:'<p>Base class for other widgets. The Widget base class simply encapsulates an element, and may optionally contain some\nspecified <a href="#Core/widget/Widget#config-html">html</a>.</p>\n<p>Subclasses should at override the <a href="#Core/widget/Widget#function-template">template</a> member function to return an HTML string to create their own encapsulating element\nand internal structure.</p>',extends:["Core/Base"],mixes:["Core/mixin/Events","Core/localization/Localizable"],constructor:{name:"constructor"},filename:"Widget.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/widget",lineno:54,classType:"widget",configs:[{name:"element",access:"private",description:'<p>A <a href="#Core/helper/DomHelper#function-createElement-static">createElement</a> config object or HTML string from which to\ncreate the Widget\'s element.</p>',type:["Object","String"],scope:"inner",category:"DOM"},{name:"id",description:"<p>Widget id, if not specified one will be generated. Also used for lookups through WidgetHelper</p>",type:"String",scope:"inner",category:"DOM"},{name:"html",description:"<p>Html to display initially</p>",type:"String",scope:"inner",category:"DOM"},{name:"cls",description:"<p>Custom CSS class to add to element</p>",type:"String",scope:"inner",category:"CSS"},{name:"style",description:"<p>Custom style spec to add to element</p>",type:"String",scope:"inner",category:"CSS"},{name:"disabled",description:"<p>Disabled or enabled</p>",type:"Boolean",scope:"inner",defaultvalue:"false",category:"Misc"},{name:"adopt",description:"<p>Element (or element id) to adopt as this Widget's encapsulating element. The widget's\ncontent will be placed inside this element.</p>\n<p>If this widget has not been configured with an id, it will adopt the id of the element\nin order to preserve CSS rules which may apply to the id.</p>",type:["HTMLElement","String"],scope:"inner",category:"DOM"},{name:"appendTo",description:"<p>Element (or element id) to append this widgets element to</p>",type:["HTMLElement","String"],scope:"inner",category:"DOM"},{name:"insertBefore",description:'<p>Element (or element id) to insert this widget before. If provided, <a href="#Core/widget/Widget#config-appendTo">appendTo</a> config is ignored.</p>',type:["HTMLElement","String"],scope:"inner",category:"DOM"},{name:"insertFirst",description:'<p>Element (or element id) to append this widget element to, as a first child. If provided, <a href="#Core/widget/Widget#config-appendTo">appendTo</a> config is ignored.</p>',type:["HTMLElement","String"],scope:"inner",category:"DOM"},{name:"dataset",description:"<p>Object to apply to elements dataset (each key will be used as a data-attribute on the element)</p>",type:"Object",scope:"inner",category:"DOM"},{name:"tooltip",description:"<p>Tooltip for the widget, either as a string or as a Tooltip config object</p>",type:["String","Object"],scope:"inner",category:"Misc"},{name:"preventTooltipOnTouch",description:"<p>Prevent tooltip from being displayed on touch devices. Useful for example for buttons that display a\nmenu on click etc, since the tooltip would be displayed at the same time.</p>",type:"Boolean",scope:"inner",defaultvalue:"false",category:"Misc"},{name:"monitorResize",description:"<p>Specify true to have widget monitoring its own resize.</p>",type:"Boolean",scope:"inner",defaultvalue:"false",category:"Misc"},{name:"floating",description:"<p>Set to <code>true</code> to move the widget out of the document flow and position it\nabsolutely in browser viewport space.</p>",type:"Boolean",scope:"inner",category:"Float & align"},{name:"positioned",description:'<p>Set to <code>true</code> when a widget is rendered into another widget\'s  <a href="#Core/widget/Widget#property-contentElement">contentElement</a>, but must not\nparticipate in the standard layout of that widget, and must be positioned relatively to that\nwidget\'s <a href="#Core/widget/Widget#property-contentElement">contentElement</a>.</p>\n<p><a href="#Core/widget/Editor">Editor</a>s are positioned widgets.</p>',type:"Boolean",scope:"inner",category:"Float & align"},{name:"draggable",description:'<p>Only valid if this Widget is <a href="#Core/widget/Widget#config-floating">floating</a>\nSet to <code>true</code> to be able to drag a widget freely on the page. Or set to an object with a ´handleSelector´ property which controls when a drag\nshould start.</p>\n<pre class="prettyprint source lang-javascript"><code>\ndraggable : {\n    handleSelector : \':not(button)\'\n}\n\n</code></pre>',type:["Boolean","Object"],scope:"inner",defaultvalue:"false",category:"Float & align"},{name:"align",description:'<p>Only valid if this Widget is <a href="#Core/widget/Widget#config-floating">floating</a>\nThe edge alignment spec to use by default when <a href="#Core/widget/Widget#function-showBy">showBy</a> or <a href="#Core/widget/Widget#function-alignTo">alignTo</a> is used.\nFormat is <code>\'[trbl]n-[trbl]n\'</code> and it specifies our edge and the target edge plus optional\noffsets from 0 to 100 along the edges to align to. See the <a href="#Core/widget/Widget#function-showBy">showBy</a> function for more details.</p>',type:"String",scope:"inner",defaultvalue:"t-b",category:"Float & align"},{name:"centered",description:'<p>Only valid if this Widget is <a href="#Core/widget/Widget#config-floating">floating</a>\nSet to <code>true</code> to centre the Widget in browser viewport space.</p>',type:"Boolean",scope:"inner",category:"Float & align"},{name:"constrainTo",description:'<p>Only valid if this Widget is <a href="#Core/widget/Widget#config-floating">floating</a> and being shown through <a href="#Core/widget/Widget#function-showBy">showBy</a>.\nElement, Widget or Rectangle to which this Widget is constrained.</p>',type:["HTMLElement","Core.widget.Widget","Core.helper.util.Rectangle"],scope:"inner",defaultvalue:"document.body",category:"Float & align"},{name:"anchor",description:'<p>Only valid if this Widget is <a href="#Core/widget/Widget#config-floating">floating</a> and being shown through <a href="#Core/widget/Widget#function-showBy">showBy</a>.\n<code>true</code> to show a connector arrow pointing to the align target.</p>',type:"Boolean",scope:"inner",defaultvalue:"false",category:"Float & align"},{name:"scrollAction",description:"<p>Defines what to do if document is scrolled while Widget is visible (only relevant when floating is set to true).\nValid values: ´null´: do nothing, ´hide´: hide the widget or ´realign´: realign to the target if possible.</p>",type:"String",scope:"inner",category:"Float & align"},{name:"hideAnimation",description:"<p>Only valid if this Widget is <a href=\"#Core/widget/Widget#config-floating\">floating</a>. An object which defined which CSS style\nproperty should be animated upon hide, and how it should be animated eg:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>{\n   opacity: {\n       to : 0,\n       duration: '10s',\n       delay: '0s'\n   }\n}\n</code></pre>\n<p>Set to <code>'false'</code> to disable animation.</p>",type:["Boolean","Object"],scope:"inner",category:"Float & align"},{name:"showAnimation",description:"<p>Only valid if this Widget is <a href=\"#Core/widget/Widget#config-floating\">floating</a>. An object which defined which CSS style\nproperty should be animated upon show, and how it should be animated eg:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>{\n   opacity: {\n       to : 1,\n       duration: '10s',\n       delay: '0s'\n   }\n}\n</code></pre>\n<p>Set to <code>'false'</code> to disable animation.</p>",type:["Boolean","Object"],scope:"inner",category:"Float & align"},{name:"x",description:'<p>Only valid if this Widget is <a href="#Core/widget/Widget#config-floating">floating</a>. The x position for the widget.</p>',type:"Number",scope:"inner",category:"Float & align"},{name:"y",description:'<p>Only valid if this Widget is <a href="#Core/widget/Widget#config-floating">floating</a>. The y position for the widget.</p>',type:"Number",scope:"inner",category:"Float & align"},{name:"scrollable",description:"<p>Specifies whether (and optionally in which axes) a Widget may scroll. <code>true</code> means this widget\nmay scroll in both axes. May be an object containing boolean <code>overflowX</code> and <code>overflowY</code> properties which are applied\nto CSS style properties <code>overflowX</code> and <code>overflowY</code>. If they are boolean, they are translated\nto CSS overflow properties thus:</p>\n<p>*<code>true</code> -&gt; <code>'auto'</code>\n*<code>false</code> -&gt; <code>'hidden'</code></p>\n<p>After initialization, this property yields a <a href=\"#Core/helper/util/Scroller\">Core.helper.util.Scroller</a> which may be used\nto both set and read scroll information.</p>\n<p>A Widget uses its <code>get overflowElement</code> property to select which element is to be scrollable.\nBy default, in the base <code>Widget</code> class, this is the Widget's encapsulating element. Subclasses\nmay implement <code>get overflowElement</code> to scroll inner elements.</p>",type:["Boolean","Object","Core.helper.util.Scroller"],scope:"inner",defaultvalue:"false",category:"Scrolling"},{name:"scrollerClass",access:"internal",description:'<p>The class to instantiate to use as the <a href="#Core/widget/Widget#config-scrollable">scrollable</a>. Defaults to <a href="#Core/helper/util/Scroller">Core.helper.util.Scroller</a>.</p>',type:"Core.helper.util.Scroller",scope:"inner",category:"Scrolling"},{name:"defaultBindProperty",description:"<p>The name of the property to set when a single value is to be applied to this Widget. Such as when used\nin a grid WidgetColumn, this is the property to which the column's <code>field</code> is applied.</p>",type:"String",scope:"inner",defaultvalue:"'html'",category:"Misc"},{name:"defaultAction",access:"private",description:"<p>Event that should be considered the default action of the widget. When that event is triggered the\nwidget is also expected to trigger an <code>action</code> event. Purpose is to allow reacting to most widgets in\na coherent way.</p>",type:"String",scope:"inner",category:"Misc"},{name:"width",description:"<p>Widget's width, used to set element style.width. Either specify a valid width string or a number, which\nwill get 'px' appended. We recommend using CSS as the primary way to control width, but in some cases\nthis config is convenient.</p>",type:["String","Number"],scope:"inner",category:"Layout"},{name:"height",description:"<p>Widget's height, used to set element style.height. Either specify a valid height string or a number, which\nwill get 'px' appended. We recommend using CSS as the primary way to control height, but in some cases\nthis config is convenient.</p>",type:["String","Number"],scope:"inner",category:"Layout"},{name:"margin",description:"<p>Widget's margin. This may be configured as a single number or a <code>TRBL</code> format string.\nnumeric-only values are interpreted as pixels.</p>",type:["Number","String"],scope:"inner",category:"Layout"},{name:"flex",description:'<p>When this widget is a child of a <a href="#Core/widget/Container">Core.widget.Container</a>,\nit will by default be participating in a flexbox layout. This config\nallows you to set this widget\'s <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/flex">flex</a> style.\nThis may be configured as a single number or a <code>&lt;flex-grow&gt; &lt;flex-shrink&gt; &lt;flex-basis&gt;</code> format string.\nnumeric-only values are interpreted as the <code>flex-grow</code> value.</p>',type:["Number","String"],scope:"inner",category:"Layout"},{name:"alignSelf",description:'<p>When this widget is a child of a <a href="#Core/widget/Container">Core.widget.Container</a>,\nit will by default be participating in a flexbox layout. This config\nallows you to set this widget\'s <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/align-self">align-self</a> style.</p>',type:"String",scope:"inner",category:"Layout"},{name:"ripple",description:'<p>Configure as <code>true</code> to have the component display a translucent ripple when its\n<a href="#Core/widget/Widget#property-focusElement">focusElement</a>, or <a href="#Core/widget/Widget#property-element">element</a> is tapped <em>if the\ncurrent theme supports ripples</em>. Out of the box, only the Material theme supports ripples.</p>\n<p>This may also be a config object containing the following properties:</p>\n<ul>\n<li><code>delegate  </code> Optional. A CSS selector to filter which child elements trigger ripples. By default\nthe ripple is clipped to the triggering element.</li>\n<li><code>color     </code> Optional, default = <code>#000</code>. A CSS color name or specification.</li>\n<li><code>radius    </code> Optional, default is 100. The ending radius of the ripple.\nNote that it will be clipped by the target element by default.</li>\n<li><code>clip      </code> A string which describes how to clip the ripple if it is not to be clipped to the default\nelement. Either the property of the widget to use as the clipping element, or a selector to\nallow clipping to the closest matching ancestor to the target element.</li>\n</ul>\n<p>eg:</p>\n<pre class="prettyprint source"><code>   columns  : [{}...],\n   ripple   : {\n       color : \'red\',\n       clip  : \'.b-grid-row\'\n   },\n   ...\n</code></pre>',type:["Boolean","Object"],scope:"inner",category:"Misc"},{name:"title",description:"<p>A title to display for the widget. Only in effect when inside a container that uses it (such as TabPanel)</p>",type:"String",scope:"inner"},{name:"ref",description:'<p>An identifier by which this widget will be registered in the <a href="#Core/widget/Container#property-widgetMap">widgetMap</a>\nof all ancestor containers.</p>\n<p>If omitted, this widget will be registered using its <a href="#Core/widget/Widget#config-id">id</a>. In most cases <code>ref</code> is\npreferable over <code>id</code> since <code>id</code> is required to be globally unique while <code>ref</code> is not.</p>\n<p>The <code>ref</code> value is also added to the elements dataset, to allow targeting it using CSS etc.</p>',type:"String",scope:"inner"},{name:"hidden",description:"<p>Configure with true to make widget initially hidden</p>",type:"Boolean",scope:"inner",defaultvalue:"false"}],properties:[{name:"hasGeneratedId",access:"private",description:"<p>true if no id was set, will use generated id instead (widget1, ...). Toggle automatically on creation</p>",type:{names:["Boolean"]},scope:"inner",defaultvalue:"false",category:"Misc"},{name:"element",description:"<p>Get this widget's encapsulating HTMLElement, which is created along with the widget but added to DOM at render time</p>",scope:"instance",readonly:true,category:"DOM",properties:[{type:{names:["HTMLElement"]}}]},{name:"contentElement",description:'<p>The child element into which content should be placed. This means where <a href="#Core/widget/Widget#config-html">html</a> should be put,\nor, for <a href="#Core/widget/Container">Container</a>s, where child items should be rendered.</p>',scope:"instance",category:"DOM",properties:[{type:{names:["HTMLElement"]}}]},{name:"id",description:"<p>Get/set widgets id</p>",scope:"instance",category:"DOM",properties:[{type:{names:["String"]}}]},{name:"style",description:"<p>Get/set widgets elements style. The setter accepts a cssText string or a style config object, the getter always\nreturns a CSSStyleDeclaration</p>",scope:"instance",category:"DOM",properties:[{type:{names:["String","Object","CSSStyleDeclaration"]}}]},{name:"dataset",description:"<p>Get widgets elements dataset or assign to it</p>",scope:"instance",category:"DOM",properties:[{type:{names:["Object"]}}]},{name:"scrollable",description:'<p>Accessor to the <a href="#Core/helper/util/Scroller">Core.helper.util.Scroller</a> which can be used\nto both set and read scroll information.</p>',scope:"instance",properties:[{type:{names:["Core.helper.util.Scroller"]},name:"scrollable"}]},{name:"html",description:"<p>Get/set HTML to display. When specifying HTML, this widget's element will also have <code>b-html</code> added to its\nclassList, to allow targeted styling.</p>",scope:"instance",category:"DOM",properties:[{type:{names:["String"]}}]},{name:"content",description:'<p>Set HTML content safely, without disturbing sibling elements which may have been\nadded to the <a href="#Core/widget/Widget#property-contentElement">contentElement</a> by plugins and features.\nWhen specifying html, this widget\'s element will also have <code>b-html</code> added to its\nclassList, to allow targeted styling.</p>',scope:"instance",category:"DOM",properties:[{type:{names:["String"]}}]},{name:"anchorSize",description:"<p>Returns an <code>[x, y]</code> array containing the width and height of the anchor arrow used when\naligning this Widget to another Widget or element.</p>\n<p>The height is the height of the arrow when pointing upwards, the width is the width\nof the baseline.</p>",scope:"instance",category:"Float & align",properties:[{type:{names:["Array.<Number>"]}}]},{name:"x",description:'<p>Moves this Widget to the desired x position. *Only valid for <a href="#Core/widget/Widget#config-floating">floating</a> Widgets.</p>',scope:"instance",category:"Float & align",parameters:[{name:"x",type:"Number"}]},{name:"y",description:'<p>Moves this Widget to the desired y position. *Only valid for <a href="#Core/widget/Widget#config-floating">floating</a> Widgets.</p>',scope:"instance",category:"Float & align",parameters:[{name:"y",type:"Number"}]},{name:"width",description:"<p>Get elements offsetWidth or sets its style.width, or specified width if element not created yet.</p>",scope:"instance",category:"Layout",properties:[{type:{names:["Number","String"]}}]},{name:"maxWidth",description:"<p>Get/set elements maxWidth. Getter returns max-width from elements style, which is always a string. Setter accepts\neither a String or a Number (which will have 'px' appended). Note that like <a href=\"#Core/widget/Widget#config-width\">width</a>,\n<em>reading</em> the value will return the numeric value in pixels.</p>",scope:"instance",category:"Layout",properties:[{type:{names:["String","Number"]}}]},{name:"minWidth",description:"<p>Get/set elements minWidth. Getter returns min-width from elements style, which is always a string. Setter accepts\neither a String or a Number (which will have 'px' appended). Note that like <a href=\"#Core/widget/Widget#config-width\">width</a>,\n<em>reading</em> the value will return the numeric value in pixels.</p>",scope:"instance",category:"Layout",properties:[{type:{names:["String","Number"]}}]},{name:"flex",description:"<p>Get element's flex property. This may be configured as a single number or a <code>&lt;flex-grow&gt; &lt;flex-shrink&gt; &lt;flex-basis&gt;</code> format string.\nnumeric-only values are interpreted as the <code>flex-grow</code> value.</p>",scope:"instance",category:"Layout",properties:[{type:{names:["Number","String"]}}]},{name:"alignSelf",description:"<p>Get/set this widget's <code>align-self</code> flexbox setting. This may be set to modify\nhow this widget is aligned within the cross axis of a flexbox layout container.</p>",scope:"instance",category:"Layout",properties:[{type:{names:["String"]}}]},{name:"margin",description:"<p>Get element's margin property. This may be configured as a single number or a <code>TRBL</code> format string.\nnumeric-only values are interpreted as pixels.</p>",scope:"instance",category:"Layout",properties:[{type:{names:["Number","String"]}}]},{name:"height",description:"<p>Get element's offsetHeight or sets its style.height, or specified height if element no created yet.</p>",scope:"instance",category:"Layout",properties:[{type:{names:["Number","String"]}}]},{name:"maxHeight",description:"<p>Get/set element's maxHeight. Getter returns max-height from elements style, which is always a string. Setter\naccepts either a String or a Number (which will have 'px' appended). Note that like <a href=\"#Core/widget/Widget#config-height\">height</a>,\n<em>reading</em> the value will return the numeric value in pixels.</p>",scope:"instance",category:"Layout",properties:[{type:{names:["String","Number"]}}]},{name:"minHeight",description:"<p>Get/set element's minHeight. Getter returns min-height from elements style, which is always a string. Setter\naccepts either a String or a Number (which will have 'px' appended). Note that like <a href=\"#Core/widget/Widget#config-height\">height</a>,\n<em>reading</em> the value will return the numeric value in pixels.</p>",scope:"instance",category:"Layout",properties:[{type:{names:["String","Number"]}}]},{name:"disabled",description:"<p>Get/set element's disabled state</p>",scope:"instance",category:"Misc",properties:[{type:{names:["Boolean"]}}]},{name:"tooltip",description:"<p>Get/set a tooltip on the widget. Accepts a string or tooltip config (specify true (or 'true') to use placeholder\nas tooltip). When using a string it will configure the tooltip with <code>textContent: true</code> which enforces a default\nmax width.</p>\n<p>By default, this uses a singleton Tooltip instance which may be accessed from the\n<code><a href=\"#Core/widget/Widget\">Widget</a></code> class under the name <code>Widget.tooltip</code>.\nThis is configured according to the config object on pointer over.</p>\n<p>To request a separate instance be created just for this widget, add <code>newInstance : true</code>\nto the configuration.</p>",scope:"instance",category:"Misc",properties:[{type:{names:["String","Object"]}}]},{name:"isVisible",description:"<p>Determines visibility by checking if the Widget is hidden, or any ancestor is hidden and that it has an\nelement which is visible in the DOM</p>",scope:"instance",readonly:true,properties:[{type:{names:["Boolean"]}}]},{name:"focusElement",description:"<p>Get this widget's primary focus holding element if this widget is itself focusable, or contains focusable widgets.</p>",scope:"instance",readonly:true,category:"DOM",properties:[{type:{names:["HTMLElement"]}}]},{name:"visible",description:'<p>Show or hide widget. Deprecated in 2.2.3, please use <a href="#Core/widget/Widget#property-hidden">hidden</a> instead</p>',type:{names:["Boolean"]},scope:"instance",category:"Visibility",deprecated:true},{name:"hidden",description:"<p>Hide or show widget</p>",type:{names:["Boolean"]},scope:"instance",category:"Visibility"},{name:"assignedId",access:"private",description:"<p>Get id assigned by user (not generated id)</p>",scope:"instance",returns:[{type:{names:["String"]}}],readonly:true,category:"Misc"},{name:"owner",description:"<p>Get the owning Widget of this Widget. If this Widget is directly contained, then the containing\nWidget is returned. If this Widget is floating, the configured <code>owner</code> property is returned.\nIf there is a <code>forElement</code>, that element's encapsulating Widget is returned.</p>",scope:"instance",category:"Misc",properties:[{type:{names:["Core.widget.Widget"]}}]},{name:"previousSibling",description:"<p>Get this Widget's previous sibling in the parent {@@link Core.widget.Container Container}, or, if not\nin a Container, the previous sibling widget in the same <em>parentElement</em>.</p>",scope:"instance",readonly:true,category:"Misc",properties:[{type:{names:["Core.widget.Widget"]}}]},{name:"nextSibling",description:"<p>Get this Widget's next sibling in the parent {@@link Core.widget.Container Container}, or, if not\nin a Container, the next sibling widget in the same <em>parentElement</em>.</p>",scope:"instance",readonly:true,category:"Misc",properties:[{type:{names:["Core.widget.Widget"]}}]},{name:"widgetClassList",access:"internal",description:"<p>Used by the Widget class internally to create CSS classes based on this Widget's\ninheritance chain to allow styling from each level to apply.</p>\n<p>For example Combo would yield <code>&quot;[&quot;b-widget&quot;, &quot;b-field&quot;, &quot;b-textfield&quot;, &quot;b-pickerfield&quot;, &quot;b-combo&quot;]&quot;</code></p>\n<p>May be implemented in subclasses to add or remove classes from the super.widgetClassList</p>",scope:"instance",returns:[{type:{names:["Array.<String>"]},description:"<p>The css class list named using the class name.</p>"}],category:"DOM"}],functions:[{name:"finalizeInit",access:"internal",description:"<p>Called by the Base constructor after all configs have been applied.</p>",scope:"instance",category:"Lifecycle"},{name:"template",access:"internal",description:'<p>A function which, when passed an instance of this Widget, produces a valid HTML string which is compiled\nto create the encapsulating element for this Widget, and its own internal DOM structure.</p>\n<p>Note that this just creates the DOM structure that <em>this</em> Widget owns. If it contains child widgets\n(Such as for example a grid), this is not included. The template creates own structure.</p>\n<p>Certain elements within the generated element can be identified as special elements with a <code>reference=&quot;name&quot;</code>\nproperty. These will be extracted from the element upon creation and injected as the named property into\nthe Widget. For example, a <a href="#Core/widget/TextField">Core.widget.TextField</a> will have an <code>input</code> property which is its\n<code>&lt;input&gt;</code> element.</p>',parameters:[{name:"me",type:"Core.widget.Widget",description:"<p>The widget for which to produce the initial HTML structure.</p>"}],scope:"instance"},{name:"alignTo",description:'<p>If this Widget is <a href="#Core/widget/Widget#config-floating">floating</a> or <a href="#Core/widget/Widget#config-positioned">positioned</a>, and visible,\naligns the widget according to the passed specification.\nFor details, see the <a href="#Core/widget/Widget#function-showBy">showBy</a> method.</p>',parameters:[{name:"spec",type:"Object",description:'<p>Alignment options. May be an object as processed by the <a href="#Core/widget/Widget#function-showBy">showBy</a> method,\nor an <code>HTMLElement</code> to align to using this Widget\'s <a href="#Core/widget/Widget#config-align">align</a> configuration.</p>'}],scope:"instance",category:"Float & align"},{name:"toFront",description:'<p>Only valid for <a href="#Core/widget/Widget#config-floating">floating</a> Widgets. Moves to the front of the visual stacking order.</p>',scope:"instance",category:"Float & align"},{name:"setXY",description:'<p>Moves this Widget to the x,y position. Both arguments can be omitted to just set one value.</p>\n<p><em>For <a href="#Core/widget/Widget#config-floating">floating</a> Widgets, this is a position in the browser viewport.</em>\n<em>For <a href="#Core/widget/Widget#config-positioned">positioned</a> Widgets, this is a position in the element it was rendered into.</em></p>',parameters:[{name:"x",type:"Number",optional:true},{name:"y",type:"Number",optional:true}],scope:"instance",category:"Float & align"},{name:"onDisabled",access:"private",description:"<p>Called when disabled state is changed.\nOverride in subclass that needs special handling when being disabled.</p>",parameters:[{name:"disabled",type:"Boolean",description:"<p>current state</p>"}],scope:"instance"},{name:"disable",description:"<p>Disable the widget</p>",scope:"instance"},{name:"enable",description:"<p>Enable the widget</p>",scope:"instance"},{name:"focus",description:"<p>Focuses this widget if it has a focusable element.</p>",scope:"instance"},{name:"show",description:"<p>Shows this widget</p>",scope:"instance",category:"Visibility",returns:{type:"Promise",description:"<p>A promise which is resolved when the widget is shown</p>"},async:true},{name:"showBy",description:'<p>Show aligned to another target element or <a href="#Core/widget/Widget">Core.widget.Widget</a> or <a href="#Core/helper/util/Rectangle">Core.helper.util.Rectangle</a></p>',parameters:[{name:"spec",type:["Object","HTMLElement"],description:'<p>Alignment specification, or the element to align to using the configured\n<a href="#Core/widget/Widget#config-align">align</a>.</p>'},{name:"spec.target",type:["HTMLElement","Core.widget.Widget","Core.helper.util.Rectangle"],description:"<p>The Widget or Element or Rectangle to align to.</p>",isSubParam:true},{name:"spec.anchor",type:"Boolean",description:"<p>True to show a pointer arrow connecting to the target. Defaults to false.</p>",optional:true,isSubParam:true},{name:"spec.overlap",type:"Boolean",description:"<p>True to allow this to overlap the target.</p>",optional:true,isSubParam:true},{name:"spec.align",type:"String",description:'<p>The alignment specification string, <code>[trbl]n-[trbl]n</code>. Defaults to this instance\'s\n<a href="#Core/widget/Widget#config-align">align</a> setting.</p>',isSubParam:true},{name:"spec.constrainTo",type:["HTMLElement","Core.widget.Widget","Core.helper.util.Rectangle"],description:"<p>The Widget or Element or Rectangle to constrain to.\nIf the requested alignment cannot be constrained (it will first shrink the resulting Rectangle according\nto the <code>minWidth</code> and <code>minHeight</code> properties of this spec, or the Widget), then it will try aligning at other edges\n(honouring the <code>axisLock</code> option), and pick the fallback alignment which results in the shortest translation.</p>",optional:true,isSubParam:true},{name:"spec.minHeight",type:"Number",description:"<p>The minimum height this widget may be compressed to when constraining within the <code>constrainTo</code> option.</p>",optional:true,isSubParam:true},{name:"spec.minWidth",type:"Number",description:"<p>The minimum width this widget may be compressed to when constraining within the <code>constrainTo</code> option.</p>",optional:true,isSubParam:true},{name:"spec.axisLock",type:"Boolean",description:"<p>Specify as <code>true</code> to fall back to aligning against the opposite\nedge if the requested alignment cannot be constrained into the <code>constrainTo</code> option. Specify as\n<code>'flexible'</code> to allow continuation to try the other edges if a solution cannot be found on the origially requested axis.</p>",optional:true,isSubParam:true},{name:"spec.matchSize",type:"Boolean",description:"<p>*Only honoured when <code>axisLock</code> is enabled and alignment succeeds on the requested axis.\nSpecify as <code>true</code> to have this widget's size along the aligned edge match the size of the target's edge.\nFor example, a combobox's dropdown should match the width of the combobox.</p>",optional:true,isSubParam:true},{name:"spec.offset",type:["Number","Array.<Number>"],description:"<p>The offset to create an extra margin round the target\nto offset the aligned widget further from the target. May be configured as -ve to move the aligned widget\ntowards the target - for example producing the effect of the anchor pointer piercing the target.</p>",optional:true,isSubParam:true}],scope:"instance",category:"Float & align",returns:{type:"Promise",description:"<p>A promise which is resolved when the widget is shown</p>"},async:true},{name:"showByPoint",description:"<p>Show this widget anchored to a coordinate</p>",parameters:[{name:"x",type:["Number","Array.<Number>"],description:"<p>The x position (or an array with [x,y] values) to show by</p>"},{name:"y",type:"Number",description:"<p>The y position to show by</p>",optional:true},{name:"options",type:"Object",description:'<p>See <a href="#Core/widget/Widget#function-showBy">showBy</a> for reference</p>',optional:true}],scope:"instance",category:"Float & align",returns:{type:"Promise",description:"<p>A promise which is resolved when the widget is shown</p>"},async:true},{name:"hide",description:"<p>Hide widget</p>",parameters:[{name:"animate",type:"Boolean",description:"<p>Pass <code>true</code> (default) to animate the hide action</p>",default:true}],scope:"instance",category:"Visibility",returns:{type:"Promise",description:"<p>A promise which is resolved when the widget has been hidden</p>"},async:true},{name:"up",description:"<p>Looks up the <a href=\"#Core/widget/Widget#property-owner\">owner</a> axis to find an ancestor which matches the passed selector.\nThe selector may be a widget type identifier, such as <code>'grid'</code>, or a function which will return\n<code>true</code> when passed the desired ancestore.</p>",parameters:[{name:"selector",type:["String","function"],description:"<p>A Type identifier or selection function.</p>"},{name:"deep",type:"Boolean",description:"<p>When using a string identifier, pass <code>true</code> if all superclasses should be included, ie if a <code>Grid</code> should match <code>'widget'</code>.</p>",optional:true},{name:"limit",type:["Number","String","Core.widget.Widget"],description:"<p>how many steps to step up before aborting the search, or a selector to stop at or the topmost ancestor to consider.</p>",optional:true}],scope:"instance"},{name:"owns",description:"<p>Returns <code>true</code> if this Widget owns the passed Element, Event or Widget. This is based on the\nwidget hierarchy, not DOM containment. So an element in a <code>Combo</code>'s dropdown list\nwill be owned by the <code>Combo</code>.</p>",parameters:[{name:"target",type:["HTMLElement","Event","Core.widget.Widget"],description:"<p>The element event or Widget to test for being\nwithin the ownership tree of this Widget.</p>"}],scope:"instance"},{name:"revertFocus",description:"<p>If this Widget contains focus, focus is reverted to the source from which it entered if possible,\nor to a close relative if not.</p>",parameters:[{name:"force",type:"Boolean",description:"<p>Pass as <code>true</code> to move focus to the previously focused item, or the\nclosest possible relatve even if this widget does not contain focus.</p>"}],scope:"instance"},{name:"getFocusRevertTarget",access:"internal",description:"<p>This method finds a close sibling (or parent, or parent's sibling etc recursively) to which focus\ncan be directed in the case of revertFocus not having a focusable element from our focusInEvent.</p>\n<p>This can hapen when the &quot;from&quot; component is destroyed or hidden. We should endeavour to prevent\nfocus escaping to <code>document.body</code> for accessibility and ease of use, and keep focus close.</p>",scope:"instance"},{name:"fromCache",access:"internal",description:"<p>Gets dom elements in the view. Caches the results for faster future calls.</p>",parameters:[{name:"query",type:"String",description:"<p>CSS selector</p>"},{name:"children",type:"Boolean",description:"<p>true to fetch multiple elements</p>",default:false},{name:"element",type:"HTMLElement",description:"<p>Element to use as root for the query, defaults to the views outermost element</p>"}],scope:"instance",category:"DOM",returns:{type:["HTMLElement","Array.<HTMLElement>","null"],description:"<p>A single element or an array of elements (if parameter children is set to true)</p>"}},{name:"emptyCache",access:"internal",description:"<p>Clear caches, forces all calls to fromCache to requery dom. Called on render/rerender.</p>",scope:"instance",category:"DOM"},{name:"mask",description:"<p>Mask the widget, showing the specified message</p>",parameters:[{name:"msg",type:["String","Object"],description:'<p>Mask message (or a <a href="#Core/widget/Mask">Core.widget.Mask</a> config object</p>'}],scope:"instance",returns:{type:"Core.widget.Mask"}},{name:"unmask",description:"<p>Unmask the widget</p>",scope:"instance"},{name:"parseTRBL",description:"<p>Returns a <code>TRBL</code> array of values parse from the passed specification. This can be used to parse<code>a value list for</code>margin<code>or</code>padding<code>or</code>border-width<code>etc - any CSS value which takes a</code>TRBL` value.</p>",parameters:[{name:"values",type:["Number","String","Array.<String>"],description:"<p>The <code>TRBL</code> value</p>"},{name:"units",type:"String",description:"<p>The units to add to values which are specified as numeric.</p>",default:"px",optional:true}],scope:"instance"}],events:[{name:"beforeShow",description:"<p>Triggered before a widget is shown. Return <code>false</code> to prevent the action.</p>",parameters:[{name:"source",type:"Core.widget.Widget",description:"<p>The widget being shown.</p>"}],preventable:true},{name:"paint",description:'<p>Triggered when a widget which had been in a non-visible state for any reason\nachieves visibility.</p>\n<p>A non-visible state <em>might</em> mean the widget is hidden and has just been shown.</p>\n<p>But this event will also fire on widgets when a non-visible (unrendered, or hidden)\nancestor achieves visibility, for example a <a href="#Core/widget/Popup">Popup</a> being shown.</p>',parameters:[{name:"source",type:"Core.widget.Widget",description:"<p>The widget being painted.</p>"},{name:"firstPaint",type:"Boolean",description:"<p><code>true</code> if this is the first paint.</p>"}]},{name:"focusin",description:"<p>Fired when focus enters this Widget.</p>",parameters:[{name:"source",type:"Core.widget.Widget",description:"<p>This Widget</p>"},{name:"fromElement",type:"HTMLElement",description:"<p>The element which lost focus.</p>"},{name:"toElement",type:"HTMLElement",description:"<p>The element which gained focus.</p>"},{name:"fromWidget",type:"Core.widget.Widget",description:"<p>The widget which lost focus.</p>"},{name:"toWidget",type:"Core.widget.Widget",description:"<p>The widget which gained focus.</p>"},{name:"backwards",type:"Boolean",description:"<p><code>true</code> if the <code>toElement</code> is before the <code>fromElement</code> in document order.</p>"}]},{name:"focusout",description:"<p>Fired when focus exits this Widget's ownership tree. This is different from a <code>blur</code> event.\nfocus moving from within this Widget's ownership tree, even if there are floating widgets\nwill not trigger this event. This is when focus exits this widget completely.</p>",parameters:[{name:"source",type:"Core.widget.Widget",description:"<p>This Widget</p>"},{name:"fromElement",type:"HTMLElement",description:"<p>The element which lost focus.</p>"},{name:"toElement",type:"HTMLElement",description:"<p>The element which gained focus.</p>"},{name:"fromWidget",type:"Core.widget.Widget",description:"<p>The widget which lost focus.</p>"},{name:"toWidget",type:"Core.widget.Widget",description:"<p>The widget which gained focus.</p>"},{name:"backwards",type:"Boolean",description:"<p><code>true</code> if the <code>toElement</code> is before the <code>fromElement</code> in document order.</p>"}]},{name:"resize",description:'<p>Fired when the encapsulating element of a Widget resizes <em>only when <a href="#Core/widget/Widget#config-monitorResize">monitorResize</a> is <code>true</code></em>.</p>',parameters:[{name:"source",type:"Core.widget.Widget",description:"<p>This Widget</p>"},{name:"width",type:"Number",description:"<p>The new width</p>"},{name:"height",type:"Number",description:"<p>The new height</p>"},{name:"oldWidth",type:"Number",description:"<p>The old width</p>"},{name:"oldHeight",type:"Number",description:"<p>The old height</p>"}]}]},{name:"module:Core/widget/layout/Card",classDescription:'<p>A helper class for containers which must manage multiple child widgets, of which only one may be visible at once such\nas a <a href="#Core/widget/TabPanel">Core.widget.TabPanel</a>. This class offers an active widget switching API, and optional slide-in,\nslide-out animations from child to child.</p>',constructor:{name:"constructor"},filename:"Card.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/widget/layout",lineno:22,configs:[{name:"animateCardChange",description:"<p>Specifies whether to slide tabs in and out of visibility.</p>",type:"Boolean",scope:"inner",defaultvalue:true}],functions:[{name:"setActiveItem",description:"<p>Get/set active item, using index or the Widget to activate</p>",parameters:[{name:"activeItem",type:["Core.widget.Widget","Number"]}],scope:"instance",returns:{type:"Object",description:"<p>An object describing the card change containing the following properties:</p>\n<ul>\n<li><code>prevActiveIndex</code> The previously active index.</li>\n<li><code>prevActiveItem </code> The previously active child item.</li>\n<li><code>activeIndex    </code> The newly active index.</li>\n<li><code>activeItem     </code> The newly active child item.</li>\n<li><code>promise        </code> A promise which completes when the slide-in animation finishes and the child item contains\nfocus if it is focusable.</li>\n</ul>"}}],properties:[{name:"activeIndex",description:'<p>The active child index. Setting must be done through <a href="#Core/widget/layout/Card#function-setActiveItem">setActiveItem</a></p>',scope:"instance",readonly:true,properties:[{type:{names:["Number"]}}]},{name:"activeItem",description:'<p>The active child item. Setting must be done through <a href="#Core/widget/layout/Card#function-setActiveItem">setActiveItem</a></p>',scope:"instance",readonly:true,properties:[{type:{names:["Core.widget.Widget"]}}]}]},{name:"module:Core/widget/layout/Fit",classDescription:'<p>A helper class for containers which must manage a single child widget which must fit the container\'s\n<a href="#Core/widget/Widget#property-contentElement">contentElement</a>.</p>',constructor:{name:"constructor"},filename:"Fit.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/widget/layout",lineno:11},{name:"module:Core/widget/layout/Layout",classDescription:'<p>A helper class used by <a href="#Core/widget/Container">Container</a>s which renders child widgets to their\n<a href="#Core/widget/Widget#property-contentElement">contentElement</a>. It also adds the Container\'s\n<a href="#Core/widget/Container#config-itemCls">itemCls</a> class to child items.</p>\n<p>Subclasses may modify the way child widgets are rendered, or may offer APIs for manipulating the child widgets.</p>\n<p>The <a href="#Core/widget/layout/Card">Card</a> layout class offers slide-in, slide-out animation of multiple\nchild widgets. <a href="#Core/widget/TabPanel">Core.widget.TabPanel</a> uses Card layout.</p>',constructor:{name:"constructor"},filename:"Layout.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/widget/layout",lineno:18,properties:[{name:"containerCls",description:'<p>The CSS class which should be added to the owning <a href="#Core/widget/Container">Container</a>\'s\n<a href="#Core/widget/Widget#property-contentElement">contentElement</a>.</p>',scope:"inner"},{name:"itemCls",description:"<p>The CSS class which should be added to the encapsulating element of child items.</p>",scope:"inner"}]},{name:"module:Core/widget/mixin/Badge",description:"<p>Mixin that allows a widget to display a badge (mostly done as css)</p>",mixin:true,examples:["// show badge\nbutton.badge = 5;\n\n// hide badge\nbutton.badge = null;"],constructor:{name:"constructor"},filename:"Badge.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/widget/mixin",lineno:21,externalExamples:["widget/Badge.js"],configs:[{name:"badge",description:"<p>Initial text to show in badge</p>",type:"String",scope:"inner"}],properties:[{name:"badge",description:"<p>Get/sets and display badge, set to null or empty string to hide</p>",scope:"instance",properties:[{type:{names:["String"]}}]}]},{name:"module:Core/widget/mixin/LocalizableComboItems",description:"<p>A mixin that regenerates a combobox items on locale change.</p>",mixin:true,access:"private",constructor:{name:"constructor"},filename:"LocalizableComboItems.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Core/widget/mixin",lineno:12},{name:"module:Gantt/column/AddNewColumn",classDescription:"<p>This column allows user to dynamically add columns to the Gantt chart by clicking the column header\nand picking columns from a combobox.</p>\n<h2>Adding a custom column to the combobox</h2>\n<p>In order to appear in the column combobox list a column class have to fulfill these conditions:</p>\n<ol>\n<li>the class should have a static property <code>type</code> with unique string value that will identify the column.</li>\n<li>the class should be registered with the call to <a href=\"#Grid/data/ColumnStore#function-registerColumnType-static\">ColumnStore.registerColumnType</a>.</li>\n<li>the class should have a static property <code>isGanttColumn</code> with truthy value.</li>\n<li>the class should have a static <code>text</code> property with column name.</li>\n</ol>\n<p>For example:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>import ColumnStore from 'gantt-distr/lib/Grid/data/ColumnStore.js';\nimport Column from 'gantt-distr/lib/Grid/column/Column.js';\n\n// New column class to display task priority\nexport default class TaskPriorityColumn extends Column {\n    // unique alias of the column\n    static get type() {\n        return 'priority';\n    }\n\n    // indicates that the column should be present in &quot;Add New...&quot; column\n    static get isGanttColumn() {\n        return true;\n    }\n\n    static get defaults() {\n        return {\n            // the column is mapped to &quot;priority&quot; field of the Task model\n            field : 'priority',\n            // the column title\n            text  : 'Priority'\n        };\n    }\n}\n\n// register new column\nColumnStore.registerColumnType(TaskPriorityColumn);\n</code></pre>",extends:["Grid/column/Column"],constructor:{name:"constructor"},filename:"AddNewColumn.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/column",lineno:58,classType:"addnew"},{name:"module:Gantt/column/CalendarColumn",classDescription:'<p>A column that displays (and allows user to update) the current <a href="#Gantt/model/CalendarModel">calendar</a> of the task.</p>\n<p>Default editor is a <a href="#Gantt/widget/CalendarPicker">CalendarPicker</a>.</p>',extends:["Grid/column/Column"],constructor:{name:"constructor"},filename:"CalendarColumn.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/column",lineno:17,classType:"calendar"},{name:"module:Gantt/column/ConstraintDateColumn",classDescription:'<p>A column showing the <a href="#Gantt/model/TaskModel#field-constraintDate">date</a> of the constraint, applied to the task.\nThe type of the constraint can be displayed with the <a href="#Gantt/column/ConstraintTypeColumn">ConstraintTypeColumn</a>.</p>\n<p>Default editor is a <a href="#Core/widget/DateField">DateField</a>.</p>\n<p>If <a href="#Gantt/column/ConstraintDateColumn#config-format">format</a> is omitted, Gantt\'s <a href="#Scheduler/view/mixin/TimelineViewPresets#config-displayDateFormat">displayDateFormat</a> will be used as a default value and\nthe format will be dynamically updated while zooming according to the <a href="#Scheduler/preset/ViewPreset#field-displayDateFormat">displayDateFormat</a> value specified for the ViewPreset being selected.</p>',extends:["Gantt/column/GanttDateColumn"],constructor:{name:"constructor"},filename:"ConstraintDateColumn.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/column",lineno:20,classType:"constraintdate"},{name:"module:Gantt/column/ConstraintTypeColumn",classDescription:'<p><a href="#Gantt/model/TaskModel#field-constraintType">Constraint type</a> column.</p>\n<p>Default editor is a <a href="#SchedulerPro/widget/ConstraintTypePicker">ConstraintTypePicker</a>.</p>\n<p>The constraint can be one of:</p>\n<ul>\n<li>Must start on [date]</li>\n<li>Must finish on [date]</li>\n<li>Start no earlier than [date]</li>\n<li>Start no later than [date]</li>\n<li>Finish no earlier than [date]</li>\n<li>Finish no later than [date]</li>\n</ul>\n<p>The date of the constraint can be specified with the <a href="#Gantt/column/ConstraintDateColumn">ConstraintDateColumn</a></p>',extends:["Grid/column/Column"],constructor:{name:"constructor"},filename:"ConstraintTypeColumn.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/column",lineno:29,classType:"constrainttype"},{name:"module:Gantt/column/DeadlineDateColumn",classDescription:'<p>A column showing the <a href="#Gantt/model/TaskModel#field-deadlineDate">deadlineDate</a> field.</p>\n<p>Default editor is a <a href="#Core/widget/DateField">DateField</a>.</p>\n<p>If <a href="#Gantt/column/DeadlineDateColumn#config-format">format</a> is omitted, Gantt\'s <a href="#Scheduler/view/mixin/TimelineViewPresets#config-displayDateFormat">displayDateFormat</a>\nwill be used as a default value and the format will be dynamically updated while zooming according to the\n<a href="#Scheduler/preset/ViewPreset#field-displayDateFormat">displayDateFormat</a> value specified for the ViewPreset being selected.</p>',extends:["Gantt/column/GanttDateColumn"],constructor:{name:"constructor"},filename:"DeadlineDateColumn.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/column",lineno:20,classType:"deadlinedate"},{name:"module:Gantt/column/DependencyColumn",classDescription:'<p>A column which displays, in textual form, the dependencies which either link to the\ncontextual task from other, preceding tasks, or dependencies which link the\ncontextual task to successor tasks.</p>\n<p>Default editor is a <a href="#Gantt/widget/DependencyField">DependencyField</a>.</p>\n<p>The <a href="#Grid/column/Column#config-field">field</a> MUST be either <code>predecessors</code> or <code>successors</code> in order\nfor this column to know what kind of dependency it is showing.</p>',extends:["Grid/column/Column"],constructor:{name:"constructor"},filename:"DependencyColumn.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/column",lineno:50,typings:"Scheduler/column/DependencyColumn -> Scheduler/column/SchedulerDependencyColumn",classType:"dependency",configs:[{name:"delimiter",description:"<p>Delimiter used for displayed value and editor</p>",type:"String",scope:"inner"}]},{name:"module:Gantt/column/DurationColumn",classDescription:'<p>A column showing the task <a href="#Scheduler/model/TimeSpan#property-fullDuration">duration</a>.</p>\n<p>Default editor is a <a href="#Core/widget/DurationField">DurationField</a>. It understands the time units,\nso you can enter &quot;4d&quot; indicating 4 days duration, or &quot;4h&quot; indicating 4 hours, etc.</p>',extends:["SchedulerPro/column/DurationColumn"],constructor:{name:"constructor"},filename:"DurationColumn.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/column",lineno:17,typings:"SchedulerPro/column/DurationColumn -> SchedulerPro/column/SchedulerDurationColumn"},{name:"module:Gantt/column/EarlyEndDateColumn",classDescription:'<p>A column that displays the task\'s <a href="#Gantt/model/TaskModel#field-earlyEndDate">early end date</a>.</p>\n<p>Default editor is a <a href="#Core/widget/DateField">DateField</a>.</p>\n<p>If <a href="#Gantt/column/EarlyEndDateColumn#config-format">format</a> is omitted, Gantt\'s <a href="#Scheduler/view/mixin/TimelineViewPresets#config-displayDateFormat">displayDateFormat</a> will be used as a default value and\nthe format will be dynamically updated while zooming according to the <a href="#Scheduler/preset/ViewPreset#field-displayDateFormat">displayDateFormat</a> value specified for the ViewPreset being selected.</p>',extends:["Gantt/column/GanttDateColumn"],constructor:{name:"constructor"},filename:"EarlyEndDateColumn.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/column",lineno:19,classType:"earlyenddate"},{name:"module:Gantt/column/EarlyStartDateColumn",classDescription:'<p>A column that displays the task\'s <a href="#Gantt/model/TaskModel#field-earlyStartDate">early start date</a>.</p>\n<p>Default editor is a <a href="#Core/widget/DateField">DateField</a>.</p>\n<p>If <a href="#Gantt/column/EarlyStartDateColumn#config-format">format</a> is omitted, Gantt\'s <a href="#Scheduler/view/mixin/TimelineViewPresets#config-displayDateFormat">displayDateFormat</a> will be used as a default value and\nthe format will be dynamically updated while zooming according to the <a href="#Scheduler/preset/ViewPreset#field-displayDateFormat">displayDateFormat</a> value specified for the ViewPreset being selected.</p>',extends:["Gantt/column/GanttDateColumn"],constructor:{name:"constructor"},filename:"EarlyStartDateColumn.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/column",lineno:19,classType:"earlystartdate"},{name:"module:Gantt/column/EffortColumn",classDescription:'<p>A column showing the task <a href="#Gantt/model/TaskModel#field-effort">effort</a> and <a href="#Gantt/model/TaskModel#field-effortUnit">units</a>.\nThe editor of this column understands the time units, so user can enter &quot;4d&quot; indicating 4 days effort, or &quot;4h&quot; indicating 4 hours, etc.</p>\n<p>Default editor is a <a href="#Core/widget/DurationField">DurationField</a>.</p>',extends:["Gantt/column/DurationColumn"],constructor:{name:"constructor"},filename:"EffortColumn.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/column",lineno:18,classType:"effort"},{name:"module:Gantt/column/EndDateColumn",classDescription:'<p>A column that displays (and allows user to update) the task\'s <a href="#Gantt/model/TaskModel#field-endDate">end date</a>.</p>\n<p>Default editor is a <a href="#SchedulerPro/widget/EndDateField">EndDateField</a>.</p>\n<p>If <a href="#Gantt/column/EndDateColumn#config-format">format</a> is omitted, Gantt\'s <a href="#Scheduler/view/mixin/TimelineViewPresets#config-displayDateFormat">displayDateFormat</a> will be used as a default value and\nthe format will be dynamically updated while zooming according to the <a href="#Scheduler/preset/ViewPreset#field-displayDateFormat">displayDateFormat</a> value specified for the ViewPreset being selected.</p>',extends:["Gantt/column/GanttDateColumn"],constructor:{name:"constructor"},filename:"EndDateColumn.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/column",lineno:21,classType:"enddate"},{name:"module:Gantt/column/GanttDateColumn",classDescription:'<p>Base column class that displays dates, in the <code>ll</code> format by default. If set to <code>null</code> uses Gantt\'s <a href="#Scheduler/view/mixin/TimelineViewPresets#config-displayDateFormat">date format</a> as a default.\nThe format will be dynamically updated while zooming according to the <a href="#Scheduler/preset/ViewPreset#field-displayDateFormat">displayDateFormat</a> value specified for the ViewPreset being selected.</p>\n<p>By default, this class hides the left/right arrows to modify the date incrementally, you can enable this with the <a href="#Grid/column/DateColumn#config-step">step</a> config\nof the <a href="#Gantt/column/GanttDateColumn#config-editor">editor</a> config.</p>\n<p>Default editor is a <a href="#Core/widget/DateField">DateField</a>.</p>',extends:["Grid/column/DateColumn"],virtual:true,constructor:{name:"constructor"},filename:"GanttDateColumn.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/column",lineno:19,configs:[{name:"format",description:'<p>The date format used to display dates in this column. If <code>format</code> is set to <code>null</code>,\nthe current value of the Gantt\'s <a href="#Scheduler/view/mixin/TimelineViewPresets#config-displayDateFormat">displayDateFormat</a> will be used to format the date value.</p>',type:"String",scope:"inner",category:"Common"}]},{name:"module:Gantt/column/LateEndDateColumn",classDescription:'<p>A column that displays the task\'s <a href="#Gantt/model/TaskModel#field-lateEndDate">late end date</a>.</p>\n<p>Default editor is a <a href="#Core/widget/DateField">DateField</a>.</p>\n<p>If <a href="#Gantt/column/LateEndDateColumn#config-format">format</a> is omitted, Gantt\'s <a href="#Scheduler/view/mixin/TimelineViewPresets#config-displayDateFormat">displayDateFormat</a> will be used as a default value and\nthe format will be dynamically updated while zooming according to the <a href="#Scheduler/preset/ViewPreset#field-displayDateFormat">displayDateFormat</a> value specified for the ViewPreset being selected.</p>',extends:["Gantt/column/GanttDateColumn"],constructor:{name:"constructor"},filename:"LateEndDateColumn.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/column",lineno:19,classType:"lateenddate"},{name:"module:Gantt/column/LateStartDateColumn",classDescription:'<p>A column that displays the task\'s <a href="#Gantt/model/TaskModel#field-lateStartDate">late start date</a>.</p>\n<p>Default editor is a <a href="#Core/widget/DateField">DateField</a>.</p>\n<p>If <a href="#Gantt/column/LateStartDateColumn#config-format">format</a> is omitted, Gantt\'s <a href="#Scheduler/view/mixin/TimelineViewPresets#config-displayDateFormat">displayDateFormat</a> will be used as a default value and\nthe format will be dynamically updated while zooming according to the <a href="#Scheduler/preset/ViewPreset#field-displayDateFormat">displayDateFormat</a> value specified for the ViewPreset being selected.</p>',extends:["Gantt/column/GanttDateColumn"],constructor:{name:"constructor"},filename:"LateStartDateColumn.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/column",lineno:19,classType:"latestartdate"},{name:"module:Gantt/column/MilestoneColumn",classDescription:'<p>Column that indicates whether the task is a milestone. This column is not editable.</p>\n<p>This column uses a <a href="#Core/widget/Checkbox">checkbox</a> as its editor, and it is not intended to be changed.</p>',extends:["Grid/column/CheckColumn"],constructor:{name:"constructor"},filename:"MilestoneColumn.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/column",lineno:16,classType:"milestone"},{name:"module:Gantt/column/NameColumn",classDescription:'<p>A tree column showing (and allowing user to edit) the task\'s <a href="#Gantt/model/TaskModel#field-name">name</a> field.</p>\n<p>Default editor is a <a href="#Core/widget/TextField">TextField</a>.</p>',extends:["Grid/column/TreeColumn"],constructor:{name:"constructor"},filename:"NameColumn.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/column",lineno:16,classType:"name"},{name:"module:Gantt/column/NoteColumn",classDescription:'<p>A column which displays a task\'s <a href="#Gantt/model/TaskModel#field-note">note</a> field.</p>\n<p>Default editor is a <a href="#Core/widget/TextAreaField">TextAreaField</a>.</p>',extends:["Grid/column/Column"],constructor:{name:"constructor"},filename:"NoteColumn.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/column",lineno:17,classType:"note"},{name:"module:Gantt/column/PercentDoneCircleColumn",classDescription:'<p>DEPRECATED. Use PercentDoneColumn instead with ´showCircle´ config. A column drawing a circular progress bar based on the <code>percentDone</code> value.</p>\n<p>Default editor is a <a href="#Core/widget/NumberField">NumberField</a>.</p>',extends:["Gantt/column/PercentDoneColumn"],constructor:{name:"constructor"},filename:"PercentDoneCircleColumn.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/column",lineno:18,classType:"percentdonecircle"},{name:"module:Gantt/column/PercentDoneColumn",classDescription:'<p>A column representing the <a href="#Gantt/model/TaskModel#field-percentDone">percentDone</a> field of the task.</p>\n<p>Default editor is a <a href="#Core/widget/NumberField">NumberField</a>.</p>',extends:["Grid/column/NumberColumn"],constructor:{name:"constructor"},filename:"PercentDoneColumn.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/column",lineno:16,classType:"percentdone",configs:[{name:"showCircle",description:"<p>Set to <code>true</code> to render a circular progress bar to visualize the task progress</p>",type:"Boolean",scope:"inner"}]},{name:"module:Gantt/column/PredecessorColumn",classDescription:'<p>A column which displays, in textual form, the dependencies which link from tasks\nupon which the contextual task depends.</p>\n<p>This type of column is editable by default. Default editor is a <a href="#Gantt/widget/DependencyField">DependencyField</a>.</p>',extends:["Gantt/column/DependencyColumn"],constructor:{name:"constructor"},filename:"PredecessorColumn.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/column",lineno:17,classType:"predecessor"},{name:"module:Gantt/column/ResourceAssignmentColumn",classDescription:'<p>Column allowing resource manipulation (assignment/unassignment/units changing) on a task. In the column cells,\nassignments are either shown as badges or avatars. To show avatars, set <a href="#Gantt/column/ResourceAssignmentColumn#config-showAvatars">showAvatars</a> to true. When showing avatars, you have to provide a\n<a href="#Gantt/view/Gantt#config-resourceImageFolderPath">resourceImageFolderPath</a> on your Gantt panel pointing to where resource images are located. Set the resource image filename\nin the <code>image</code> field of the resource data.\nA special <a href="#Gantt/view/Gantt#config-defaultResourceImageName">defaultResourceImageName</a> is used when a resource has no name, or its image cannot be loaded</p>\n<p>Default editor is a <a href="#Gantt/widget/AssignmentField">AssignmentField</a>.</p>',extends:["Grid/column/Column"],constructor:{name:"constructor"},filename:"ResourceAssignmentColumn.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/column",lineno:25,classType:"resourceassignment",configs:[{name:"showAvatars",description:'<p>True to show a resource avatar for every assignment. Note that you also have to provide a <a href="#Gantt/view/Gantt#config-resourceImageFolderPath">resourceImageFolderPath</a> for where to load images from.</p>',type:"Boolean",scope:"inner",category:"Common"},{name:"itemTpl",description:'<p>A function which produces the content to put in the resource assignment cell.\nMay be overridden in subclasses, or injected into the column\nto customize the Chip content.</p>\n<p>Defaults to returning <code>${assignment.resourceName} ${assignment.units}%</code></p>\n<p>The following parameters are passed:</p>\n<ul>\n<li><strong>assignment</strong> : <code><a href="#Gantt/model/AssignmentModel">AssignmentModel</a></code> The assignment</li>\n<li><strong>idx</strong> : <code>Number</code> The index - zero based.</li>\n</ul>',type:"function",scope:"instance"}]},{name:"module:Gantt/column/RollupColumn",classDescription:'<p>A column that displays a checkbox to edit the <a href="#Gantt/model/TaskModel#field-rollup">rollup</a> data field.\nThis field indicates if a task should rollup to its closest parent or not.\nRequires the <a href="#Gantt/feature/Rollups">Rollups</a> feature to be enabled.</p>\n<p>This column uses a <a href="#Core/widget/Checkbox">checkbox</a> as its editor, and it is not intended to be changed.</p>',extends:["Grid/column/CheckColumn"],constructor:{name:"constructor"},filename:"RollupColumn.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/column",lineno:18,classType:"rollup"},{name:"module:Gantt/column/SchedulingModeColumn",classDescription:'<p>A column which displays a task\'s scheduling <a href="#Gantt/model/TaskModel#field-schedulingMode">mode</a> field.</p>\n<p>Default editor is a <a href="#SchedulerPro/widget/SchedulingModePicker">SchedulingModePicker</a>.</p>',extends:["Grid/column/Column"],constructor:{name:"constructor"},filename:"SchedulingModeColumn.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/column",lineno:18,classType:"schedulingmodecolumn"},{name:"module:Gantt/column/SequenceColumn",classDescription:'<p>A &quot;calculated&quot; column which displays the sequential position of the task in the project.</p>\n<p>There is no <code>editor</code>, since value is read-only.</p>\n<p>See <a href="#Gantt/model/TaskModel#property-sequenceNumber">sequenceNumber</a> for details.</p>',extends:["Grid/column/Column"],constructor:{name:"constructor"},filename:"SequenceColumn.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/column",lineno:18,classType:"sequence"},{name:"module:Gantt/column/ShowInTimelineColumn",classDescription:'<p>Column that shows if a task should be shown in the <a href="#Gantt/widget/Timeline">Timeline</a> widget.</p>\n<p>This column uses a <a href="#Core/widget/Checkbox">checkbox</a> as its editor, and it is not intended to be changed.</p>',extends:["Grid/column/CheckColumn"],constructor:{name:"constructor"},filename:"ShowInTimelineColumn.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/column",lineno:16,classType:"showintimeline"},{name:"module:Gantt/column/StartDateColumn",classDescription:'<p>A column that displays (and allows user to update) the task\'s <a href="#Gantt/model/TaskModel#field-startDate">start date</a>.</p>\n<p>Default editor is a <a href="#SchedulerPro/widget/StartDateField">StartDateField</a>.</p>\n<p>If <a href="#Gantt/column/StartDateColumn#config-format">format</a> is omitted, Gantt\'s <a href="#Scheduler/view/mixin/TimelineViewPresets#config-displayDateFormat">displayDateFormat</a> will be used as a default value and\nthe format will be dynamically updated while zooming according to the <a href="#Scheduler/preset/ViewPreset#field-displayDateFormat">displayDateFormat</a> value specified for the ViewPreset being selected.</p>',extends:["Gantt/column/GanttDateColumn"],constructor:{name:"constructor"},filename:"StartDateColumn.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/column",lineno:21,classType:"startdate"},{name:"module:Gantt/column/SuccessorColumn",classDescription:'<p>A column which displays, in textual form, the dependencies which link from the\ncontextual to successor tasks.</p>\n<p>This type of column is editable by default. Default editor is a <a href="#Gantt/widget/DependencyField">DependencyField</a>.</p>',extends:["Gantt/column/DependencyColumn"],constructor:{name:"constructor"},filename:"SuccessorColumn.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/column",lineno:17,classType:"successor"},{name:"module:Gantt/column/TotalSlackColumn",classDescription:'<p>A column that displays the task\'s <a href="#Gantt/model/TaskModel#field-totalSlack">total slack</a>.</p>\n<p>Default editor is a <a href="#Core/widget/DurationField">DurationField</a>.</p>',extends:["Gantt/column/DurationColumn"],constructor:{name:"constructor"},filename:"TotalSlackColumn.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/column",lineno:16,classType:"totalslack"},{name:"module:Gantt/column/WBSColumn",classDescription:"<p>A &quot;calculated&quot; column which displays the <em>WBS</em> (<em>Work Breakdown Structure</em>) for the tasks - the position of the task in the project tree structure.</p>\n<p>There is no <code>editor</code>, since value is read-only.</p>",extends:["Grid/column/Column"],constructor:{name:"constructor"},filename:"WBSColumn.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/column",lineno:16,classType:"wbs"},{name:"module:Gantt/customElements/GanttTag",classDescription:'<p>Import this file to be able to use the tag <strong>&lt;bryntum-gantt&gt;</strong> to create a gantt. This is more of a\nproof of concept than a ready to use class. Dataset from <strong>&lt;bryntum-gantt&gt;</strong> tag is\napplied to gantt config, which means, that you can pass any documented config there, not only\ndemonstrated here. Dataset attributes are translated as follows:</p>\n<ul>\n<li>data-view-preset -&gt; viewPreset</li>\n<li>data-start-date -&gt; startDate</li>\n</ul>\n<p>etc.</p>\n<p>There is also a special attribute <code>data-theme</code> to set theme on the gantt component. If omitted, <code>stockholm</code> theme is\nset by default.</p>\n<h2>Example</h2>\n<pre class="prettyprint source"><code>&lt;bryntum-gantt data-view-preset=&quot;weekAndDay&quot; data-start-date=&quot;2018-04-02&quot; data-end-date=&quot;2018-04-09&quot;&gt;\n     &lt;column data-type=&quot;name&quot;&gt;Name&lt;/column&gt;\n     &lt;project data-load-url=&quot;/projectdata&quot;&gt;Name&lt;/project&gt;\n     &lt;feature data-name=&quot;nonWorkingTime&quot;&gt;&lt;/feature&gt;\n     &lt;feature data-name=&quot;timeRanges&quot; data-show-current-timeline=&quot;true&quot;&gt;&lt;/feature&gt;\n&lt;/bryntum-gantt&gt;\n</code></pre>',constructor:{name:"constructor"},filename:"GanttTag.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/customElements",lineno:36},{name:"module:Gantt/data/AssignmentStore",classDescription:'<p>A class representing a collection of assignments between tasks in the <a href="#Gantt/data/TaskStore">Gantt/data/TaskStore</a> and resources\nin the <a href="#Gantt/data/ResourceStore">Gantt/data/ResourceStore</a>.</p>\n<p>Contains a collection of the <a href="#Gantt/model/AssignmentModel">Gantt/model/AssignmentModel</a> records.</p>',extends:["SchedulerPro/data/AssignmentStore"],constructor:{name:"constructor"},filename:"AssignmentStore.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/data",lineno:17,typings:"SchedulerPro/data/AssignmentStore -> SchedulerPro/data/ProAssignmentStore"},{name:"module:Gantt/data/AssignmentsManipulationStore",classDescription:'<p>Special store class for <em>single</em> task/event assignments manipulation, used by <a href="#Gantt/widget/AssignmentGrid">Gantt/widget/AssignmentGrid</a></p>\n<p>Contains a collection of <a href="#Gantt/model/AssignmentsManipulationModel">Gantt/model/AssignmentsManipulationModel</a> records.</p>',extends:["Core/data/Store"],access:"internal",constructor:{name:"constructor"},filename:"AssignmentsManipulationStore.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/data",lineno:22,configs:[{name:"projectEvent",description:"<p>Event model to manipulate assignments of, the event should be part of a project.</p>",type:"Gantt.model.TaskModel",scope:"inner"},{name:"floatAssignedResources",access:"private",description:"<p>Flag indicating whether assigned resources should be placed (floated) before unassinged ones.</p>",type:"boolean",scope:"inner"},{name:"liveFloatAssignedResources",access:"private",description:"<p>Flag indicating whether assigned resources should be floated live</p>",type:"boolean",scope:"inner"}],functions:[{name:"fillFromMaster",access:"internal",description:'<p>Fills this store from master <a href="#Gantt/data/ResourceStore">resource</a> store and <a href="#Gantt/data/AssignmentStore">assignment</a> store.</p>',scope:"instance"},{name:"applyChanges",access:"internal",description:'<p>Saves changes back master <a href="#Gantt/data/AssignmentStore">assignment store</a>.</p>',scope:"instance",fires:["event:changesApplied"]},{name:"getResourceAssignment",access:"internal",description:"<p>Returns current assignment record for resource</p>",parameters:[{name:"resource",type:"Gantt.model.ResourceModel",description:"<p>Resource model to get assignment record for</p>"}],scope:"instance",returns:{type:"Gantt.model.AssignmentsManipulationModel"}}],events:[{name:"changesApplied",description:'<p>Fires when all changes done to the models in this store are applied to <a href="#Gantt/data/AssignmentStore">assignment store</a></p>'}]},{name:"module:Gantt/data/CalendarManagerStore",classDescription:'<p>A class representing the tree of calendars in the SchedulerPro chart. An individual calendar is represented as an instance of the\n<a href="#Gantt/model/CalendarModel">Gantt.model.CalendarModel</a> class. The store expects the data loaded to be hierarchical. Each parent node should\ncontain its children in a property called \'children\'.</p>\n<p>Please refer to the <a href="#guides/calendars.md">calendars guide</a> for details</p>',extends:["SchedulerPro/data/CalendarManagerStore"],constructor:{name:"constructor"},filename:"CalendarManagerStore.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/data",lineno:18,typings:"SchedulerPro/data/CalendarManagerStore -> SchedulerPro/data/ProCalendarManagerStore"},{name:"module:Gantt/data/DependencyStore",classDescription:'<p>A class representing a collection of dependencies between the tasks in the <a href="#Gantt/data/TaskStore">Gantt/data/TaskStore</a>.\nContains a collection of <a href="#Gantt/model/DependencyModel">Gantt/model/DependencyModel</a> records.</p>',extends:["SchedulerPro/data/DependencyStore"],constructor:{name:"constructor"},filename:"DependencyStore.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/data",lineno:15,typings:"SchedulerPro/data/DependencyStore -> SchedulerPro/data/ProDependencyStore"},{name:"module:Gantt/data/ResourceStore",classDescription:'<p>A class representing the collection of the resources - <a href="#Gantt/model/ResourceModel">Gantt/model/ResourceModel</a> records.</p>',extends:["SchedulerPro/data/ResourceStore"],constructor:{name:"constructor"},filename:"ResourceStore.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/data",lineno:14,typings:"SchedulerPro/data/ResourceStore -> SchedulerPro/data/ProResourceStore"},{name:"module:Gantt/data/TaskStore",classDescription:"<p>A class representing the tree of tasks in the Gantt project. An individual task is represented as an instance of the\n<a href=\"#Gantt/model/TaskModel\">Gantt.model.TaskModel</a> class. The store expects the data loaded to be hierarchical. Each parent node should\ncontain its children in a property called 'children'.</p>",extends:["SchedulerPro/data/TaskStore"],constructor:{name:"constructor"},filename:"TaskStore.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/data",lineno:19,typings:"SchedulerPro/data/TaskStore -> SchedulerPro/data/ProTaskStore",functions:[{name:"setBaseline",description:"<p>For each task in this TaskStore, sets the data in the passed baseline index to the current state of the task.</p>",parameters:[{name:"index",type:"Number",description:"<p>The index in the baselines list of the baseline to update.</p>"}],scope:"instance"},{name:"indent",description:"<p>Increase the indentation level of one or more tasks in the tree</p>",parameters:[{name:"nodes",type:["Gantt.model.TaskModel","Array.<Gantt.model.TaskModel>"],description:"<p>The nodes to indent.</p>"}],scope:"instance",fires:["event:indent","event:change"],returns:{type:"Promise",description:"<p>A promise which yields the result of the operation</p>"},async:true},{name:"outdent",description:"<p>Decrease the indentation level of one or more tasks in the tree</p>",parameters:[{name:"nodes",type:["Gantt.model.TaskModel","Array.<Gantt.model.TaskModel>"],description:"<p>The nodes to outdent.</p>"}],scope:"instance",fires:["event:outdent","event:change"],returns:{type:"Promise",description:"<p>A promise which yields the result of the operation</p>"},async:true}],events:[{name:"indent",description:"<p>Fired after tasks in the tree are indented</p>",parameters:[{name:"source",type:"Gantt.data.TaskStore",description:"<p>The task store</p>"},{name:"records",type:"Array.<Gantt.model.TaskModel>",description:"<p>Tasks that got indent</p>"}]},{name:"outdent",description:"<p>Fired after tasks in the tree are outdented</p>",parameters:[{name:"source",type:"Gantt.data.TaskStore",description:"<p>The task store</p>"},{name:"records",type:"Array.<Gantt.model.TaskModel>",description:"<p>Tasks that got outdent</p>"}]}]},{name:"module:Gantt/data/mixin/CrudManager",description:"<p>This is a mixin, provding Crud manager functionality, specialized for the Gantt project.</p>",extends:["SchedulerPro/data/mixin/ProCrudManager"],mixin:true,constructor:{name:"constructor"},filename:"CrudManager.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/data/mixin",lineno:16,typings:"Scheduler/data/CrudManager -> Scheduler/data/SchedulerCrudManager"},{name:"module:Gantt/feature/Baselines",classDescription:'<p>Displays a <a href="#Gantt/model/TaskModel">task</a>\'s <a href="#Gantt/model/TaskModel#field-baselines">baselines</a>\nbelow the tasks in the timeline.</p>\n<p>This feature also optionally shows a tooltip when hovering any of the task\'s baseline elements. The\ntooltip\'s content may be customized</p>\n<p>This feature is <strong>disabled</strong> by default</p>',extends:["Scheduler/feature/base/TooltipBase"],constructor:{name:"constructor"},filename:"Baselines.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/feature",lineno:27,externalExamples:["gantt/feature/Baselines.js"],demo:{product:"gantt",demo:"baselines"},functions:[{name:"onAfterTaskDrop",access:"private",description:"<p>This responds to <em>unsuccessful</em> drags of tasks.</p>\n<p>The task element will be animated back to its original position. This method\nbegins a continuous correction of baseline element position to cover any transitioned\nmovement of the wrapper to its new position. The monitoring persists for 300ms</p>",parameters:[{name:"event",type:"Object",description:"<p>The afterTaskDrop event</p>"}],scope:"instance"},{name:"onStoreUpdateRecord",access:"private",description:"<p>This responds to task timeline position changes for rendered tasks.</p>\n<p>If the position has changed, it begins a continuous correction of baseline\nelement position to cover any transitioned movement of the wrapper to its new position.\nThe monitoring persists for 300ms</p>",parameters:[{name:"event",type:"Object",description:"<p>The update event</p>"}],scope:"instance"}],configs:[{name:"template",description:"<p>Template (a function accepting event data and returning a string) used to display info in the tooltip.\nThe template will be called with an object as with fields as detailed below</p>",type:"function",scope:"instance",parameters:[{name:"data",type:"Object",description:"<p>A data block containing the information needed to create tooltip content.</p>"},{name:"data.baseline",type:"Gantt.model.Baseline",description:"<p>The Baseline record to display</p>",isSubParam:true},{name:"data.baseline.task",type:"Gantt.model.TaskModel",description:"<p>The owning task of the baseline.</p>",isSubParam:true},{name:"data.startClockHtml",type:"string",description:"<p>Predefined HTML to show the start time.</p>",isSubParam:true},{name:"data.endClockHtml",type:"string",description:"<p>Predefined HTML to show the end time.</p>",isSubParam:true}]}]},{name:"module:Gantt/feature/CellEdit",classDescription:'<p>Extends the <a href="#Grid/feature/CellEdit">Grid.feature.CellEdit</a> to encapsulate Gantt functionality. This feature is enabled by <b>default</b></p>\n<p><div class="external-example" data-file="gantt/feature/CellEdit.js">\n            <i class="b-icon b-icon-code b-inline-example"></i>\n            <div class="external-code-container">\n                <div class="external-code example">\n                    <pre><code>\n                    </code></pre>\n                </div>\n            </div>\n            <div class="external-target"></div>\n       </div></p>\n<p>Editing can be started by a user by double-clicking an editable cell in the gantt\'s data grid, or it can be started programatically\nby calling <a href="#Grid/feature/CellEdit#function-startEditing">startEditing</a> and providing it with correct cell context.</p>\n<p>See <a href="#Gantt/feature/CellEdit#function-doAddNewAtEnd">doAddNewAtEnd</a>.</p>',extends:["Grid/feature/CellEdit"],constructor:{name:"constructor"},filename:"CellEdit.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/feature",lineno:23,typings:"Grid/feature/CellEdit -> Grid/feature/GridCellEdit",classType:"ganttCellEdit",functions:[{name:"doAddNewAtEnd",description:'<p>Adds a new, empty record at the end of the TaskStore with the initial\ndata specified by the <a href="#Grid/feature/CellEdit#config-addNewAtEnd">addNewAtEnd</a> setting.</p>',scope:"instance",returns:{type:"Promise",description:"<p>Newly added record wrapped in a promise.</p>"},async:true}]},{name:"module:Gantt/feature/CriticalPaths",classDescription:'<p>This feature highlights the project <em>critical paths</em>.\nEvery task is important, but only some of them are critical.\nThe critical path is a chain of linked tasks that directly affects the project finish date.\nIf any task on the critical path is late, the whole project is late.</p>\n<p>This feature is loaded by default, but the visualization needs to be enabled:</p>\n<pre class="prettyprint source lang-javascript"><code>// let\'s visualize the project critical paths\ngantt.features.criticalPaths.disabled = false;\n</code></pre>\n<p><div class="external-example" data-file="gantt/feature/CriticalPaths.js">\n            <i class="b-icon b-icon-code b-inline-example"></i>\n            <div class="external-code-container">\n                <div class="external-code example">\n                    <pre><code>\n                    </code></pre>\n                </div>\n            </div>\n            <div class="external-target"></div>\n       </div></p>',extends:["Core/mixin/InstancePlugin"],constructor:{name:"constructor"},filename:"CriticalPaths.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/feature",lineno:26,demo:{product:"gantt",demo:"criticalpaths"},functions:[{name:"onPaint",access:"private",description:"<p>Called when gantt is painted.</p>",scope:"instance"}],events:[{name:"criticalPathsHighlighted",description:'<p>Fired when critical paths get highlighted.</p>\n<p>See also: <a href="#Gantt/feature/CriticalPaths#event-criticalPathsUnhighlighted">criticalPathsUnhighlighted</a></p>'},{name:"criticalPathsUnhighlighted",description:'<p>Fired when critical paths get hidden.</p>\n<p>See also: <a href="#Gantt/feature/CriticalPaths#event-criticalPathsHighlighted">criticalPathsHighlighted</a></p>'}]},{name:"module:Gantt/feature/Dependencies",classDescription:'<p>Feature that draws dependencies between tasks. Uses a dependency <a href="#Gantt/model/ProjectModel#property-dependencyStore">store</a>\nto determine which dependencies to draw.</p>\n<p>This feature is <strong>enabled</strong> by default</p>\n<div class="external-example" data-file="guides/gettingstarted/basic.js"></div>',extends:["Scheduler/feature/Dependencies"],constructor:{name:"constructor"},filename:"Dependencies.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/feature",lineno:37,typings:"Scheduler/feature/Dependencies -> Scheduler/feature/SchedulerDependencies",demo:{product:"gantt",demo:"basic"},functions:[{name:"drawForTask",description:"<p>Draws all dependencies for the specified task.</p>",scope:"instance"},{name:"getHoverTipHtml",access:"private",description:"<p>Generates html for the tooltip shown when hovering a dependency</p>",parameters:[{name:"tooltipConfig",type:"Object"}],scope:"instance",returns:{type:"string",description:"<p>Html to display in the tooltip</p>"}},{name:"createDependency",access:"internal",description:"<p>Create a new dependency from source terminal to target terminal</p>",scope:"instance"}]},{name:"module:Gantt/feature/DependencyEdit",classDescription:"<p>Feature that displays a popup containing fields for editing dependency data.</p>\n<p>This feature is <strong>disabled</strong> by default</p>",extends:["Scheduler/feature/DependencyEdit"],constructor:{name:"constructor"},filename:"DependencyEdit.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/feature",lineno:18,typings:"Scheduler/feature/DependencyEdit -> Scheduler/feature/SchedulerDependencyEdit",externalExamples:["gantt/feature/DependencyEdit.js"],demo:{product:"gantt",demo:"advanced"},configs:[{name:"showLagField",description:"<p>True to show the lag field for the dependency</p>",type:"Boolean",scope:"inner",defaultvalue:true,category:"Editor widgets"}]},{name:"module:Gantt/feature/Indicators",classDescription:'<p>The Indicators feature displays indicators (icons) for different dates related to a task in its row. Hovering an\nindicator will show a tooltip with its name and date(s).</p>\n<p>By default it includes and displays the following indicators (config name):</p>\n<ul>\n<li>Early start/end dates (earlyDates)</li>\n<li>Late start/end dates (lateDates)</li>\n<li>Constraint date (constraintDate)</li>\n<li>Deadline date (deadlineDate)</li>\n</ul>\n<p><div class="external-example" data-file="gantt/feature/Indicators.js">\n            <i class="b-icon b-icon-code b-inline-example"></i>\n            <div class="external-code-container">\n                <div class="external-code example">\n                    <pre><code>\n                    </code></pre>\n                </div>\n            </div>\n            <div class="external-target"></div>\n       </div></p>\n<p>This config will display them all:</p>\n<pre class="prettyprint source lang-javascript"><code>new Gantt({\n  features : {\n    indicators : true\n  }\n});\n</code></pre>\n<p>To selectively disable indicators:</p>\n<pre class="prettyprint source lang-javascript"><code>features : {\n  indicators : {\n    items : {\n      earlyDates     : false,\n      constraintDate : false\n    }\n  }\n}\n</code></pre>\n<p>They can also be toggled at runtime:</p>\n<pre class="prettyprint source lang-javascript"><code>gantt.features.indicators.items.deadlineDate = true/false;\n</code></pre>\n<p>The feature also supports adding custom indicators, by adding properties to the <code>items</code> config object:</p>\n<pre class="prettyprint source lang-javascript"><code>items : {\n  lateDates  : false,\n\n  // Custom indicator only shown for tasks more than half done\n  myCustomIndicator : taskRecord => taskRecord.percentDone > 50 ? {\n     startDate : DateHelper.add(taskRecord.endDate, 2, \'days\'),\n     name : \'My custom indicator\',\n     iconCls : \'b-fa b-fa-alien\'\n  } : null\n}\n</code></pre>\n<p><div class="external-example" data-file="gantt/feature/IndicatorsCustom.js">\n            <i class="b-icon b-icon-code b-inline-example"></i>\n            <div class="external-code-container">\n                <div class="external-code example">\n                    <pre><code>\n                    </code></pre>\n                </div>\n            </div>\n            <div class="external-target"></div>\n       </div></p>\n<p>These custom indicators are defined as functions, that accept a task record and return a TimeSpan (or a raw data\nobject). The function will be called for each visible task during rendering, to not show the indicator for certain\ntasks return <code>null</code> from it.</p>\n<p>When using this feature we recommend that you configure gantt with a larger <code>rowHeight</code> + <code>barMargin</code> (&gt;15 px), since\nthe indicators are indented to fit below the task bars.</p>',extends:["Scheduler/feature/base/TooltipBase"],constructor:{name:"constructor"},filename:"Indicators.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/feature",lineno:79,classType:"indicators",demo:{product:"gantt",demo:"indicators"},configs:[{name:"items",description:"<p>Used to enable/disable built in indicators and to define custom indicators.</p>\n<pre class=\"prettyprint source\"><code>new Gantt({\n  features : {\n    indicators : {\n      items : {\n        // Disable deadlineDate indicators\n        deadlineDate : false,\n\n        // Add a custom indicator (called prepare)\n        prepare : taskRecord => ({\n           startDate : taskRecord.startDate,\n           iconCls   : 'b-fa b-fa-magnify',\n           name      : 'Start task preparations'\n        })\n      }\n    }\n  }\n});\n</code></pre>\n<p>For more information, please see the class description at top.</p>",type:"Object",scope:"inner",category:"Common"}],properties:[{name:"items",description:'<p>Accessors for the indicators that can be used to toggle them at runtime.</p>\n<pre class="prettyprint source"><code>gantt.features.indicators.items.deadlineDate = false;\n</code></pre>',scope:"instance",returns:[{type:{names:["Object"]}}],readonly:true,category:"Common"}]},{name:"module:Gantt/feature/Labels",classDescription:'<p>Specialized version of the Labels feature for Scheduler, that handles labels for tasks in Gantt. See\n<a href="#Scheduler/feature/Labels">Schedulers Labels feature</a> for more information.\nThis feature is <strong>disabled</strong> by default.</p>',extends:["Scheduler/feature/Labels"],constructor:{name:"constructor"},filename:"Labels.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/feature",lineno:26,typings:"Scheduler/feature/Labels -> Scheduler/feature/SchedulerLabels",demo:{product:"gantt",demo:"labels"}},{name:"module:Gantt/feature/PercentBar",classDescription:'<p>This feature renders a special drag handler in every event, by dragging which, user can change the\n<a href="#Gantt/model/TaskModel#field-percentDone">percentDone</a> field.</p>\n<p>This feature is <strong>enabled</strong> by default</p>\n<p><div class="external-example" data-file="gantt/feature/PercentBar.js">\n            <i class="b-icon b-icon-code b-inline-example"></i>\n            <div class="external-code-container">\n                <div class="external-code example">\n                    <pre><code>\n                    </code></pre>\n                </div>\n            </div>\n            <div class="external-target"></div>\n       </div></p>',extends:["Core/mixin/InstancePlugin"],constructor:{name:"constructor"},filename:"PercentBar.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/feature",lineno:20,demo:{product:"gantt",demo:"basic"},configs:[{name:"allowResize",description:"<p><code>true</code> to allow drag drop resizing to set the % done</p>",type:"Boolean",scope:"inner",defaultvalue:true}],functions:[{name:"onPaint",access:"private",description:"<p>Called when scheduler is painted. Sets up drag and drop and hover tooltip.</p>",scope:"instance"}]},{name:"module:Gantt/feature/ProgressLine",classDescription:'<p>This feature draws project progress line with SVG lines. Requires <a href="#Gantt/feature/PercentBar">Gantt.feature.PercentBar</a> to be enabled (which\nby default, it is)</p>\n<p>This feature is <strong>disabled</strong> by default.</p>\n<pre class="prettyprint source lang-javascript"><code>let gantt = new Gantt({\n    features : {\n        progressLine : {\n           statusDate : new Date(2017, 2, 8)\n        }\n    }\n});\n</code></pre>\n<p>Status date can be changed:</p>\n<pre class="prettyprint source lang-javascript"><code> gantt.features.progressLine.statusDate = new Date();\n</code></pre>\n<p>If status date is not in the current gantt time span, progress line will use view start or end coordinates. This\nbehavior can be customized with <a href="#Gantt/feature/ProgressLine#config-drawLineOnlyWhenStatusDateVisible">drawLineOnlyWhenStatusDateVisible</a> config. Or you can override <a href="#Gantt/feature/ProgressLine#function-shouldDrawProgressLine">shouldDrawProgressLine</a>\nmethod and provide more complex condition.</p>\n<p>Progress line is a set of SVG <line> elements drawn between all the tasks.</p>\n<p><div class="external-example" data-file="gantt/feature/ProgressLine.js">\n            <i class="b-icon b-icon-code b-inline-example"></i>\n            <div class="external-code-container">\n                <div class="external-code example">\n                    <pre><code>\n                    </code></pre>\n                </div>\n            </div>\n            <div class="external-target"></div>\n       </div></p>',extends:["Core/mixin/InstancePlugin"],mixes:["Core/mixin/Delayable"],constructor:{name:"constructor"},filename:"ProgressLine.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/feature",lineno:47,demo:{product:"gantt",demo:"progressline"},events:[{name:"progressLineDrawn",description:"<p>Fired when progress line is rendered</p>"}],configs:[{name:"statusDate",description:"<p>Progress line status date. If not provided, current date is used.</p>",type:"Date",scope:"inner"},{name:"drawLineOnlyWhenStatusDateVisible",description:"<p>Set to true to hide progress line, when status date is not in the current time axis.</p>",type:"Boolean",scope:"inner"}],properties:[{name:"statusDate",description:"<p>Progress line status date. If not provided, current date is used.</p>",scope:"instance",properties:[{type:{names:["Date"]}}]}],functions:[{name:"onRowStoreRefresh",access:"private",description:"<p>Redraws line when a row has changed</p>",scope:"instance"},{name:"shouldDrawProgressLine",description:"<p>Returns true if progress line should be drawn</p>",scope:"instance",returns:{type:"Boolean"}},{name:"getStatusDateX",access:"private",description:"<p>Returns status date horizontal position relative to the foreground canvas</p>",scope:"instance",returns:{type:"Number"}},{name:"getRenderData",access:"private",description:"<p>Returns object with status date local coordinate and view x,y coordinates. Used to convert page coordinates to\nview local.</p>",scope:"instance",returns:{type:"Object"}},{name:"draw",description:"<p>Renders the progress line.</p>",scope:"instance"},{name:"updateLineForTask",access:"private",description:"<p>Updates progress line segment for one task</p>",parameters:[{name:"taskRecord",type:"Gantt.model.TaskModel"},{name:"renderData",type:"Object",description:"<p>Optional render data, which is an object where keys are task ids and values are\nnew task start date</p>",optional:true}],scope:"instance"},{name:"getLineSegmentRenderData",access:"internal",description:"<p>Draws line for a given row</p>",parameters:[{name:"row",type:"Grid.row.Row",description:"<p>Row instance</p>"},{name:"data",type:"Object",description:'<p>Output from <a href="#Gantt/feature/ProgressLine#function-getRenderData">getRenderData</a> method</p>'},{name:"renderData",type:"Object",description:"<p>Optional render data, which is an object where keys are task ids and values are\nnew task start date</p>",optional:true}],scope:"instance"},{name:"drawLineSegment",access:"internal",description:"<p>Draws line on svg canvas</p>",parameters:[{name:"data",type:"Object",description:'<p>Line render data. Output from <a href="#Gantt/feature/ProgressLine#function-getLineSegmentRenderData">getLineSegmentRenderData</a></p>'}],scope:"instance",returns:{type:"Element"}},{name:"isStatusLineTask",access:"internal",description:"<p>Returns true if task should be connected to the progress line.</p>",parameters:[{name:"taskRecord",type:"Gantt.model.TaskModel"},{name:"startDate",type:"Date",description:"<p>Provide to check if task record should be connected to the progress line if it'd\nstart then</p>",optional:true}],scope:"instance",returns:{type:"Boolean"}},{name:"calculateCoordinateForTask",access:"private",description:"<p>This method will calculate point inside task element to be connected with line.</p>",parameters:[{name:"record",type:"Gantt.model.TaskModel"},{name:"translateBy",type:"Array.<Number>",description:"<p>View xy coordinates to calculate relative point position</p>"}],scope:"instance",returns:{type:"Object",description:"<p>Object containing coordinates for point in progress line, or undefined if no progress bar el is found</p>"}}]},{name:"module:Gantt/feature/ProjectLines",classDescription:'<p>This feature draws two vertical lines in the schedule area, indicating project start/end dates.</p>\n<p>This feature is <strong>enabled</strong> by default</p>\n<div class="external-example" data-file="guides/gettingstarted/basic.js"></div>',extends:["Scheduler/feature/TimeRanges"],constructor:{name:"constructor"},filename:"ProjectLines.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/feature",lineno:17,demo:{product:"gantt",demo:"basic"},functions:[{name:"onPaint",access:"private",description:"<p>Called when gantt is painted.</p>",scope:"instance"}]},{name:"module:Gantt/feature/Rollups",classDescription:'<p>If the task\'s <a href="#Gantt/model/TaskModel#field-rollup">rollup</a> data field is set to true, it displays a small bar or diamond below its summary task in the timeline.\nEach of the rollup elements show a tooltip when hovering it with details of the task.\nThe tooltip content is customizable, see <a href="#Gantt/feature/Rollups#config-template">template</a> config for details.</p>\n<p>To edit the rollup data field, use <a href="#Gantt/column/RollupColumn">RollupColumn</a> or a checkbox on Advanced tab of <a href="#Gantt/widget/TaskEditor">TaskEditor</a>.</p>\n<p>This feature is <strong>disabled</strong> by default</p>',extends:["Scheduler/feature/base/TooltipBase"],constructor:{name:"constructor"},filename:"Rollups.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/feature",lineno:26,externalExamples:["gantt/feature/Rollups.js"],demo:{product:"gantt",demo:"rollups"},configs:[{name:"template",description:"<p>Template (a function accepting event data and returning a string) used to display info in the tooltip.\nThe template will be called with an object as with fields as detailed below</p>",type:"function",scope:"instance",parameters:[{name:"data",type:"Object",description:"<p>A data block containing the information needed to create tooltip content.</p>"},{name:"data.task",type:"Gantt.model.TaskModel",description:"<p>The summary task to rollup to.</p>",isSubParam:true},{name:"data.children",type:"Array.<Gantt.model.TaskModel>",description:"<p>The array of rollup tasks.</p>",isSubParam:true}]}]},{name:"module:Gantt/feature/TaskContextMenu",classDescription:"<p>Displays a context menu for tasks. Items are populated by other features and/or application code. Configure it with <code>false</code> to disable it completely.</p>\n<p>To add extra items for all events:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>const gantt = new Gantt({\n    features : {\n        taskContextMenu : {\n            // Extra items for all events\n            items : {\n                flagTask : {\n                    text : 'Extra',\n                    icon : 'b-fa b-fa-fw b-fa-flag',\n                    onItem({taskRecord}) {\n                        taskRecord.flagged = true;\n                    }\n                }\n            }\n        }\n    }\n});\n</code></pre>\n<p>Manipulate existing items for all tasks or specific tasks:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>const gantt = new Gantt({\n    features : {\n        taskContextMenu : {\n            // We would like to remove some of the provided options in the add menu\n            items : {\n                add : {\n                    menu : {\n                        items : {\n                            addTaskAbove : false,\n                            addTaskBelow : false,\n                            milestone    : false\n                        }\n                    }\n                }\n            },\n            // Process items before menu is shown\n            processItems({taskRecord, items}) {\n                 // Push an extra item for conferences\n                 if (taskRecord.type === 'conference') {\n                     items.showSessions = {\n                         text : 'Show sessions',\n                         ontItem({taskRecord}) {\n                             // ...\n                         }\n                     };\n                 }\n\n                 // Do not show menu for secret events\n                 if (taskRecord.type === 'secret') {\n                     return false;\n                 }\n            }\n        }\n    }\n});\n</code></pre>\n<p>This feature is <strong>enabled</strong> by default</p>",extends:["Scheduler/feature/base/TimeSpanRecordContextMenuBase"],constructor:{name:"constructor"},filename:"TaskContextMenu.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/feature",lineno:78,demo:{product:"gantt",demo:"taskcontextmenu"},externalExamples:["gantt/taskcontextmenu.js"],configs:[{name:"defaultItems",description:'<p>This is a preconfigured set of <a href="#Core/widget/Container#config-namedItems">namedItems</a> used to create the default\ncontext menu.</p>\n<p>The provided defaultItems setting is</p>\n<pre class="prettyprint source lang-javascript"><code>   {\n       add        : true,\n       deleteTask : true\n   }\n</code></pre>\n<p>The <code>namedItems</code> provided by this feature are listed below. These are the property\nnames which you may configure in the feature\'s <a href="#Scheduler/feature/base/TimeSpanRecordContextMenuBase#config-items">items</a> config:</p>\n<ul>\n<li><code>add</code> A submenu option containing a <code>menu</code> config which contains the following <code>namedItems</code>\n<ul>\n<li><code>addTaskAbove</code> Inserts a sibling task above the context task.</li>\n<li><code>addTaskBelow</code> Inserts a sibling task below the context task.</li>\n<li><code>milestone</code> Inserts a sibling milestone below the context task.</li>\n<li><code>subtask</code> Appends a child task to the context task.</li>\n<li><code>successor</code> Adds a sibling task linked by a dependence below the context task.</li>\n<li><code>predecessor</code> Adds a sibling task linked by a dependence above the context task.</li>\n</ul>\n</li>\n<li><code>deleteTask</code> Deletes the context task.</li>\n<li><code>indent</code> Indents the context task by adding it as a child of its previous sibling.</li>\n<li><code>outdent</code> Outdents the context task by adding it as the final sibling of its parent.</li>\n<li><code>convertToMilestone</code> Converts the context task to a zero duration milestone.</li>\n</ul>\n<p>See the feature config in the above example for details.</p>',type:"Object",scope:"inner"}],events:[{name:"taskContextMenuBeforeShow",description:"<p>Fired from gantt before the context menu is shown for a task. Allows manipulation of the items\nto show in the same way as in <code>processItems</code>. Returning false from a listener prevents the menu from\nbeing shown.</p>",parameters:[{name:"source",type:"Gantt.view.Gantt"},{name:"items",type:"Array.<Object>",description:"<p>Menu item configs</p>"},{name:"taskRecord",type:"Gantt.model.TaskModel",description:"<p>Event record for which the menu was triggered</p>"},{name:"taskElement",type:"HTMLElement"}],preventable:true},{name:"taskContextMenuItem",description:"<p>Fired from gantt when an item is selected in the context menu.</p>",parameters:[{name:"source",type:"Gantt.view.Gantt"},{name:"item",type:"Core.widget.MenuItem"},{name:"taskRecord",type:"Gantt.model.TaskModel"},{name:"taskElement",type:"HTMLElement"}]},{name:"taskContextMenuShow",description:"<p>Fired from gantt after showing the context menu for an event</p>",parameters:[{name:"source",type:"Gantt.view.Gantt"},{name:"menu",type:"Core.widget.Menu",description:"<p>The menu</p>"},{name:"taskRecord",type:"Gantt.model.TaskModel",description:"<p>Event record for which the menu was triggered</p>"},{name:"taskElement",type:"HTMLElement"}],preventable:true}],functions:[{name:"resolveRecord",access:"private",description:"<p>Returns Task record associated with current element (row/cell/task element)</p>",parameters:[{name:"element",type:"HTMLElement"}],scope:"instance",returns:{type:"Gantt.model.TaskModel"}},{name:"showContextMenuFor",description:"<p>Shows context menu for the provided task. If task is not rendered (outside of time span, or collapsed)\nmenu won't appear.</p>",parameters:[{name:"taskRecord",type:"Gantt.model.TaskModel"},{name:"options",type:"Object",optional:true},{name:"options.targetElement",type:"HTMLElement",description:"<p>Element to align context menu to</p>",isSubParam:true},{name:"options.eventElement",type:"HTMLElement",description:"<p>Event element if target is an event, otherwise <code>null</code></p>",isSubParam:true},{name:"options.event",type:"Event",description:"<p>Browser event. If provided menu will be aligned according to clientX/clientY coordinates.\nIf omitted, context menu will be centered to taskElement</p>",isSubParam:true}],scope:"instance"}]},{name:"module:Gantt/feature/TaskDrag",classDescription:'<p>Allows user to drag and drop tasks within Gantt, to change their start date.</p>\n<p>One can use a custom validator function to decide if drop is allowed:</p>\n<pre class="prettyprint source lang-javascript"><code>let gantt = new Gantt({\n  features: {\n    taskDrag: {\n      validatorFn(taskRecord, startDate) {\n          return startDate &lt; new Date();\n      }\n    }\n  }\n});\n</code></pre>\n<p>This feature is <strong>enabled</strong> by default</p>',extends:["Scheduler/feature/base/DragBase"],constructor:{name:"constructor"},filename:"TaskDrag.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/feature",lineno:33,demo:{product:"gantt",demo:"basic"},configs:[{name:"validatorFn",description:"<p>An empty function by default, but provided so that you can perform custom validation on\nthe item being dragged. This function is called during the drag and drop process and also after the drop is made.\nReturn true if the new position is valid, false to prevent the drag.</p>",type:"function",scope:"inner",returns:[{type:{names:["Boolean"]}}],parameters:[{name:"taskRecords",type:"Array.<Gantt.model.TaskModel>",description:"<p>an array containing the records for the tasks being dragged</p>"},{name:"date",type:"Date",description:"<p>The date corresponding to the current mouse position</p>"},{name:"duration",type:"Number",description:"<p>The duration of the item being dragged</p>"},{name:"e",type:"Event",description:"<p>The event object</p>"}]},{name:"validatorFnThisObj",description:"<p><code>this</code> reference for the validatorFn</p>",type:"Object",scope:"inner"},{name:"dragTipTemplate",description:'<p>Template used to generate drag tooltip contents.</p>\n<pre class="prettyprint source"><code>const gantt = new Gantt({\n  features : {\n    taskDrag : {\n      dragTipTemplate({taskRecord, startText}) {\n        return `${taskRecord.name}: ${startText}`\n      }\n    }\n  }\n});\n</code></pre>',type:"function",scope:"inner",returns:[{type:{names:["String"]}}],parameters:[{name:"data",type:"Object",description:"<p>Tooltip data</p>"},{name:"data.taskRecord",type:"Gantt.model.TaskModel",isSubParam:true},{name:"data.valid",type:"Boolean",description:"<p>Currently over a valid drop target or not</p>",isSubParam:true},{name:"data.startDate",type:"Date",description:"<p>New start date</p>",isSubParam:true},{name:"data.endDate",type:"Date",description:"<p>New end date</p>",isSubParam:true},{name:"data.startText",type:"String",description:"<p>Formatted new start date</p>",isSubParam:true},{name:"data.endText",type:"String",description:"<p>Formatted new end date</p>",isSubParam:true},{name:"data.startClockHtml",type:"String",description:"<p>Pre-generated HTML to display startDate as clock/calendar</p>",isSubParam:true},{name:"data.endClockHtml",type:"String",description:"<p>Pre-generated HTML to display endDate as clock/calendar</p>",isSubParam:true},{name:"data.dragData",type:"Object",description:"<p>Detailed drag context</p>",isSubParam:true}]}],events:[{name:"beforeTaskDropFinalize",description:"<p>Fired on the owning Gantt to allow implementer to prevent immediate finalization by setting <code>data.context.async = true</code>\nin the listener, to show a confirmation popup etc</p>\n<pre class=\"prettyprint source\"><code> scheduler.on('beforetaskdropfinalize', ({context}) => {\n     context.async = true;\n     setTimeout(() => {\n         // async code don't forget to call finalize\n         context.finalize();\n     }, 1000);\n })\n</code></pre>",parameters:[{name:"source",type:"Gantt.view.Gantt",description:"<p>Gantt instance</p>"},{name:"context",type:"Object"},{name:"context.async",type:"Boolean",description:"<p>Set true to handle dragdrop asynchronously (e.g. to wait for user\nconfirmation)</p>",isSubParam:true},{name:"context.finalize",type:"function",description:"<p>Call this method to finalize dragdrop. This method accepts one\nargument: pass true to update records, or false, to ignore changes</p>",isSubParam:true}]},{name:"afterTaskDrop",description:"<p>Fired on the owning Gantt after task drop</p>",parameters:[{name:"source",type:"Gantt.view.Gantt"},{name:"taskRecords",type:"Array.<Gantt.model.TaskModel>"},{name:"valid",type:"Boolean"}]},{name:"taskDrop",description:"<p>Fired on the owning Gantt when a task is dropped</p>",parameters:[{name:"source",type:"Gantt.view.Gantt"},{name:"taskRecords",type:"Array.<Gantt.model.TaskModel>"},{name:"isCopy",type:"Boolean"}]},{name:"beforeTaskDrag",description:"<p>Fired on the owning Gantt before task dragging starts. Return false to prevent the action</p>",parameters:[{name:"source",type:"Gantt.view.Gantt"},{name:"taskRecord",type:"Gantt.model.TaskModel"}]},{name:"taskDragStart",description:"<p>Fired on the owning Gantt when task dragging starts</p>",parameters:[{name:"source",type:"Gantt.view.Gantt"},{name:"taskRecords",type:"Array.<Gantt.model.TaskModel>"}]},{name:"taskDrag",description:"<p>Fired on the owning Gantt when event is dragged</p>",parameters:[{name:"source",type:"Gantt.view.Gantt"},{name:"taskRecords",type:"Array.<Gantt.model.TaskModel>"},{name:"startDate",type:"Date"},{name:"endDate",type:"Date"},{name:"dragData",type:"Object"},{name:"changed",type:"Boolean",description:"<p><code>true</code> if startDate has changed.</p>"}]}],functions:[{name:"getCoordinate",access:"private",description:"<p>Get correct axis coordinate.</p>",parameters:[{name:"taskRecord",type:"Gantt.model.TaskModel",description:"<p>Record being dragged</p>"},{name:"element",type:"HTMLElement",description:"<p>Element being dragged</p>"},{name:"coord",type:"Array.<Number>",description:"<p>XY coordinates</p>"}],scope:"instance",returns:{type:["Number","Array.<Number>"],description:"<p>X,Y or XY</p>"}},{name:"isValidDrop",access:"private",description:"<p>Checks if a task can be dropped on the specified location</p>",scope:"instance",returns:{type:"Boolean",description:"<p>Valid (true) or invalid (false)</p>"}},{name:"updateRecords",access:"private",description:"<p>Update tasks being dragged.</p>",parameters:[{name:"context",type:"Object",description:"<p>Drag data.</p>"}],scope:"instance"}]},{name:"module:Gantt/feature/TaskDragCreate",classDescription:"<p>Feature that allows the user to schedule a new task by dragging in empty parts of the gantt rows.</p>\n<p>This feature is <strong>enabled</strong> by default</p>",extends:["Scheduler/feature/base/DragCreateBase"],constructor:{name:"constructor"},filename:"TaskDragCreate.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/feature",lineno:16,demo:{product:"gantt",demo:"advanced"},configs:[{name:"validatorFn",description:"<p>An empty function by default, but provided so that you can perform custom validation on the event being created.\nReturn true if the new event is valid, false to prevent an event being created.</p>",type:"function",scope:"inner",returns:[{type:{names:["Boolean"]},description:"<p>isValid</p>"}],parameters:[{name:"context",type:"Object",description:"<p>A drag create context, containing at least{ start, end, taskRecord }</p>"},{name:"event",type:"Event",description:"<p>The event object</p>"}]}],events:[{name:"dragCreateEnd",description:"<p>Fires on the owning Gantt after the task has been scheduled.</p>",parameters:[{name:"source",type:"Gantt.view.Gantt"},{name:"taskRecord",type:"Gantt.model.TaskModel"},{name:"event",type:"MouseEvent",description:"<p>The ending mouseup event.</p>"},{name:"proxyElement",type:"HTMLElement",description:"<p>The proxy element showing the drag creation zone.</p>"}]},{name:"beforeDragCreate",description:"<p>Fires on the owning Gantt at the beginning of the drag gesture</p>",parameters:[{name:"source",type:"Gantt.view.Gantt"},{name:"taskRecord",type:"Gantt.model.TaskModel"},{name:"date",type:"Date",description:"<p>The datetime associated with the drag start point.</p>"}]},{name:"dragCreateStart",description:"<p>Fires on the owning Gantt after the drag start has created a proxy element.</p>",parameters:[{name:"source",type:"Gantt.view.Gantt"},{name:"proxyElement",type:"HTMLElement",description:"<p>The proxy representing the new event.</p>"}]},{name:"beforeDragCreateFinalize",description:"<p>Fired on the owning Gantt to allow implementer to prevent immediate finalization by setting <code>data.context.async = true</code>\nin the listener, to show a confirmation popup etc</p>\n<pre class=\"prettyprint source\"><code> scheduler.on('beforedragcreatefinalize', ({context}) => {\n     context.async = true;\n     setTimeout(() => {\n         // async code don't forget to call finalize\n         context.finalize();\n     }, 1000);\n })\n</code></pre>",parameters:[{name:"source",type:"Gantt.view.Gantt",description:"<p>Scheduler instance</p>"},{name:"proxyElement",type:"HTMLElement",description:"<p>Proxy element, representing future event</p>"},{name:"context",type:"Object"},{name:"context.async",type:"Boolean",description:"<p>Set true to handle drag create asynchronously (e.g. to wait for user\nconfirmation)</p>",isSubParam:true},{name:"context.finalize",type:"function",description:"<p>Call this method to finalize drag create. This method accepts one\nargument: pass true to update records, or false, to ignore changes</p>",isSubParam:true}]},{name:"afterDragCreate",description:"<p>Fires on the owning Gantt at the end of the drag create gesture whether or not\na task was scheduled by the gesture.</p>",parameters:[{name:"source",type:"Gantt.view.Gantt"},{name:"proxyElement",type:"HTMLElement",description:"<p>The proxy element showing the drag creation zone.</p>"}]}]},{name:"module:Gantt/feature/TaskEdit",classDescription:'<p>Gantt adopted task editor feature</p>\n<p><div class="external-example" data-file="gantt/feature/TaskEdit.js">\n            <i class="b-icon b-icon-code b-inline-example"></i>\n            <div class="external-code-container">\n                <div class="external-code example">\n                    <pre><code>\n                    </code></pre>\n                </div>\n            </div>\n            <div class="external-target"></div>\n       </div></p>\n<h2>Customizing tab widgets</h2>\nYou can append any widgets to the built-in tabs using the <a href="#Gantt/widget/TaskEditor#config-extraItems">extraItems</a> config.\n<p><div class="external-example" data-file="gantt/feature/TaskEditExtraItems.js">\n            <i class="b-icon b-icon-code b-inline-example"></i>\n            <div class="external-code-container">\n                <div class="external-code example">\n                    <pre><code>\n                    </code></pre>\n                </div>\n            </div>\n            <div class="external-target"></div>\n       </div></p>\n<h2>Customizing tabs</h2>\nThe built-in tabs can be turned hidden and custom tabs can be added to the Task Editor using the\n<a href="#Gantt/feature/TaskEdit#config-tabsConfig">tabsConfig</a> config.\n<p><div class="external-example" data-file="gantt/feature/TaskEditCustom.js">\n            <i class="b-icon b-icon-code b-inline-example"></i>\n            <div class="external-code-container">\n                <div class="external-code example">\n                    <pre><code>\n                    </code></pre>\n                </div>\n            </div>\n            <div class="external-target"></div>\n       </div></p>\n<p>To turn off the Task Editor just simple disable the feature.</p>\n<pre class="prettyprint source lang-javascript"><code>new Gantt ({\n    features : {\n        taskEdit : false\n    }\n    ...\n})\n</code></pre>',extends:["SchedulerPro/feature/ProTaskEdit"],constructor:{name:"constructor"},filename:"TaskEdit.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/feature",lineno:39,demo:{product:"gantt",demo:"taskeditor"},configs:[{name:"triggerEvent",description:"<p>The event that shall trigger showing the editor. Defaults to <code>eventdblclick</code>, set to `` or null to disable editing of existing events.</p>",type:"String",scope:"inner",defaultvalue:"taskdblclick",category:"Editor"},{name:"tabsConfig",description:'<p>A configuration object used to configure tabs of the task editor which can be used to\ncustomize the built-in tabs without changing the whole <a href="#Gantt/feature/TaskEdit#config-editorConfig">editorConfig</a>.\nIt is especially useful when only a few tabs should be changed.\nThe individual configuration objects of the tabs contained in <a href="#Gantt/feature/TaskEdit#config-tabsConfig">tabsConfig</a>\nare keyed by tab names and are merged with the default built-in configurations.</p>\n<p>Built-in tab names are:</p>\n<ul>\n<li>generaltab</li>\n<li>predecessorstab</li>\n<li>successorstab</li>\n<li>resourcestab</li>\n<li>advancedtab</li>\n<li>notestab</li>\n</ul>\n<p>The built-in tabs can be individually switched on or off, customized,\nor new custom tab(s) can be added. See <a href="#Gantt/widget/TaskEditor#config-tabsConfig">TaskEditor</a>\nfor details and also <b>Customizing tabs</b> example above.</p>\n<p><a href="#Gantt/feature/TaskEdit#config-tabsConfig">tabsConfig</a>\nobject is passed to <a href="#Gantt/widget/TaskEditor#config-tabsConfig">TaskEditor</a> where it is applied to the built-in and custom tabs.</p>',type:"Object",scope:"inner"}],functions:[{name:"editTask",description:'<p>Shows a <a href="#Gantt/widget/TaskEditor">TaskEditor</a> to edit the passed task. This function is exposed on\nthe Gantt instance and can be called as <code>gantt.editTask()</code>.</p>',parameters:[{name:"taskRecord",type:"Gantt.model.TaskModel",description:"<p>Task to edit</p>"},{name:"element",type:"HTMLElement",description:"<p>The task element</p>",optional:true}],scope:"instance",returns:{type:"Promise",description:"<p>Promise which resolves after the editor is shown</p>"},async:true}]},{name:"module:Gantt/feature/TaskResize",classDescription:"<p>Feature that allows resizing a task by dragging its end date. Resizing a task by dragging its start date is not allowed.</p>\n<p>This feature is <strong>enabled</strong> by default</p>",extends:["Scheduler/feature/base/ResizeBase"],constructor:{name:"constructor"},filename:"TaskResize.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/feature",lineno:18,demo:{product:"gantt",demo:"basic"},events:[{name:"beforeTaskResize",description:"<p>Fired on the owning Gantt before resizing starts. Return false to prevent operation</p>",parameters:[{name:"taskRecord",type:"Gantt.model.TaskModel"},{name:"event",type:"Event"}]},{name:"taskResizeStart",description:"<p>Fires on the owning Gantt when task resizing starts</p>",parameters:[{name:"taskRecord",type:"Gantt.model.TaskModel"},{name:"event",type:"Event"}]},{name:"taskPartialResize",description:"<p>Fires on the owning Gantt on each resize move event</p>",parameters:[{name:"taskRecord",type:"Gantt.model.TaskModel"},{name:"start",type:"Date"},{name:"end",type:"Date"},{name:"element",type:"HTMLElement"}]},{name:"beforeTaskResizeFinalize",description:"<p>Fired on the owning Gantt to allow implementer to prevent immediate finalization by setting <code>data.context.async = true</code>\nin the listener, to show a confirmation popup etc</p>\n<pre class=\"prettyprint source\"><code> gantt.on('beforetaskresizefinalize', ({context}) => {\n     context.async = true;\n     setTimeout(() => {\n         // async code don't forget to call finalize\n         context.finalize();\n     }, 1000);\n })\n</code></pre>",parameters:[{name:"data",type:"Object"},{name:"data.source",type:"Gantt.view.Gantt",description:"<p>Gantt instance</p>",isSubParam:true},{name:"data.context",type:"Object",isSubParam:true},{name:"data.context.async",type:"Boolean",description:"<p>Set true to handle resize asynchronously (e.g. to wait for user\nconfirmation)</p>",isSubParam:true},{name:"data.context.finalize",type:"function",description:"<p>Call this method to finalize resize. This method accepts one\nargument: pass true to update records, or false, to ignore changes</p>",isSubParam:true}]},{name:"taskResizeEnd",description:"<p>Fires on the owning Gantt after the resizing gesture has finished.</p>",parameters:[{name:"wasChanged",type:"Boolean"},{name:"taskRecord",type:"Gantt.model.TaskModel"}]}]},{name:"module:Gantt/feature/TaskTooltip",classDescription:'<p>This feature displays a task tooltip on mouse hover. The template of the tooltip is customizable\nwith the <a href="#Gantt/feature/TaskTooltip#config-template">template</a> function.</p>\n<pre class="prettyprint source lang-javascript"><code>new Gantt({\n  features : {\n    taskTooltip : {\n        // Tooltip configs can be used here\n        align : \'l-r\' // Align left to right\n    }\n  }\n});\n</code></pre>\n<p>This feature is <strong>enabled</strong> by default.</p>',extends:["Scheduler/feature/base/TooltipBase"],constructor:{name:"constructor"},filename:"TaskTooltip.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/feature",lineno:29,demo:{product:"gantt",demo:"tooltips"},configs:[{name:"template",description:"<p>Template (a function accepting task data and returning a string) used to display info in the tooltip.\nThe template will be called with an object as with fields as detailed below</p>",type:"function",scope:"inner",parameters:[{name:"data",type:"Object"},{name:"data.taskRecord",type:"Gantt.model.TaskModel",isSubParam:true},{name:"data.startClockHtml",type:"string",isSubParam:true},{name:"data.endClockHtml",type:"string",isSubParam:true}]},{name:"decimalPrecision",description:'<p>Precision of displayed duration, defaults to use <a href="#Gantt/view/Gantt#config-durationDisplayPrecision">durationDisplayPrecision</a>.\nSpecify a integer value to override that setting, or <code>false</code> to use raw value</p>',type:["Number","Boolean"],scope:"inner"}]},{name:"module:Gantt/feature/export/PdfExport",classDescription:'<p>Generates PDF/PNG files from the Gantt component.</p>\n<img src="resources/images/gantt-export-dialog.png" style="max-width : 300px" alt="Gantt Export dialog">\n<p><strong>NOTE:</strong> This feature will make a fetch request to the server, posting\nthe HTML fragments to be exported. The <a href="#Gantt/feature/export/PdfExport#config-exportServer">exportServer</a> URL must be configured.</p>\n<h2>Usage</h2>\n<pre class="prettyprint source lang-javascript"><code>let gantt = new Gantt({\n    features : {\n        pdfExport : {\n            exportServer : \'http://localhost:8080\' // Required\n        }\n    }\n})\n\n// Opens popup allowing to customize export settings\ngantt.features.pdfExport.showExportDialog();\n\n// Simple export\ngantt.features.pdfExport.export({\n    columns : gantt.columns.map(c => c.id) // Required, set list of column ids to export\n}).then(result => {\n    // Response instance and response content in JSON\n    let { response, responseJSON } = result;\n});\n</code></pre>',extends:["Scheduler/feature/export/PdfExport"],constructor:{name:"constructor"},filename:"PdfExport.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/feature/export",lineno:44,typings:"Scheduler/feature/export/PdfExport -> Scheduler/feature/export/SchedulerPdfExport"},{name:"module:Gantt/model/AssignmentModel",classDescription:'<p>This class represent a single assignment of a <a href="#Gantt/model/ResourceModel">resource</a> to a\n<a href="#Gantt/model/TaskModel">task</a> in your gantt chart.</p>',extends:["SchedulerPro/model/AssignmentModel"],constructor:{name:"constructor"},filename:"AssignmentModel.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/model",lineno:14,typings:"SchedulerPro/model/AssignmentModel -> SchedulerPro/model/ProAssignmentModel"},{name:"module:Gantt/model/AssignmentsManipulationModel",classDescription:'<p>A special model class for resource assignments manipulation.\nUsed by <a href="#Gantt/data/AssignmentsManipulationStore">Assignments manipulation store</a>.</p>\n<p>This model is not intended to be serialized and/or synchronized with the server somehow.</p>',extends:["Gantt/model/AssignmentModel"],access:"internal",constructor:{name:"constructor"},filename:"AssignmentsManipulationModel.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/model",lineno:16},{name:"module:Gantt/model/Baseline",classDescription:"<p>This class represents a baseline of a Task.</p>",extends:["Scheduler/model/TimeSpan"],constructor:{name:"constructor"},filename:"Baseline.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/model",lineno:12,fields:[{name:"task",description:"<p>The owning Task of the Baseline</p>",type:"Gantt.model.TaskModel",scope:"inner"}],functions:[{name:"convertToMilestone",description:"<p>Converts this baseline to a milestone (start date will match the end date).</p>",scope:"instance",propagating:true},{name:"convertToRegular",description:"<p>Converts a milestone baseline to a regular baseline with a duration of 1 (keeping current <code>durationUnit</code>).</p>",scope:"instance",propagating:true}]},{name:"module:Gantt/model/CalendarIntervalModel",classDescription:'<p>This class represents a calendar interval in the Gantt calendar.\nEvery interval can be either recurrent (regularly repeating in time) or static.</p>\n<p>Please refer to the <a href="#guides/calendars.md">calendars guide</a> for details</p>',extends:["SchedulerPro/model/ProCalendarIntervalModel"],constructor:{name:"constructor"},filename:"CalendarIntervalModel.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/model",lineno:15},{name:"module:Gantt/model/CalendarModel",classDescription:'<p>This class represents a calendar in the Gantt project. It contains a collection of the <a href="#SchedulerPro/model/ProCalendarIntervalModel">SchedulerPro.model.ProCalendarIntervalModel</a>.\nEvery interval can be either recurrent (regularly repeating in time) or static.</p>\n<p>Please refer to the <a href="#guides/calendars.md">calendars guide</a> for details</p>',extends:["SchedulerPro/model/ProCalendarModel"],constructor:{name:"constructor"},filename:"CalendarModel.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/model",lineno:16},{name:"module:Gantt/model/DependencyModel",classDescription:"<p>This class represents a single dependency between the tasks in your Gantt project.</p>\n<h2>Subclassing the Dependency class</h2>\n<p>The name of any field in data can be customized in the subclass, see the example below.</p>\n<pre class=\"prettyprint source lang-javascript\"><code>class MyDependencyModel extends DependencyModel {\n  static get fields() {\n    return [\n      { name: 'to', dataSource : 'targetId' },\n      { name: 'from', dataSource : 'sourceId' }\n    ];\n  }\n}\n</code></pre>",extends:["SchedulerPro/model/ProDependencyModel"],constructor:{name:"constructor"},filename:"DependencyModel.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/model",lineno:26,typings:"Scheduler/model/DependencyModel -> Scheduler/model/SchedulerDependencyModel",fields:[{name:"fromTask",description:"<p>The origin task of this dependency</p>",type:"Gantt.model.TaskModel",scope:"inner"},{name:"toTask",description:"<p>The destination task of this dependency</p>",type:"Gantt.model.TaskModel",scope:"inner"}]},{name:"module:Gantt/model/ProjectModel",classDescription:'<p>This class represents a global project of your Project plan or Gantt - a central place for all data.</p>\n<p>Please refer to <a href="#guides/project_data.md">this guide</a> for more information.</p>',extends:["Gantt/model/TaskModel"],mixes:["Gantt/data/mixin/CrudManager"],constructor:{name:"constructor"},filename:"ProjectModel.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/model",lineno:31,properties:[{name:"stm",description:"<p>State tracking manager instance the project relies on</p>",scope:"inner",properties:[{type:{names:["Core.data.stm.StateTrackingManager"]}}]},{name:"eventStore",description:'<p>The <a href="#Gantt/data/TaskStore">store</a> holding the tasks information.</p>\n<p>See also <a href="#Gantt/model/TaskModel">Gantt.model.TaskModel</a></p>',scope:"inner",properties:[{type:{names:["Gantt.data.TaskStore"]}}]},{name:"taskStore",description:'<p>An alias for the <a href="#Gantt/model/ProjectModel#property-eventStore">eventStore</a></p>\n<p>See also <a href="#Gantt/model/TaskModel">Gantt.model.TaskModel</a></p>',scope:"inner",properties:[{type:{names:["Gantt.data.TaskStore"]}}]},{name:"dependencyStore",description:'<p>The <a href="#Gantt/data/DependencyStore">store</a> holding the dependencies information.</p>\n<p>See also <a href="#Gantt/model/DependencyModel">Gantt.model.DependencyModel</a></p>',scope:"inner",properties:[{type:{names:["Gantt.data.DependencyStore"]}}]},{name:"resourceStore",description:'<p>The <a href="#Gantt/data/ResourceStore">store</a> holding the resources that can be assigned to the tasks in the task store.</p>\n<p>See also <a href="#Gantt/model/ResourceModel">Gantt.model.ResourceModel</a></p>',scope:"inner",properties:[{type:{names:["Gantt.data.ResourceStore"]}}]},{name:"assignmentStore",description:'<p>The <a href="#Gantt/data/AssignmentStore">store</a> holding the assignments information.</p>\n<p>See also <a href="#Gantt/model/AssignmentModel">Gantt.model.AssignmentModel</a></p>',scope:"inner",properties:[{type:{names:["Gantt.data.AssignmentStore"]}}]},{name:"calendarManagerStore",description:"<p>The store, holding the calendars information.</p>",scope:"inner",properties:[{type:{names:["Gantt.data.CalendarManagerStore"]}}]}],functions:[{name:"getCalendar",description:"<p>Returns a calendar of the task. If task has never been assigned a calendar a project's calendar will be returned.</p>",scope:"inner",returns:{type:"Gantt.model.CalendarModel"}},{name:"setCalendar",description:"<p>Sets the calendar of the task. Will cause the schedule to be updated - returns a <code>Promise</code></p>",parameters:[{name:"calendar",type:"Gantt.model.CalendarModel",description:"<p>The new calendar. Provide <code>null</code> to return back to the project calendar.</p>"}],scope:"inner",propagating:true,returns:{type:"Promise"},async:true},{name:"propagate",description:"<p>Propagates changes to the dependent tasks. For example:</p>\n<pre class=\"prettyprint source lang-js\"><code>// double a task duration\ntask.duration *= 2;\n// call propagate() to do further recalculations caused by the duration change\ntask.getProject().propagate().then(() => console.log('Schedule updated'));\n</code></pre>",parameters:[{name:"onEffect",description:'<p>Function that should handle occurred propagation conflicts. For example:</p>\n<pre class="prettyprint source lang-js"><code>// trigger propagation and silently cancel changes in case of any conflict\nproject.propagate(() => EffectResolutionResult.Cancel);\n</code></pre>'}],scope:"inner",propagating:true,returns:{type:"Promise"},async:true}],configs:[{name:"eventModelClass",description:'<p>Deprecated, use <a href="#Gantt/model/ProjectModel#config-taskModelClass">taskModelClass</a></p>',type:"Gantt.model.TaskModel",scope:"inner",deprecated:true},{name:"taskModelClass",description:'<p>The constructor of the event model class, to be used in the project. Will be set as the <a href="#Core/data/Store#config-modelClass">modelClass</a>\nproperty of the <a href="#Gantt/model/ProjectModel#property-eventStore">eventStore</a></p>',type:"Gantt.model.TaskModel",scope:"inner"},{name:"dependencyModelClass",description:'<p>The constructor of the dependency model class, to be used in the project. Will be set as the <a href="#Core/data/Store#config-modelClass">modelClass</a>\nproperty of the <a href="#Gantt/model/ProjectModel#property-dependencyStore">dependencyStore</a></p>',type:"Gantt.model.DependencyModel",scope:"inner"},{name:"resourceModelClass",description:'<p>The constructor of the resource model class, to be used in the project. Will be set as the <a href="#Core/data/Store#config-modelClass">modelClass</a>\nproperty of the <a href="#Gantt/model/ProjectModel#property-resourceStore">resourceStore</a></p>',type:"Gantt.model.ResourceModel",scope:"inner"},{name:"assignmentModelClass",description:'<p>The constructor of the resource model class, to be used in the project. Will be set as the <a href="#Core/data/Store#config-modelClass">modelClass</a>\nproperty of the <a href="#Gantt/model/ProjectModel#property-assignmentStore">assignmentStore</a></p>',type:"Gantt.model.AssignmentModel",scope:"inner"},{name:"calendarModelClass",description:'<p>The constructor of the calendar model class, to be used in the project. Will be set as the <a href="#Core/data/Store#config-modelClass">modelClass</a>\nproperty of the <a href="#Gantt/model/ProjectModel#property-calendarManagerStore">calendarManagerStore</a></p>',type:"Gantt.model.CalendarModel",scope:"inner"},{name:"eventStoreClass",description:'<p>Deprecated, use <a href="#Gantt/model/ProjectModel#config-taskStoreClass">taskStoreClass</a></p>',type:"Gantt.data.TaskStore",scope:"inner",deprecated:true},{name:"taskStoreClass",description:'<p>The constructor to create an task store instance with. Should be a class, subclassing the <a href="#Gantt/data/TaskStore">Gantt.data.TaskStore</a></p>',type:"Gantt.data.TaskStore",scope:"inner"},{name:"dependencyStoreClass",description:'<p>The constructor to create a dependency store instance with. Should be a class, subclassing the <a href="#Gantt/data/DependencyStore">Gantt.data.DependencyStore</a></p>',type:"Gantt.data.DependencyStore",scope:"inner"},{name:"resourceStoreClass",description:'<p>The constructor to create a dependency store instance with. Should be a class, subclassing the <a href="#Gantt/data/ResourceStore">Gantt.data.ResourceStore</a></p>',type:"Gantt.data.ResourceStore",scope:"inner"},{name:"assignmentStoreClass",description:'<p>The constructor to create a dependency store instance with. Should be a class, subclassing the <a href="#Gantt/data/AssignmentStore">Gantt.data.AssignmentStore</a></p>',type:"Gantt.data.AssignmentStore",scope:"inner"},{name:"calendarManagerStoreClass",description:'<p>The constructor to create a dependency store instance with. Should be a class, subclassing the <a href="#Gantt/data/CalendarManagerStore">Gantt.data.CalendarManagerStore</a></p>',type:"Gantt.data.CalendarManagerStore",scope:"inner"},{name:"tasksData",description:'<p>The initial data, to fill the <a href="#Gantt/model/ProjectModel#property-taskStore">taskStore</a> with.\nShould be an array of <a href="#Gantt/model/TaskModel">TaskModels</a> or it\'s configuration objects.</p>',type:"Array.<Gantt.model.TaskModel>",scope:"inner"},{name:"dependenciesData",description:'<p>The initial data, to fill the <a href="#Gantt/model/ProjectModel#property-dependencyStore">dependencyStore</a> with.\nShould be an array of <a href="#Gantt/model/DependencyModel">DependencyModels</a> or it\'s configuration objects.</p>',type:"Array.<Gantt.model.DependencyModel>",scope:"inner"},{name:"resourcesData",description:'<p>The initial data, to fill the <a href="#Gantt/model/ProjectModel#property-resourceStore">resourceStore</a> with.\nShould be an array of <a href="#Gantt/model/ResourceModel">ResourceModels</a> or it\'s configuration objects.</p>',type:"Array.<Gantt.model.ResourceModel>",scope:"inner"},{name:"assignmentsData",description:'<p>The initial data, to fill the <a href="#Gantt/model/ProjectModel#property-assignmentStore">assignmentStore</a> with.\nShould be an array of <a href="#Gantt/model/AssignmentModel">AssignmentModels</a> or it\'s configuration objects.</p>',type:"Array.<Gantt.model.AssignmentModel>",scope:"inner"},{name:"calendarsData",description:'<p>The initial data, to fill the <a href="#Gantt/model/ProjectModel#property-calendarManagerStore">calendarManagerStore</a> with.\nShould be an array of <a href="#Gantt/model/CalendarModel">CalendarModels</a> or it\'s configuration objects.</p>',type:"Array.<Gantt.model.CalendarModel>",scope:"inner"},{name:"timeRangeStore",description:'<p>Store that holds time ranges (using the <a href="#Scheduler/model/TimeSpan">Scheduler.model.TimeSpan</a> model or subclass thereof) for\n<a href="#Scheduler/feature/TimeRanges">Scheduler.feature.TimeRanges</a> feature. A store will be automatically created if none is specified.</p>',type:["Object","Core.data.Store"],scope:"inner"}],fields:[{name:"startDate",description:"<p>Start date of the project in the ISO 8601 format. Setting this date will constrain all other tasks in the project,\nto start no later than it. If this date is not provided, it will be calculated as the earliest date among all events.</p>",type:["string","Date"],scope:"inner"},{name:"endDate",description:"<p>End date of the project in the ISO 8601 format. If this date is not provided, it will be calculated\nas the earliest date among all tasks.</p>",type:["string","Date"],scope:"inner"}]},{name:"module:Gantt/model/ResourceModel",classDescription:"<p>This class represents a single resource in your Gantt project.</p>\n<p>If you want to add or change some fields, describing resources - subclass this class:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>class MyResourceModel extends ResourceModel {\n\n  static get fields() {\n    return [\n      { name: 'company', type: 'string' }\n    ]\n  }\n}\n</code></pre>\n<p>See also: <a href=\"#Gantt/model/AssignmentModel\">Gantt/model/AssignmentModel</a></p>",extends:["SchedulerPro/model/ResourceModel"],constructor:{name:"constructor"},filename:"ResourceModel.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/model",lineno:26,typings:"SchedulerPro/model/ResourceModel -> SchedulerPro/model/ProResourceModel"},{name:"module:Gantt/model/SubProjectModel",classDescription:"<p>This class represents a single Sub-project in your Gantt project.</p>",extends:["SchedulerPro/model/ProSubProjectModel"],constructor:{name:"constructor"},filename:"SubProjectModel.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/model",lineno:11},{name:"module:Gantt/model/TaskModel",classDescription:'<p>This class represents a task in your Gantt project. Extend it to add your own custom task fields and methods.</p>\n<h2>Subclassing the TaskModel class</h2>\n<p>To subclass the TaskModel, please see the snippet below.</p>\n<pre class="prettyprint source lang-javascript"><code> class MyTaskModel extends TaskModel {\n    static get fields() {\n        return [\n            { name: \'deadlineDate\', type: \'date\' }\n        ]\n    }\n\n    get calculateDeadline() {\n        // TODO implement\n    }\n</code></pre>\n<h2>Creating a new Task programmatically</h2>\n<p>To create a new task programmatically, simply call the TaskModel constructor and pass in any field values.</p>\n<pre class="prettyprint source lang-javascript"><code>var newTask = new TaskModel({\n    name        : \'My awesome task\',\n    percentDone : 80, // So awesome it\'s almost done\n    ...\n});\n</code></pre>\n<h2>Start and end dates</h2>\n<p>For all tasks, the end date is non-inclusive: <a href="#Gantt/model/TaskModel#field-startDate">startDate</a> &lt;= date &lt; <a href="#Gantt/model/TaskModel#field-endDate">endDate</a>.\nExample: a task which starts at 2020/07/18 and has 2 days duration, should have the end date: 2020/07/20, <strong>not</strong> 2018/07/19 23:59:59.\nThe start and end dates of tasks in are <em>points</em> on the time axis and if you specify that a task starts\n01/01/2020 and has 1 day duration, that means the start point is 01/01/2020 00:00 and end point is 02/01/2020 00:00.</p>',extends:["Scheduler/model/TimeSpan"],mixes:["Core/mixin/Events","SchedulerPro/data/mixin/PartOfProject"],constructor:{name:"constructor"},filename:"TaskModel.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/model",lineno:67,properties:[{name:"convertEmptyParentToLeaf",description:'<p>This static configuration option allows you to control whether an empty parent task should be converted into a\nleaf. Enable/disable it for a whole class:</p>\n<pre class="prettyprint source lang-javascript"><code>TaskModel.convertEmptyParentToLeaf = false;\n</code></pre>\n<p>By specifying <code>true</code>, all empty parents will be considered leafs. Can also be assigned a configuration object\nwith with the following Boolean properties to customize the behaviour:</p>\n<ul>\n<li><code>onLoad</code> - Apply the transformation on load to any parents without children (<code>children : []</code>)</li>\n<li><code>onRemove</code> - Apply the transformation when all children have been removed from a parent</li>\n</ul>\n<pre class="prettyprint source lang-javascript"><code>TaskModel.convertEmptyParentToLeaf = {\n    onLoad   : false,\n    onRemove : true\n}\n</code></pre>',type:{names:["Boolean","Object"]},scope:"static",defaultvalue:"true",category:"Parent & children"},{name:"isStarted",description:'<p>Indicates if the task is started (its <a href="#Gantt/model/TaskModel#field-percentDone">percent completion</a> is greater than zero).</p>',scope:"instance",returns:[{type:{names:["Boolean"]},description:"<p><code>true</code> if the task is started.</p>"}]},{name:"isCompleted",description:'<p>Indicates if the task is complete (its <a href="#Gantt/model/TaskModel#field-percentDone">percent completion</a> is 100% (or greater)).</p>',scope:"instance",returns:[{type:{names:["Boolean"]},description:"<p><code>true</code> if the task is completed.</p>"}]},{name:"isInProgress",description:'<p>Indicates if the task is in progress (its <a href="#Gantt/model/TaskModel#field-percentDone">percent completion</a> is greater than zero and less than 100%).</p>',scope:"instance",returns:[{type:{names:["Boolean"]},description:"<p><code>true</code> if the task is in progress.</p>"}]},{name:"allDependencies",description:"<p>Returns all dependencies of this task (both incoming and outgoing)</p>",scope:"instance",returns:[{type:{names:["Array.<Gantt.model.DependencyModel>"]}}]},{name:"predecessorTasks",description:"<p>Returns all predecessor tasks of a task</p>",scope:"instance",returns:[{type:{names:["Array.<Gantt.model.TaskModel>"]}}]},{name:"successorTasks",description:"<p>Returns all successor tasks of a task</p>",scope:"instance",returns:[{type:{names:["Array.<Gantt.model.TaskModel>"]}}]},{name:"previousSiblingsTotalCount",description:"<p>Returns count of all sibling nodes (including their children).</p>",scope:"instance",properties:[{type:{names:["Number"]}}]},{name:"sequenceNumber",description:"<p>Returns the sequential number of the task. A sequential number means the ordinal position of the task in the total dataset, regardless\nof its nesting level and collapse/expand state of any parent tasks. The root node has a sequential number equal to 0.</p>\n<p>For example, in the following tree data sample sequential numbers are specified in the comments:</p>\n<pre><code>   root : {\n       children : [\n           {   // 1\n               leaf : true\n           },\n           {       // 2\n               children : [\n                   {   // 3\n                       children : [\n                           {   // 4\n                               leaf : true\n                           },\n                           {   // 5\n                               leaf : true\n                           }\n                       ]\n                   }]\n           },\n           {   // 6\n               leaf : true\n           }\n       ]\n   }\n</code></pre>\n<p>If we will collapse some of the parent tasks, sequential number of collapsed tasks won't change.</p>",scope:"instance",properties:[{type:{names:["Number"]}}]},{name:"subProject",access:"internal",description:'<p>Returns the <a href="#Gantt/model/SubProjectModel">project</a> instance, associated with this task if this task belongs to a project</p>',scope:"instance",returns:[{type:{names:["Gantt.model.SubProjectModel"]},description:"<p>project</p>"}]},{name:"fullEffort",description:"<p>Property which encapsulates the effort's magnitude and units.</p>",scope:"instance",properties:[{type:{names:["Core.data.Duration"]},name:"fullEffort"}]},{name:"outgoingDeps",description:"<p>A <code>Set&lt;Gantt.model.DependencyModel&gt;</code> of the outgoing dependencies for this task</p>",scope:"inner",readonly:true,properties:[{type:{names:["Set"]}}]},{name:"incomingDeps",description:"<p>A <code>Set&lt;Gantt.model.DependencyModel&gt;</code> of the incoming dependencies for this task</p>",scope:"inner",readonly:true,properties:[{type:{names:["Set"]}}]},{name:"assignments",description:"<p>An array of the assignments, related to this task</p>",scope:"inner",readonly:true,properties:[{type:{names:["Array.<Gantt.model.AssignmentModel>"]}}]}],fields:[{name:"id",description:"<p>Unique identifier of task (mandatory)</p>",type:["string","number"],scope:"inner"},{name:"name",description:"<p>Name of the task</p>",type:"string",scope:"inner"},{name:"startDate",description:"<p>Start date of the task in ISO 8601 format</p>",type:["string","Date"],scope:"inner"},{name:"endDate",description:"<p>End date of the task in ISO 8601 format</p>",type:["string","Date"],scope:"inner"},{name:"cls",description:"<p>An encapsulation of the CSS classes to be added to the rendered event element.</p>",type:["Core.helper.util.DomClassList","String"],scope:"inner"},{name:"effort",description:"<p>The numeric part of the task effort (the number of units). The effort of the &quot;parent&quot; tasks will be automatically set to the sum\nof efforts of their &quot;child&quot; tasks</p>",type:"number",scope:"inner"},{name:"durationUnit",description:'<p>The unit part of the task duration, defaults to &quot;day&quot; (days). Valid values are:</p>\n<ul>\n<li>&quot;millisecond&quot; - Milliseconds</li>\n<li>&quot;second&quot; - Seconds</li>\n<li>&quot;minute&quot; - Minutes</li>\n<li>&quot;hour&quot; - Hours</li>\n<li>&quot;day&quot; - Days</li>\n<li>&quot;week&quot; - Weeks</li>\n<li>&quot;month&quot; - Months</li>\n<li>&quot;quarter&quot; - Quarters</li>\n<li>&quot;year&quot;- Years</li>\n</ul>\n<p>This field is readonly after creation, to change it use the <a href="#Gantt/model/TaskModel#function-setDuration">setDuration</a> call.</p>',type:"String",scope:"inner",defaultvalue:'"day"'},{name:"effortUnit",description:'<p>The unit part of the task\'s effort, defaults to &quot;h&quot; (hours). Valid values are:</p>\n<ul>\n<li>&quot;millisecond&quot; - Milliseconds</li>\n<li>&quot;second&quot; - Seconds</li>\n<li>&quot;minute&quot; - Minutes</li>\n<li>&quot;hour&quot; - Hours</li>\n<li>&quot;day&quot; - Days</li>\n<li>&quot;week&quot; - Weeks</li>\n<li>&quot;month&quot; - Months</li>\n<li>&quot;quarter&quot; - Quarters</li>\n<li>&quot;year&quot;- Years</li>\n</ul>\n<p>This field is readonly after creation, to change it use the <a href="#Gantt/model/TaskModel#function-setEffort">setEffort</a> call.</p>',type:"String",scope:"inner",defaultvalue:'"hour"'},{name:"calendar",description:'<p>The calendar, assigned to the task. Allows you to set the time when task can be performed.</p>\n<p>All tasks by default are assigned to the project calendar, provided as the <a href="#Gantt/model/ProjectModel#field-calendar">calendar</a> option.</p>',type:"Gantt.model.CalendarModel",scope:"inner"},{name:"baselines",description:'<p>The getter will yield a <a href="#Core/data/Store">Store</a> of <a href="#Gantt/model/Baseline">Gantt.model.Baseline</a>s.</p>\n<p>When constructing a task the baselines will be constructed from an array of\n<a href="#Gantt/model/Baseline">Baseline</a> data objects.</p>',type:"Array.<Object>",scope:"inner"},{name:"note",description:"<p>A freetext note about the task.</p>",type:"String",scope:"inner"},{name:"percentDone",description:"<p>The current status of a task, expressed as the percentage completed (integer from 0 to 100)</p>",type:"number",scope:"inner"},{name:"constraintType",description:"<p>Field storing the task constraint alias or NULL if not constraint set.\nValid values are:</p>\n<ul>\n<li>&quot;finishnoearlierthan&quot;</li>\n<li>&quot;finishnolaterthan&quot;</li>\n<li>&quot;mustfinishon&quot;</li>\n<li>&quot;muststarton&quot;</li>\n<li>&quot;startnoearlierthan&quot;</li>\n<li>&quot;startnolaterthan&quot;</li>\n</ul>",type:"String",scope:"inner"},{name:"constraintDate",description:"<p>Field defining the constraint boundary date, if applicable.</p>",type:"Date",scope:"inner"},{name:"manuallyScheduled",description:"<p>When set to <code>true</code>, the <code>startDate</code> of the task will not be changed by any of its incoming dependencies\nor constraints.</p>",type:"boolean",scope:"inner"},{name:"schedulingMode",description:'<p>This field defines the scheduling mode for the task. Based on this field some fields of the task\nwill be &quot;fixed&quot; (should be provided by the user) and some - computed.</p>\n<p>Possible values are:</p>\n<ul>\n<li>\n<p><code>Normal</code> is the default (and backward compatible) mode. It means the task will be scheduled based on information\nabout its start/end dates, task own calendar (project calendar if there\'s no one) and calendars of the assigned resources.</p>\n</li>\n<li>\n<p><code>FixedDuration</code> mode means, that task has fixed start and end dates, but its effort will be computed dynamically,\nbased on the assigned resources information. Typical example of such task is - meeting. Meetings typically have\npre-defined start and end dates and the more people are participating in the meeting, the more effort is spent on the task.\nWhen duration of such task increases, its effort is increased too (and vice-versa). Note: fixed start and end dates\nhere doesn\'t mean that a user can\'t update them via GUI, the only field which won\'t be editable in GUI is the <a href="#Gantt/model/TaskModel#field-effort">effort field</a>,\nit will be calculated according to duration and resources assigned to the task.</p>\n</li>\n<li>\n<p><code>FixedEffort</code> mode means, that task has fixed effort and computed duration. The more resources will be assigned\nto this task, the less the duration will be. The typical example will be a &quot;paint the walls&quot; task -\nseveral painters will complete it faster.</p>\n</li>\n<li>\n<p><code>FixedUnits</code> mode means, that the assignment level of all assigned resources\nwill be kept as provided by the user, and either <a href="#Gantt/model/TaskModel#field-effort">effort</a> or duration of the task is recalculated,\nbased on the <a href="#Gantt/model/TaskModel#field-effortDriven">effortDriven</a> flag.</p>\n</li>\n</ul>',type:"string",scope:"inner"},{name:"effortDriven",description:'<p>This boolean flag defines what part of task data should be updated in the <code>FixedUnits</code> scheduling mode.\nIf it is <code>true</code>, then <a href="#Gantt/model/TaskModel#field-effort">effort</a> is kept intact, and duration is updated. If it is <code>false</code> - vice-versa.</p>',type:"Boolean",scope:"inner",defaultvalue:"false"},{name:"earlyStartDate",description:"<p>A calculated field storing the <em>early start date</em> of the task.\nThe <em>early start date</em> is the earliest possible date the task can start.\nThis value is calculated based on the earliest dates of the task predecessors and the task own constraints.\nIf the task has no predecessors nor other constraints, its early start date matches the project start date.</p>",type:"Date",scope:"inner",calculated:true},{name:"earlyEndDate",description:"<p>A calculated field storing the <em>early end date</em> of the task.\nThe <em>early end date</em> is the earliest possible date the task can finish.\nThis value is calculated based on the earliest dates of the task predecessors and the task own constraints.\nIf the task has no predecessors nor other constraints, its early end date matches the project start date plus the task duration.</p>",type:"Date",scope:"inner",calculated:true},{name:"lateStartDate",description:"<p>A calculated field storing the <em>late start date</em> of the task.\nThe <em>late start date</em> is the latest possible date the task can start.\nThis value is calculated based on the latest dates of the task successors and the task own constraints.\nIf the task has no successors nor other constraints, its late start date matches the project end date minus the task duration.</p>",type:"Date",scope:"inner",calculated:true},{name:"lateEndDate",description:"<p>A calculated field storing the <em>late end date</em> of the task.\nThe <em>late end date</em> is the latest possible date the task can finish.\nThis value is calculated based on the latest dates of the task successors and the task own constraints.\nIf the task has no successors nor other constraints, its late end date matches the project end date.</p>",type:"Date",scope:"inner",calculated:true},{name:"totalSlack",description:'<p>A calculated field storing the <em>total slack</em> (or <em>total float</em>) of the task.\nThe <em>total slack</em> is the amount of working time the task can be delayed without causing a delay\nto the project end.\nThe value is expressed in <a href="#Gantt/model/TaskModel#field-slackUnit">slackUnit</a> units.</p>\n<pre class="prettyprint source lang-javascript"><code>// let output slack info to the console\nconsole.log(`The ${task.name} task can be delayed for ${task.totalSlack} ${slackUnit}s`)\n</code></pre>',type:"Number",scope:"inner",calculated:true},{name:"slackUnit",description:'<p>A calculated field storing unit for the <a href="#Gantt/model/TaskModel#field-totalSlack">totalSlack</a> value.</p>',type:"String",scope:"inner",defaultvalue:'"day"'},{name:"critical",description:'<p>A calculated field indicating if the task is <em>critical</em>.\nA task considered <em>critical</em> if its delaying causes the project delay.\nThe field value is calculated based on <a href="#Gantt/model/TaskModel#field-totalSlack">totalSlack</a> field value.</p>\n<pre class="prettyprint source lang-javascript"><code>if (task.critical) {\n    Toast.show(`The ${task.name} is critical!`);\n}\n</code></pre>',type:"Boolean",scope:"inner",calculated:true},{name:"showInTimeline",description:"<p>Set this to true if this task should be shown in the Timeline widget</p>",type:"Boolean",scope:"inner"},{name:"rollup",description:"<p>Set this to true to roll up a task to its closest parent</p>",type:"Boolean",scope:"inner"},{name:"deadlineDate",description:"<p>A deadline date for this task. Does not affect scheduling logic.</p>",type:"Date",scope:"inner"},{name:"iconCls",description:"<p>CSS class specifying an icon to apply to the task row</p>",type:"string",scope:"inner"},{name:"taskIconCls",description:"<p>CSS class specifying an icon to apply to the task ba</p>",type:"string",scope:"inner"},{name:"draggable",description:'<p>Specify false to prevent the event from being dragged (if <a href="#Gantt/feature/TaskDrag">Gantt/feature/TaskDrag</a> feature is used)</p>',type:"boolean",scope:"inner",defaultvalue:"true"},{name:"resizable",description:"<p>Specify false to prevent the task from being resized (if <a href=\"#Gantt/feature/TaskResize\">Gantt/feature/TaskResize</a> feature is used). You can also\nspecify 'start' or 'end' to only allow resizing in one direction</p>",type:["boolean","string"],scope:"inner",defaultvalue:"true"}],functions:[{name:"propagate",description:"<p>Propagates changes to the dependent tasks. For example:</p>\n<pre class=\"prettyprint source lang-js\"><code>// double a task duration\ntask.duration *= 2;\n// call propagate() to do further recalculations caused by the duration change\ntask.propagate().then(() => console.log('Schedule updated'));\n</code></pre>",parameters:[{name:"onEffect",description:'<p>Function that should handle occurred propagation conflicts. For example:</p>\n<pre class="prettyprint source lang-js"><code>// trigger propagation and silently cancel changes in case of any conflict\nproject.propagate(() => EffectResolutionResult.Cancel);\n</code></pre>'}],scope:"inner",propagating:true,returns:{type:"Promise"},async:true},{name:"setBaseline",description:"<p>Sets the data in the passed baseline index to the current state of this task.</p>",parameters:[{name:"index",type:"Number",description:"<p>The index in the baselines list of the baseline to update.</p>"}],scope:"instance"},{name:"convertToMilestone",description:"<p>Converts this task to a milestone (start date will match the end date).</p>",scope:"instance",propagating:true},{name:"convertToRegular",description:'<p>Converts the milestone task to a regular task with a duration of 1 (keeping current <a href="#Gantt/model/TaskModel#field-durationUnit">durationUnit</a>).</p>',scope:"instance",propagating:true},{name:"getAssignmentFor",description:'<p>If given resource is assigned to this task, returns a <a href="#Gantt/model/AssignmentModel">Gantt.model.AssignmentModel</a> record.\nOtherwise returns <code>null</code></p>',parameters:[{name:"resource",type:"Gantt.model.ResourceModel",description:'<p>The instance of <a href="#Gantt/model/ResourceModel">Gantt.model.ResourceModel</a></p>'}],scope:"inner",returns:{type:["Gantt.model.AssignmentModel","null"]}},{name:"assign",description:"<p>This method assigns a resource to this task.</p>\n<p>Will cause the schedule to be updated - returns a <code>Promise</code></p>",parameters:[{name:"resource",type:"Gantt.model.ResourceModel",description:'<p>The instance of <a href="#Gantt/model/ResourceModel">Gantt.model.ResourceModel</a></p>'},{name:"units",type:"Number",description:"<p>The <code>units</code> field of the new assignment</p>",default:100,optional:true}],scope:"inner",propagating:true,returns:{type:"Promise"},async:true},{name:"unassign",description:"<p>This method unassigns a resource from this task.</p>\n<p>Will cause the schedule to be updated - returns a <code>Promise</code></p>",parameters:[{name:"resource",type:"Gantt.model.ResourceModel",description:'<p>The instance of <a href="#Gantt/model/ResourceModel">Gantt.model.ResourceModel</a></p>'}],scope:"inner",propagating:true,returns:{type:"Promise"},async:true},{name:"setCalendar",description:"<p>Sets the calendar of the task. Will cause the schedule to be updated - returns a <code>Promise</code></p>",parameters:[{name:"calendar",type:"Gantt.model.CalendarModel",description:"<p>The new calendar. Provide <code>null</code> to return back to the project calendar.</p>"}],scope:"inner",propagating:true,returns:{type:"Promise"},async:true},{name:"getCalendar",description:"<p>Returns a calendar of the task. If task has never been assigned a calendar the project's calendar will be returned.</p>",scope:"inner",returns:{type:"Gantt.model.CalendarModel"}},{name:"setStartDate",description:"<p>Sets the start date of the task. Will cause the schedule to be updated - returns a <code>Promise</code></p>\n<p>Note, that the actually set start date may be adjusted, according to the calendar, by skipping the non-working time forward.</p>",parameters:[{name:"date",type:"Date",description:"<p>The new start date.</p>"},{name:"keepDuration",type:"Boolean",description:"<p>Whether to keep the duration (and update the end date), while changing the start date, or vice-versa.</p>",default:true,optional:true}],scope:"inner",propagating:true,returns:{type:"Promise"},async:true},{name:"setEndDate",description:"<p>Sets the end date of the task. Will cause the schedule to be updated - returns a <code>Promise</code></p>\n<p>Note, that the actually set end date may be adjusted, according to the calendar, by skipping the non-working time backward.</p>",parameters:[{name:"date",type:"Date",description:"<p>The new end date.</p>"},{name:"keepDuration",type:"Boolean",description:"<p>Whether to keep the duration (and update the start date), while changing the end date, or vice-versa.</p>",default:false,optional:true}],scope:"inner",propagating:true,returns:{type:"Promise"},async:true},{name:"setDuration",description:"<p>Updates the duration (and optionally unit) of the task. Will cause the schedule to be updated - returns a <code>Promise</code></p>",parameters:[{name:"duration",type:"Number",description:"<p>New duration value</p>"},{name:"unit",type:"String",description:"<p>New duration unit</p>",optional:true}],scope:"inner",propagating:true,returns:{type:"Promise"},async:true},{name:"setEffort",description:"<p>Updates the effort (and optionally unit) of the task. Will cause the schedule to be updated - returns a <code>Promise</code></p>",parameters:[{name:"effort",type:"Number",description:"<p>New effort value</p>"},{name:"unit",type:"String",description:"<p>New effort unit</p>",optional:true}],scope:"inner",propagating:true,returns:{type:"Promise"},async:true},{name:"setConstraint",description:"<p>Sets the constraint type and (optionally) constraining date to the task.</p>",parameters:[{name:"constraintType",type:"String",description:'<p>Constraint type, please refer to the <a href="#Gantt/model/TaskModel#field-constraintType">constraintType</a> for the valid values.</p>'},{name:"constraintDate",type:"Date",description:"<p>Constraint date.</p>",optional:true}],scope:"inner",propagating:true,returns:{type:"Promise"},async:true},{name:"setStartEndDate",description:"<p>WARNING: Not (yet) supported by the underlying scheduling engine</p>",parameters:[{name:"start",type:"Date",description:"<p>The new start date</p>"},{name:"end",type:"Date",description:"<p>The new end date</p>"}],scope:"instance"}]},{name:"module:Gantt/model/TaskSegmentModel",classDescription:"<p>This class represents a segment of a split task in your Gantt project.</p>",extends:["SchedulerPro/model/ProTaskSegmentModel"],constructor:{name:"constructor"},filename:"TaskSegmentModel.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/model",lineno:12},{name:"module:Gantt/util/ProjectGenerator",classDescription:"<p>Generates sample project for Examples and Tests</p>",constructor:{name:"constructor"},filename:"ProjectGenerator.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/util",lineno:21},{name:"module:Gantt/view/Gantt",classDescription:'<h2>Summary</h2>\nThe <b>Gantt</b> widget is the main component that visualizes the project data contained in a\n <a href="#Gantt/model/ProjectModel">ProjectModel</a> instance. The Gantt view is implemented as a treegrid consisting\n of a left section showing the task hierarchy (or WBS) and a right section showing a graphical representation of the tasks on the time axis.\n Task relationships (or "dependencies") are rendered as arrows between the tasks and in the background you can (optionally) render non-working time too.\n<p>The view is very interactive by default:</p>\n<ul>\n<li>hovering over elements shows informative tooltips</li>\n<li>right-clicking various elements shows context menus</li>\n<li>double-clicking the task name shows an inline editor</li>\n<li>double-clicking a task bar opens a detailed task editor popup</li>\n<li>task bars can be dragged and resized</li>\n<li>task progress can be changed by drag drop</li>\n<li>task dependencies can be created by drag drop</li>\n</ul>\n<p>The Gantt view is very easy to use and is fully functional with minimal configuration yet\nit is highly configurable through many configuration options and features.</p>\n<p>The minimum configuration consists of a <a href="#Gantt/view/Gantt#config-project">project</a> and <a href="#Grid/view/Grid#config-columns">columns</a>.\n(If you only want to show the &quot;Name&quot; column, you can even omit <code>columns</code> as it\'s the default column set.)</p>\n<p><div class="external-example" data-file="gantt/Gantt.js">\n            <i class="b-icon b-icon-code b-inline-example"></i>\n            <div class="external-code-container">\n                <div class="external-code example">\n                    <pre><code>\n                    </code></pre>\n                </div>\n            </div>\n            <div class="external-target"></div>\n       </div></p>\n<h2>Configuring data for Gantt</h2>\nThe central place for all data visualized in the Gantt chart is the <a href="#Gantt/model/ProjectModel">ProjectModel</a> instance, passed as the <a href="#Gantt/view/Gantt#config-project">project</a>\nconfiguration option when configuring the Gantt.\n<p>For details related to the Gantt data structure / updating data / loading and saving data to the server,\nadding custom fields and other information, please refer to the <a href="#guides/project_data.md">Project data guide</a>.</p>\n<h2>Configuring columns</h2>\nThe only mandatory column is the <code>name</code> column which is of type <a href="#Gantt/column/NameColumn">NameColumn</a>.\nIt is a tree column that shows the project WBS structure, and allows inline editing of the\n<a href="#Gantt/model/TaskModel#field-name">name</a> field.\n<p>The Gantt chart ships with lots of predefined columns (such as {@link Gantt.column.PercentDoneColumn PercentDoneColumn) but you can of course add your own columns too, showing any additional data in your data model.</p>\n<p><div class="external-example" data-file="gantt/GanttColumns.js">\n            <i class="b-icon b-icon-code b-inline-example"></i>\n            <div class="external-code-container">\n                <div class="external-code example">\n                    <pre><code>\n                    </code></pre>\n                </div>\n            </div>\n            <div class="external-target"></div>\n       </div></p>\n<h2>Advanced configurations</h2>\nAlmost any aspect of Bryntum Gantt can be configured. The included examples cover most of the supported configuration options.\nTo see some of the features in action, please click on the links below:\n<ul>\n<li><a href="../examples/labels/">Labels</a></li>\n<li><a href="../examples/tooltips">Tooltips</a></li>\n<li><a href="../examples/timeranges/">Time Ranges</a></li>\n<li><a href="../examples/resourceassignment/">Resource Picker</a></li>\n<li><a href="../examples/taskcontextmenu/">Context Menu</a></li>\n<li><a href="../examples/taskeditor/">Task Editor</a></li>\n<li><a href="../examples/undoredo/">Undo/Redo</a></li>\n<li><a href="../examples/advanced">Advanced</a></li>\n</ul>',extends:["Gantt/view/GanttBase"],constructor:{name:"constructor"},filename:"Gantt.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/view",lineno:98,configs:[{name:"crudManagerClass",access:"private",description:"<p><strong>This config is not used in the Gantt</strong></p>",type:"Scheduler.crud.AbstractCrudManagerMixin",scope:"inner"},{name:"crudManager",access:"private",description:'<p><strong>This config is not used in the Gantt. Please use <a href="#Gantt/view/Gantt#config-project">project</a> config instead</strong></p>',type:["Object","Scheduler.crud.AbstractCrudManagerMixin"],scope:"inner"}]},{name:"module:Gantt/view/GanttBase",classDescription:'<p>A thin base class for <a href="#Gantt/view/Gantt">Gantt.view.Gantt</a>. Does not include any features by default, allowing smaller custom\nbuilt bundles if used in place of <a href="#Gantt/view/Gantt">Gantt.view.Gantt</a>.</p>',extends:["Scheduler/view/TimelineBase"],mixes:["Gantt/view/mixin/GanttDom","Gantt/view/mixin/GanttRegions","Gantt/view/mixin/GanttScroll","Gantt/view/mixin/GanttState","Gantt/view/mixin/GanttStores","Scheduler/crud/mixin/CrudManagerView","Scheduler/view/mixin/EventNavigation","Gantt/view/mixin/TaskNavigation"],constructor:{name:"constructor"},filename:"GanttBase.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/view",lineno:65,events:[{name:"taskMouseDown",description:"<p>Triggered after a mousedown on a task bar.</p>",parameters:[{name:"source",type:"Gantt.view.Gantt",description:"<p>The Gantt instance</p>"},{name:"taskRecord",type:"Gantt.model.TaskModel",description:"<p>The Task record</p>"},{name:"event",type:"MouseEvent",description:"<p>The native browser event</p>"}]},{name:"taskMouseUp",description:"<p>Triggered after a mouseup on a task bar.</p>",parameters:[{name:"source",type:"Gantt.view.Gantt",description:"<p>The Gantt instance</p>"},{name:"taskRecord",type:"Gantt.model.TaskModel",description:"<p>The Task record</p>"},{name:"event",type:"MouseEvent",description:"<p>The native browser event</p>"}]},{name:"taskClick",description:"<p>Triggered after a click on a task bar.</p>",parameters:[{name:"source",type:"Gantt.view.Gantt",description:"<p>The Gantt instance</p>"},{name:"taskRecord",type:"Gantt.model.TaskModel",description:"<p>The Task record</p>"},{name:"event",type:"MouseEvent",description:"<p>The native browser event</p>"}]},{name:"taskDblClick",description:"<p>Triggered after a doubleclick on a task.</p>",parameters:[{name:"source",type:"Gantt.view.Gantt",description:"<p>The Gantt instance</p>"},{name:"taskRecord",type:"Gantt.model.TaskModel",description:"<p>The Task record</p>"},{name:"event",type:"MouseEvent",description:"<p>The native browser event</p>"}]},{name:"taskContextMenu",description:"<p>Triggered after a rightclick (or long press on a touch device) on a task.</p>",parameters:[{name:"source",type:"Gantt.view.Gantt",description:"<p>The Gantt instance</p>"},{name:"taskRecord",type:"Gantt.model.TaskModel",description:"<p>The Task record</p>"},{name:"event",type:"MouseEvent",description:"<p>The native browser event</p>"}]},{name:"taskMouseOver",description:"<p>Triggered after a mouseover on a task.</p>",parameters:[{name:"source",type:"Gantt.view.Gantt",description:"<p>The Gantt instance</p>"},{name:"taskRecord",type:"Gantt.model.TaskModel",description:"<p>The Task record</p>"},{name:"event",type:"MouseEvent",description:"<p>The native browser event</p>"}]},{name:"taskMouseOut",description:"<p>Triggered for mouseout from a task.</p>",parameters:[{name:"source",type:"Gantt.view.Gantt",description:"<p>The Gantt instance</p>"},{name:"taskRecord",type:"Gantt.model.TaskModel",description:"<p>The Task record</p>"},{name:"event",type:"MouseEvent",description:"<p>The native browser event</p>"}]},{name:"renderTask",description:"<p>Task is rendered, its element is available in DOM.</p>",parameters:[{name:"source",type:"Gantt.view.Gantt",description:"<p>The Gantt instance</p>"},{name:"renderData",type:"Object",description:"<p>Task render data</p>"},{name:"taskRecord",type:"Gantt.model.TaskModel",description:"<p>Rendered task</p>"},{name:"element",type:"HTMLElement",description:"<p>Task element</p>"}]},{name:"releaseTask",description:"<p>Task is released, no longer in view/removed. A good spot for cleaning custom things added in a <code>renderTask</code>\nlistener up, if needed.</p>",parameters:[{name:"source",type:"Gantt.view.Gantt",description:"<p>The Gantt instance</p>"},{name:"renderData",type:"Object",description:"<p>Task render data</p>"},{name:"taskRecord",type:"Gantt.model.TaskModel",description:"<p>Rendered task</p>"},{name:"element",type:"HTMLElement",description:"<p>Task element</p>"}]}],configs:[{name:"project",description:"<p>A Project instance or a config object. The project holds all Gantt data.</p>",type:["Gantt.model.ProjectModel","Object"],scope:"inner",category:"Common"},{name:"resourceImageFolderPath",description:"<p>The path for resource images, used by various widgets such as the resource assignment column.</p>",type:"String",scope:"inner",category:"Common"},{name:"defaultResourceImageName",description:"<p>The file name of an image file to use when a resource has no image, or its image cannot be loaded.</p>",type:"String",scope:"inner",category:"Common"},{name:"durationDisplayPrecision",description:"<p>Decimal precision used for displaying durations, used by tooltips and DurationColumn.\nSpecify <code>false</code> to use raw value</p>",type:["Number","Boolean"],scope:"inner",defaultvalue:1,category:"Common"},{name:"taskRenderer",description:"<p>An empty function by default, but provided so that you can override it. This function is called each time\na task is rendered into the gantt to render the contents of the task.</p>\n<p>Returning a string will display it in the task bar, it accepts both plain text or HTML. It is also\npossible to return a DOM config object which will be synced to the task bars content.</p>\n<pre class=\"prettyprint source lang-javascript\"><code>// using plain string\nnew Gantt({\n   taskRenderer : ({ taskRecord }) => taskRecord.name\n});\n\n// using html string\nnew Gantt({\n   taskRenderer : ({ taskRecord }) => `${taskRecord.id} &lt;b>${taskRecord.name}&lt;/b>`\n});\n\n// using DOM config\nnew Gantt({\n   taskRenderer({ taskRecord }) {\n      return {\n          tag  : 'b',\n          html : taskRecord.name\n      }\n   }\n});\n</code></pre>",type:"function",scope:"inner",returns:[{type:{names:["String"]},description:"<p>A simple string creating the actual HTML</p>"}],category:"Scheduled events",parameters:[{name:"detail",type:"Object",description:"<p>An object containing the information needed to render a Task.</p>"},{name:"detail.taskRecord",type:"Gantt.model.TaskModel",description:"<p>The task record.</p>",isSubParam:true},{name:"detail.tplData",type:"Object",description:"<p>DEPRECATED: Use renderData instead.</p>",isSubParam:true},{name:"detail.renderData",type:"Object",description:"<p>An object containing details about the task rendering.</p>",isSubParam:true},{name:"detail.renderData.cls",type:["Core.helper.util.DomClassList","String"],description:"<p>An object whose property names represent the CSS class names\nto be added to the tasks's element. Set a property's value to truthy or falsy to add or remove the class\nname based on the property name. Using this technique, you do not have to know whether the class is already\nthere, or deal with concatenation.</p>",isSubParam:true},{name:"detail.renderData.wrapperCls",type:["Core.helper.util.DomClassList","String"],description:"<p>An object whose property names represent the CSS class names\nto be added to the event wrapper element. Set a property's value to truthy or falsy to add or remove the class\nname based on the property name. Using this technique, you do not have to know whether the class is already\nthere, or deal with concatenation.</p>",isSubParam:true},{name:"detail.renderData.iconCls",type:["Core.helper.util.DomClassList","String"],description:"<p>An object whose property names represent the CSS class\nnames to be added to an task icon element.</p>",isSubParam:true},{name:"indicators",type:["Array.<Scheduler.model.TimeSpan>","Array.<Object>"],description:"<p>An array that can be populated with TimeSpan\nrecords or their config objects to have them rendered in the task row</p>"}]}],properties:[{name:"project",description:"<p>The project instance, containing the data visualized by this Gantt chart.</p>",scope:"inner",properties:[{type:{names:["Gantt.model.ProjectModel"]}}]}],functions:[{name:"indent",description:"<p>Increase the indentation level of one or more tasks in the tree</p>",parameters:[{name:"tasks",type:["Array.<Gantt.model.TaskModel>","Gantt.model.TaskModel"],description:"<p>The task(s) to indent.</p>"}],scope:"instance",returns:{type:"Promise",description:"<p>A promise which resolves if operation is successful</p>"},async:true},{name:"outdent",description:"<p>Decrease the indentation level of one or more tasks in the tree</p>",parameters:[{name:"tasks",type:["Array.<Gantt.model.TaskModel>","Gantt.model.TaskModel"],description:"<p>The task(s) to outdent.</p>"}],scope:"instance",returns:{type:"Promise",description:"<p>A promise which resolves if operation is successful</p>"},async:true}]},{name:"module:Gantt/view/mixin/GanttDom",description:"<p>Mixin with TaskModel &lt;-&gt; HTMLElement mapping functions</p>",mixin:true,constructor:{name:"constructor"},filename:"GanttDom.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/view/mixin",lineno:16,functions:[{name:"resolveTaskRecord",description:"<p>Returns the task record for a DOM element</p>",parameters:[{name:"element",type:"HTMLElement",description:"<p>The DOM node to lookup</p>"}],scope:"instance",returns:{type:"Gantt.model.TaskModel",description:"<p>The task record</p>"}},{name:"getElementFromTaskRecord",description:"<p>Returns the HTMLElement representing a task record.</p>",parameters:[{name:"taskRecord",type:"Gantt.model.TaskModel",description:"<p>A task record</p>"},{name:"inner",type:"Boolean",description:"<p>Specify <code>false</code> to return the task wrapper element</p>",default:true,optional:true}],scope:"instance",returns:{type:"HTMLElement",description:"<p>The element representing the task record</p>"}},{name:"getEventRenderId",access:"private",description:"<p>Generates the element <code>id</code> for an event element. This is used when\nrecycling an event div which has been moved from one resource to\nanother. The event is assigned its new render id <em>before</em> being\nreturned to the free pool, so that when the render engine requests\na div from the free pool, the same div will be returned and it will\nsmoothly transition to its new position.</p>",parameters:[{name:"eventRecord",type:"Scheduler.model.EventModel"},{name:"resourceRecord",type:"Scheduler.model.ResourceModel"}],scope:"instance"},{name:"getEventData",access:"private",description:"<p>In Gantt, the task is the row, so it's valid to resolve a mouse event on a task to the TimeAxisColumn's cell.</p>\n<p>This method find the cell location of the passed event. It returns an object describing the cell.</p>",parameters:[{name:"event",type:"Event",description:"<p>A Mouse, Pointer or Touch event targeted at part of the grid.</p>"}],scope:"instance",category:"Events",returns:{type:"Object",description:'<p>An object containing the following properties:</p>\n<ul>\n<li><code>cellElement</code> - The cell element clicked on.</li>\n<li><code>columnId</code> - The <code>id</code> of the column clicked under.</li>\n<li><code>record</code> - The <a href="#Core/data/Model">record</a> clicked on.</li>\n<li><code>id</code> - The <code>id</code> of the <a href="#Core/data/Model">record</a> clicked on.</li>\n</ul>'}}]},{name:"module:Gantt/view/mixin/GanttRegions",description:"<p>Functions to get regions (bounding boxes) for gantt, tasks etc.</p>",mixin:true,constructor:{name:"constructor"},filename:"GanttRegions.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/view/mixin",lineno:14,functions:[{name:"getScheduleRegion",description:"<p>Gets the region represented by the timeline and optionally only for a single task</p>",parameters:[{name:"taskRecord",type:"Gantt.model.TaskModel",description:"<p>(optional) The task record</p>"}],scope:"instance",returns:{type:"Object",description:"<p>The region of the schedule</p>"}},{name:"getTaskBox",description:"<p>Get the region for a specified task</p>",parameters:[{name:"taskRecord",type:"Gantt.model.TaskModel"},{name:"includeOutside",type:"Boolean",default:false,optional:true},{name:"inner",type:"Boolean",description:"<p>Specify true to return the box for the task bar within the wrapper.</p>",default:false,optional:true}],scope:"instance",returns:{type:"Core.helper.util.Rectangle"}}]},{name:"module:Gantt/view/mixin/GanttScroll",description:"<p>Functions for scrolling to tasks, dates etc.</p>",mixin:true,constructor:{name:"constructor"},filename:"GanttScroll.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/view/mixin",lineno:19,functions:[{name:"scrollTaskIntoView",description:"<p>Scrolls a task record into the viewport.</p>",parameters:[{name:"taskRecord",type:"Gantt.model.TaskModel",description:"<p>The task record to scroll into view</p>"},{name:"options",type:"Object",description:"<p>How to scroll.</p>",optional:true},{name:"options.block",type:"String",description:"<p>How far to scroll the event: <code>start/end/center/nearest</code>.</p>",default:"nearest",optional:true,isSubParam:true},{name:"options.edgeOffset",type:"Number",description:"<p>edgeOffset A margin <em>in pixels</em> around the event to bring into view.</p>",default:20,optional:true,isSubParam:true},{name:"options.animate",type:["Boolean","Number"],description:"<p>Set to <code>true</code> to animate the scroll, or the number of milliseconds to animate over.</p>",optional:true,isSubParam:true},{name:"options.highlight",type:"Boolean",description:"<p>Set to <code>true</code> to highlight the event element when it is in view.</p>",optional:true,isSubParam:true},{name:"options.focus",type:"Boolean",description:"<p>Set to <code>true</code> to focus the event element when it is in view.</p>",optional:true,isSubParam:true}],scope:"instance",returns:{type:"Promise",description:"<p>A Promise which resolves when the scrolling is complete.</p>"},async:true},{name:"scrollUnrenderedTaskIntoView",access:"private",description:"<p>Scrolls an unrendered task into view. Internal function used from #scrollTaskIntoView.</p>",scope:"instance"}]},{name:"module:Gantt/view/mixin/GanttState",description:'<p>Mixin for Gantt that handles state. It serializes the following gantt properties:</p>\n<ul>\n<li>barMargin</li>\n<li>tickSize</li>\n<li>zoomLevel</li>\n</ul>\n<p>See <a href="#Grid/view/mixin/GridState">Grid.view.mixin.GridState</a> and <a href="#Core/mixin/State">Core.mixin.State</a> for more information on state.</p>',mixin:true,constructor:{name:"constructor"},filename:"GanttState.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/view/mixin",lineno:23,functions:[{name:"getState",access:"private",description:"<p>Get gantts current state for serialization. State includes rowHeight, headerHeight, readOnly, selectedCell,\nselectedRecordId, column states and store state etc.</p>",scope:"instance",returns:{type:"Object",description:"<p>State object to be serialized</p>"}},{name:"applyState",access:"private",description:"<p>Apply previously stored state.</p>",parameters:[{name:"state",type:"Object"}],scope:"instance"}]},{name:"module:Gantt/view/mixin/GanttStores",description:'<p>Functions for store assignment and store event listeners.\nProperties are aliases to corresponding\nones of Gantt\'s <a href="#Gantt/model/ProjectModel">project</a> instance.</p>',mixin:true,constructor:{name:"constructor"},filename:"GanttStores.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/view/mixin",lineno:14,properties:[{name:"eventStore",description:'<p>Get <a href="#Gantt/data/TaskStore">TaskStore</a> instance.</p>',scope:"instance",returns:[{type:{names:["Gantt.data.TaskStore"]}}],readonly:true},{name:"taskStore",description:'<p>Get <a href="#Gantt/data/TaskStore">TaskStore</a> instance.\nAlias to <a href="#Gantt/view/mixin/GanttStores#property-eventStore">eventStore</a> instance.</p>',scope:"instance",returns:[{type:{names:["Gantt.data.TaskStore"]}}],readonly:true},{name:"assignmentStore",description:'<p>Get <a href="#Gantt/data/AssignmentStore">AssignmentStore</a> instance.</p>',scope:"instance",returns:[{type:{names:["Gantt.data.AssignmentStore"]}}],readonly:true},{name:"resourceStore",description:'<p>Get <a href="#Gantt/data/ResourceStore">ResourceStore</a> instance.</p>',scope:"instance",returns:[{type:{names:["Gantt.data.ResourceStore"]}}],readonly:true}]},{name:"module:Scheduler/view/mixin/TaskNavigation",description:"<p>Mixin that tracks event or assignment selection by clicking on one or more events in the scheduler.</p>",mixin:true,constructor:{name:"constructor"},filename:"TaskNavigation.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/view/mixin",lineno:12},{name:"module:Gantt/widget/AssignmentField",classDescription:'<p>Special field class to edit single event assignments.</p>\n<p>This field can be used as an editor for the <a href="#Grid/column/Column">Column</a>.\nIt is used as the default editor for the <a href="#Gantt/column/ResourceAssignmentColumn">ResourceAssignmentColumn</a></p>',extends:["Core/widget/PickerField"],constructor:{name:"constructor"},filename:"AssignmentField.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/widget",lineno:21,classType:"'assignmentfield'",configs:[{name:"pickerWidth",description:'<p>Width of picker, defaults to this field\'s <a href="#Core/widget/PickerField#config-pickerAlignElement">pickerAlignElement</a> width</p>',type:"Number",scope:"inner"},{name:"projectEvent",description:'<p>Event to load resource assignments for.\nEither event or <a href="#Gantt/widget/AssignmentField#config-store">store</a> should be given.</p>',type:"Gantt.model.TaskModel",scope:"inner"},{name:"store",description:'<p>Assignment manipulation store to use or it\'s configuration object.\nEither store or <a href="#Gantt/widget/AssignmentField#config-projectEvent">projectEvent</a> should be given</p>',type:["Core.data.Store","object"],scope:"inner"}]},{name:"module:Gantt/widget/AssignmentGrid",classDescription:'<p>This grid visualizes and edits current <a href="#Gantt/widget/AssignmentGrid#config-projectEvent">events</a> assignments.</p>',extends:["Grid/view/Grid"],constructor:{name:"constructor"},filename:"AssignmentGrid.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/widget",lineno:18,classType:"assignmentgrid",configs:[{name:"projectEvent",description:'<p>Event model to manipulate assignments of, the task should be part of a task store.\nEither task or <a href="#Grid/view/Grid#config-store">store</a> should be given.</p>',type:"Gantt.model.TaskModel",scope:"inner"}]},{name:"module:Gantt/widget/AssignmentPicker",classDescription:'<p>Class for assignment field dropdown, wraps <a href="#Gantt/widget/AssignmentGrid">Gantt/widget/AssignmentGrid</a> within a frame and adds two buttons: Save and Cancel</p>',access:"private",constructor:{name:"constructor"},filename:"AssignmentPicker.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/widget",lineno:16,configs:[{name:"grid",description:'<p>A config object used to modify the <a href="#Gantt/widget/AssignmentGrid">assignment grid</a>\nused to select resourtces to assign.</p>\n<p>This config is merged with the configuration of the picker\'s assignment grid, so features\ncan be added (or default features removed by using <code>featureName : false</code>).</p>\n<p>Any <code>columns</code> provided are concatenated onto the default column set.</p>',type:"Object",scope:"inner"},{name:"projectEvent",description:'<p>Event to load resource assignments for.\nEither event or <a href="#Gantt/widget/AssignmentPicker#config-store">store</a> should be given.</p>',type:"Gantt.model.TaskModel",scope:"inner"},{name:"store",description:'<p>Store for the picker.\nEither store or <a href="#Gantt/widget/AssignmentPicker#config-projectEvent">projectEvent</a> should be given</p>',type:"Gantt.data.AssignmentsManipulationStore",scope:"inner"}]},{name:"module:Gantt/widget/CalendarPicker",classDescription:'<p>Combo box preconfigured with possible calendar values. This picker doesn\'t support <a href="#Core/widget/Combo#config-multiSelect">multiSelect</a></p>\n<p>This field can be used as an editor for the <a href="#Grid/column/Column">Column</a>.\nIt is used as the default editor for the <a href="#Gantt/column/CalendarColumn">CalendarColumn</a>.</p>',extends:["Core/widget/Combo"],constructor:{name:"constructor"},filename:"CalendarPicker.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/widget",lineno:17,functions:[{name:"refreshCalendars",description:"<p>Replaces the field store records with the provided ones.</p>",parameters:[{name:"calendars",type:"Array.<Scheduler.data.Calendar>",description:"<p>New contents for the widget store.</p>"}],scope:"instance"}]},{name:"module:Gantt/widget/DependencyField",classDescription:'<p>Chooses dependencies, connector sides and lag time for dependencies of a Task.</p>\n<p>This field can be used as an editor for the <a href="#Grid/column/Column">Column</a>.\nIt is used as the default editor for the <a href="#Gantt/column/DependencyColumn">DependencyColumn</a>.</p>\n<p>The contextual task is the <code>record</code> property of this field\'s <a href="#Core/widget/Widget#property-owner">owner</a>.</p>',extends:["Core/widget/Combo"],constructor:{name:"constructor"},filename:"DependencyField.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/widget",lineno:49,classType:"predecessor",configs:[{name:"delimiter",description:"<p>Delimiter between dependency ids in the field</p>",type:"String",scope:"inner",defaultvalue:";"},{name:"otherSide",description:"<p>The other task's relationship with this field's contextual task.\nThis will be <code>'from'</code> if we are editing predecessors, and <code>'to'</code> if\nwe are editing successors.</p>",type:"String",scope:"inner"},{name:"ourSide",description:"<p>This field's contextual task's relationship with the other task.\nThis will be <code>'to'</code> if we are editing predecessors, and <code>'from'</code> if\nwe are editing successors.</p>",type:"String",scope:"inner"}]},{name:"module:Gantt/widget/TaskEditor",classDescription:'<p>Provides a UI to edit tasks in a popup dialog. It is implemented as a Tab Panel with\nseveral preconfigured built-in tabs. Although the default configuration may be adequate\nin many cases, the Task Editor is easily configurable.</p>\n<p>To hide built-in tabs or to add custom tabs, use the <a href="#Gantt/widget/TaskEditor#config-tabsConfig">tabsConfig</a> config.</p>\n<p>To append Widgets to any of the built-in tabs, use the <a href="#Gantt/widget/TaskEditor#config-extraItems">extraItems</a> config.</p>\n<p>Built-in tab names are:</p>\n<ul>\n<li>generaltab</li>\n<li>predecessorstab</li>\n<li>successorstab</li>\n<li>resourcestab</li>\n<li>advancedtab</li>\n<li>notestab</li>\n</ul>\n<h2>Task editor customization example</h2>\nWhen you add a custom field you can specify Field <a href="#Core/widget/Field#config-name">name</a>.\nIt will be used prior to <a href="#Core/widget/Widget#config-ref">ref</a> and <a href="#Core/widget/Widget#config-id">id</a>\nto load/save data automatically. Field name should match data field name.\n<p><div class="external-example" data-file="gantt/feature/TaskEditCustom.js">\n            <i class="b-icon b-icon-code b-inline-example"></i>\n            <div class="external-code-container">\n                <div class="external-code example">\n                    <pre><code>\n                    </code></pre>\n                </div>\n            </div>\n            <div class="external-target"></div>\n       </div></p>',extends:["SchedulerPro/widget/GanttTaskEditor"],constructor:{name:"constructor"},filename:"TaskEditor.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/widget",lineno:35,externalExamples:["gantt/widget/TaskEditor.js"]},{name:"module:Gantt/widget/Timeline",classDescription:'<p>A visual component showing an overview timeline of tasks having the <a href="#Gantt/model/TaskModel#field-showInTimeline">showInTimeline</a> field set to true. The timeline component subclasses the <a href="#Scheduler/view/Scheduler">Scheduler</a> and to use it,\nsimply provide it with a <a href="#Gantt/model/ProjectModel">Gantt.model.ProjectModel</a>:</p>\n<pre class="prettyprint source lang-javascript"><code>const timeline = new Timeline({\n    appendTo  : \'container\',\n    project   : project\n});\n</code></pre>\n<p><div class="external-example" data-file="gantt/widget/Timeline.js">\n            <i class="b-icon b-icon-code b-inline-example"></i>\n            <div class="external-code-container">\n                <div class="external-code example">\n                    <pre><code>\n                    </code></pre>\n                </div>\n            </div>\n            <div class="external-target"></div>\n       </div></p>',extends:["Scheduler/view/Scheduler"],constructor:{name:"constructor"},filename:"Timeline.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Gantt/widget",lineno:29,classType:"timeline",configs:[{name:"project",description:"<p>Project config object or a Project instance</p>",type:["Gantt.model.ProjectModel","Object"],scope:"inner"}]},{name:"module:Grid/column/ActionColumn",classDescription:"<p>A column that displays actions (clickable icons) in the cell.</p>\n<pre class=\"prettyprint source lang-javascript\"><code>new TreeGrid({\n    appendTo : document.body,\n    columns  : [{\n        type    : 'action',\n        text    : 'Increase amount',\n        actions : [{\n            cls      : 'b-fa b-fa-plus',\n            renderer : ({ action, record }) => `&lt;i class=&quot;b-action-item ${action.cls} b-${record.enabled ? &quot;green&quot; : &quot;red&quot;}-class&quot;>&lt;/i>`,\n            visible  : ({ record }) => record.canAdd,\n            tooltip  : ({ record }) => `&lt;p class=&quot;b-nicer-than-default&quot;>Add to ${record.name}&lt;/p>`,\n            onClick  : ({ record }) => console.log(`Adding ${record.name}`)\n        }, {\n            cls     : 'b-fa b-fa-pencil',\n            tooltip : 'Edit note',\n            onClick : ({ record }) => console.log(`Editing ${record.name}`)\n        }]\n    }]\n});\n</code></pre>\n<p>Actions may be placed in <a href=\"#Grid/feature/Group\">Grid/feature/Group</a> headers, by setting <code>actions.showForGroup</code> to <code>true</code>. Those actions will not be shown on normal rows.</p>",extends:["Grid/column/Column"],constructor:{name:"constructor"},filename:"ActionColumn.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/column",lineno:40,classType:"action",externalExamples:["column/ActionColumn.js"],functions:[{name:"renderer",access:"private",description:"<p>Renderer that displays action icon(s) in the cell.</p>",scope:"instance"},{name:"onCellClick",access:"private",description:"<p>Handle icon click and call action handler.</p>",scope:"instance"},{name:"updateAutoWidth",access:"private",description:"<p>Update width for actions column to fit content.</p>",scope:"instance"}]},{name:"module:Grid/column/AggregateColumn",classDescription:"<p>A column, which, when used as part of a Tree, aggregates the values of this column's descendants using\na configured function which defaults to <code>sum</code>.</p>\n<p>Default editor depends on the data field type. If it is a number, default editor is a <a href=\"#Core/widget/NumberField\">NumberField</a>.\nOtherwise Default editor is a <a href=\"#Core/widget/TextField\">TextField</a>.</p>\n<pre class=\"prettyprint source\"><code>const grid = new TreeGrid({\n  // Custom aggregation handler.\n  // For test purposes, this just does &quot;sum&quot;\n  myAggregator(...values) {\n      let result = 0;\n\n      for (let i = 0, { length } = args; i &lt; length; i++) {\n          result += parseInt(args[i], 10);\n      }\n      return result;\n  },\n  columns : [\n     { field : 'name', text : 'Name' },\n\n     // Will sum the ages of leaf nodes. This is the default.\n     { type : 'aggregate', field : 'age', text : 'Age', renderer : ({ value }) => `&lt;b>${value}&lt;b>` },\n\n     // Will use AggregateColumn's built-in avg of scores of leaf nodes\n     { type : 'aggregate', field : 'score', text : 'Score', function : 'avg' },\n\n     // Will use the grid's myAggregator function\n     { type : 'aggregate', field : 'revenue', text : 'Revenue', function : 'up.myAggregator' },\n  ]\n});\n</code></pre>",extends:["Grid/column/Column"],constructor:{name:"constructor"},filename:"AggregateColumn.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/column",lineno:45,classType:"aggregate",configs:[{name:"function",description:"<p>Math Function name, or function name prepended by <code>&quot;up.&quot;</code> that is resolveable in an\nancestor component (such as the owning Grid, or a hight Container), or a function to\nuse to aggregate child record values for this column, or a function.</p>\n<p>This Column is provided with a <code>sum</code> and <code>avg</code> function. The default function is <code>sum</code>\nwhich is used for the aggregation.</p>",type:["function","String"],scope:"inner",category:"Common"}]},{name:"module:Grid/column/CheckColumn",classDescription:'<p>A column that displays a checkbox in the cell. The value of the backing field is toggled by the checkbox.</p>\n<p>This column uses a <a href="#Core/widget/Checkbox">checkbox</a> as its editor, and it is not intended to be changed.</p>',extends:["Grid/column/WidgetColumn"],examples:["new Grid({\n    appendTo : document.body,\n\n    columns : [\n        { type: 'check', field: 'allow' }\n    ]\n});"],constructor:{name:"constructor"},filename:"CheckColumn.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/column",lineno:66,classType:"check",externalExamples:["column/CheckColumn.js"],configs:[{name:"checkCls",description:"<p>CSS class name to add to checkbox</p>",type:"String",scope:"inner",category:"Rendering"},{name:"showCheckAll",description:"<p>True to show a checkbox in the column header to be able to select/deselect all rows</p>",type:"Boolean",scope:"inner"}],events:[{name:"toggleAll",description:"<p>Fired when the header checkbox is clicked to toggle its checked status.</p>",parameters:[{name:"source",type:"Grid.column.Column",description:"<p>This Column</p>"},{name:"checked",type:"Boolean",description:"<p>The checked status of the header checkbox.</p>"}]},{name:"beforeToggle",description:"<p>Fired when a cell is clicked to toggle its checked status. Returning <code>false</code> will prevent status change.</p>",parameters:[{name:"source",type:"Grid.column.Column",description:"<p>This Column</p>"},{name:"record",type:"Core.data.Model",description:"<p>The record for the row containing the cell.</p>"},{name:"checked",type:"Boolean",description:"<p>The new checked status of the cell.</p>"}]},{name:"toggle",description:"<p>Fired when a cell is clicked to toggle its checked status.</p>",parameters:[{name:"source",type:"Grid.column.Column",description:"<p>This Column</p>"},{name:"record",type:"Core.data.Model",description:"<p>The record for the row containing the cell.</p>"},{name:"checked",type:"Boolean",description:"<p>The new checked status of the cell.</p>"}]}]},{name:"module:Grid/column/Column",classDescription:"<p>Base class for other column types, used if no type is specified on a column.</p>\n<p>Default editor is a <a href=\"#Core/widget/TextField\">TextField</a>.</p>\n<pre class=\"prettyprint source lang-javascript\"><code>const grid = new Grid({\n  columns : [{\n    field : 'name',\n    text  : 'Name'\n  }, {\n    text  : 'Hobby',\n    field : 'others.hobby', // reading nested field data\n  }, {\n    type  : 'number', // Will use NumberColumn\n    field : 'age',\n    text  : 'Age'\n  }]\n});\n</code></pre>\n<h2>Column types</h2>\n<p>Grid ships with multiple different column types. Which type to use for a column is specified by the <code>type</code> config. The built in types are:</p>\n<ul>\n<li><a href=\"#Grid/column/ActionColumn\">action</a> - displays actions (clickable icons) in the cell.</li>\n<li><a href=\"#Grid/column/AggregateColumn\">aggregate</a> - a column, which, when used as part of a Tree, aggregates the values of\nthis column's descendants using a configured function which defaults to <code>sum</code>.</li>\n<li><a href=\"#Grid/column/CheckColumn\">check</a> - displays a checkbox in the cell.</li>\n<li><a href=\"#Grid/column/DateColumn\">date</a> - displays a date in the specified format.</li>\n<li><a href=\"#Grid/column/NumberColumn\">number</a> - a column for showing/editing numbers.</li>\n<li><a href=\"#Grid/column/PercentColumn\">percent</a> - displays a basic progress bar.</li>\n<li><a href=\"#Grid/column/RatingColumn\">rating</a> - displays a star rating.</li>\n<li><a href=\"#Grid/column/RowNumberColumn\">rownumber</a> - displays the row number in each cell.</li>\n<li><a href=\"#Grid/column/TemplateColumn\">template</a> - uses a template for cell content.</li>\n<li><a href=\"#Grid/column/TimeColumn\">time</a> - displays a time in the specified format.</li>\n<li><a href=\"#Grid/column/TreeColumn\">tree</a> - displays a tree structure when using the <a href=\"#Grid/feature/Tree\">tree</a> feature.</li>\n<li><a href=\"#Grid/column/WidgetColumn\">widget</a> - displays widgets in the cells.</li>\n</ul>\n<h2>Cell renderers</h2>\n<p>You can affect the contents and styling of cells in a column using a <a href=\"#Grid/column/Column#config-renderer\">renderer()</a> function.</p>\n<pre class=\"prettyprint source lang-javascript\"><code>const grid = new Grid({\n  columns : [\n  ...\n    {\n      field      : 'approved',\n      text       : 'Approved',\n      htmlEncode : false, // allow to use HTML code\n      renderer({ value }) {\n        return value === true ? '&lt;b>Yes&lt;/b>' : '&lt;i>No&lt;/i>';\n      }\n    }\n    ...\n    ]\n});\n</code></pre>\n<h2>Menus</h2>\n<p>You can add custom items to the context menu for a columns header and for its cells, using <a href=\"#Grid/column/Column#config-headerMenuItems\">headerMenuItems</a> and\n<a href=\"#Grid/column/Column#config-cellMenuItems\">cellMenuItems</a>. Here is an example:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>const grid = new Grid({\n  columns : [\n    ...\n    {\n      type  : 'number',\n      field : 'age',\n      text  : 'Age',\n      headerMenuItems: [{\n          text : 'My unique header item',\n          icon : 'b-fa b-fa-paw',\n          onItem() { console.log('item clicked'); }\n      }],\n      cellMenuItems: [{\n          text : 'My unique cell item',\n          icon : 'b-fa b-fa-plus',\n          onItem() { console.log('item clicked'); }\n      }]\n    }\n  ...\n  ]\n});\n</code></pre>",extends:["Core/data/Model"],mixes:["Core/mixin/Events","Core/localization/Localizable"],constructor:{name:"constructor"},filename:"Column.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/column",lineno:107,classType:"column",properties:[{name:"text",description:"<p>Get/set header text</p>",type:{names:["String"]},scope:"inner"},{name:"flex",description:"<p>Gets or sets the column flex weight</p>",type:{names:["String"]},scope:"inner"},{name:"icon",description:"<p>Get/set header icon class</p>",type:{names:["String"]},scope:"inner"},{name:"hidden",description:"<p>Get/set columns hidden state. Specify <code>true</code> to hide the column, <code>false</code> to show it.</p>",type:{names:["Boolean"]},scope:"inner"},{name:"element",description:"<p>The header element for this Column. <em>Only available after the grid has been rendered</em>.</p>\n<p><strong>Note that column headers are rerendered upon mutation of Column values, so this\nvalue is volatile and should not be cached, but should be read whenever needed.</strong></p>",scope:"instance",readonly:true,properties:[{type:{names:["HTMLElement"]}}]},{name:"textWrapper",description:"<p>The text wrapping element for this Column. <em>Only available after the grid has been rendered</em>.</p>\n<p>This is the full-width element which <em>contains</em> the text-bearing element and any icons.</p>\n<p><strong>Note that column headers are rerendered upon mutation of Column values, so this\nvalue is volatile and should not be cached, but should be read whenever needed.</strong></p>",scope:"instance",readonly:true,properties:[{type:{names:["HTMLElement"]}}]},{name:"textElement",description:"<p>The text containing element for this Column. <em>Only available after the grid has been rendered</em>.</p>\n<p><strong>Note that column headers are rerendered upon mutation of Column values, so this\nvalue is volatile and should not be cached, but should be read whenever needed.</strong></p>",scope:"instance",readonly:true,properties:[{type:{names:["HTMLElement"]}}]},{name:"contentElement",description:"<p>The child element into which content should be placed. This means where any\ncontained widgets such as filter input fields should be rendered. <em>Only available after the grid has been rendered</em>.</p>\n<p><strong>Note that column headers are rerendered upon mutation of Column values, so this\nvalue is volatile and should not be cached, but should be read whenever needed.</strong></p>",scope:"instance",readonly:true,properties:[{type:{names:["HTMLElement"]}}]},{name:"editor",access:"private",description:"<p>The Field to use as editor for this column</p>",scope:"instance",readonly:true},{name:"defaultEditor",access:"private",description:"<p>A config object specifying the editor to use to edit this column.</p>",scope:"instance",readonly:true},{name:"defaults",description:"<p>Default settings for the column, applied in constructor. None by default, override in subclass.</p>",type:{names:["Object"]},scope:"inner",returns:[{type:{names:["Object"]}}],readonly:true},{name:"allIndex",access:"internal",description:"<p>Index among all flattened columns</p>",scope:"instance",readonly:true,properties:[{type:{names:["Number"]}}]},{name:"width",description:"<p>Get/set columns width in px. If column uses flex, width will be undefined.\nSetting a width on a flex column cancels out flex.</p>\n<p><strong>NOTE:</strong> Grid might be configured to always stretch the last column, in which case the columns actual width\nmight deviate from the configured width.</p>\n<pre class=\"prettyprint source lang-javascript\"><code>let grid = new Grid({\n    appendTo : 'container',\n    height   : 200,\n    width    : 400,\n    columns  : [{\n        text  : 'First column',\n        width : 100\n    }, {\n        text  : 'Last column',\n        width : 100 // last column in the grid is always stretched to fill the free space\n    }]\n});\n\ngrid.columns.last.element.offsetWidth; // 300 -> this points to the real element width\n</code></pre>",scope:"instance",properties:[{type:{names:["Number","String"]}}]},{name:"subGrid",description:"<p>Get the SubGrid to which this column belongs</p>",scope:"instance",readonly:true,properties:[{type:{names:["Grid.view.SubGrid"]}}]},{name:"subGridElement",access:"private",description:"<p>Get the element for the SubGrid to which this column belongs</p>",scope:"instance",readonly:true,properties:[{type:{names:["HTMLElement"]}}]}],configs:[{name:"text",description:"<p>Text to display in the header</p>",type:"String",scope:"inner",category:"Common"},{name:"field",description:'<p>The <a href="#Core/data/Model">Model</a> field name to read data from</p>',type:"String",scope:"inner",category:"Common"},{name:"renderer",description:"<p>Renderer function, used to format and style the content displayed in the cell. Return the cell text you\nwant to display. Can also affect other aspects of the cell, such as styling.</p>\n<p><strong>NOTE:</strong> If you mutate cellElement and you want to prevent cell content to be reset during the rendering,\nplease return <code>undefined</code> from the renderer or just omit the <code>return</code> statement. If you return a value and\nthe value can be undefined, please make sure you return an empty string to update the cell content. For example:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>new Grid({\n    columns : [\n        // Returns an empty string if status field value is undefined\n        { text : 'Status', renderer : ({ record }) => record.status ?? '' },\n    ]\n});\n</code></pre>",type:"function",scope:"inner",category:"Common",parameters:[{name:"renderData",type:"Object",description:"<p>Object containing renderer parameters</p>"},{name:"renderData.cellElement",type:"HTMLElement",description:"<p>Cell element, for adding CSS classes, styling etc.\nCan be <code>null</code> in case of export</p>",optional:true,isSubParam:true},{name:"renderData.value",type:"*",description:"<p>Value to be displayed in the cell</p>",isSubParam:true},{name:"renderData.record",type:"Core.data.Model",description:"<p>Record for the row</p>",isSubParam:true},{name:"renderData.column",type:"Grid.column.Column",description:"<p>This column</p>",isSubParam:true},{name:"renderData.grid",type:"Grid.view.Grid",description:"<p>This grid</p>",isSubParam:true},{name:"renderData.row",type:"Grid.row.Row",description:"<p>Row object. Can be null in case of export</p>",optional:true,isSubParam:true},{name:"renderData.size",type:"Object",description:'<p>Set <code>size.height</code> to specify the desired row height for the current row.\nLargest specified height is used, falling back to configured <a href="#Grid/view/Grid#config-rowHeight">rowHeight</a>\nin case none is specified. Can be null in case of export</p>',optional:true,isSubParam:true},{name:"renderData.size.height",type:"Number",description:"<p>Set this to request a certain row height</p>",optional:true,isSubParam:true},{name:"renderData.size.configuredHeight",type:"Number",description:"<p>Row height that will be used if none is requested</p>",optional:true,isSubParam:true},{name:"renderData.isExport",type:"Boolean",description:"<p>True if record is being exported to allow special handling during export</p>",optional:true,isSubParam:true}]},{name:"width",description:"<p>Column width. If value is Number then width is in pixels</p>",type:["Number","String"],scope:"inner",category:"Common"},{name:"flex",description:"<p>Column width as a flex weight. All columns with flex specified divide the available space (after\nsubtracting fixed widths) between them according to the flex value. Columns that have flex 2 will be\ntwice as wide as those with flex 1 (and so on)</p>",type:"Number",scope:"inner",category:"Common"},{name:"editor",description:'<p>Specify if this column should be editable, and define which editor to use for editing cells in the\ncolumn (if <a href="#Grid/feature/CellEdit">CellEdit</a> feature is enabled). Editor refers to <a href="#Grid/column/Column#config-field">field</a>\nfor a data source.</p>\n<p>All subclasses of <a href="#Core/widget/Field">Field</a> can be used as editors. The most popular are:</p>\n<ul>\n<li><a href="#Core/widget/TextField">TextField</a>;</li>\n<li><a href="#Core/widget/NumberField">NumberField</a>;</li>\n<li><a href="#Core/widget/DateField">DateField</a>;</li>\n<li><a href="#Core/widget/TimeField">TimeField</a>;</li>\n<li><a href="#Core/widget/Combo">Combo</a>;</li>\n</ul>\n<p>If record has method set + capitalized field, method will be called, e.g. if record has method named\n<code>setFoobar</code> and this config is <code>foobar</code>, then instead of <code>record.foobar = value</code>,\n<code>record.setFoobar(value)</code> will be called.</p>',type:["String","Object","Boolean"],scope:"inner",category:"Interaction"},{name:"finalizeCellEdit",description:"<p>A function which is called when a cell edit is requested to finish.</p>\n<p>This may be an <code>async</code> function which performs complex validation. The edit will not\ncomplete until it returns <code>false</code> to mean the edit cannot be finished, or <code>true</code> to go\nahead and complete.</p>",type:"function",scope:"inner",category:"Interaction",parameters:[{name:"context",type:"Object",description:"<p>An object describing the state of the edit at completion request time.</p>"},{name:"context.inputField",type:"Core.widget.Field",description:"<p>The field configured as the column's <code>editor</code>.</p>",isSubParam:true},{name:"context.record",type:"Core.data.Model",description:"<p>The record being edited.</p>",isSubParam:true},{name:"context.oldValue",type:"*",description:"<p>The old value of the cell.</p>",isSubParam:true},{name:"context.value",type:"*",description:"<p>The new value of the cell.</p>",isSubParam:true},{name:"context.grid",type:"Grid.view.Grid",description:"<p>The host grid.</p>",isSubParam:true},{name:"context.editorContext",type:"Object",description:'<p>The <a href="#Grid/feature/CellEdit">CellEdit</a> context object.</p>',isSubParam:true},{name:"context.editorContext.column",type:"Grid.column.Column",description:"<p>The column being edited.</p>",isSubParam:true},{name:"context.editorContext.record",type:"Core.data.Model",description:"<p>The record being edited.</p>",isSubParam:true},{name:"context.editorContext.cell",type:"HTMLElement",description:"<p>The cell element hosting the editor.</p>",isSubParam:true},{name:"context.editorContext.editor",type:"Core.widget.Editor",description:"<p>The floating Editor widget which is hosting the input field.</p>",isSubParam:true}]},{name:"revertOnEscape",description:'<p>Setting this option means that pressing the <code>ESCAPE</code> key after editing the field will\nrevert the field to the value it had when the edit began. If the value is <em>not</em> changed\nfrom when the edit started, the input field\'s <a href="#Core/widget/Field#config-clearable">clearable</a>\nbehaviour will be activated. Finally, the edit will be canceled.</p>',type:"Boolean",scope:"inner",defaultvalue:"true",category:"Interaction"},{name:"invalidAction",description:"<p>How to handle a request to complete a cell edit in this column if the field is invalid.\nThere are three choices:</p>\n<ul>\n<li><code>block</code> The default. The edit is not exited, the field remains focused.</li>\n<li><code>allow</code> Allow the edit to be completed.</li>\n<li><code>revert</code> The field value is reverted and the edit is completed.</li>\n</ul>",type:"String",scope:"inner",defaultvalue:"'block'",category:"Interaction"},{name:"sortable",description:"<p>Allow sorting of data in the column. You can pass true/false to enable/disable sorting, or provide a\ncustom sorting function, or a config object for a <a href=\"#Core/util/CollectionSorter\">Core.util.CollectionSorter</a></p>\n<pre class=\"prettyprint source lang-javascript\"><code>const grid = new Grid({\n    columns : [\n         {\n             // Disable sorting for this column\n             sortable : false\n         },\n         {\n             // Custom sorting for this column\n             sortable : function(user1, user2) {\n                 return user1.name &lt; user2.name ? -1 : 1;\n             }\n         },\n         {\n             // A config object for a Core.util.CollectionSorter\n             sortable : {\n                 property         : 'someField',\n                 direction        : 'DESC',\n                 useLocaleCompare : 'sv-SE'\n             }\n         }\n    ]\n});\n</code></pre>",type:["Boolean","function","Object"],scope:"inner",defaultvalue:"true",category:"Interaction"},{name:"searchable",description:"<p>Allow searching in the column (respected by QuickFind and Search features)</p>",type:"Boolean",scope:"inner",defaultvalue:"true",category:"Interaction"},{name:"filterable",description:"<p>Allow filtering data in the column (if <a href=\"#Grid/feature/Filter\">Grid.feature.Filter</a> or <a href=\"#Grid/feature/FilterBar\">Grid.feature.FilterBar</a> feature is enabled).\nAlso allows passing a custom filtering function that will be called for each record with a single argument of format\n{ value, record, [operator] }. Returning <code>true</code> from the function includes the record in the filtered set.\nConfiguration object may be used for <a href=\"#Grid/feature/FilterBar\">Grid.feature.FilterBar</a> feature to specify <code>filterField</code>. See an example in the code\nsnippet below or check <a href=\"#Grid/feature/FilterBar\">Grid.feature.FilterBar</a> page for more details.</p>\n<pre class=\"prettyprint source\"><code>const grid = new Grid({\n    columns : [\n         {\n             field : 'name',\n             // Disable filtering for this column\n             filterable : false\n         },\n         {\n             field : 'age',\n             // Custom filtering for this column\n             filterable: ({ value, record }) => Math.abs(record.age - value) &lt; 10\n         },\n         {\n             field : 'city',\n             // Filtering for a value out of a list of values\n             filterable: {\n                 filterField : {\n                     type  : 'combo',\n                     value : '',\n                     items : [\n                         'Paris',\n                         'Dubai',\n                         'Moscow',\n                         'London',\n                         'New York'\n                     ]\n                 }\n             }\n         }\n    ]\n});\n</code></pre>",type:["Boolean","function","Object"],scope:"inner",defaultvalue:"true",category:"Interaction"},{name:"hideable",description:"<p>Allow column visibility to be toggled through UI</p>",type:"Boolean",scope:"inner",defaultvalue:"true",category:"Interaction"},{name:"draggable",description:"<p>Set to false to prevent this column header from being dragged</p>",type:"Boolean",scope:"inner",category:"Interaction"},{name:"groupable",description:"<p>Set to false to prevent grouping by this column</p>",type:"Boolean",scope:"inner",category:"Interaction"},{name:"resizable",description:"<p>Set to <code>false</code> to prevent the column from being drag-resized when the ColumnResize plugin is enabled.</p>",type:"Boolean",scope:"inner",defaultvalue:"true",category:"Interaction"},{name:"groupRenderer",description:"<p>Renderer function for group headers (when using Group feature).</p>",type:"function",scope:"inner",returns:[{type:{names:["String"]},description:"<p>The header grouping text</p>"}],category:"Rendering",parameters:[{name:"renderData",type:"Object"},{name:"renderData.cellElement",type:"HTMLElement",description:"<p>Cell element, for adding CSS classes, styling etc.</p>",isSubParam:true},{name:"renderData.groupRowFor",type:"*",description:"<p>Current group value</p>",isSubParam:true},{name:"renderData.record",type:"Core.data.Model",description:"<p>Record for the row</p>",isSubParam:true},{name:"renderData.groupRecords",type:"Array.<Core.data.Model>",description:"<p>Records in the group</p>",isSubParam:true},{name:"renderData.column",type:"Grid.column.Column",description:"<p>Current rendering column</p>",isSubParam:true},{name:"renderData.groupColumn",type:"Grid.column.Column",description:"<p>Column that the grid is grouped by</p>",isSubParam:true},{name:"renderData.count",type:"Number",description:"<p>Number of records in the group</p>",isSubParam:true},{name:"renderData.grid",type:"Grid.view.Grid",description:"<p>This grid</p>",isSubParam:true}]},{name:"headerRenderer",description:"<p>Renderer function for the column header.</p>",type:"function",scope:"inner",category:"Rendering",parameters:[{name:"renderData",type:"Object"},{name:"renderData.column",type:"Grid.column.Column",description:"<p>This column</p>",isSubParam:true},{name:"renderData.headerElement",type:"HTMLElement",description:"<p>The header element</p>",isSubParam:true}]},{name:"tooltipRenderer",description:"<p>Renderer function for cell tooltips header (used with CellTooltip feature). Specify false to prevent\ntooltip for that column.</p>",type:"function",scope:"inner",category:"Rendering",parameters:[{name:"cellElement",type:"HTMLElement",description:"<p>Cell element</p>"},{name:"record",type:"Core.data.Model",description:"<p>Record for cell row</p>"},{name:"column",type:"Grid.column.Column",description:"<p>Cell column</p>"},{name:"cellTooltip",type:"CellTooltip",description:"<p>Feature instance, used to set tooltip content async</p>"},{name:"event",type:"MouseEvent",description:"<p>The event that triggered the tooltip</p>"}]},{name:"cellCls",description:"<p>CSS class added to each cell in this column</p>",type:"String",scope:"inner",category:"Rendering"},{name:"cls",description:"<p>CSS class added to the header of this column</p>",type:"String",scope:"inner",category:"Rendering"},{name:"icon",description:"<p>Icon to display in header. Specifying an icon will render a <code>&lt;i&gt;</code> element with the icon as value for the\nclass attribute</p>",type:"String",scope:"inner",category:"Rendering"},{name:"align",description:"<p>Text align (left, center, right)</p>",type:"String",scope:"inner",category:"Layout"},{name:"minWidth",description:"<p>Column minimal width. If value is Number then minimal width is in pixels</p>",type:["Number","String"],scope:"inner",defaultvalue:"60",category:"Layout"},{name:"hidden",description:"<p>Hide the column from start</p>",type:"Boolean",scope:"inner",category:"Layout"},{name:"locked",description:'<p>Convenient way of putting a column in the &quot;locked&quot; region. Same effect as specifying region: \'locked\'.\nIf you have defined your own regions (using <a href="#Grid/view/Grid#config-subGridConfigs">subGridConfigs</a>) you should use\n<a href="#Grid/column/Column#config-region">region</a> instead of this one.</p>',type:"Boolean",scope:"inner",defaultvalue:"false",category:"Layout"},{name:"region",description:'<p>Region (part of the grid, it can be configured with multiple) where to display the column. Defaults to\n<a href="#Grid/view/Grid#config-defaultRegion">defaultRegion</a>.</p>',type:"String",scope:"inner",category:"Layout"},{name:"showColumnPicker",description:"<p>Show column picker for the column</p>",type:"Boolean",scope:"inner",defaultvalue:"true",category:"Menu"},{name:"enableHeaderContextMenu",description:"<p>false to prevent showing a context menu on the column header element</p>",type:"Boolean",scope:"inner",defaultvalue:"true",category:"Menu"},{name:"enableCellContextMenu",description:"<p>Set to <code>false</code> to prevent showing a context menu on the cell elements in this column</p>",type:"Boolean",scope:"inner",defaultvalue:"true",category:"Menu"},{name:"headerMenuItems",description:"<p>Extra items to show in the header context menu for this column</p>",type:"Array.<Object>",scope:"inner",category:"Menu"},{name:"cellMenuItems",description:"<p>Extra items to show in the cell context menu for this column</p>",type:"Array.<Object>",scope:"inner",category:"Menu"},{name:"sum",description:'<p>Summary type (when using Summary feature). Valid types are:</p>\n<dl class="wide">\n<dt>sum <dd>Sum of all values in the column\n<dt>add <dd>Alias for sum\n<dt>count <dd>Number of rows\n<dt>countNotEmpty <dd>Number of rows containing a value\n<dt>average <dd>Average of all values in the column\n<dt>function <dd>A custom function, used with store.reduce. Should take arguments (sum, record)\n</dl>',type:"String",scope:"inner",category:"Summary"},{name:"summaries",description:'<p>Summary configs, use if you need multiple summaries per column. Replaces <a href="#Grid/column/Column#config-sum">sum</a> and\n<a href="#Grid/column/Column#config-summaryRenderer">summaryRenderer</a> configs. Accepts an array of objects with the following fields:</p>\n<ul>\n<li>sum - Matching <a href="#Grid/column/Column#config-sum">sum</a></li>\n<li>renderer - Matching <a href="#Grid/column/Column#config-summaryRenderer">summaryRenderer</a></li>\n<li>seed - Initial value when using a function as <code>sum</code></li>\n</ul>',type:"Array.<Object>",scope:"inner",category:"Summary"},{name:"summaryRenderer",description:"<p>Renderer function for summary (when using Summary feature). The renderer is called with the calculated\nsummary as only argument.</p>",type:"function",scope:"inner",category:"Summary"},{name:"responsiveLevels",description:"<p>Column settings at different responsive levels, see responsive demo under examples/</p>",type:"Object",scope:"inner",category:"Misc"},{name:"tags",description:"<p>Tags, may be used by ColumnPicker feature for grouping columns by tag in the menu</p>",type:"Array.<String>",scope:"inner",category:"Misc"},{name:"touchConfig",description:"<p>Column config to apply to normal config if viewed on a touch device</p>",type:"Object",scope:"inner",category:"Misc"},{name:"tree",description:"<p>When using the tree feature, exactly one column should specify { tree: true }</p>",type:"Boolean",scope:"inner",category:"Misc"},{name:"filterType",description:"<p>Determines which type of filtering to use for the column. Usually determined by the column type used,\nbut may be overridden by setting this field.</p>",type:"String",scope:"inner",category:"Misc"},{name:"htmlEncode",description:"<p>By default, any rendered column text content is HTML-encoded. Set this flag to <code>false</code> disable this and allow rendering html elements</p>",type:"Boolean",scope:"inner",defaultvalue:"true",category:"Misc"},{name:"autoSyncHtml",description:'<p>Set to <code>true</code>to automatically call DomHelper.sync for html returned from a renderer. Should in most cases\nbe more performant than replacing entire innerHTML of cell and also allows CSS transitions to work. Has\nno effect unless <a href="#Grid/column/Column#config-htmlEncode">htmlEncode</a> is disabled. Returned html must contain a single root element (that can have\nmultiple children). See PercentColumn for example usage.</p>',type:"Boolean",scope:"inner",defaultvalue:"false",category:"Misc"},{name:"instantUpdate",description:'<p>Set to <code>true</code> to have the <a href="#Grid/feature/CellEdit">CellEdit</a> feature update the record being\nedited live upon field edit instead of when editing is finished by using <code>TAB</code> or <code>ENTER</code></p>',type:"Boolean",scope:"inner",category:"Misc"},{name:"editTargetSelector",description:"<p>An optional query selector to select a sub element within the cell being\nedited to align a cell editor's <code>X</code> position and <code>width</code> to.</p>",type:"String",scope:"inner",category:"Misc"},{name:"exportable",description:"<p>Used by the Export feature. Set to <code>false</code> to omit a column from an exported dataset</p>",type:"Boolean",scope:"inner",defaultvalue:"true",category:"Export"},{name:"exportedType",description:'<p>Column type which will be used by <a href="#Grid/util/TableExporter">Grid.util.TableExporter</a>. See list of available types in TableExporter\ndoc. Returns undefined by default, which means column type should be read from the record field.</p>',type:"String",scope:"inner",category:"Export"}],functions:[{name:"getRawValue",description:'<p>Extracts the value from the record specified by this Column\'s <a href="#Grid/column/Column#config-field">field</a> specification.</p>\n<p>This will work if the field is a dot-separated path to access fields in associated records, eg</p>\n<pre class="prettyprint source lang-javascript"><code> field : \'resource.calendar.name\'\n</code></pre>\n<p><strong>Note:</strong> This is the raw field value, not the value returned by the <a href="#Grid/column/Column#config-renderer">renderer</a>.</p>',parameters:[{name:"record",type:"Core.data.Model",description:"<p>The record from which to extract the field value.</p>"}],scope:"instance",returns:{type:"*",description:"<p>The value of the referenced field if any.</p>"}},{name:"hide",description:"<p>Hides this column.</p>",scope:"instance"},{name:"show",description:"<p>Shows this column.</p>",scope:"instance"},{name:"toggle",description:"<p>Toggles the column visibility.</p>",parameters:[{name:"force",type:"Boolean",description:"<p>Set to true (visible) or false (hidden) to force a certain state</p>"}],scope:"instance"},{name:"generateId",access:"private",description:"<p>Generates an id for the column when none is set. Generated ids are 'col1', 'col2' and so on. If a field is\nspecified (as it should be in most cases) the field name is used instead: 'name1', 'age2' ...</p>",scope:"instance",returns:{type:"String"}},{name:"resizeToFitContent",description:'<p>Resizes the column to match the widest string in it. By default it also measures the column header, this\nbehaviour can be configured by setting <a href="#Grid/view/Grid#config-resizeToFitIncludesHeader">resizeToFitIncludesHeader</a>.</p>\n<p>Called internally when you double click the edge between\ncolumn headers, but can also be called programmatically. For performance reasons it is limited to checking 1000\nrows surrounding the current viewport.</p>',scope:"instance"},{name:"getState",access:"private",description:"<p>Get column state, used by State mixin</p>",scope:"instance"},{name:"applyState",access:"private",description:"<p>Apply state to column, used by State mixin</p>",scope:"instance"},{name:"clearCell",access:"internal",description:"<p>Clear cell contents. Base implementation which just sets innerHTML to blank string.\nShould be overridden in subclasses to clean up for examples widgets.</p>",parameters:[{name:"cellElement",type:"HTMLElement"}],scope:"instance"},{name:"canEdit",access:"internal",description:"<p>Override in subclasses to allow/prevent editing of certain rows.</p>",parameters:[{name:"record",type:"Core.data.Model"}],scope:"instance"}]},{name:"module:Grid/column/DateColumn",classDescription:'<p>A column that displays a date in the specified format (see <a href="#Core/helper/DateHelper#function-format-static">format</a> for\nformatting options).</p>\n<p>Default editor is a <a href="#Core/widget/DateField">DateField</a>.</p>\n<p>If no <code>format</code> is specified, <a href="#Core/helper/DateHelper#property-defaultFormat-static">DateHelper.defaultFormat</a> is\nused. Please note that by default the <code>L</code> format is used.</p>',extends:["Grid/column/Column"],examples:["new Grid({\n    appendTo : document.body,\n\n    columns : [\n         { type: 'date', text: 'Start date', format: 'YYYY-MM-DD', data: 'start' }\n    ]\n});"],constructor:{name:"constructor"},filename:"DateColumn.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/column",lineno:76,classType:"date",externalExamples:["column/DateColumn.js"],configs:[{name:"format",description:"<p>Date format</p>",type:"String",scope:"inner",category:"Common"},{name:"step",description:'<p>Time increment duration value to apply when clicking the left / right trigger icons. See <a href="#Core/widget/DateField#config-step">step</a> for more information\nSet to <code>null</code> to hide the step triggers.</p>',type:["String","Number","Object"],scope:"inner",category:"Common"}],functions:[{name:"defaultRenderer",access:"private",description:"<p>Renderer that displays the date with the specified format. Also adds cls 'date-cell' to the cell.</p>",scope:"instance"},{name:"groupRenderer",access:"private",description:"<p>Group renderer that displays the date with the specified format.</p>",scope:"instance"},{name:"formatValue",access:"private",description:"<p>Used by both renderer and groupRenderer to do the actual formatting of the date</p>",parameters:[{name:"value"}],scope:"instance",returns:{type:"String"}}],properties:[{name:"format",description:'<p>Get/Set format for date displayed in cell and editor (see <a href="#Core/helper/DateHelper#function-format-static">format</a> for formatting options)</p>',scope:"instance",properties:[{type:{names:["String"]}}]}]},{name:"module:Grid/column/NumberColumn",classDescription:'<p>A column for showing/editing numbers.</p>\n<p>Default editor is a <a href="#Core/widget/NumberField">NumberField</a>.</p>',extends:["Grid/column/Column"],examples:["new Grid({\n    appendTo : document.body,\n\n    columns : [\n        { type: 'number', min: 0, max : 100, field: 'score' }\n    ]\n});"],constructor:{name:"constructor"},filename:"NumberColumn.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/column",lineno:77,classType:"number",externalExamples:["column/NumberColumn.js"],configs:[{name:"min",description:"<p>The minimum value for the field used during editing.</p>",type:"Number",scope:"inner",category:"Common"},{name:"max",description:"<p>The maximum value for the field used during editing.</p>",type:"Number",scope:"inner",category:"Common"},{name:"step",description:"<p>Step size for the field used during editing. Specify a fractional step size to allow entering decimal\nnumbers.</p>",type:"Number",scope:"inner",category:"Common"},{name:"unit",description:"<p>Unit to append to displayed value.</p>",type:"String",scope:"inner",category:"Common"}],functions:[{name:"defaultRenderer",access:"private",description:"<p>Renderer that displays value + optional unit in the cell</p>",scope:"instance"}]},{name:"module:Grid/column/PercentColumn",classDescription:'<p>A column that display a basic progress bar.</p>\n<p>Default editor is a <a href="#Core/widget/NumberField">NumberField</a>.</p>',extends:["Grid/column/Column"],examples:["new Grid({\n    appendTo : document.body,\n\n    columns : [\n        { type: 'percent', text: 'Progress', data: 'progress' }\n    ]\n});"],constructor:{name:"constructor"},filename:"PercentColumn.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/column",lineno:70,classType:"percent",externalExamples:["column/PercentColumn.js"],configs:[{name:"editor",description:'<p>PercentColumn uses a <a href="#Core/widget/NumberField">Core.widget.NumberField</a> configured with an allowed interval 0 - 100 as\nits default editor.</p>',type:["Object","String"],scope:"inner",defaultvalue:"Core.widget.NumberField",category:"Misc"},{name:"lowThreshold",description:"<p>When below this percentage the bar will have <code>b-low</code> CSS class added. By default it turns the bar red.</p>",type:"Number",scope:"inner",category:"Rendering"}],functions:[{name:"renderer",access:"private",description:"<p>Renderer that displays a progress bar in the cell.</p>",scope:"instance"}]},{name:"module:Grid/column/RatingColumn",classDescription:"<p>A column that displays a star rating. Click a start to set a value, shift+click to unset a single start from the end.\nClicking the first and only star toggles it.</p>\n<p>This column uses a custom widget as its editor, and it is not intended to be changed.</p>",extends:["Grid/column/NumberColumn"],examples:["new Grid({\n    appendTo : document.body,\n\n    columns : [\n        { type: 'rating', max : 10, field: 'rating' }\n    ]\n});"],constructor:{name:"constructor"},filename:"RatingColumn.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/column",lineno:80,classType:"percent",externalExamples:["column/RatingColumn.js"],configs:[{name:"emptyIcon",description:"<p>The empty rating icon to show</p>",type:"String",scope:"inner",category:"Rendering"},{name:"filledIcon",description:"<p>The filled rating icon to show</p>",type:"String",scope:"inner",category:"Rendering"},{name:"editable",description:"<p>Allow user to click an icon to change the value</p>",type:"Boolean",scope:"inner",category:"Interaction"}],functions:[{name:"renderer",access:"private",description:"<p>Renderer that displays a number of stars in the cell. Also adds CSS class 'b-rating-cell' to the cell.</p>",scope:"instance"}]},{name:"module:Grid/column/RowNumberColumn",classDescription:"<p>A column that displays the row number in each cell.</p>\n<p>There is no <code>editor</code>, since value is read-only.</p>",extends:["Grid/column/Column"],examples:["let grid = new Grid({\n    appendTo : targetElement,\n    width    : 300,\n    columns  : [\n        { type : 'rownumber' }\n    ]\n});"],constructor:{name:"constructor"},filename:"RowNumberColumn.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/column",lineno:28,classType:"rownumber",externalExamples:["column/RowNumberColumn.js"],functions:[{name:"renderer",access:"private",description:"<p>Renderer that displays the row number in the cell.</p>",scope:"instance"},{name:"resizeToFitContent",description:"<p>Resizes the column to match the widest string in it. Called when you double click the edge between column\nheaders</p>",scope:"instance"}]},{name:"module:Grid/column/TemplateColumn",classDescription:'<p>A column that uses a template for cell content. Any function can be used as template, and the function is passed { value, record, field } properties.\nIt should return a string which will be rendered in the cell.</p>\n<p>Default editor is a <a href="#Core/widget/TextField">TextField</a>.</p>',extends:["Grid/column/Column"],examples:["new Grid({\n    appendTo : document.body,\n\n    columns : [\n        { type: 'template', field: 'age', template: value => `${value} years old` }\n    ]\n});"],constructor:{name:"constructor"},filename:"TemplateColumn.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/column",lineno:46,classType:"template",externalExamples:["column/TemplateColumn.js"],configs:[{name:"template",description:"<p>Template function used to generate a value displayed in the cell. Called with arguments { value, record, field }</p>",type:"function",scope:"inner",category:"Common"}],functions:[{name:"renderer",access:"private",description:"<p>Renderer that uses a template for cell content.</p>",scope:"instance"}]},{name:"module:Grid/column/TimeColumn",classDescription:'<p>A column that displays a time in the specified format (see <a href="#Core/helper/DateHelper#function-format-static">format</a> for formatting options).</p>\n<p>Default editor is a <a href="#Core/widget/TimeField">TimeField</a>.</p>',extends:["Grid/column/Column"],examples:["new Grid({\n    appendTo : document.body,\n\n    columns : [\n         { type: 'time', text: 'Start time', format: 'HH:mm:ss', data: 'start' }\n    ]\n});"],constructor:{name:"constructor"},filename:"TimeColumn.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/column",lineno:64,classType:"time",externalExamples:["column/TimeColumn.js"],configs:[{name:"format",description:"<p>Time format</p>",type:"String",scope:"inner",category:"Common"}],functions:[{name:"defaultRenderer",access:"private",description:"<p>Renderer that displays the time with the specified format. Also adds cls 'b-time-cell' to the cell.</p>",scope:"instance"},{name:"groupRenderer",access:"private",description:"<p>Group renderer that displays the time with the specified format.</p>",scope:"instance"},{name:"formatValue",access:"private",description:"<p>Used by both renderer and groupRenderer to do the actual formatting of the time</p>",parameters:[{name:"value"}],scope:"instance",returns:{type:"String"}}],properties:[{name:"format",description:'<p>Get/Set format for time displayed in cell and editor (see <a href="#Core/helper/DateHelper#function-format-static">format</a> for formatting options)</p>',scope:"instance",properties:[{type:{names:["String"]}}]}]},{name:"module:Grid/column/TreeColumn",classDescription:'<p>A column that displays a tree structure when using the <a href="#Grid/feature/Tree">tree</a> feature.</p>\n<p>Default editor is a <a href="#Core/widget/TextField">TextField</a>.</p>\n<p>TreeColumn provides configs to define icons for <a href="#Grid/column/TreeColumn#config-expandIconCls">expanded</a> / <a href="#Grid/column/TreeColumn#config-collapseIconCls">collapsed</a> nodes,\n<a href="#Grid/column/TreeColumn#config-expandedFolderIconCls">expanded folder</a> / <a href="#Grid/column/TreeColumn#config-collapsedFolderIconCls">collapsed folder</a> nodes and\n<a href="#Grid/column/TreeColumn#config-leafIconCls">leaf</a> nodes.</p>\n<p>When the TreeColumn renders its cells, it will look for two special fields <a href="#Grid/data/GridRowModel#field-href">href</a>\nand <a href="#Grid/data/GridRowModel#field-target">target</a>. Specifying <code>href</code> will produce a link for the TreeNode,\nand <code>target</code> will have the same meaning as in an A tag:</p>\n<pre class="prettyprint source lang-javascript"><code>{\n   id        : 1,\n   name      : \'Some external link\'\n   href      : \'//www.website.com&quot;,\n   target    : \'_blank&quot;\n}\n</code></pre>',extends:["Grid/column/Column"],examples:["new TreeGrid({\n    appendTo : document.body,\n\n    columns : [\n         { type: 'tree', field: 'name' }\n    ]\n});"],constructor:{name:"constructor"},filename:"TreeColumn.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/column",lineno:101,classType:"tree",externalExamples:["column/TreeColumn.js"],configs:[{name:"expandIconCls",description:"<p>The icon to use for the collapse icon in collapsed state</p>",type:"String",scope:"inner"},{name:"collapseIconCls",description:"<p>The icon to use for the collapse icon in expanded state</p>",type:"String",scope:"inner"},{name:"collapsedFolderIconCls",description:"<p>The icon to use for the collapse icon in expanded state</p>",type:"String",scope:"inner"},{name:"expandedFolderIconCls",description:"<p>The icon to use for the collapse icon in expanded state</p>",type:"String",scope:"inner"},{name:"indentSize",description:"<p>Size of the child indent in em. Resulting indent is indentSize multiplied by child level.</p>",type:"Number",scope:"inner",defaultvalue:"1.7"},{name:"leafIconCls",description:"<p>The icon to use for the leaf nodes in the tree</p>",type:"String",scope:"inner"}],functions:[{name:"treeRenderer",access:"private",description:"<p>A column renderer that is automatically added to the column with { tree: true }. It adds padding and node icons\nto the cell to make the grid appear to be a tree. The original renderer is called in the process.</p>",scope:"instance"}]},{name:"module:Grid/column/WidgetColumn",classDescription:"<p>A column that displays widgets in the cells.</p>\n<p>There is no <code>editor</code> provided. It is the configured widget's responsibility to provide editing if needed.</p>",extends:["Grid/column/Column"],examples:["new Grid({\n    appendTo : document.body,\n\n    columns : [\n        { type: 'widget', text: 'Increase age', widgets: [{ type: 'button', icon: 'add' }], data: 'age' }\n    ]\n});"],constructor:{name:"constructor"},filename:"WidgetColumn.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/column",lineno:32,classType:"widget",externalExamples:["column/WidgetColumn.js"],configs:[{name:"widgets",description:"<p>An array of widget config objects</p>",type:"Array.<Object>",scope:"inner",category:"Common"}],functions:[{name:"renderer",access:"private",description:"<p>Renderer that displays a widget in the cell.</p>",parameters:[{name:"event",type:"Object",description:"<p>Render event</p>"}],scope:"instance"},{name:"onBeforeWidgetCreate",access:"private",description:"<p>Called before widget is created on rendering</p>",parameters:[{name:"widgetCfg",type:"Object",description:"<p>Widget config</p>"},{name:"event",type:"Object",description:"<p>Render event</p>"}],scope:"instance"},{name:"onAfterWidgetCreate",access:"private",description:"<p>Called after widget is created on rendering</p>",parameters:[{name:"widget",type:"Core.widget.Widget",description:"<p>Created widget</p>"},{name:"event",type:"Object",description:"<p>Render event</p>"}],scope:"instance"},{name:"onBeforeWidgetSetValue",access:"private",description:"<p>Called before widget gets value on rendering. Pass <code>false</code> to skip value setting while rendering</p>",parameters:[{name:"widget",type:"Core.widget.Widget",description:"<p>Created widget</p>"},{name:"event",type:"Object",description:"<p>Render event</p>"}],scope:"instance"},{name:"onAfterWidgetSetValue",access:"private",description:"<p>Called after widget gets value on rendering.</p>",parameters:[{name:"widget",type:"Core.widget.Widget",description:"<p>Created widget</p>"},{name:"event",type:"Object",description:"<p>Render event</p>"}],scope:"instance"}]},{name:"module:Grid/customElements/GridTag",classDescription:'<p>Import this file to be able to use the tag &lt;bryntum-grid&gt; to create a grid. This is more of a proof of concept than\na ready to use class. Example:</p>\n<pre class="prettyprint source lang-javascript"><code>&lt;bryntum-grid&gt;\n  &lt;column data-field=&quot;name&quot;&gt;Name&lt;/column&gt;\n  &lt;column data-field=&quot;city&quot;&gt;City&lt;/column&gt;\n  &lt;column data-field=&quot;food&quot;&gt;Food&lt;/column&gt;\n  &lt;data data-id=&quot;1&quot; data-name=&quot;Daniel&quot; data-city=&quot;Stockholm&quot; data-food=&quot;Hamburgers&quot;&gt;&lt;/data&gt;\n  &lt;data data-id=&quot;2&quot; data-name=&quot;Steve&quot; data-city=&quot;Lund&quot; data-food=&quot;Pasta&quot;&gt;&lt;/data&gt;\n  &lt;data data-id=&quot;3&quot; data-name=&quot;Sergei&quot; data-city=&quot;St Petersburg&quot; data-food=&quot;Pizza&quot;&gt;&lt;/data&gt;\n&lt;/bryntum-grid&gt;\n</code></pre>',constructor:{name:"constructor"},filename:"GridTag.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/customElements",lineno:26,demo:{product:"grid",demo:"webcomponents"}},{name:"module:Grid/data/ColumnStore",classDescription:"<p>A store specialized in handling columns. Used by the Grid to hold its columns and used as a chained store by each SubGrid\nto hold theirs. Should not be instanced directly, instead access it through <code>grid.columns</code> or <code>subGrid.columns</code></p>\n<pre class=\"prettyprint source\"><code>// resize first column\ngrid.columns.first.width = 200;\n\n// remove city column\ngrid.columns.get('city').remove();\n\n// add new column\ngrid.columns.add({text : 'New column'});\n\n// add new column to specific region (SubGrid)\ngrid.columns.add({text : 'New column', region : 'locked'});\n\n// add new column to 'locked' region (SubGrid)\ngrid.columns.add({text : 'New column', locked : true});\n</code></pre>",extends:["Core/data/Store"],constructor:{name:"constructor"},filename:"ColumnStore.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/data",lineno:32,configs:[{name:"autoAddField",description:'<p>Automatically adds a field definition to the store used by the Grid when adding a new Column displaying a\nnon-existing field.</p>\n<p>To enable this behaviour:</p>\n<pre class="prettyprint source lang-javascript"><code>const grid = new Grid({\n    columns : {\n        autoAddField : true,\n        data         : [\n            // Column definitions here\n        ]\n    }\n}</code></pre>',type:"Boolean",scope:"inner",defaultvalue:false}],properties:[{name:"topColumns",description:"<p>Returns the top level columns. If using grouped columns, this is the top level columns. If no grouped\ncolumns are being used, this is the leaf columns.</p>",scope:"instance",readonly:true,properties:[{type:{names:["Array.<Grid.column.Column>"]}}]},{name:"visibleColumns",description:"<p>Returns the visible leaf headers which drive the rows' cell content.</p>",scope:"instance",readonly:true,properties:[{type:{names:["Array.<Grid.column.Column>"]}}]},{name:"bottomColumns",description:"<p>Bottom columns are the ones displayed in the bottom row of a grouped header, or all columns if not using a grouped\nheader. They are the columns that actually display any data.</p>",scope:"instance",returns:[{type:{names:["Array.<Grid.column.Column>"]}}],readonly:true}],functions:[{name:"get",description:'<p>Get column by field. To be sure that you are getting exactly the intended column, use <a href="#Core/data/Store#function-getById">Store#getById()</a> with the\ncolumns id instead.</p>',parameters:[{name:"field",type:"String",description:"<p>Field name</p>"}],scope:"instance",returns:{type:"Grid.column.Column"}},{name:"createRecord",access:"private",description:"<p>Used internally to create a new record in the store. Creates a column of the correct type by looking up the\nspecified type among registered columns.</p>",scope:"instance"},{name:"indexOf",description:"<p>indexOf extended to also accept a columns field, for backward compatibility.</p>\n<pre class=\"prettyprint source\"><code>grid.columns.indexOf('name');\n</code></pre>",parameters:[{name:"recordOrId"}],scope:"instance",returns:{type:"Number"}},{name:"registerColumnType",description:"<p>Call from custom column to register it with ColumnStore. Required to be able to specify type in column config.</p>",parameters:[{name:"columnClass",type:"Class",description:'<p>The <a href="#Grid/column/Column">Grid.column.Column</a> subclass to register.</p>'},{name:"simpleRenderer",type:"Boolean",description:'<p>Pass <code>true</code> if its default renderer does <em>not</em> use other fields from the passed\nrecord than its configured <a href="#Grid/column/Column#config-field">field</a>. This enables more granular cell updating\nupon record mutation.</p>',default:false}],examples:["// create and register custom column\nclass CustomColumn {\n static get type() {\n     return 'custom';\n }\n}\nColumnStore.registerColumnType(CustomColumn, true);\n// now possible to specify in column config\nlet grid = new Grid({\n  columns: [\n    { type: 'custom', field: 'id' }\n  ]\n});"],scope:"static"},{name:"getColumnClass",access:"internal",description:"<p>Returns registered column class for specified type.</p>",parameters:[{name:"type",description:"<p>Type name</p>"}],scope:"static",returns:{type:"Grid.column.Column"}}]},{name:"module:Grid/data/GridRowModel",classDescription:"<p>Model extended with some fields related to grid rendering. Used as default model type in the grids store if nothing\nelse is specified.</p>\n<p>Using this model is optional. If you use a custom model instead and need the functionality of any of the fields\nbelow, you just have to remember to add fields with the same name to your model.</p>",extends:["Core/data/Model"],constructor:{name:"constructor"},filename:"GridRowModel.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/data",lineno:16,fields:[{name:"iconCls",description:"<p>Icon for row (used automatically in tree, feel free to use it in renderer in other cases)</p>",type:"String",scope:"inner"},{name:"expanded",description:"<p>Start expanded or not (only valid for tree data)</p>",type:"Boolean",scope:"inner"},{name:"cls",description:"<p>CSS class (or several classes divided by space) to append to row elements</p>",type:"String",scope:"inner"},{name:"rowHeight",description:'<p>Used by the default implementation of <a href="#Grid/view/GridBase#config-getRowHeight">getRowHeight</a> to determine row\nheight. Set it to use another height than the default for a the records row.</p>',type:"Number",scope:"inner"},{name:"href",description:'<p>A link to use for this record when rendered into a <a href="#Grid/column/TreeColumn">Grid.column.TreeColumn</a>.</p>',type:"String",scope:"inner"},{name:"target",description:'<p>The target to use if this tree node provides a value for the <a href="#Grid/data/GridRowModel#field-href">href</a> field.</p>',type:"String",scope:"inner"}]},{name:"module:Grid/feature/CellEdit",classDescription:'<p>Adding this feature to the grid enables cell editing. All subclasses of <a href="#Core/widget/Field">Field</a> can be used\nas editors for the <a href="#Grid/column/Column">Column</a>. The most popular are:</p>\n<ul>\n<li><a href="#Core/widget/TextField">TextField</a>;</li>\n<li><a href="#Core/widget/NumberField">NumberField</a>;</li>\n<li><a href="#Core/widget/DateField">DateField</a>;</li>\n<li><a href="#Core/widget/TimeField">TimeField</a>;</li>\n<li><a href="#Core/widget/Combo">Combo</a>;</li>\n</ul>\n<p>Usage instructions:</p>\n<h3>Start editing</h3>\n<ul>\n<li>Double click on a cell</li>\n<li>Press [ENTER] or [F2] with a cell selected</li>\n<li>It is also possible to change double click to single click to start editing, using the <a href="#Grid/feature/CellEdit#config-triggerEvent">triggerEvent</a> config</li>\n</ul>\n<h3>While editing</h3>\n<ul>\n<li>[ENTER] Finish editing and start editing the same cell in next row</li>\n<li>[SHIFT] + [ENTER] Same as above put with previous row</li>\n<li>[F2] Finish editing</li>\n<li>[CMD/CTRL] + [ENTER] Finish editing</li>\n<li>[ESC] By default, first reverts the value back to its original value, next press cancels editing</li>\n<li>[TAB] Finish editing and start editing the next cell</li>\n<li>[SHIFT] + [TAB] Finish editing and start editing the previous cell</li>\n</ul>\n<p>Columns specify editor in their configuration. Editor can also by set by using a column type. Columns\nmay also contain these three configurations which affect how their cells are edited:</p>\n<ul>\n<li><a href="#Grid/column/Column#config-invalidAction">invalidAction</a></li>\n<li><a href="#Grid/column/Column#config-revertOnEscape">revertOnEscape</a></li>\n<li><a href="#Grid/column/Column#config-finalizeCellEdit">finalizeCellEdit</a></li>\n</ul>\n<h3>Preventing editing of certain cells</h3>\n<p>You can prevent editing on a column by setting <code>editor</code> to false:</p>\n<pre class="prettyprint source lang-javascript"><code>new Grid({\n   columns : [\n      {\n         type   : \'number\',\n         text   : \'Age\',\n         field  : \'age\',\n         editor : false\n      }\n   ]\n</code></pre>\n<p>To prevent editing in a specific cell, listen to the <a href="#Grid/feature/CellEdit#event-beforeCellEditStart">beforeCellEditStart</a> and return false:</p>\n<pre class="prettyprint source lang-javascript"><code>grid.on(\'beforeCellEditStart\', ({ editorContext }) => {\n    return editorContext.column.field !== \'id\';\n});\n</code></pre>\n<p>To use an alternative input field to edit a cell, listen to the <a href="#Grid/feature/CellEdit#event-beforeCellEditStart">beforeCellEditStart</a> and\nset the <code>editor</code> property of the context to the input field you want to use:</p>\n<pre class="prettyprint source lang-javascript"><code>grid.on(\'beforeCellEditStart\', ({ editorContext }) => {\n    return editorContext.editor = myDateField;\n});\n</code></pre>\n<p>This feature is <em>enabled</em> by default.</p>',extends:["Core/mixin/InstancePlugin"],examples:["{ data: 'name', text: 'Name', editor: 'text' }"],constructor:{name:"constructor"},filename:"CellEdit.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/feature",lineno:100,demo:{product:"grid",demo:"celledit"},classType:"cellEdit",externalExamples:["feature/CellEdit.js"],configs:[{name:"autoSelect",description:"<p>Set to true to select the field text when editing starts</p>",type:"Boolean",scope:"inner",defaultvalue:true},{name:"blurAction",description:"<p>What action should be taken when focus moves leaves the cell editor, for example when clicking outside.\nMay be <code>'complete'</code> or <code>'cancel</code>'.</p>",type:"String",scope:"inner",defaultvalue:"complete"},{name:"addNewAtEnd",description:"<p>Set to true to have TAB on the last cell in the data set create a new record\nand begin editing it at its first editable cell.</p>\n<p>If this is configured as an object, it is used as the default data value set for each new record.</p>",type:["Boolean","Object"],scope:"inner"},{name:"autoEdit",description:"<p>Set to true to start editing when user starts typing text on a focused cell (as in Excel)</p>",type:"Boolean",scope:"inner",defaultvalue:false},{name:"editorClass",access:"internal",description:'<p>Class to use as an editor. Default value: <a href="#Core/widget/Editor">Core.widget.Editor</a></p>',type:"Core.widget.Widget",scope:"inner"},{name:"triggerEvent",description:"<p>The name of the event that will trigger cell editing (e.g. 'celldblclick' or 'cellclick').\nAs example, may be useful to change celldblclick to cellclick.</p>",type:"String",scope:"inner",defaultvalue:"celldblclick"}],functions:[{name:"confirm",description:'<p>Displays a YES/NO confirmation dialog box owned by the current Editor. This is intended to be\nused by <a href="#Grid/column/Column#config-finalizeCellEdit">finalizeCellEdit</a> implementations. The returned promise resolves passing <code>true</code>\nif the &quot;yes&quot; button is pressed, and <code>false</code> if the &quot;No&quot; button is pressed. Typing <code>ESC</code> rejects.</p>',parameters:[{name:"options",type:"Object",description:"<p>An options object for what to show.</p>"},{name:"options.title",type:"String",description:"<p>The title to show in the dialog header.</p>",optional:true,isSubParam:true},{name:"options.message",type:"String",description:"<p>The message to show in the dialog body.</p>",optional:true,isSubParam:true}],scope:"instance"},{name:"getEditorForCell",access:"private",description:"<p>Internal function to create or get existing editor for specified cell.</p>",parameters:[{name:"cellContext",description:"<p>Cell to get or create editor for</p>"}],scope:"instance",category:"Internal",returns:{type:"Core.widget.Editor",description:"<p>An Editor container which displays the input field.</p>"}},{name:"getAdjacentEditableCell",access:"private",description:"<p>Find the next succeeding or preceding cell which is editable (column.editor != false)</p>",parameters:[{name:"cellInfo",type:"Object"},{name:"isForward",type:"Boolean"}],scope:"instance",category:"Internal",returns:{type:"Object"}},{name:"doAddNewAtEnd",description:'<p>Adds a new, empty record at the end of the TaskStore with the initial\ndata specified by the <a href="#Grid/feature/CellEdit#config-addNewAtEnd">addNewAtEnd</a> setting.</p>',scope:"instance",returns:{type:"Promise",description:"<p>Newly added record wrapped in a promise.</p>"},async:true},{name:"getEditingContext",access:"private",description:"<p>Creates an editing context object for the passed cell context (target cell must be in the DOM).</p>\n<p>If the referenced cell is editable, an object returned will\nbe returned containing the following properties:</p>\n<pre><code>- column\n- record\n- cell\n- value\n- selector\n</code></pre>\n<p>If the references cell is <em>not</em> editable, <code>false</code> will be returned.</p>",parameters:[{name:"cellContext",type:"Object",description:"<p>an object which encapsulates a cell.</p>"},{name:"cellContext.id",type:"String",description:"<p>The record id of the row to edit</p>",isSubParam:true},{name:"cellContext.columnId",type:"String",description:"<p>The column id of the column to edit</p>",isSubParam:true}],scope:"instance"},{name:"startEditing",description:"<p>Start editing specified cell. If no cellContext is given it starts with the first cell in the first row.\nThis function is exposed on Grid and can thus be called as <code>grid.startEditing(...)</code></p>",parameters:[{name:"cellContext",type:"Object",description:"<p>Cell specified in format { id: 'x', columnId/column/field: 'xxx' }. See <a href=\"#Grid/view/Grid#function-getCell\">getCell</a> for details.</p>"}],scope:"instance",fires:["event:startCellEdit"],category:"Editing",returns:{type:"Boolean",description:"<p>editingStarted</p>"}},{name:"cancelEditing",description:"<p>Cancel editing, destroys the editor</p>",parameters:[{name:"silent",type:"Boolean",description:"<p>Pass true to prevent method from firing event</p>",default:false}],scope:"instance",fires:["event:cancelCellEdit"],category:"Editing"},{name:"finishEditing",description:"<p>Finish editing, update the underlying record and destroy the editor</p>",scope:"instance",fires:["event:finishCellEdit"],category:"Editing",returns:{description:"<p><code>false</code> if the edit could not be finished due to the value being invalid or the\nEditor's <code>complete</code> event was vetoed.</p>"}},{name:"onCellClickWhileEditing",access:"private",description:"<p>Event handler added when editing is active called when user clicks a cell in the grid during editing.\nIt finishes editing and moves editor to the selected cell instead.</p>",scope:"instance",category:"Internal event handling"},{name:"onCellClick",access:"private",description:"<p>Starts editing if user taps selected cell again on touch device. Chained function called when user clicks a cell.</p>",scope:"instance",category:"Internal event handling"},{name:"onTriggerEditEvent",access:"private",description:'<p>Called when the user triggers the edit action in <a href="#Grid/feature/CellEdit#config-triggerEvent">triggerEvent</a> config. Starts editing.</p>',scope:"instance",category:"Internal event handling"},{name:"onStoreUpdate",access:"private",description:"<p>Update the input field if underlying data changes during edit.</p>",scope:"instance",category:"Internal event handling"},{name:"onGridBeforeRenderRows",access:"private",description:"<p>Invalidate editor when grid renders rows.</p>",scope:"instance",category:"Internal event handling"},{name:"onElementKeyDown",access:"private",description:"<p>Chained function called on key down. [enter] or [f2] starts editing. [enter] also finishes editing and starts\nediting next row, [f2] also finishes editing without moving to the next row. [esc] cancels editing. [tab]\nedits next column, [shift] + [tab] edits previous.</p>",parameters:[{name:"event"}],scope:"instance",category:"Internal event handling"},{name:"onEditorFocusOut",access:"private",description:"<p>Cancel editing on widget focusout</p>",scope:"instance"},{name:"onTapOut",access:"private",description:"<p>Cancel edit on touch outside of grid for mobile Safari (focusout not triggering unless you touch something focusable)</p>",scope:"instance"},{name:"onElementClick",access:"private",description:"<p>Finish editing if clicking below rows (only applies when grid is higher than rows).</p>",scope:"instance",category:"Internal event handling"}],properties:[{name:"isEditing",description:"<p>Is any cell currently being edited?</p>",scope:"instance",returns:[{type:{names:["Boolean"]}}]},{name:"activeRecord",description:"<p>Returns the record currently being edited, or <code>null</code></p>",scope:"instance",returns:[{type:{names:["Core.data.Model"]}}]}],events:[{name:"startCellEdit",description:"<p>Fires on the owning Grid when editing starts</p>",parameters:[{name:"grid",type:"Grid.view.Grid",description:"<p><strong>Deprecated</strong> Use <code>source</code> instead</p>"},{name:"source",type:"Grid.view.Grid",description:"<p>Owner grid</p>"},{name:"editorContext",type:"Object",description:"<p>Editing context</p>"},{name:"editorContext.editor",type:"Core.widget.Editor",description:"<p>The Editor being used.\nWill contain an <code>inputField</code> property which is the field being used to perform the editing.</p>",isSubParam:true},{name:"editorContext.column",type:"Grid.column.Column",description:"<p>Target column</p>",isSubParam:true},{name:"editorContext.record",type:"Core.data.Model",description:"<p>Target record</p>",isSubParam:true},{name:"editorContext.cell",type:"HTMLElement",description:"<p>Target cell</p>",isSubParam:true},{name:"editorContext.value",type:"*",description:"<p>Cell value</p>",isSubParam:true}]},{name:"beforeFinishCellEdit",description:"<p>Fires on the owning Grid before the cell editing is finished, return false to signal that the value is invalid and editing should not be finalized.</p>",parameters:[{name:"grid",type:"Grid.view.Grid",description:"<p>Target grid</p>"},{name:"editorContext",type:"Object",description:"<p>Editing context</p>"},{name:"editorContext.editor",type:"Core.widget.Editor",description:"<p>The Editor being used.\nWill contain an <code>inputField</code> property which is the field being used to perform the editing.</p>",isSubParam:true},{name:"editorContext.column",type:"Grid.column.Column",description:"<p>Target column</p>",isSubParam:true},{name:"editorContext.record",type:"Core.data.Model",description:"<p>Target record</p>",isSubParam:true},{name:"editorContext.cell",type:"HTMLElement",description:"<p>Target cell</p>",isSubParam:true},{name:"editorContext.value",type:"*",description:"<p>Cell value</p>",isSubParam:true}]},{name:"finishCellEdit",description:"<p>Fires on the owning Grid when cell editing is finished</p>",parameters:[{name:"grid",type:"Grid.view.Grid",description:"<p>Target grid</p>"},{name:"editorContext",type:"Object",description:"<p>Editing context</p>"},{name:"editorContext.editor",type:"Core.widget.Editor",description:"<p>The Editor being used.\nWill contain an <code>inputField</code> property which is the field being used to perform the editing.</p>",isSubParam:true},{name:"editorContext.column",type:"Grid.column.Column",description:"<p>Target column</p>",isSubParam:true},{name:"editorContext.record",type:"Core.data.Model",description:"<p>Target record</p>",isSubParam:true},{name:"editorContext.cell",type:"HTMLElement",description:"<p>Target cell</p>",isSubParam:true},{name:"editorContext.value",type:"*",description:"<p>Cell value</p>",isSubParam:true}]},{name:"cancelCellEdit",description:"<p>Fires on the owning Grid when editing is cancelled</p>",parameters:[{name:"grid",type:"Grid.view.Grid",description:"<p><strong>Deprecated</strong> Use <code>source</code> instead</p>"},{name:"source",type:"Grid.view.Grid",description:"<p>Owner grid</p>"}]},{name:"beforeCellEditStart",description:"<p>Fires on the owning Grid before editing starts, return <code>false</code> to prevent editing</p>",parameters:[{name:"source",type:"Grid.view.Grid",description:"<p>Owner grid</p>"},{name:"editorContext",type:"Object",description:"<p>Editing context</p>"},{name:"editorContext.column",type:"Grid.column.Column",description:"<p>Target column</p>",isSubParam:true},{name:"editorContext.record",type:"Core.data.Model",description:"<p>Target record</p>",isSubParam:true},{name:"editorContext.cell",type:"HTMLElement",description:"<p>Target cell</p>",isSubParam:true},{name:"editorContext.editor",type:"Core.widget.Field",description:'<p>The input field that the column is configured\nwith (see <a href="#Grid/column/Column#config-field">field</a>). This property mey be replaced\nto be a different <a href="#Core/widget/Field">field</a> in the handler, to take effect\njust for the impending edit.</p>',isSubParam:true},{name:"editorContext.finalize",type:"function",description:"<p>An async function may be injected into this property\nwhich performs asynchronous finalization tasks such as complex validation of confirmation. The\nvalue <code>true</code> or <code>false</code> must be returned.</p>",optional:true,isSubParam:true},{name:"editorContext.finalize.context",type:"Object",description:"<p>An object describing the editing context upon requested completion of the edit.</p>",optional:true,isSubParam:true},{name:"editorContext.value",type:"*",description:"<p>Cell value</p>",isSubParam:true}],preventable:true}]},{name:"module:Grid/feature/CellTooltip",classDescription:'<p>Displays a tooltip when hovering cells. Contents can be customized by specifying a global <code>tooltipRenderer</code> function\nfor the feature and/or on a per column basis.</p>\n<p>Configuration properties passed into this feature are used to configure the <a href="#Core/widget/Tooltip">Core.widget.Tooltip</a> instance\nused.</p>\n<p>This feature is <strong>disabled</strong> by default.</p>\n<h2>Showing async content</h2>\n<p>Showing remotely loaded content is super easy using the <a href="#Grid/feature/CellTooltip#config-tooltipRenderer">tooltipRenderer</a>:</p>\n<pre class="prettyprint source lang-javascript"><code>// Async tooltip with some custom settings\nlet grid = new Grid({\n  features: {\n    cellTooltip: {\n      // Time that mouse needs to be over cell before tooltip is shown\n      hoverDelay : 4000,\n      // Time after mouse out to hide the tooltip, 0 = instantly\n      hideDelay  : 0,\n      // Async tooltip renderer, return a Promise which yields the text content\n      tooltipRenderer({ record, tip }) => AjaxHelper.get(`tooltip.php?id=${record.id}`).then(response => response.text())\n    }\n  }\n});\n</code></pre>',extends:["Core/mixin/InstancePlugin"],examples:["// Enable CellTooltip and configure it to show the cell's full value\nlet grid = new Grid({\n  features: {\n    cellTooltip: ({value}) => value\n  }\n});\n\n// Column with its own tooltip renderer\n{\n  text            : 'Name',\n  field           : 'name',\n  tooltipRenderer : ({ record }) => `My name is\\xa0<b>${record.name}</b>`\n}"],constructor:{name:"constructor"},filename:"CellTooltip.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/feature",lineno:61,demo:{product:"grid",demo:"celltooltip"},classType:"cellTooltip",externalExamples:["feature/CellTooltip.js"],configs:[{name:"tooltipRenderer",description:"<p>Function called to generate the HTML content for the cell tooltip. The function should return a string (your HTML), or a Promise yielding a string (for remotely loaded content)</p>",type:"function",scope:"inner",returns:[{type:{names:["String","Promise"]}}],parameters:[{name:"context",type:"Object"},{name:"context.cellElement",type:"HTMLElement",description:"<p>The cell element</p>",isSubParam:true},{name:"context.record",type:"Core.data.Model",description:"<p>The row record</p>",isSubParam:true},{name:"context.column",type:"Grid.column.Column",description:"<p>The column</p>",isSubParam:true},{name:"context.tip",type:"Core.widget.Tooltip",description:"<p>The Tooltip instance</p>",isSubParam:true},{name:"context.cellTooltip",type:"Grid.feature.CellTooltip",description:"<p>The feature</p>",isSubParam:true},{name:"context.event",type:"Event",description:"<p>The raw DOM event</p>",isSubParam:true}]}],functions:[{name:"getTooltipContent",access:"private",description:"<p>Called from Tooltip to populate it with html.</p>",scope:"instance"}]},{name:"module:Grid/feature/ColumnDragToolbar",classDescription:"<p>Displays a toolbar while dragging column headers. Drop on a button in the toolbar to activate a certain function,\nfor example to group by that column. This feature simplifies certain operations on touch devices.</p>\n<p>This feature is <strong>disabled</strong> by default, but turned on automatically on touch devices.</p>",extends:["Core/mixin/InstancePlugin"],constructor:{name:"constructor"},filename:"ColumnDragToolbar.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/feature",lineno:24,classType:"columnDragToolbar",externalExamples:["feature/ColumnDragToolbar.js"],demo:{product:"grid",demo:"columndragtoolbar"},functions:[{name:"render",access:"private",description:"<p>Initializes this feature on grid render.</p>",scope:"instance"}]},{name:"module:Grid/feature/ColumnPicker",classDescription:"<p>Displays a column picker (to show/hide columns) in the header context menu. Columns can be displayed in sub menus\nby region or tag. Grouped headers are displayed as menu hierarchies.</p>\n<p>This feature is <strong>enabled</strong> by default.</p>",extends:["Core/mixin/InstancePlugin"],constructor:{name:"constructor"},filename:"ColumnPicker.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/feature",lineno:21,demo:{product:"grid",demo:"columns"},classType:"columnPicker",externalExamples:["feature/ColumnPicker.js"],configs:[{name:"groupByRegion",description:"<p>Groups columns in the picker by region (each region gets its own sub menu)</p>",type:"Boolean",scope:"inner",defaultvalue:false},{name:"groupByTag",description:'<p>Groups columns in the picker by tag, each column may be shown under multiple tags. See\n<a href="#Grid/column/Column#config-tags">tags</a></p>',type:"Boolean",scope:"inner",defaultvalue:false}],functions:[{name:"getColumnPickerItems",access:"private",description:"<p>Get menu items, either a straight list of columns or sub menus per subgrid</p>",parameters:[{name:"columnStore",description:"<p>Column store to traverse</p>"}],scope:"instance",returns:{type:"Array.<Object>",description:"<p>Menu item configs</p>"}},{name:"getColumnsForTag",access:"private",description:"<p>Get all columns that has the specified tag\nTODO: if tags are useful from somewhere else, move to ColumnStore</p>",parameters:[{name:"tag"}],scope:"instance",returns:{type:"Array.<Grid.column.Column>"}},{name:"refreshTagMenu",access:"private",description:"<p>Refreshes checked status for a tag menu. Needed since columns can appear under multiple tags.</p>",scope:"instance"},{name:"buildColumnMenu",access:"private",description:"<p>Traverses columns to build menu items for the column picker.</p>",scope:"instance"},{name:"getHeaderMenuItems",access:"private",description:"<p>Supply items for headers context menu.</p>",parameters:[{name:"column",description:"<p>Header for this column</p>"},{name:"items",description:"<p>Array of items to add to</p>"}],scope:"instance",returns:{type:"Array.<Object>",description:"<p>Modified items</p>"}},{name:"onColumnToggle",access:"private",description:"<p>Handler for column hide/show menu checkitems.</p>",parameters:[{name:"event",type:"Object",description:'<p>The <a href="#Core/widget/MenuItem#event-toggle">toggle</a> event.</p>'}],scope:"instance"},{name:"getColumnDragToolbarItems",access:"private",description:"<p>Supply items to ColumnDragToolbar</p>",scope:"instance"}]},{name:"module:Grid/feature/ColumnReorder",classDescription:'<p>Allows user to reorder columns by dragging headers. To get notified about column reorder listen to <code>change</code> event\non <a href="#Grid/data/ColumnStore">columns</a> store.</p>\n<p>This feature is <strong>enabled</strong> by default.</p>',extends:["Core/mixin/InstancePlugin"],constructor:{name:"constructor"},filename:"ColumnReorder.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/feature",lineno:24,demo:{product:"grid",demo:"columns"},classType:"columnReorder",externalExamples:["feature/ColumnReorder.js"],functions:[{name:"init",access:"private",description:"<p>Initialize drag &amp; drop (called from render)</p>",scope:"instance"},{name:"onDrop",access:"private",description:"<p>Handle drop</p>",scope:"instance"},{name:"onInvalidDrop",access:"private",description:"<p>Handle invalid drop</p>",scope:"instance"},{name:"renderContents",access:"private",description:"<p>Updates DragHelper with updated headers when grid contents is rerendered</p>",scope:"instance"},{name:"render",access:"private",description:"<p>Initializes this feature on grid render.</p>",scope:"instance"}]},{name:"module:Grid/feature/ColumnResize",classDescription:'<p>Enables user to resize columns by dragging a handle on the righthand side of the header. To get notified about column\nresize listen to <code>change</code> event on <a href="#Grid/data/ColumnStore">columns</a> store.</p>\n<p>This feature is <strong>enabled</strong> by default.</p>',extends:["Core/mixin/InstancePlugin"],constructor:{name:"constructor"},filename:"ColumnResize.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/feature",lineno:22,demo:{product:"grid",demo:"columns"},classType:"columnResize",externalExamples:["feature/ColumnResize.js"],configs:[{name:"liveResize",description:"<p>Resize all cells below a resizing header during dragging.\n<code>'auto'</code> means <code>true</code> on non-mobile platforms.</p>",type:["String","Boolean"],scope:"inner",defaultvalue:"auto"}],functions:[{name:"onResizing",access:"private",description:"<p>Handle drag event - resize the column live unless it's a touch gesture</p>",scope:"instance"},{name:"onResize",access:"private",description:"<p>Handle drop event (only used for touch)</p>",scope:"instance"}]},{name:"module:Grid/feature/ContextMenu",classDescription:"<p>Right click to display context menu for headers and cells. Items for the menu are requested by calling\n<a href=\"#Grid/view/Grid#function-getHeaderMenuItems\">Grid.getHeaderMenuItems()</a> or\n<a href=\"#Grid/view/Grid#function-getCellMenuItems\">Grid.getCellMenuItems()</a> (see <a href=\"#Grid/feature/Sort\">Sort</a> feature).\nIt is also possible to add items via the features config and via column configs. See examples below.</p>\n<p>Add extra items to both header and cell for all columns:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>// Extra items for all columns\nconst grid = new Grid({\n  features: {\n    contextMenu: {\n      headerItems: [\n        { text: 'My header item', icon: 'fa fa-car', weight: 200, onItem : () => ... }\n      ],\n\n      cellItems: [\n        { text: 'My cell item', icon: 'fa fa-bus', weight: 200, onItem : () => ... }\n      ]\n    }\n  }\n});\n</code></pre>\n<p>Add extra items to both header and cell for a single column:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>// Extra items for single column\nconst grid = new Grid({\n  columns: [\n    { field: 'name', text: 'Name', headerMenuItems: [\n      { text: 'My unique header item', icon: 'fa fa-flask', onItem : () => ... }\n    ]},\n    { field: 'city', text: 'City', cellMenuItems: [\n      { text: 'My unique cell item', icon: 'fa fa-beer', onItem : () => ... }\n    ]},\n  ]\n});\n</code></pre>\n<p>It is also possible to manipulate the default items and add new ones in a processing function (same pattern applies\nfor header menu):</p>\n<pre class=\"prettyprint source lang-javascript\"><code>const grid = new Grid({\n  features: {\n    contextMenu: {\n      processCellItems({items, record}) {\n          if (record.cost > 5000) {\n             items.push({ text : 'Split cost' });\n          }\n      }\n    }\n  }\n});\n</code></pre>\n<p>This feature is <strong>enabled</strong> by default.</p>",extends:["Core/mixin/InstancePlugin"],constructor:{name:"constructor"},filename:"ContextMenu.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/feature",lineno:77,demo:{product:"grid",demo:"filtering"},classType:"contextMenu",externalExamples:["feature/ContextMenu.js"],configs:[{name:"headerItems",description:'<p>Extra items to add to the header context menu. See <a href="#Core/widget/MenuItem">Core.widget.MenuItem</a> for more info.</p>\n<pre class="prettyprint source lang-javascript"><code>features : {\n    contextMenu : {\n        headerItems : [\n            { text : \'Header item\', onItem : () => ... }\n        ]\n    }\n}\n</code></pre>',type:"Array.<Object>",scope:"inner"},{name:"processHeaderItems",description:"<p>A function called before displaying the header menu that allows manipulations of its items. Called with a\nsingle parameter with format { column, items }. Returning <code>false</code> from this function prevents\nthe menu from being shown.</p>\n<pre class=\"prettyprint source lang-javascript\"><code>features : {\n    contextMenu : {\n        processHeaderItems({record, items}) {\n            // Add or remove items here as needed\n            if (column.field === 'age') {\n                items.push({ text: 'Hide youngsters', icon : 'b-fa b-fa-fw b-fa-baby' })\n            }\n        }\n    }\n}\n</code></pre>",type:"function",scope:"inner"},{name:"cellItems",description:'<p>Extra items to add to the cell context menu. See <a href="#Core/widget/MenuItem">Core.widget.MenuItem</a> for more info.</p>\n<pre class="prettyprint source lang-javascript"><code>features : {\n    contextMenu : {\n        cellItems : [\n            { text : \'Cell item\', onItem : () => ... }\n        ]\n    }\n}\n</code></pre>',type:"Array.<Object>",scope:"inner"},{name:"processCellItems",description:"<p>A function called before displaying the cell menu that allows manipulations of its items. Called with a\nsingle parameter with format { record, items }. Returning <code>false</code> from this function prevents\nthe menu from being shown.</p>\n<pre class=\"prettyprint source lang-javascript\"><code>features : {\n    contextMenu : {\n        processCellItems({record, items}) {\n            // Add or remove items here as needed\n            if (record.age > 50) {\n                items.push({ text: 'Add extra vacation', icon : 'b-fa b-fa-fw b-fa-umbrella-beach' })\n            }\n        }\n    }\n}\n</code></pre>",type:"function",scope:"inner"},{name:"triggerEvent",description:"<p>Event which is used to show context menu.\nAvailable options are: 'contextmenu', 'click', 'dblclick'.\nDefault value is used from <a href=\"#Grid/view/Grid#config-contextMenuTriggerEvent\">contextMenuTriggerEvent</a></p>",type:"String",scope:"inner"}],events:[{name:"headerContextMenuBeforeShow",description:"<p>Fired from grid before the context menu is shown for a header. Allows manipulation of the items\nto show in the same way as in <code>processHeaderItems</code>. Returning false from a listener prevents the\nmenu from being shown.</p>",parameters:[{name:"source",type:"Grid.view.Grid"},{name:"items",type:"Object",description:"<p>Menu item configs</p>"},{name:"column",type:"Grid.column.Column",description:"<p>Column</p>"}],preventable:true},{name:"headerContextMenuShow",description:"<p>Fired from grid after showing the context menu for a header</p>",parameters:[{name:"source",type:"Grid.view.Grid"},{name:"menu",type:"Core.widget.Menu",description:"<p>The menu</p>"},{name:"column",type:"Grid.column.Column",description:"<p>Column</p>"}],preventable:true},{name:"cellContextMenuBeforeShow",description:"<p>Fired from grid before the context menu is shown for a cell. Allows manipulation of the items\nto show in the same way as in <code>processCellItems</code>. Returning false from a listener prevents the\nmenu from being shown.</p>",parameters:[{name:"source",type:"Grid.view.Grid"},{name:"items",type:"Object",description:"<p>Menu item configs</p>"},{name:"column",type:"Grid.column.Column",description:"<p>Column</p>"},{name:"record",type:"Core.data.Model",description:"<p>Record</p>"}],preventable:true},{name:"cellContextMenuShow",description:"<p>Fired from grid after showing the context menu for a cell</p>",parameters:[{name:"source",type:"Grid.view.Grid"},{name:"menu",type:"Core.widget.Menu",description:"<p>The menu</p>"},{name:"column",type:"Grid.column.Column",description:"<p>Column</p>"},{name:"record",type:"Core.data.Model",description:"<p>Record</p>"}],preventable:true},{name:"contextMenuItem",description:"<p>Fired when an item is selected in the context menu.</p>",parameters:[{name:"grid",type:"Grid.view.Grid",description:"<p>The grid</p>"},{name:"item",type:"Object",description:"<p>Selected menu item</p>"},{name:"column",type:"Grid.column.Column",description:"<p>Column</p>"},{name:"itemEl",type:"HTMLElement",description:"<p>Menu item element</p>"}]},{name:"contextMenuToggleItem",description:"<p>Fired when an check item is toggled in the context menu.</p>",parameters:[{name:"grid",type:"Grid.view.Grid",description:"<p>The grid</p>"},{name:"item",type:"Object",description:"<p>Selected menu item</p>"},{name:"column",type:"Grid.column.Column",description:"<p>Column</p>"},{name:"checked",type:"Boolean",description:"<p>Checked or not</p>"},{name:"itemEl",type:"HTMLElement",description:"<p>Menu item element</p>"}]}],functions:[{name:"showContextMenu",access:"private",description:"<p>Show context menu.</p>",parameters:[{name:"event"}],scope:"instance",fires:["event:contextmenuitem","event:contextmenutoggleitem"]},{name:"hideContextMenu",access:"internal",description:"<p>Hides the context menu</p>",scope:"instance"}]},{name:"module:Grid/feature/Filter",classDescription:'<p>Feature that allows filtering of the grid by settings filters on columns. The actual filtering is done by the store.\nFor info on programmatically handling filters, see <a href="#Core/data/mixin/StoreFilter">StoreFilter</a>.</p>\n<p>This feature is <strong>disabled</strong> by default.</p>\n<p><strong>Note:</strong> This feature cannot be used together with <a href="#Grid/feature/FilterBar">filterBar</a> feature, they are mutually exclusive.</p>',extends:["Core/mixin/InstancePlugin"],examples:["// Filtering turned on but no default filter\nlet grid = new Grid({\n  features : {\n    filter : true\n  }\n});\n\n// Using default filter\nlet grid = new Grid({\n  features : {\n    filter : { property : 'city', value : 'Gavle' }\n  }\n});\n\n// Custom filtering function for a column\nlet grid = new Grid({\n   features : {\n       filter : true\n   },\n\n   columns: [\n       {\n         field      : 'age',\n         text       : 'Age',\n         type       : 'number',\n         // Custom filtering function that checks \"greater than\" no matter which field user filled in :)\n         filterable : ({ record, value, operator }) => record.age > value\n       }\n   ]\n});"],constructor:{name:"constructor"},filename:"Filter.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/feature",lineno:59,demo:{product:"grid",demo:"filtering"},classType:"filter",externalExamples:["feature/Filter.js"],functions:[{name:"refreshHeaders",access:"private",description:"<p>Update headers to match stores filters. Called on store load and grid header render.</p>",parameters:[{name:"reRenderRows",description:"<p>Also refresh rows?</p>"}],scope:"instance"},{name:"getPopupItems",access:"private",description:"<p>Get fields to display in filter popup.</p>",parameters:[{name:"fieldType",description:"<p>Type of field, number, date etc.</p>"},{name:"filter",description:"<p>Current filter filter</p>"},{name:"initialValue"},{name:"field",description:"<p>Column</p>"},{name:"store",description:"<p>Grid store</p>"},{name:"changeCallback",description:"<p>Callback for when filter has changed</p>"},{name:"closeCallback",description:"<p>Callback for when editor should be closed</p>"}],scope:"instance",returns:{type:"*"}},{name:"showFilterEditor",description:"<p>Shows a popup where a filter can be edited.</p>",parameters:[{name:"column",type:"Grid.column.Column",description:"<p>Column to show filter editor for</p>"},{name:"value",type:"*",description:"<p>Value to init field with</p>"}],scope:"instance"},{name:"closeFilterEditor",description:"<p>Close the filter editor.</p>",scope:"instance"},{name:"getCellMenuItems",access:"private",description:"<p>Add menu items for filtering, depending on filter type etc.</p>",parameters:[{name:"column"},{name:"record"},{name:"items"}],scope:"instance",returns:{type:"Array.<Object>"}},{name:"getHeaderMenuItems",access:"private",description:"<p>Add menu item for removing filter if column is filtered.</p>",parameters:[{name:"column",description:"<p>Column</p>"},{name:"items",description:"<p>Menu items</p>"}],scope:"instance",returns:{type:"Array.<Object>"}},{name:"onStoreFilter",access:"private",description:"<p>Store filtered; refresh headers.</p>",scope:"instance"},{name:"renderHeader",access:"private",description:"<p>Called after headers are rendered, make headers match stores initial sorters</p>",scope:"instance"},{name:"onElementClick",access:"private",description:"<p>Called when user clicks on the grid. Only care about clicks on the filter icon.</p>",parameters:[{name:"event",type:"MouseEvent"}],scope:"instance"}]},{name:"module:Grid/feature/FilterBar",classDescription:'<p>Feature that allows filtering of the grid by entering filters on column headers.\nThe actual filtering is done by the store.\nFor info on programmatically handling filters, see <a href="#Core/data/mixin/StoreFilter">StoreFilter</a>.</p>\n<p>This feature is <strong>disabled</strong> by default.</p>\n<p>The individual filterability of columns is defined by a <code>filterable</code>\nproperty on the column which defaults to <code>true</code>. If <code>false</code>, that column\nis not filterable.</p>\n<p>The property value may also be a custom filter function.</p>\n<p>The property value may also be an object which may contain the following two properties:</p>\n<ul>\n<li><strong>filterFn</strong> : <code>Function</code> A custom filtering function</li>\n<li><strong>filterField</strong> : <code>Object</code> A config object for the filter value input field.</li>\n</ul>\n<p><strong>Note:</strong> This feature cannot be used together with <a href="#Grid/feature/Filter">filter</a> feature, they are mutually exclusive.</p>',extends:["Core/mixin/InstancePlugin"],examples:["// filtering turned on but no default filter\nlet grid = new Grid({\n  features: {\n    filterBar : true\n  }\n});","// using default filter\nlet grid = new Grid({\n  features : {\n    filterBar : { filter: { property : 'city', value : 'Gavle' } }\n  }\n});","// Custom filtering function for a column\nlet grid = new Grid({\n  features : {\n    filter : true\n  },\n\n  columns: [\n     {\n       field      : 'age',\n       text       : 'Age',\n       type       : 'number',\n       // Custom filtering function that checks \"greater than\"\n       filterable : ({ record, value }) => record.age > value\n     },\n     {\n       field : 'name',\n       // Filterable may specify a filterFn and a config for the filtering input field\n       filterable : {\n         filterFn : ({ record, value }) => record.name.toLowerCase().indexof(value.toLowerCase()) !== -1,\n         filterField : {\n           emptyText : 'Filter name'\n         }\n       }\n     },\n     {\n       field : 'city',\n       text : 'Visited',\n       flex : 1,\n       // Filterable with multiselect combo to pick several items to filter\n       filterable : {\n         filterField : {\n           type        : 'combo',\n           multiSelect : true,\n           items       : ['Barcelona', 'Moscow', 'Stockholm']\n         },\n         filterFn    : ({ record, value }) => !value.length || value.includes(record.city)\n       }\n     }\n  ]\n});"],constructor:{name:"constructor"},filename:"FilterBar.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/feature",lineno:93,demo:{product:"grid",demo:"filterbar"},classType:"filterBar",externalExamples:["feature/FilterBar.js"],configs:[{name:"keyStrokeFilterDelay",description:"<p>The delay in milliseconds to wait after the last keystroke before applying filters.\nSet to 0 to not trigger filtering from keystrokes, requires pressing ENTER instead</p>",type:"Number",scope:"inner",defaultvalue:300}],functions:[{name:"hideFilterBar",description:"<p>Hides the filtering fields.</p>",scope:"instance"},{name:"showFilterBar",description:"<p>Shows the filtering fields.</p>",scope:"instance"},{name:"toggleFilterBar",description:"<p>Toggles the filtering fields visibility.</p>",scope:"instance"},{name:"renderFilterBar",access:"private",description:"<p>Renders the filtering fields for filterable columns.</p>",scope:"instance"},{name:"renderColumnFilterField",access:"private",description:"<p>Renders text field filter in the provided column header.</p>",parameters:[{name:"column",type:"Grid.column.Column",description:"<p>Column to render text field filter for.</p>"}],scope:"instance"},{name:"updateColumnFilterFields",access:"private",description:"<p>Fills in column filter fields with values from the grid store filters.</p>",scope:"instance"},{name:"onStoreFilter",access:"private",description:"<p>Fires when store gets filtered. Refreshes field values in column headers.</p>",scope:"instance"},{name:"renderHeader",access:"private",description:"<p>Called after headers are rendered, make headers match stores initial sorters</p>",scope:"instance"},{name:"onColumnFilterFieldChange",access:"private",description:"<p>Called when a column text filter field value is changed by user.</p>",parameters:[{name:"field",type:"TextField",description:"<p>Filter text field.</p>"},{name:"value",type:"String",description:"<p>New filtering value.</p>"}],scope:"instance"},{name:"getHeaderMenuItems",access:"private",description:"<p>Adds a menu item to toggle filter bar visibility.</p>",parameters:[{name:"column",description:"<p>Column</p>"},{name:"items",description:"<p>Menu items</p>"}],scope:"instance",returns:{type:"Array.<Object>",description:"<p>Menu items.</p>"}}]},{name:"module:Grid/feature/GridFeatureManager",classDescription:"<p>Static class intended to register and query grid features</p>",constructor:{name:"constructor"},filename:"GridFeatureManager.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/feature",lineno:23,functions:[{name:"registerFeature",description:"<p>Register a feature class with the Grid. Enables it to be created and configured using config Grid#features.</p>",parameters:[{name:"featureClass",type:"Core.mixin.InstancePlugin",description:"<p>Feature to register</p>"},{name:"onByDefault",type:"Boolean",description:"<p>Specify true to have the feature enabled per default</p>",default:false,optional:true},{name:"forType",type:["String","Array.<String>"],description:"<p>Specify a type to let the class applying the feature to determine if it should use it</p>",optional:true}],scope:"static"},{name:"getTypeNameFeatures",description:"<p>Get all the features registered for the given type name in an object where keys are feature names and values are feature constructors.</p>",parameters:[{name:"forType",type:"String",optional:true}],scope:"static",returns:{type:"Object"}},{name:"getTypeNameDefaultFeatures",description:"<p>Get all the default features registered for the given type name in an object where keys are feature names and values are feature constructors.</p>",parameters:[{name:"forType",type:"String",optional:true}],scope:"static",returns:{type:"Object"}},{name:"getInstanceFeatures",description:'<p>Gets all the features registered for the given instance type name chain. First builds the type name chain then quaries for features\nfor each type name and combines them into one object, see <a href="#Grid/feature/GridFeatureManager#function-getTypeNameFeatures-static">getTypeNameFeatures</a>() for returned object description.\nIf feature is registered for both parent and child type name then feature for child overrides feature for parent.</p>',parameters:[{name:"instance",type:"Object"}],scope:"static",returns:{type:"Object"}},{name:"getInstanceDefaultFeatures",description:'<p>Gets all the <em>defualt</em> features registered for the given instance type name chain. First builds the type name chain then quaries for features\nfor each type name and combines them into one object, see <a href="#Grid/feature/GridFeatureManager#function-getTypeNameFeatures-static">getTypeNameFeatures</a>() for returned object description.\nIf feature is registered for both parent and child type name then feature for child overrides feature for parent.</p>',parameters:[{name:"instance",type:"Object"}],scope:"static",returns:{type:"Object"}},{name:"isDefaultFeatureForTypeName",description:"<p>Checks if the given feature class is default for the type name</p>",parameters:[{name:"featureClass",type:"Core.mixin.InstancePlugin",description:"<p>Feature to check</p>"},{name:"forType",type:"String",optional:true}],scope:"static",returns:{type:"Boolean"}},{name:"isDefaultFeatureForInstance",description:"<p>Checks if the given feature class is default for the given instance type name chain. If the feature is not default for the\nparent type name but it is for the child type name, then the child setting overrides the parent one.</p>",parameters:[{name:"featureClass",type:"Core.mixin.InstancePlugin",description:"<p>Feature to check</p>"},{name:"forType",type:"String",optional:true}],scope:"static",returns:{type:"Boolean"}},{name:"reset",access:"internal",description:"<p>Resets feature registration date, used in tests to reset state after test</p>",scope:"static"}]},{name:"module:Grid/feature/Group",classDescription:'<p>Enables rendering and handling of row groups. The actual grouping is done in the store, but triggered by [shift] +\nclicking headers or by using two finger tap (one on header, one anywhere on grid). Groups can be expanded/collapsed\nby clicking on the group row or pressing [space] when group row is selected.\nThe actual grouping is done by the store, see <a href="#Core/data/mixin/StoreGroup#function-group">group</a>.</p>\n<p>Grouping by a field performs sorting by the field automatically. It\'s not possible to prevent sorting.\nIf you group, the records have to be sorted so that records in a group stick together. You can either control sorting\ndirection, or provide a custom sorting function called <code>fn</code> to your grouper.</p>\n<p>For info on programmatically handling grouping, see <a href="#Core/data/mixin/StoreGroup">StoreGroup</a>.</p>\n<p>This feature is <strong>enabled</strong> by default.</p>',extends:["Core/mixin/InstancePlugin"],examples:["// grouping feature is enabled, no default value though\nlet grid = new Grid({\n    features : {\n        group : true\n    }\n});\n\n// use initial grouping\nlet grid = new Grid({\n    features : {\n        group : 'city'\n    }\n});\n\n// default grouper and custom renderer, which will be applied to each cell except the \"group\" cell\nlet grid = new Grid({\n  features : {\n    group : {\n      field : 'city',\n      ascending : false,\n      renderer : ({ isFirstColumn, count, groupRowFor, record }) => isFirstColumn ? `${groupRowFor} (${count})` : ''\n    }\n  }\n});\n\n// can also be specified on the store\nlet grid = new Grid({\n    store : {\n        groupers : [\n            { field : 'city', ascending : false }\n        ]\n    }\n});\n\n// custom sorting function can also be specified on the store\nlet grid = new Grid({\n    store : {\n        groupers : [{\n            field : 'city',\n            fn : (recordA, recordB) => {\n                // apply custom logic, for example:\n                return recordA.city.length < recordB.city.length ? -1 : 1;\n            }\n        }]\n    }\n});"],constructor:{name:"constructor"},filename:"Group.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/feature",lineno:83,demo:{product:"grid",demo:"grouping"},classType:"group",externalExamples:["feature/Group.js"],configs:[{name:"field",description:"<p>The name of the record field to group by.</p>",type:"String",scope:"inner"},{name:"renderer",description:"<p>A function which produces the HTML for a group header.\nThe function is called in the context of this Group feature object.\nDefault group renderer displays the <code>groupRowFor</code> and <code>count</code>.</p>",type:"function",scope:"inner",properties:[{description:"<p>The value of the <code>field</code> for the group.</p>",type:{names:["String"]},name:"groupRowFor"},{description:"<p>The group record representing the group.</p>",type:{names:["Core.data.Model"]},name:"record"},{description:"<p>Meta data with additional info about the grouping.</p>",isSubParam:true,type:{names:["Object"]},name:"record.meta"},{description:"<p>The group child records.</p>",isSubParam:true,type:{names:["Array"]},name:"record.groupChildren"},{description:"<p>Number of records in the group.</p>",type:{names:["Number"]},name:"count"},{description:"<p>The column the renderer runs for.</p>",type:{names:["Grid.column.Column"]},name:"column"},{description:"<p>True, if <code>column</code> is the first column.\nIf <code>RowNumberColumn</code> is the real first column, it's not taken into account.</p>",type:{names:["Boolean"]},name:"isFirstColumn"},{description:"<p>The column under which the <code>field</code> is shown.</p>",optional:true,type:{names:["Grid.column.Column"]},name:"groupColumn"},{description:"<p>Sizing information for the group header row, only <code>height</code> is relevant.</p>",type:{names:["Object"]},name:"size"},{description:"<p>The height of the row, set this if you want a custom height for the group header row\nThat is UI part, so do not rely on its existence.</p>",isSubParam:true,type:{names:["Number"]},name:"size.height"}]}],functions:[{name:"toggleCollapse",description:"<p>Collapses or expands a group depending on its current state</p>",parameters:[{name:"recordOrId",description:"<p>Record or records id for a group row to collapse or expand</p>"},{name:"collapse",description:"<p>Force collapse (true) or expand (true)</p>"}],scope:"instance",fires:["event:togglegroup"]},{name:"internalToggleCollapse",access:"internal",description:"<p>Collapses or expands a group depending on its current state</p>",parameters:[{name:"recordOrId",description:"<p>Record or records id for a group row to collapse or expand</p>"},{name:"collapse",description:"<p>Force collapse (true) or expand (true)</p>"},{name:"skipRender",description:"<p>True to not render rows</p>",default:false}],scope:"instance",fires:["event:togglegroup"]},{name:"collapseAll",description:"<p>Collapse all groups. This function is exposed on Grid and can thus be called as <code>grid.collapseAll()</code></p>",scope:"instance"},{name:"expandAll",description:"<p>Expand all groups. This function is exposed on Grid and can thus be called as <code>grid.expandAll()</code></p>",scope:"instance"},{name:"onBeforeRenderRow",access:"private",description:"<p>Called before rendering row contents, used to reset rows no longer used as group rows</p>",scope:"instance"},{name:"renderCell",access:"private",description:"<p>Called when a cell is rendered, styles the group rows first cell.</p>",scope:"instance"},{name:"renderHeader",access:"private",description:"<p>Called when an header is rendered, adds grouping icon if grouped by that column.</p>",parameters:[{name:"headerContainerElement"}],scope:"instance"},{name:"getHeaderMenuItems",access:"private",description:"<p>Supply items for headers context menu.</p>",parameters:[{name:"column",description:"<p>Header for this column</p>"},{name:"items",description:"<p>Add items to this array</p>"}],scope:"instance",returns:{type:"Array.<Object>",description:"<p>Modified items array</p>"}},{name:"getColumnDragToolbarItems",access:"private",description:"<p>Supply items to ColumnDragToolbar</p>",scope:"instance"},{name:"onStoreGroup",access:"private",description:"<p>Called when store grouping changes. Reflects on header and rerenders rows.</p>",scope:"instance"},{name:"onElementTouchStart",access:"private",description:"<p>Store touches when user touches header, used in onElementTouchEnd.</p>",scope:"instance"},{name:"onElementClick",access:"private",description:"<p>React to click on headers (to group by that column if [alt] is pressed) and on group rows (expand/collapse).</p>",parameters:[{name:"event"}],scope:"instance",returns:{type:"Boolean"}},{name:"onElementKeyDown",access:"private",description:"<p>Toggle groups with [space].</p>",parameters:[{name:"event"}],scope:"instance",returns:{type:"*"}}],events:[{name:"toggleGroup",description:"<p>Group expanded or collapsed</p>",parameters:[{name:"groupRecord",description:"<p>Group record</p>"},{name:"collapse",type:"Boolean",description:"<p>Collapsed (true) or expanded (false)</p>"}]}]},{name:"module:Grid/feature/GroupSummary",classDescription:'<p>Displays a summary row as a group footer in a grouped grid. Uses same configuration options on columns as\n<a href="#Grid/feature/Summary">Grid.feature.Summary</a>.</p>\n<p>This feature is <strong>disabled</strong> by default.</p>\n<pre class="prettyprint source"><code>features : {\n    group        : \'city\',\n    groupSummary : true\n}\n</code></pre>',extends:["Core/mixin/InstancePlugin"],constructor:{name:"constructor"},filename:"GroupSummary.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/feature",lineno:29,demo:{product:"grid",demo:"groupsummary"},classType:"groupsummary",externalExamples:["feature/GroupSummary.js"],functions:[{name:"onBeforeRenderRow",access:"private",description:"<p>Called before rendering row contents, used to reset rows no longer used as group summary rows</p>",scope:"instance"},{name:"renderCell",access:"private",description:"<p>Called when a cell is rendered, styles the group rows first cell.</p>",scope:"instance"},{name:"onStoreUpdate",access:"private",description:"<p>Updates summaries on store changes (except record update, handled below)</p>",scope:"instance"}]},{name:"module:Grid/feature/QuickFind",classDescription:"<p>Feature that allows the user to search in a column by focusing a cell and typing. Navigate between hits using the\nkeyboard, [f3] or [ctrl]/[cmd] + [g] moves to next, also pressing [shift] moves to previous.</p>\n<p>This feature is <strong>disabled</strong> by default.</p>",extends:["Core/mixin/InstancePlugin"],examples:["// enable QuickFind\nlet grid = new Grid({\n  features: {\n    quickFind: true\n  }\n});\n\n// navigate to next hit programmatically\ngrid.features.quickFind.gotoNextHit();"],constructor:{name:"constructor"},filename:"QuickFind.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/feature",lineno:39,demo:{product:"grid",demo:"quickfind"},classType:"quickFind",externalExamples:["feature/QuickFind.js"],functions:[{name:"showQuickFind",access:"private",description:"<p>Shows a &quot;searchfield&quot; in the header. Triggered automatically when you have a cell focused and start typing.</p>",scope:"instance"},{name:"hideQuickFind",access:"private",description:"<p>Hide the &quot;searchfield&quot; and remove highlighted hits. Called automatically when pressing [esc] or backspacing away\nthe keywords.</p>",scope:"instance"},{name:"search",description:"<p>Performs a search and highlights hits. If find is empty, QuickFind is closed.</p>",parameters:[{name:"find",description:"<p>Text to search for</p>"},{name:"columnFieldOrId",description:"<p>Column to search</p>"}],scope:"instance"},{name:"clear",description:"<p>Clears and closes QuickFind.</p>",scope:"instance"},{name:"gotoHit",description:"<p>Go to specified hit.</p>",parameters:[{name:"index"}],scope:"instance"},{name:"gotoFirstHit",description:"<p>Go to the first hit.</p>",scope:"instance"},{name:"gotoLastHit",description:"<p>Go to the last hit.</p>",scope:"instance"},{name:"gotoNextHit",description:"<p>Select the next hit, scrolling it into view. Triggered with [f3] or [ctrl]/[cmd] + [g].</p>",scope:"instance"},{name:"gotoPrevHit",description:"<p>Select the previous hit, scrolling it into view. Triggered with [shift] + [f3] or [shift] + [ctrl]/[cmd] + [g].</p>",scope:"instance"},{name:"renderCell",access:"private",description:"<p>Called from SubGrid when a cell is rendered.</p>",scope:"instance"},{name:"onElementKeyDown",access:"private",description:"<p>Chained function called on grids keydown event. Handles backspace, escape, f3 and ctrl/cmd + g keys.</p>",parameters:[{name:"event",description:"<p>KeyboardEvent</p>"}],scope:"instance"},{name:"onElementKeyPress",access:"private",description:"<p>Chained function called on grids keypress event. Handles input for &quot;searchfield&quot;.</p>",parameters:[{name:"event"}],scope:"instance"}],properties:[{name:"foundCount",description:"<p>Number of results found</p>",type:{names:["Number"]},scope:"instance",readonly:true},{name:"found",description:"<p>Found results (as returned by Store#findByField), an array in format { index: x, data: record }</p>",type:{names:["Array.<Object>"]},scope:"inner",readonly:true}]},{name:"module:Grid/feature/RegionResize",classDescription:"<p>Makes the splitter between grid section draggable so you can resize grid sections.</p>\n<p>This feature is <strong>disabled</strong> by default.</p>",extends:["Core/mixin/InstancePlugin"],examples:["// enable RegionResize\nlet grid = new Grid({\n  features: {\n    regionResize: true\n  }\n});"],constructor:{name:"constructor"},filename:"RegionResize.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/feature",lineno:28,demo:{product:"grid",demo:"features"},classType:"regionResize",externalExamples:["feature/RegionResize.js"],functions:[{name:"startMove",access:"private",description:"<p>Begin moving splitter.</p>",parameters:[{name:"splitterElement",description:"<p>Splitter element</p>"},{name:"clientX",description:"<p>Initial x position from which new width will be calculated on move</p>"}],scope:"instance"},{name:"endMove",access:"private",description:"<p>Stop moving splitter.</p>",scope:"instance"},{name:"updateMove",access:"private",description:"<p>Update splitter position.</p>",parameters:[{name:"newClientX"}],scope:"instance"},{name:"onElementTouchStart",access:"private",description:"<p>Start moving splitter on touch start.</p>",parameters:[{name:"event"}],scope:"instance"},{name:"onElementTouchMove",access:"private",description:"<p>Move splitter on touch move.</p>",parameters:[{name:"event"}],scope:"instance"},{name:"onElementTouchEnd",access:"private",description:"<p>Stop moving splitter on touch end.</p>",parameters:[{name:"event"}],scope:"instance"},{name:"onElementMouseDown",access:"private",description:"<p>Start moving splitter on mouse down (on splitter).</p>",parameters:[{name:"event"}],scope:"instance"},{name:"onElementMouseMove",access:"private",description:"<p>Move splitter on mouse move.</p>",parameters:[{name:"event"}],scope:"instance"},{name:"onElementMouseUp",access:"private",description:"<p>Stop moving splitter on mouse up.</p>",parameters:[{name:"event"}],scope:"instance"}]},{name:"module:Grid/feature/RowReorder",classDescription:'<p>Allows user to reorder rows by dragging them. To get notified about row reorder listen to <code>change</code> event\non the grid <a href="#Core/data/Store">store</a>.</p>\n<p>This feature is <strong>disabled</strong> by default.\nThis feature is <strong>enabled</strong> by default for Gantt.</p>\n<p>If the grid is set to <a href="#Grid/view/Grid#config-readOnly">readOnly</a>, reordering is disabled. Inside all event listeners you have access a <code>context</code> object which has a <code>record</code> property (the dragged record).</p>\n<p>You can validate the drag drop flow by listening to the <code>gridrowdrag</code> event. Inside this listener you have access the <code>index</code> property which is the target drop position.\nFor trees you get access to the <code>parent</code> record and <code>index</code>, where index means the child index inside the parent.</p>\n<pre class="prettyprint source"><code>features : {\n    rowReorder : {\n        listeners : {\n            gridRowDrag : ({ context }) => {\n               // Here you have access to context.insertBefore, and additionally context.parent for trees\n\n               context.valid = false;\n            }\n        }\n    }\n}\n</code></pre>',extends:["Core/mixin/InstancePlugin"],constructor:{name:"constructor"},filename:"RowReorder.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/feature",lineno:41,demo:{product:"grid",demo:"rowreorder"},classType:"rowReorder",events:[{name:"gridRowBeforeDragStart",description:"<p>Fired before dragging starts, return false to prevent the drag operation.</p>",parameters:[{name:"source",type:"DragHelper"},{name:"context",type:"Object"},{name:"context.record",type:"Core.data.Model",description:"<p>The dragged row record</p>",isSubParam:true},{name:"event",type:["MouseEvent","TouchEvent"]}],preventable:true},{name:"gridRowDragStart",description:"<p>Fired when dragging starts.</p>",parameters:[{name:"source",type:"DragHelper"},{name:"context",type:"Object"},{name:"context.record",type:"Core.data.Model",description:"<p>The dragged row record</p>",isSubParam:true},{name:"event",type:["MouseEvent","TouchEvent"]}]},{name:"gridRowDrag",description:"<p>Fired while the row is being dragged, in the listener function you have access to <code>context.insertBefore</code> a grid / tree record, and additionally <code>context.parent</code> (a TreeNode) for trees. You can\nsignal that the drop position is valid or invalid by setting <code>context.valid = false;</code></p>",parameters:[{name:"source",type:"DragHelper"},{name:"context",type:"Object"},{name:"context.valid",type:"Boolean",description:"<p>Set this to true or false to indicate whether the drop position is valid.</p>",isSubParam:true},{name:"context.insertBefore",type:"Core.data.Model",description:"<p>The record to insert before (<code>null</code> if inserting at last position of a parent node)</p>",isSubParam:true},{name:"context.parent",type:"Core.data.Model",description:"<p>The parent record of the current drop position (only applicable for trees)</p>",isSubParam:true},{name:"context.record",type:"Core.data.Model",description:"<p>The dragged row record</p>",isSubParam:true},{name:"event",type:"MouseEvent"}]},{name:"gridRowBeforeDropFinalize",description:"<p>Fired before the row drop operation is finalized.</p>",parameters:[{name:"source",type:"DragHelper"},{name:"context",type:"Object"},{name:"context.valid",type:"Boolean",description:"<p>Set this to true or false to indicate whether the drop position is valid</p>",isSubParam:true},{name:"context.insertBefore",type:"Core.data.Model",description:"<p>The record to insert before (<code>null</code> if inserting at last position of a parent node)</p>",isSubParam:true},{name:"context.parent",type:"Core.data.Model",description:"<p>The parent record of the current drop position (only applicable for trees)</p>",isSubParam:true},{name:"context.record",type:"Core.data.Model",description:"<p>The dragged row record</p>",isSubParam:true},{name:"event",type:"MouseEvent"}]},{name:"gridRowDrop",description:"<p>Fired after the row drop operation has completed, regardless of validity</p>",parameters:[{name:"source",type:"DragHelper"},{name:"context",type:"Object"},{name:"context.valid",type:"Boolean",description:"<p>true or false depending on whether the drop position was valid</p>",isSubParam:true},{name:"context.insertBefore",type:"Core.data.Model",description:"<p>The record to insert before (<code>null</code> if inserting at last position of a parent node)</p>",isSubParam:true},{name:"context.parent",type:"Core.data.Model",description:"<p>The parent record of the current drop position (only applicable for trees)</p>",isSubParam:true},{name:"context.record",type:"Core.data.Model",description:"<p>The dragged row record</p>",isSubParam:true},{name:"event",type:"MouseEvent"}]},{name:"gridRowAbort",description:"<p>Fired when a row drag operation is aborted</p>",parameters:[{name:"source",type:"DragHelper"},{name:"context",type:"Object"},{name:"event",type:"MouseEvent"}]}],configs:[{name:"hoverExpandTimeout",description:"<p>If hovering over a parent node for this period of a time in a tree, the node will expand</p>",type:"Number",scope:"inner"}],functions:[{name:"init",access:"private",description:"<p>Initialize drag &amp; drop (called from render)</p>",scope:"instance"},{name:"onDrop",access:"private",description:"<p>Handle drop</p>",scope:"instance"},{name:"onReset",access:"private",description:"<p>Clean up on reset</p>",scope:"instance"},{name:"render",access:"private",description:"<p>Updates DragHelper with updated headers when grid contents is rerendered</p>",scope:"instance"}]},{name:"module:Grid/feature/Search",classDescription:'<p>Feature that allows the user to search the entire grid. Navigate between hits using the\nkeyboard, [f3] or [ctrl]/[cmd] + [g] moves to next, also pressing [shift] moves to previous.</p>\n<p>Note that this feature does not include a UI, please build your own and call appropriate methods in the feature. For\na demo implementation, see\n<a href="../examples/search" target="_blank">Search example</a>.</p>\n<p>This feature is <strong>disabled</strong> by default.</p>',extends:["Core/mixin/InstancePlugin"],examples:["// enable Search\nlet grid = new Grid({\n  features: {\n    search: true\n  }\n});\n\n// perform search\ngrid.features.search.search('steve');"],constructor:{name:"constructor"},filename:"Search.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/feature",lineno:43,demo:{product:"grid",demo:"search"},classType:"search",externalExamples:["feature/Search.js"],functions:[{name:"search",description:"<p>Performs a search and highlights hits.</p>",parameters:[{name:"find",type:"String",description:"<p>Text to search for</p>"},{name:"gotoHit",type:"Boolean",description:"<p>Go to first hit after search</p>",default:true},{name:"reapply",type:"Boolean",description:"<p>Pass true to force search</p>",default:false}],scope:"instance"},{name:"clear",description:"<p>Clears search results.</p>",scope:"instance"},{name:"gotoNextHit",description:"<p>Select the next hit, scrolling it into view. Triggered with [f3] or [ctrl]/[cmd] + [g].</p>",scope:"instance"},{name:"gotoPrevHit",description:"<p>Select the previous hit, scrolling it into view. Triggered with [shift] + [f3] or [shift] + [ctrl]/[cmd] + [g].</p>",scope:"instance"},{name:"gotoHit",description:"<p>Go to specified hit.</p>",parameters:[{name:"index"}],scope:"instance"},{name:"gotoFirstHit",description:"<p>Go to the first hit.</p>",scope:"instance"},{name:"gotoLastHit",description:"<p>Go to the last hit.</p>",scope:"instance"},{name:"renderCell",access:"private",description:"<p>Called from SubGrid when a cell is rendered. Highlights search hits.</p>",scope:"instance"},{name:"getCellMenuItems",access:"private",description:"<p>Add search menu item to cell context menu.</p>",parameters:[{name:"column"},{name:"record"},{name:"items"}],scope:"instance",returns:{type:"*"}},{name:"onElementKeyDown",access:"private",description:"<p>Chained function called on grids keydown event. Handles backspace, escape, f3 and ctrl/cmd + g keys.</p>",parameters:[{name:"event",description:"<p>KeyboardEvent</p>"}],scope:"instance"}],properties:[{name:"foundCount",description:"<p>Number of results found</p>",scope:"instance",returns:[{type:{names:["Number"]}}],readonly:true},{name:"isHitFocused",description:"<p>Checks if focused row is a search hit.</p>",scope:"instance",returns:[{type:{names:["Boolean"]},description:"<p>Returns true if focused row is a hit</p>"}],readonly:true}]},{name:"module:Grid/feature/Sort",classDescription:'<p>Allows sorting of grid by clicking (or tapping) headers, also displays which columns grid is sorted by (numbered if\nusing multisort). Use modifier keys for multisorting: ctrl + click to add sorter, ctrl + alt + click to remove sorter.\nThe actual sorting is done by the store, see <a href="#Core/data/mixin/StoreSort#function-sort">sort</a>.</p>\n<p>For info on programmatically handling sorting, see <a href="#Core/data/mixin/StoreSort">StoreSort</a>.</p>\n<p>This feature is <strong>enabled</strong> by default.</p>',extends:["Core/mixin/InstancePlugin"],examples:["// sorting feature is enabled, no default value though\nlet grid = new Grid({\n    features : {\n        sort : true\n    }\n});\n\n// use initial sorting\nlet grid = new Grid({\n    features : {\n        sort : 'name'\n    }\n});\n\n// can also be specified on the store\nlet grid = new Grid({\n    store : {\n        sorters : [\n            { field : 'name', ascending : false }\n        ]\n    }\n});\n\n// custom sorting function can also be specified on the store\nlet grid = new Grid({\n    store : {\n        sorters : [{\n            fn : (recordA, recordB) => {\n                // apply custom logic, for example:\n                return recordA.name.length < recordB.name.length ? -1 : 1;\n            }\n        }]\n    }\n});"],constructor:{name:"constructor"},filename:"Sort.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/feature",lineno:63,demo:{product:"grid",demo:"sorting"},classType:"sort",externalExamples:["feature/Sort.js"],configs:[{name:"multiSort",description:"<p>Enable multi sort</p>",type:"Boolean",scope:"inner",defaultvalue:true}],functions:[{name:"syncHeaderSortState",access:"private",description:"<p>Update headers to match stores sorters (displays sort icon in correct direction on them)</p>",scope:"instance"},{name:"getHeaderMenuItems",access:"private",description:"<p>Adds sort menu items to header context menu.</p>",parameters:[{name:"column"},{name:"items"}],scope:"instance",returns:{type:"Array.<Object>"}},{name:"getColumnDragToolbarItems",access:"private",description:"<p>Supply items to ColumnDragToolbar</p>",scope:"instance"},{name:"onElementClick",access:"private",description:"<p>Clicked on header, sort Store.</p>",scope:"instance"},{name:"renderHeader",access:"private",description:"<p>Called when grid headers are rendered, make headers match current sorters.</p>",scope:"instance"}]},{name:"module:Grid/feature/Stripe",classDescription:"<p>Stripes rows, by adding even (b-even) or odd (b-odd) css classes to row elements.</p>\n<p>This feature is <strong>disabled</strong> by default.</p>",extends:["Core/mixin/InstancePlugin"],examples:["let grid = new Grid({\n  features: {\n    stripe: true\n  }\n});"],constructor:{name:"constructor"},filename:"Stripe.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/feature",lineno:26,demo:{product:"grid",demo:"columns"},classType:"stripe",externalExamples:["feature/Stripe.js"],functions:[{name:"onRenderRow",access:"private",description:"<p>Applies even/odd CSS when row is rendered</p>",parameters:[{name:"rowModel",type:"Grid.row.Row"}],scope:"instance"}]},{name:"module:Grid/feature/Summary",classDescription:"<p>Displays a summary row in the grid footer. Specify type of summary on columns, available types are:</p>\n<dl class=\"wide\">\n<dt>sum <dd>Sum of all values in the column\n<dt>add <dd>Alias for sum\n<dt>count <dd>Number of rows\n<dt>countNotEmpty <dd>Number of rows containing a value\n<dt>average <dd>Average of all values in the column\n<dt>function <dd>A custom function, used with store.reduce. Should take arguments (sum, record)\n</dl>\nColumns can also specify a summaryRenderer to format the calculated sum.\n<p>This feature is <strong>disabled</strong> by default.</p>\n<pre class=\"prettyprint source\"><code>{ text : 'Score', data : 'score', width : 80, sum : true }\n{ text : 'Rank', data : 'rank', width : 80, sum : 'average', summaryRenderer: sum => return 'Average rank ' + sum }\n</code></pre>\n<p>Also it is possible to set up multiple summaries as array of summary configs:</p>\n<pre class=\"prettyprint source\"><code>{ text : 'Rank', data : 'rank', summaries : [{ sum : 'average', label : 'Average' }, { sum : 'count', label : 'Count' }] }\n</code></pre>",extends:["Core/mixin/InstancePlugin"],constructor:{name:"constructor"},filename:"Summary.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/feature",lineno:41,demo:{product:"grid",demo:"features"},classType:"summary",externalExamples:["feature/Summary.js"],functions:[{name:"updateSummaries",access:"private",description:"<p>Updates summaries. Summaries are displayed as tables in footer (styling left out to keep brief):</p>\n<pre class=\"prettyprint source\"><code>&lt;table>\n    &lt;tr>&lt;td colspan=&quot;2&quot;>0&lt;/td>&lt;/tr> // { sum : 'min' } Only a calculation, span entire table\n    &lt;tr>&lt;td>Max&lt;/td>&lt;td>10&lt;/td>&lt;/tr> // { sum : 'max', label: 'Max' } Label + calculation\n    &lt;tr>&lt;td>Max&lt;/td>&lt;td>10&lt;/td>&lt;/tr> // { sum : 'sum', label: 'Max' } Label + calculation\n&lt;/table>\n</code></pre>",scope:"instance"},{name:"onStoreChanged",access:"private",description:"<p>Updates summaries on store changes (except record update, handled below)</p>",scope:"instance"}]},{name:"module:Grid/feature/Tree",classDescription:'<p>Feature that makes the grid work more like a tree. Included by default in <a href="#Grid/view/TreeGrid">Grid.view.TreeGrid</a>. Requires\nexactly one <a href="#Grid/column/TreeColumn">Grid.column.TreeColumn</a> among grids columns. That column will have its renderer replaced with a\ntree renderer that adds padding and icon to give the appearance of a tree. The original renderer is preserved and\nalso called.</p>\n<p>This feature is <strong>disabled</strong> by default. When enabled, the feature cannot be disabled during runtime.</p>',extends:["Core/mixin/InstancePlugin"],constructor:{name:"constructor"},filename:"Tree.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/feature",lineno:30,demo:{product:"grid",demo:"tree"},classType:"tree",externalExamples:["feature/Tree.js"],configs:[{name:"expandOnCellClick",description:"<p>Expand parent nodes when clicking on their cell</p>",type:"Boolean",scope:"inner",defaultvalue:false}],functions:[{name:"toggleCollapse",description:"<p>Collapse an expanded node or expand a collapsed. Optionally forcing a certain state.</p>",parameters:[{name:"idOrRecord",type:["String","Number","Core.data.Model"],description:"<p>Record (the node itself) or id of a node to toggle</p>"},{name:"collapse",type:"Boolean",description:"<p>Force collapse (true) or expand (false)</p>",optional:true},{name:"skipRefresh",type:"Boolean",description:"<p>Set to true to not refresh rows (if calling in batch)</p>",default:false,optional:true}],scope:"instance",returns:{type:"Promise"},async:true},{name:"collapse",description:"<p>Collapse a single node. This function is exposed on Grid and can thus be called as <code>grid.collapse()</code></p>",parameters:[{name:"idOrRecord",type:["String","Number","Core.data.Model"],description:"<p>Record (the node itself) or id of a node to collapse</p>"}],scope:"instance",returns:{type:"Promise"},async:true},{name:"expand",description:"<p>Expand a single node. This function is exposed on Grid and can thus be called as <code>grid.expand()</code></p>",parameters:[{name:"idOrRecord",type:["String","Number","Core.data.Model"],description:"<p>Record (the node itself) or id of a node to expand</p>"}],scope:"instance",returns:{type:"Promise"},async:true},{name:"expandOrCollapseAll",description:"<p>Expand or collapse all nodes, as specified by param, starting at the passed node (which defaults to the root node)</p>",parameters:[{name:"collapse",type:"Boolean",description:"<p>Set to true to collapse, false to expand (defaults to true)</p>",default:true,optional:true},{name:"topNode",type:"Core.data.Model",description:'<p>The topmost node from which to cascade a collapse.\nDefaults to the <a href="#Core/data/Store#property-rootNode">rootNode</a>. Not included in the cascade if\nthe root node is being used.</p>',optional:true}],scope:"instance",returns:{type:"Promise"},async:true},{name:"collapseAll",description:"<p>Collapse all nodes. This function is exposed on Grid and can thus be called as <code>grid.collapseAll()</code></p>",scope:"instance",returns:{type:"Promise"},async:true},{name:"expandAll",description:"<p>Expand all nodes. This function is exposed on Grid and can thus be called as <code>grid.expandAll()</code></p>",scope:"instance",returns:{type:"Promise"},async:true},{name:"expandTo",description:"<p>Expands parent nodes to make this node &quot;visible&quot;. This function is exposed on Grid and can thus be called as\n<code>grid.expandTo()</code></p>",parameters:[{name:"idOrRecord",type:["String","Number","Core.data.Model"],description:"<p>Record (the node itself) or id of a node</p>"}],scope:"instance",returns:{type:"Promise"},async:true},{name:"onElementClick",access:"private",description:"<p>Called when user clicks somewhere in the grid. Expand/collapse node on icon click.</p>",scope:"instance"},{name:"onElementKeyDown",access:"private",description:"<p>Called on key down in grid. Expand/collapse node on [space]</p>",scope:"instance"}]},{name:"module:Grid/feature/experimental/ExcelExporter",classDescription:"<p><strong>NOTE</strong>: This class requires a 3rd party library to operate.</p>\n<p>A feature that allows exporting Grid data to Excel without involving the server. It uses <a href=\"#Grid/util/TableExporter\">Grid.util.TableExporter</a>\nclass as data provider, <a href=\"https://www.npmjs.com/package/zipcelx\">zipcelx library</a>\nforked and adjusted to support <a href=\"https://github.com/bryntum/zipcelx/tree/column-width-build\">column width config</a>\nand <a href=\"https://msdn.microsoft.com/en-us/library/office/documentformat.openxml.spreadsheet.aspx\">Microsoft XML specification</a>.\nZipcelx should be either in global scope (window) or can be provided with <a href=\"#Grid/feature/experimental/ExcelExporter#config-zipcelx\">zipcelx</a> config.</p>\n<pre class=\"prettyprint source\"><code>// Global scope\n&lt;script src=&quot;zipcelx.js&quot;>&lt;/script>\n\n// importing from package\nimport zipcelx from 'zipcelx';\n\nconst grid = new Grid({\n    features : {\n        excelExporter : {\n            zipcelx\n        }\n    }\n})\n</code></pre>\n<p>Here is an example of how to add the feature:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>const grid = new Grid({\n    features : {\n        excelExporter : {\n            // Choose the date format for date fields\n            dateFormat : 'YYYY-MM-DD HH:mm',\n\n            exporterConfig : {\n                // Choose the columns to include in the exported file\n                columns : ['name', 'role']\n            }\n        }\n    }\n});\n</code></pre>\n<p>And how to call it:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>grid.features.excelExporter.export({\n    filename : 'Export',\n    columns : [\n        { text : 'First Name', field : 'firstName', width : 90 },\n        { text : 'Age', field : 'age', width : 40 },\n        { text : 'Starts', field : 'start', width : 140 },\n        { text : 'Ends', field : 'finish', width : 140 }\n    ]\n})\n</code></pre>",extends:["Core/mixin/InstancePlugin"],constructor:{name:"constructor"},filename:"ExcelExporter.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/feature/experimental",lineno:73,demo:{product:"grid",demo:"exporttoexcel"},configs:[{name:"filename",description:"<p>Name of the exported file</p>",type:"String",scope:"inner"},{name:"dateFormat",description:"<p>Defines how date in a cell will be formatted</p>",type:"String",scope:"inner"},{name:"exporterClass",description:'<p>Exporter class to use as a data provider. <a href="#Grid/util/TableExporter">Grid.util.TableExporter</a> by default.</p>',type:"Grid.util.TableExporter",scope:"inner"},{name:"exporterConfig",description:'<p>Configuration object for <a href="#Grid/feature/experimental/ExcelExporter#config-exporterClass">exporter class</a>.</p>',type:"Object",scope:"inner"},{name:"zipcelx",description:"<p>Reference to zipcelx library. If not provided, exporter will look in the global scope.</p>",scope:"inner"},{name:"convertEmptyValueToEmptyString",description:"<p>If this config is true, exporter will convert all empty values to ''. Empty values are:</p>\n<ul>\n<li>undefined, null, NaN</li>\n<li>Objects/class instances that do not have toString method defined and are stringified to [object Object]</li>\n<li>functions</li>\n</ul>",type:"Boolean",scope:"inner"}],functions:[{name:"export",description:"<p>Generate and download a .xslx file.</p>",parameters:[{name:"config",type:"Object",description:"<p>Optional configuration object, which overrides initial settings of the feature/exporter.</p>"}],scope:"instance"}]},{name:"module:Grid/feature/export/PdfExport",classDescription:'<p>Generates PDF/PNG files from the Grid component.</p>\n<p><strong>NOTE:</strong> This feature will make a fetch request to the server, posting\nthe HTML fragments to be exported. The <a href="#Grid/feature/export/PdfExport#config-exportServer">exportServer</a> URL must be configured.</p>\n<h2>Usage</h2>\n<pre class="prettyprint source lang-javascript"><code>let grid = new Grid({\n    features : {\n        pdfExport : {\n            exportServer : \'http://localhost:8080\' // Required\n        }\n    }\n})\n\n// Opens popup allowing to customize export settings\ngrid.features.pdfExport.showExportDialog();\n\n// Simple export\ngrid.features.pdfExport.export({\n    columns : grid.columns.map(c => c.id) // Required, set list of column ids to export\n}).then(result => {\n    // Response instance and response content in JSON\n    let { response } = result;\n});\n</code></pre>\n<h2>Exporters</h2>\n<p>There are three exporters available by default: <code>singlepage</code>, <code>multipage</code> and <code>multipagevertical</code>:</p>\n<ul>\n<li><code>singlepage</code> -  generates single page with content scaled to fit the provided <a href="#Grid/feature/export/PdfExport#config-paperFormat">paperFormat</a></li>\n<li><code>multipage</code> - generates as many pages as required to fit all requested content, unscaled</li>\n<li><code>multipagevertical</code> - a combination of two above: it scales content horizontally to fit into page width and then\nputs overflowing content on vertical pages. Like a scroll.</li>\n</ul>',extends:["Core/mixin/InstancePlugin"],constructor:{name:"constructor"},filename:"PdfExport.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/feature/export",lineno:61,demo:{product:"grid",demo:"export"},classType:"pdfExport",configs:[{name:"exportServer",description:"<p>URL of the print server.</p>",type:"String",scope:"inner"},{name:"fileName",description:"<p>Name of the exported file.</p>",type:"String",scope:"inner"},{name:"fileFormat",description:"<p>Format of the exported file, selectable from <code>pdf</code> or <code>png</code>. By default plugin exports panel contents to PDF\nbut PNG file format is also available.</p>",type:"String",scope:"inner",defaultvalue:"pdf"},{name:"clientURL",description:"<p>Export server will navigate to this url first and then will change page content to whatever client sent.\nThis option is useful with react dev server, which has pretty strict CORS policy.</p>",type:"String",scope:"inner"},{name:"paperFormat",description:"<p>Export paper format. Available options are A1...A5, Legal, Letter.</p>",type:"String",scope:"inner",defaultvalue:"A4"},{name:"orientation",description:"<p>Orientation. Options are <code>portrait</code> and <code>landscape</code>.</p>",type:"String",scope:"inner",defaultvalue:"portrait"},{name:"rowsRange",description:"<p>Specifies which rows to export. <code>all</code> for complete set of rows, <code>visible</code> for only rows currently visible.</p>",type:"String",scope:"inner"},{name:"alignRows",description:"<p>Set to true to align row top to the page top on every exported page. Only applied to multipage export.</p>",type:"Boolean",scope:"inner",defaultvalue:false},{name:"repeatHeader",description:'<p>Set to true to show column headers on every page. This will also set <a href="#Grid/feature/export/PdfExport#config-alignRows">alignRows</a> to true.\nOnly applies to MultiPageVertical exporter.</p>',type:"Boolean",scope:"inner",defaultvalue:false},{name:"keepRegionSizes",description:'<p>By default subGrid width is changed to fit all exported columns. To keep certain subGrid size specify it\nin the following form:</p>\n<pre class="prettyprint source"><code>keepRegionSizes : {\n    locked : true\n}\n</code></pre>',type:"Object",scope:"inner"},{name:"pagesPerRequest",access:"private",description:"<p>When exporting large views (hundreds of pages) stringified HTML may exceed browser or server request\nlength limit. This config allows to specify how many pages to send to server in one request.</p>",type:"Number",scope:"inner",defaultvalue:0},{name:"exporterConfig",access:"private",description:"<p>Config for exporter.</p>",type:"Object",scope:"inner"},{name:"exporterType",description:'<p>Type of the exporter to use. Should be one of the configured <a href="#Grid/feature/export/PdfExport#config-exporters">exporters</a></p>',type:"String",scope:"inner",defaultvalue:"singlepage"},{name:"exporters",description:"<p>List of exporter classes to use in export feature</p>",type:"Array.<Grid.feature.export.exporter.Exporter>",scope:"inner",defaultvalue:'["SinglePageExporter","MultiPageExporter","MultiPageVerticalExporter"]'},{name:"translateURLsToAbsolute",description:"<p><code>True</code> to replace all linked CSS files URLs to absolute before passing HTML to the server.\nWhen passing a string the current origin of the CSS files URLS will be replaced by the passed origin.</p>\n<p>For example: css files pointing to /app.css will be translated from current origin to {translateURLsToAbsolute}/app.css</p>",type:["Boolean","String"],scope:"inner",defaultvalue:true},{name:"keepPathName",description:"<p>When true links are converted to absolute by combining current window location (with replaced origin) with\nresource link.\nWhen false links are converted by combining new origin with resource link (for angular)</p>",type:"Boolean",scope:"inner",defaultvalue:true},{name:"openAfterExport",description:"<p>When true, page will attempt to download generated file.</p>",type:"Boolean",scope:"inner",defaultvalue:true},{name:"openInNewTab",description:"<p>False to open in the current tab, true - in a new tab</p>",type:"Boolean",scope:"inner",defaultvalue:false},{name:"headerTpl",description:"<p>A template function used to generate a page header. It is passed an object with ´currentPage´ and `totalPages´ properties.</p>\n<pre class=\"prettyprint source lang-javascript\"><code>let grid = new Grid({\n    appendTo   : 'container',\n    features : {\n        pdfExport : {\n            exportServer : 'http://localhost:8080/',\n            headerTpl : ({ currentPage, totalPages }) => `\n                &lt;div class=&quot;demo-export-header&quot;>\n                    &lt;img src=&quot;coolcorp-logo.png&quot;/>\n                    &lt;dl>\n                        &lt;dt>Date: ${DateHelper.format(new Date(), 'll LT')}&lt;/dt>\n                        &lt;dd>${totalPages ? `Page: ${currentPage + 1}/${totalPages}` : ''}&lt;/dd>\n                    &lt;/dl>\n                &lt;/div>`\n         }\n    }\n});\n</code></pre>",type:"function",scope:"inner"},{name:"footerTpl",description:"<p>A template function used to generate a page footer. It is passed an object with ´currentPage´ and `totalPages´ properties.</p>\n<pre class=\"prettyprint source lang-javascript\"><code>let grid = new Grid({\n     appendTo   : 'container',\n     features : {\n         pdfExport : {\n             exportServer : 'http://localhost:8080/',\n             footerTpl    : () => '&lt;div class=&quot;demo-export-footer&quot;>&lt;h3>© 2020 CoolCorp Inc&lt;/h3>&lt;/div>'\n         }\n     }\n});\n</code></pre>",type:"function",scope:"inner"},{name:"fetchOptions",description:'<p>An object containing the Fetch options to pass to the export server request. Use this to control if credentials are sent\nand other options, read more at <a href="https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch">MDN</a>.</p>',type:"Object",scope:"inner"},{name:"exportMask",description:"<p>A message to be shown when Export feature is performing export.</p>",type:"String",scope:"inner",defaultvalue:'"Generating pages..."'},{name:"exportProgressMask",description:"<p>A message to be shown when export is almost done.</p>",type:"String",scope:"inner",defaultvalue:'"Waiting for response from server..."'}],properties:[{name:"currentExportPromise",description:'<p>When export is started from GUI (<a href="#Grid/view/export/ExportDialog">Grid.view.export.ExportDialog</a>), export promise can be accessed via\nthis property.</p>',scope:"instance",properties:[{type:{names:["Promise"]}}]}],functions:[{name:"export",description:"<p>Starts the export process. Accepts a config object which overrides any default configs.\n<strong>NOTE</strong>. Component should not be interacted with when export is in progress</p>",parameters:[{name:"config",type:"Object"},{name:"config.columns",type:"Array.<String>",description:"<p>(requried) List of column ids to export. E.g.\n<code>grid.features.pdfExport.export({ columns : grid.columns.map(c =&gt; c.id) })</code></p>",isSubParam:true}],scope:"instance",returns:{type:"Promise",description:'<p>Object of the following structure</p>\n<pre class="prettyprint source"><code>{\n    response // Response instance\n}\n</code></pre>'},async:true},{name:"showExportDialog",description:'<p>Shows <a href="#Grid/view/export/ExportDialog">export dialog</a></p>',scope:"instance",returns:{type:"Promise"},async:true}],events:[{name:"beforeExport",description:"<p>Fires before export started. Return <code>false</code> to cancel the export.</p>",parameters:[{name:"config",type:"Object",description:"<p>Export config</p>"}],preventable:true},{name:"exportStep",description:"<p>Fires when export progress changes</p>",parameters:[{name:"progress",type:"Number",description:"<p>Current progress, 0-100</p>"},{name:"text",type:"String",description:"<p>Optional text to show</p>"}]},{name:"export",description:"<p>Fires when export has finished</p>",parameters:[{name:"response",type:"Response",description:"<p>Optional response, if received</p>",optional:true},{name:"error",type:"Error",description:"<p>Optional error, if exception occurred</p>",optional:true}]}]},{name:"module:Grid/feature/export/exporter/Exporter",classDescription:"<p>Base class for all exporters</p>",mixes:["Core/localization/Localizable","Core/mixin/Events"],constructor:{name:"constructor"},filename:"Exporter.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/feature/export/exporter",lineno:20,configs:[{name:"translateURLsToAbsolute",description:"<p><code>True</code> to replace all linked CSS files URLs to absolute before passing HTML to the server.\nWhen passing a string the current origin of the CSS files URLS will be replaced by the passed origin.</p>\n<p>For example: css files pointing to /app.css will be translated from current origin to {translateURLsToAbsolute}/app.css</p>",type:["Boolean","String"],scope:"inner",defaultvalue:true},{name:"keepPathName",description:"<p>When true links are converted to absolute by combining current window location (with replaced origin) with\nresource link.\nWhen false links are converted by combining new origin with resource link (for angular)</p>",type:"Boolean",scope:"inner",defaultvalue:true}],functions:[{name:"pageTpl",description:"<p>Template of an extracted page.</p>",parameters:[{name:"data",type:"Object",description:"<p>Data for the page template</p>"}],scope:"instance",returns:{type:"String"}},{name:"measureElement",access:"private",description:"<p>Appends generated header/footer element to the document body to measure their height</p>",parameters:[{name:"html"}],scope:"instance",returns:{type:"number"}}],properties:[{name:"stylesheets",description:"<p>Returns all style-related tags: <code>&lt;style&gt;</code> and <code>&lt;link rel=&quot;stylesheet&quot;&gt;</code></p>",scope:"instance",readonly:true,properties:[{type:{names:["Array.<String>"]}}]}]},{name:"module:Grid/feature/mixin/GridFeatureDataLayer",description:'<p>Mixin handling common feature data layer facility.</p>\n<p>The mixin is designed for grid feature to consume. Since it\'s impossible to predict what store a feature might need the mixin provides a way\nto obtain a custom store via minimized yet useful set of template methods with default implementation provided.</p>\n<p>There are several phases during a feature lifetime the mixin methods should/might be invoked:</p>\n<ol>\n<li>\n<p>Construction/configuration</p>\n</li>\n<li>\n<p>Component destruction</p>\n</li>\n<li>\n<p>Component lifetime</p>\n</li>\n<li>\n<p>Construction/configuration time</p>\n</li>\n</ol>\n<hr>\n<p>At construction time the mixin relies on <a href="#Grid/feature/mixin/GridFeatureDataLayer#function-configDataLayer">configDataLayer</a> to inject configuration properties into the mixin config object.\nThe method iterates over <a href="#Grid/feature/mixin/GridFeatureDataLayer#config-dataLayerStores">dataLayerStores</a> array and checks if corresponding config option is already set\nin the provided feature configuration object. If there\'s no such option present then mixin calls obtain*() method where * represents\na store name from <a href="#Grid/feature/mixin/GridFeatureDataLayer#config-dataLayerStores">dataLayerStores</a> array with the first letter capitalized.</p>\n<p>The mixin will also create store accessors if ones do not exist at this time.</p>\n<ol start="2">\n<li>Grid destruction time</li>\n</ol>\n<hr>\n<p>At this time the mixin will do the usual cleanup. Detach stores event listeners if those were provided via calls to get*ListenersConfig()\nmethods, where * represents a store name from <a href="#Grid/feature/mixin/GridFeatureDataLayer#config-dataLayerStores">dataLayerStores</a> array with the first letter capitalized. Set previously obtained\nstore references to null.</p>\n<ol start="3">\n<li>Component lifetime</li>\n</ol>\n<hr>\n<p>It might be that the stores the feature is needed are available only after the client component has been already rendered. To obtain such stores\none should call mixin\'s <a href="#Grid/feature/mixin/GridFeatureDataLayer#function-attachToDataLayer">attachToDataLayer</a> method. The method will iterate over <a href="#Grid/feature/mixin/GridFeatureDataLayer#config-dataLayerStores">dataLayerStores</a> configuration\noption and try to obtain any store, which hasn\'t been yet obtained, via call to obtain*() method, where * represents a store name\nfrom <a href="#Grid/feature/mixin/GridFeatureDataLayer#config-dataLayerStores">dataLayerStores</a> array with the first letter capitalized. The difference between calls to obtain*() method at construction/configuration\ntime and component lifetime is that for the second case the obtain*() methods will be called without the second argument.</p>\n<p>During a component lifetime store accessors might be called as well as <a href="#Grid/feature/mixin/GridFeatureDataLayer#function-attachToDataLayer">attachToDataLayer</a> method. If store reference set\nvia an accessors is different from the one the mixing already has then the previous store event listeners will be detached\nand new listeners configuration will be requested via call to get*ListenersConfig(), where * represents a store name\nfrom the <a href="#Grid/feature/mixin/GridFeatureDataLayer#config-dataLayerStores">dataLayerStores</a> array with the first letter capitalized.</p>',mixin:true,access:"private",constructor:{name:"constructor"},filename:"GridFeatureDataLayer.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/feature/mixin",lineno:51,configs:[{name:"dataLayerStores",description:"<p>List of data layer store names the mixin will take to obtain store instances, create corresponding store accessors and\nattach listeners to.</p>",type:"Array.<String>",scope:"inner"}],functions:[{name:"configDataLayer",access:"internal",parameters:[{name:"client",type:"Grid.view.Grid"},{name:"config",type:"Object"}],scope:"instance",returns:{type:"Object"}},{name:"attachToDataLayer",description:"<p>Call this method to obtain stores not yet obtained.</p>",scope:"instance"}]},{name:"module:Grid/feature/mixin/SummaryFormatter",description:"<p>Mixin for Summary and GroupSummary that handles formatting sums.</p>",mixin:true,access:"private",constructor:{name:"constructor"},filename:"SummaryFormatter.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/feature/mixin",lineno:12,functions:[{name:"generateHtml",description:"<p>Calculates sums and returns as a html table</p>",parameters:[{name:"column",type:"Grid.column.Column",description:"<p>Column to calculate sum for</p>"},{name:"records",type:"Array.<Core.data.Model>",description:"<p>Records to include in calculation</p>"},{name:"cls",type:"String",description:"<p>CSS class to apply to summary table</p>"}],scope:"instance",returns:{type:"string"}}]},{name:"module:Grid/row/Row",classDescription:"<p>Represents a single rendered row in the grid. Consists of one row element for each SubGrid in use. The grid only\ncreates as many rows as needed to fill the current viewport (and a buffer). As the grid scrolls\nthe rows are repositioned and reused, there is not a one to one relation between rows and records.</p>\n<p>For normal use cases you should not have to use this class directly. Rely on using renderers instead.</p>",extends:["Core/Base"],constructor:{name:"constructor"},filename:"Row.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/row",lineno:20,functions:[{name:"constructor",access:"internal",description:"<p>Constructs a Row setting its index.</p>",parameters:[{name:"config",type:"Object",description:"<p>A configuration object which must contain the following two properties:</p>"},{name:"config.grid",type:"Grid.view.Grid",description:"<p>The owning Grid.</p>",isSubParam:true},{name:"config.rowManager",type:"Grid.row.RowManager",description:"<p>The owning RowManager.</p>",isSubParam:true},{name:"index",type:"Number",description:"<p>The index of the row within the RowManager's cache.</p>"}],scope:"inner"},{name:"addElement",access:"private",description:"<p>Add a row element for specified region.</p>",parameters:[{name:"region",type:"String",description:"<p>Region to add element for</p>"},{name:"element",type:"HTMLElement",description:"<p>Element</p>"}],scope:"instance"},{name:"getElement",description:"<p>Get the element for the specified region.</p>",parameters:[{name:"region",type:"String"}],scope:"instance",returns:{type:"HTMLElement"}},{name:"eachElement",description:"<p>Execute supplied function for each regions element.</p>",parameters:[{name:"fn",type:"function"}],scope:"instance"},{name:"eachCell",description:"<p>Execute supplied function for each cell.</p>",parameters:[{name:"fn",type:"function"}],scope:"instance"},{name:"getCells",description:"<p>Get cell elements for specified region.</p>",parameters:[{name:"region",type:"String",description:"<p>Region to get elements for</p>"}],scope:"instance",returns:{type:"Array.<HTMLElement>",description:"<p>Array of cell elements</p>"}},{name:"getCell",description:"<p>Get the cell element for the specified column.</p>",parameters:[{name:"columnId",type:["String","Number"],description:"<p>Column id</p>"}],scope:"instance",returns:{type:"HTMLElement",description:"<p>Cell element</p>"}},{name:"updateElementsHeight",access:"private",description:"<p>Sync elements height to rows height</p>",scope:"instance"},{name:"addCls",description:"<p>Add css classes to each element.</p>",parameters:[{name:"classes",type:"String",isRestParam:true}],scope:"instance"},{name:"removeCls",description:"<p>Remove css classes from each element.</p>",parameters:[{name:"classes",type:"String",isRestParam:true}],scope:"instance"},{name:"setTop",access:"internal",description:"<p>Sets top coordinate, translating elements position.</p>",parameters:[{name:"top",description:"<p>Top coordinate</p>"}],scope:"instance"},{name:"setBottom",access:"private",description:"<p>Sets bottom coordinate, translating elements position.</p>",parameters:[{name:"bottom",description:"<p>Bottom coordinate</p>"}],scope:"instance"},{name:"translateElements",access:"private",description:"<p>Sets css transform to position elements at correct top position (translateY)</p>",scope:"instance"},{name:"offset",access:"private",description:"<p>Moves all row elements up or down and updates model.</p>",parameters:[{name:"offsetTop",type:"Number",description:"<p>Pixels to offset the elements</p>"}],scope:"instance"},{name:"render",access:"private",description:"<p>Renders a record into this rows elements (trigger event that subgrids catch to do the actual rendering).</p>",parameters:[{name:"recordIndex",type:"Number"},{name:"record",type:"Core.data.Model"},{name:"updatingSingleRow",type:"Boolean",default:true,optional:true},{name:"batch",type:"Boolean",default:false,optional:true}],scope:"instance"},{name:"renderCell",access:"private",description:"<p>Renders a single cell, calling features to allow them to hook.</p>",parameters:[{name:"cellElement",description:"<p>Cell element to render</p>"},{name:"record",description:"<p>Record, fetched from store if undefined</p>"},{name:"index"},{name:"updatingSingleRow",default:true}],scope:"instance"}],properties:[{name:"index",description:"<p>Get index in RowManagers rows array</p>",scope:"instance",readonly:true,properties:[{type:{names:["Number"]}}]},{name:"dataIndex",description:"<p>Get/set this rows current index in grids store</p>",scope:"instance",properties:[{type:{names:["Number"]}}]},{name:"id",description:"<p>Get/set id for currently rendered record</p>",scope:"instance",properties:[{type:{names:["String","Number"]}}]},{name:"elements",description:"<p>Row elements (one for each region)</p>",type:{names:["Array.<HTMLElement>"]},scope:"instance",readonly:true},{name:"cells",description:"<p>Row cell elements</p>",scope:"instance",returns:[{type:{names:["Array.<HTMLElement>"]}}],readonly:true},{name:"height",description:"<p>Get/set row height</p>",scope:"instance",properties:[{type:{names:["Number"]}}]},{name:"offsetHeight",description:"<p>Get row height including border</p>",scope:"instance",properties:[{type:{names:["Number"]}}]},{name:"isFirst",description:"<p>Is this the very first row?</p>",scope:"instance",readonly:true,properties:[{type:{names:["Boolean"]}}]},{name:"top",description:"<p>Row top coordinate</p>",scope:"instance",readonly:true,properties:[{type:{names:["Number"]}}]},{name:"bottom",description:"<p>Row bottom coordinate</p>",scope:"instance",readonly:true,properties:[{type:{names:["Number"]}}]}]},{name:"module:Grid/row/RowManager",classDescription:'<p>Virtual representation of the grid, using <a href="#Grid/row/Row">Grid.row.Row</a> to represent rows. Plugs into <a href="#Grid/view/Grid">Grid.view.Grid</a>\nand exposes the following functions on grid itself:</p>\n<ul>\n<li><a href="#Grid/row/RowManager#function-getRecordCoords">getRecordCoords()</a></li>\n<li><a href="#Grid/row/RowManager#function-getRowById">getRowById()</a></li>\n<li><a href="#Grid/row/RowManager#function-getRow">getRow()</a></li>\n<li><a href="#Grid/row/RowManager#function-getRowFor">getRowFor()</a></li>\n<li><a href="#Grid/row/RowManager#function-getRowFromElement">getRowFromElement()</a></li>\n</ul>',access:"private",examples:["let row = grid.getRowById(1);"],constructor:{name:"constructor"},filename:"RowManager.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/row",lineno:27,configs:[{name:"prependRowBuffer",description:"<p>Number of rows to render above current viewport</p>",type:"Number",scope:"inner",defaultvalue:5},{name:"appendRowBuffer",description:"<p>Number of rows to render below current viewport</p>",type:"Number",scope:"inner",defaultvalue:5},{name:"rowHeight",description:'<p>Default row height, assigned from Grid at construction (either from config\n<a href="#Grid/view/Grid#config-rowHeight">rowHeight</a> or CSS). Can be set from renderers</p>',type:"Number",scope:"inner"},{name:"fixedRowHeight",description:"<p>Set to <code>true</code> to get a small performance boost in applications that uses fixed row height</p>",type:"Boolean",scope:"inner"}],functions:[{name:"initWithHeight",access:"private",description:"<p>Initializes the RowManager with Rows to fit specified height.</p>",parameters:[{name:"height",type:"Number"},{name:"isRendering",type:"Boolean",default:false,optional:true}],scope:"instance",category:"Init"},{name:"reinitialize",description:"<p>Releases all elements (not from dom), calculates how many are needed, creates those and renders</p>",scope:"instance"},{name:"matchRowCount",access:"private",description:"<p>Add or remove rows to fit row count</p>",scope:"instance",category:"Rows"},{name:"calculateRowCount",access:"private",description:"<p>Calculates how many rows fit in the available height (view height)</p>",scope:"instance",category:"Rows"},{name:"getRow",description:"<p>Get the Row at specified index. Returns <code>undefined</code> if the row index is not rendered.</p>",parameters:[{name:"index",type:"Number"}],scope:"instance",category:"Rows",returns:{type:"Grid.row.Row"}},{name:"getRowById",description:"<p>Get Row for specified record id</p>",parameters:[{name:"recordOrId",type:["Core.data.Model","String","Number"],description:"<p>Record id (or a record)</p>"}],scope:"instance",category:"Rows",returns:{type:"Grid.row.Row",description:"<p>Found Row or null if record not rendered</p>"}},{name:"getRowFromElement",description:"<p>Get a Row from an HTMLElement</p>",parameters:[{name:"element",type:"HTMLElement"}],scope:"instance",category:"Rows",returns:{type:"Grid.row.Row",description:"<p>Found Row or null if record not rendered</p>"}},{name:"getRowAt",description:"<p>Get the row at the specified Y coordinate, which is by default viewport-based.</p>",parameters:[{name:"y",type:"Number",description:"<p>The <code>Y</code> coordinate to find the Row for.</p>"},{name:"local",type:"Boolean",description:"<p>Pass <code>true</code> if the <code>Y</code> coordinate is local to the SubGrid's element.</p>",default:false,optional:true}],scope:"instance",returns:{type:"Grid.row.Row",description:"<p>Found Row or null if no row is rendered at that point.</p>"}},{name:"getRowFor",description:"<p>Get a Row for either a record, a record id or an HTMLElement</p>",parameters:[{name:"recordOrId",type:["HTMLElement","Core.data.Model","String","Number"],description:"<p>Record or record id or HTMLElement</p>"}],scope:"instance",category:"Rows",returns:{type:"Grid.row.Row",description:"<p>Found Row or null if record not rendered</p>"}},{name:"getNextRow",description:"<p>Gets the Row following the specified Row (by index or object). Wraps around the end.</p>",parameters:[{name:"indexOrRow",type:["Number","Grid.row.Row"],description:"<p>index or Row</p>"}],scope:"instance",category:"Rows",returns:{type:"Grid.row.Row"}},{name:"offsetRows",access:"private",description:"<p>Calls offset() for each Row passing along offset parameter</p>",parameters:[{name:"offset",type:"Number",description:"<p>Pixels to translate Row elements.</p>"}],scope:"instance",category:"Rows"},{name:"storeKnownHeight",access:"internal",description:"<p>Store supplied <code>height</code> using <code>id</code> as key in the height map. Called by <code>Row</code> when it gets its height.\nKeeps <code>avarageRowHeight</code> and <code>totalKnownHeight</code> up to date. Ignored when configured with <code>fixedRowHeight</code></p>",parameters:[{name:"id",type:["String","Number"]},{name:"height",type:"Number"}],scope:"instance"},{name:"invalidateKnownHeight",description:"<p>Invalidate cached height for a record. Removing it from <code>totalKnownHeight</code> and factoring it out of\n<code>avarageRowHeight</code>.</p>",parameters:[{name:"records",type:["Core.data.Model","Array.<Core.data.Model>"]}],scope:"instance"},{name:"clearKnownHeights",description:"<p>Invalidates all cached height and resets <code>avarageRowHeight</code> and <code>totalKnownHeight</code></p>",scope:"instance"},{name:"calculateTop",access:"private",description:"<p>Calculates a row top from its data index. Uses known values from the height map, unknown are substituted with\nthe average row height. When configured with <code>fixedRowHeight</code>, it will always calculate a correct value</p>",parameters:[{name:"index",type:"Number",description:"<p>Index in store</p>"}],scope:"instance"},{name:"getRecordCoords",description:"<p>Returns top and bottom for rendered row or estimated coordinates for unrendered.</p>",parameters:[{name:"recordOrId",type:["Core.data.Model","string","Number"],description:"<p>Record or record id</p>"},{name:"local",type:"Boolean",description:"<p>Pass true to get relative record coordinates</p>",default:false,optional:true}],scope:"instance",category:"Calculations",returns:{type:"Core.helper.util.Rectangle",description:"<p>Record bounds with format { x, y, width, height, bottom, right }</p>"}},{name:"getRecordCoordsByIndex",description:"<p>Returns estimated top and bottom coordinates for specified row.</p>",parameters:[{name:"recordIndex",type:"Number",description:"<p>Record index</p>"},{name:"local",type:"Boolean",default:false,optional:true}],scope:"instance",category:"Calculations",returns:{type:"Core.helper.util.Rectangle",description:"<p>Estimated record bounds with format { x, y, width, height, bottom, right }</p>"}},{name:"forEach",description:"<p>Calls a function for each Row</p>",parameters:[{name:"fn",type:"function",description:"<p>Function that will be called with Row as first parameter</p>"}],scope:"instance",category:"Iteration"},{name:"returnToTop",description:"<p>Renders from the top of the grid, also resetting scroll to top. Used for example when collapsing all groups.</p>",scope:"instance",category:"Scrolling & rendering"},{name:"renderFromRecord",description:"<p>Renders from specified records row and down (used for example when collapsing a group, does not affect rows above).</p>",parameters:[{name:"record",type:"Core.data.Model",description:"<p>Record of first row to render</p>"}],scope:"instance",category:"Scrolling & rendering"},{name:"renderFromRow",description:"<p>Renders from specified row and down (used for example when collapsing a group, does not affect rows above).</p>",parameters:[{name:"fromRow",type:"Grid.row.Row",description:"<p>First row to render</p>"}],scope:"instance",category:"Scrolling & rendering"},{name:"renderRows",description:'<p>Renders the passed array (or <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set">Set</a>) of <a href="#Grid/row/Row">rows</a></p>',parameters:[{name:"rows",type:["Array.<Grid.row.Row>","Set"],description:"<p>The rows to render</p>"}],scope:"instance",category:"Scrolling & rendering"},{name:"translateFromRow",access:"private",description:"<p>Translates all rows after the specified row. Used when a single rows height is changed and the others should\nrearrange. (Called from Row#render)</p>",parameters:[{name:"fromRow",type:"Grid.row.Row"}],scope:"instance",category:"Scrolling & rendering"},{name:"refresh",description:"<p>Rerender all rows</p>",scope:"instance",category:"Scrolling & rendering"},{name:"jumpToPosition",access:"private",description:"<p>Makes sure that specified record is displayed in view</p>",parameters:[{name:"newScrollTop",description:"<p>Top of visible section</p>"},{name:"forceRecordIndex",description:"<p>Index of record to display at center</p>",optional:true}],scope:"instance",category:"Scrolling & rendering"},{name:"warpIfNeeded",access:"private",description:"<p>Jumps to a position if it is far enough from current position. Otherwise does nothing.</p>",scope:"instance",category:"Scrolling & rendering"},{name:"updateRenderedRows",access:"private",description:"<p>Handles virtual rendering (only visible rows + buffer are in dom) for rows</p>",parameters:[{name:"newScrollTop",type:"Number",description:"<p>The <code>Y</code> scroll position for which to render rows.</p>"},{name:"force",type:"Boolean",description:"<p>Pass <code>true</code> to update the rendered row block even if the scroll position has not changed.</p>",default:false,optional:true}],scope:"instance",category:"Scrolling & rendering",returns:{type:"Number",description:"<p>Adjusted height required to fit rows</p>"}},{name:"fillAbove",access:"private",description:"<p>Moves as many rows from the bottom to the top that are needed to fill to current scroll pos.</p>",parameters:[{name:"newTop",description:"<p>Scroll position</p>"}],scope:"instance",category:"Scrolling & rendering"},{name:"fillBelow",access:"private",description:"<p>Moves as many rows from the top to the bottom that are needed to fill to current scroll pos.</p>",parameters:[{name:"newTop",description:"<p>Scroll position</p>"}],scope:"instance",category:"Scrolling & rendering"},{name:"estimateTotalHeight",access:"private",description:"<p>Estimates height needed to fit all rows, based on average row height. Also offsets rows if needed to not be above\nthe reachable area of the view.</p>",parameters:[{name:"immediate",type:"Boolean",description:"<p>Specify true to pass the <code>immediate</code> flag on to any listeners (probably only Grid\ncares. Used to bypass buffered element resize)</p>",default:false,optional:true}],scope:"instance",category:"Scrolling & rendering",returns:{type:"Number"}},{name:"displayRecordAtTop",access:"private",description:"<p>Moves a row from bottom to top and renders the corresponding record to it.</p>",scope:"instance",category:"Scrolling & rendering",returns:{type:"Number",description:"<p>New row height</p>"}},{name:"displayRecordAtBottom",access:"private",description:"<p>Moves a row from top to bottom and renders the corresponding record to it.</p>",scope:"instance",category:"Scrolling & rendering",returns:{type:"Number",description:"<p>New row height</p>"}}],properties:[{name:"rows",description:"<p>Get all Rows</p>",scope:"instance",readonly:true,category:"Rows",properties:[{type:{names:["Array.<Grid.row.Row>"]}}]},{name:"topRow",description:"<p>Get the Row that is currently displayed at top.</p>",scope:"instance",readonly:true,category:"Rows",properties:[{type:{names:["Grid.row.Row"]}}]},{name:"bottomRow",description:"<p>Get the Row currently displayed furthest down.</p>",scope:"instance",readonly:true,category:"Rows",properties:[{type:{names:["Grid.row.Row"]}}]},{name:"rowHeight",description:"<p>Set a fixed row height (can still be overridden by renderers) or get configured row height. Setting refreshes all rows</p>",scope:"instance",category:"Rows"},{name:"rowOffsetHeight",description:"<p>Get actually used row height, which includes any border and might be an average if using variable row height.</p>",scope:"instance",properties:[{type:{names:["Number"]}}]},{name:"allHeightsKnown",access:"private",description:"<p>Returns <code>true</code> if all rows have a known height. They do if all rows are visitied, or if RowManager is configured\nwith <code>fixedRowHeight</code>. If so, all tops can be calculated exactly, no guessing needed</p>",scope:"instance",properties:[{type:{names:["Boolean"]}}]},{name:"totalHeight",description:"<p>Total estimated grid height (used for scroller)</p>",scope:"instance",readonly:true,category:"Calculations",properties:[{type:{names:["Number"]}}]}]},{name:"module:Grid/util/GridScroller",classDescription:"<p>A Scroller subclass which handles scrolling in a grid.</p>\n<p>If the grid has no parallel scrolling grids (No locked columns), then this functions\ntransparently as a Scroller.</p>\n<p>If there are locked columns, then scrolling to an <em>element</em> will invoke the scroller\nof the subgrid which contains that element.</p>",access:"internal",constructor:{name:"constructor"},filename:"GridScroller.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/util",lineno:21},{name:"module:Grid/util/ScrollManager",classDescription:'<p>Monitors the mouse position over an element and scrolls the element if the cursor is close to edges. This is used by\nvarious features to scroll the grid section element, for example dragging rows close to vertical edges.\nNormally you should not need to interact with this class directly, but you can configure its\nbehavior using the <a href="#Grid/view/Grid#config-scrollManager">scrollManager</a> config.</p>',constructor:{name:"constructor"},filename:"ScrollManager.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/util",lineno:15,configs:[{name:"zoneWidth",description:"<p>Width in pixels of the area at the edges of an element where scrolling should be triggered</p>",type:"Number",scope:"inner",defaultvalue:50},{name:"scrollSpeed",description:"<p>Scroll speed, higher number is slower. Calculated as &quot;distance from zone edge / scrollSpeed&quot;</p>",type:"Number",scope:"inner",defaultvalue:5},{name:"verticalElement",access:"internal",description:"<p>Default element to use for vertical scrolling. Can be overridden in calls to <code>startMonitoring()</code>.</p>",type:"HTMLElement",scope:"inner"},{name:"direction",description:"<p>The direction(s) to scroll ('horizontal', 'vertical' or 'both')</p>",type:"String",scope:"inner"},{name:"startScrollDelay",description:"<p>Number of milliseconds to wait before scroll starts when the mouse is moved close to an edge monitored by this scroll manager</p>",type:"Number",scope:"inner",defaultvalue:500}],functions:[{name:"startMonitoring",access:"internal",description:"<p>Starts monitoring an element. It will be scrolled if mouse is pressed and within zoneWidth pixels from element edge.</p>",parameters:[{name:"elementOrConfig",type:["HTMLElement","Object"],description:"<p>Element which might be scrolled or config { element, callback, thisObj }</p>"}],scope:"instance"},{name:"stopMonitoring",access:"internal",description:"<p>Stops monitoring an element.</p>",parameters:[{name:"element",type:"HTMLElement",description:"<p>Element for which monitoring is not desired any more and should stop as soon as possible. Preferably right away, but no later than on next frame :)</p>"}],scope:"instance"},{name:"startScroll",access:"private",description:"<p>Starts scrolling (see #performScroll). Called from onMouseMove.</p>",parameters:[{name:"config",type:"Object",description:"<p>Config object</p>"}],scope:"instance"},{name:"stopScroll",access:"private",description:"<p>Stops scrolling. Called from onMouseMove.</p>",parameters:[{name:"config",type:"Object"}],scope:"instance"},{name:"performScroll",access:"private",description:"<p>Scrolls by an amount determined by config.scrollDeltaX/Y on each frame. Start/stop by calling #startScroll and\n#stopScroll.</p>",parameters:[{name:"config",type:"Object",description:"<p>Config object</p>"}],scope:"instance"},{name:"onMouseMove",access:"private",description:"<p>Listener for mouse move on monitored element. Determines if scrolling is needed, and if so how fast to scroll.\nSee #zoneWidth &amp; #scrollSpeed configs.</p>",parameters:[{name:"event",type:"MouseEvent"}],scope:"instance"}]},{name:"module:Grid/util/SubGridScroller",classDescription:"<p>A Scroller subclass which handles scrolling in a SubGrid. Needs special treatment since the SubGrid itself only\nallows horizontal scrolling, while the vertical scrolling is done by an outer element containing all subgrids.</p>",access:"internal",constructor:{name:"constructor"},filename:"SubGridScroller.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/util",lineno:20},{name:"module:Grid/util/TableExporter",classDescription:"<p>This class transforms grid component into two arrays: rows and columns. Columns array contains objects with\nmeta information about column: field name, column name, width and type of the rendered value, rows array contains\narrays of cell values.</p>\n<pre class=\"prettyprint source lang-javascript\"><code>const exporter = new TableExporter({ target : grid });\nexporter.export()\n\n// Output\n{\n    columns : [\n        { field : 'name',     value : 'First name', type : 'string',  width : 100 },\n        { field : 'surname',  value : 'Last name',  type : 'string',  width : 100 },\n        { field : 'age',      value : 'Age',        type : 'number',  width : 50  },\n        { field : 'married',  value : 'Married',    type : 'boolean', width : 50  },\n        { field : 'children', value : 'Children',   type : 'object',  width : 100 }\n    ],\n    rows : [\n        ['Michael', 'Scott',   40, false, []],\n        ['Jim',     'Halpert', 30, true,  [...]]\n    ]\n}\n</code></pre>\n<h2>How data is exported</h2>\n<p>Exporter iterates over store records and processes each record for each column being exported. Exporter uses same\napproach to retrieve data as column: reading record field, configured on the column, or calling renderer function\nif one is provided. This means data can be of any type: primitives or objects. So children array in the above code\nsnippet may contain instances of child record class.</p>\n<h2>Column renderers</h2>\n<p>Column renderers are commonly used to style the cell, or even render more HTML into it, like <a href=\"#Grid/column/WidgetColumn\">Grid.column.WidgetColumn</a>\ndoes. This is not applicable in case of export. Also, given grid uses virtual rendering (only renders visible rows) and\nexporter iterates over all records, not just visible ones, we cannot provide all data necessary to the renderer. Some\narguments, like cellElement and row, wouldn't exist. Thus renderer is called with as much data we have: value,\nrecord, column, grid, other <a href=\"#Grid/column/Column#config-renderer\">documented arguments</a> would be undefined.</p>\n<p>Exporter adds one more flag for renderer function: isExport. When renderer receives this flag it knows\ndata is being exported and can skip DOM work to return simpler value. Below snippet shows simplified code of the\nwidget column handling export:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>renderer({ isExport }) {\n    if (isExport) {\n        return null;\n    }\n    else {\n        // widget rendering routine\n        ...\n    }\n}\n</code></pre>\n<h2>Column types</h2>\n<p>Column types are not actually a complete list of JavaScript types (you can get actual type of the cell using typeof) it\nis a simple and helpful meta information.</p>\n<p>Available column types are:</p>\n<ul>\n<li>string</li>\n<li>number</li>\n<li>boolean</li>\n<li>date</li>\n<li>object</li>\n</ul>\n<p>Everything which is not primitive like string/number/bool (or a date) is considered an object. This includes null, undefined,\narrays, classes, functions etc.</p>\n<h2>Getting column type</h2>\n<p>If existing grid column is used, column type first would be checked with <a href=\"#Grid/column/Column#config-exportedType\">exportedType</a>\nconfig. If exportedType is undefined or column does not exist in grid, type is read from a record field definition.\nIf the field is not defined, object type is used.</p>\n<p>Configuring exported type:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>new Grid({\n    columns : [\n        {\n            name         : 'Name',\n            field        : 'name',\n            exportedType : 'object',\n            renderer     : ({ value, isExport }) => {\n                if (isExport) {\n                    return { value }; // return value wrapped into object\n                }\n            }\n    ]\n})\n</code></pre>",extends:["Core/Base"],constructor:{name:"constructor"},filename:"TableExporter.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/util",lineno:107,configs:[{name:"target",description:"<p>Target grid instance to export data from</p>",type:"Grid",scope:"inner"},{name:"defaultColumnWidth",description:"<p>Specifies a default column width if no width specified</p>",type:"Number",scope:"inner"},{name:"exportDateAsInstance",description:"<p>Set to false to export date as it is displayed by Date column formatter</p>",type:"Boolean",scope:"inner",defaultvalue:true},{name:"showGroupHeader",description:"<p>If true and the grid is grouped, shows the grouped value in the first column. True by default.</p>",type:"Boolean",scope:"inner"},{name:"columns",description:"<p>An array of columns configuration used to specify columns width, headers name, and column fields to get the data from.\n'field' config is required. If 'text' is missing, it will try to get it retrieved from the grid column or the 'field' config.\nIf 'width' is missing, it will try to get it retrieved from the grid column or <a href=\"#Grid/util/TableExporter#config-defaultColumnWidth\">defaultColumnWidth</a> config.\nIf no columns provided the config will be generated from the grid columns.</p>\n<p>For example:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>columns : [\n    'firstName', // field\n    'age', // field\n    { text : 'Starts', field : 'start', width : 140 },\n    { text : 'Ends', field : 'finish', width : 140 }\n]\n</code></pre>",type:["Array.<String>","Array.<Object>"],scope:"inner"},{name:"indent",description:'<p>When true and tree is being exported, node names are indented with <a href="#Grid/util/TableExporter#config-indentationSymbol">indentationSymbol</a></p>',type:"Boolean",scope:"inner",defaultvalue:true},{name:"indentationSymbol",description:'<p>This symbol (four spaces by default) is used to indent node names when <a href="#Grid/util/TableExporter#config-indent">indent</a> is true</p>',type:"String",scope:"inner",defaultvalue:"    "}],functions:[{name:"export",description:"<p>Exports grid data according to provided config</p>",parameters:[{name:"config",type:"Object"}],scope:"instance",returns:{type:"Object"}},{name:"processColumn",access:"private",description:"<p>Extracts export data from the column instance</p>",parameters:[{name:"column",type:"Column"},{name:"config",type:"Object"}],scope:"instance",returns:{type:"Object"}},{name:"processRecord",access:"private",description:"<p>Extracts export data from the record instance reading supplied column configs</p>",parameters:[{name:"record",type:["Model","null"],description:"<p>If null is passed, all columns will be filled with empty strings</p>"},{name:"columns",type:"Array.<Column>"},{name:"config",type:"Object"}],scope:"instance",returns:{type:"Array.<Object>"}}]},{name:"module:Grid/view/Bar",classDescription:"<p>Base class used by Header and Footer. Holds an element for each column. Not intended to be used directly.</p>",extends:["Core/widget/Widget"],access:"internal",virtual:true,constructor:{name:"constructor"},filename:"Bar.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/view",lineno:16,functions:[{name:"fixCellWidths",access:"private",description:"<p>Fix cell widths (flex or fixed width) after rendering.\nNot a part of template any longer because of CSP</p>",scope:"instance"},{name:"getBarCellElement",access:"private",description:"<p>Get the header or footer cell element for the specified column.</p>",parameters:[{name:"columnId",type:"String",description:"<p>Column id</p>"}],scope:"instance",returns:{type:"HTMLElement",description:"<p>Header or footer element, depending on which subclass is in use.</p>"}}]},{name:"module:Grid/view/Footer",classDescription:"<p>Grid footer, used by Summary feature. You should not need to create instances manually.</p>",extends:["Grid/view/Bar"],access:"internal",constructor:{name:"constructor"},filename:"Footer.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/view",lineno:15,functions:[{name:"getFooter",description:"<p>Get the footer cell element for the specified column.</p>",parameters:[{name:"columnId",type:"String",description:"<p>Column id</p>"}],scope:"instance",returns:{type:"HTMLElement",description:"<p>Footer cell element</p>"}},{name:"contentTemplate",access:"private",description:'<p>Footer template. Iterates leaf columns to create content.\nStyle not included because of CSP. Widths are fixed up in\n<a href="#Grid/view/Footer#function-fixFooterWidths">fixFooterWidths</a></p>',scope:"instance"},{name:"fixFooterWidths",access:"private",description:"<p>Fix footer widths (flex or fixed width) after rendering. Not a part of template any longer because of CSP</p>",scope:"instance"}]},{name:"module:Grid/view/Grid",classDescription:'<p>The Grid component is a very powerful and performant UI component that shows tabular data (or tree data using the <a href="#Grid/view/TreeGrid">Grid.view.TreeGrid</a>).</p>\n<h2>Intro</h2>\nThe Grid widget has a wide range of features and a large API to allow users to work with data efficiently in the browser. The two\nmost important configs are <a href="#Grid/view/Grid#config-store">store</a> and <a href="#Grid/view/Grid#config-columns">columns</a>. With the store config, you decide which data to load into the grid.\nYou can work with both in-memory arrays or load data using ajax. See the <a href="#Core/data/Store">Core.data.Store</a> class to learn more about loading data into stores.\n<p>The columns config accepts an array of <a href="#Grid/column/Column">Column</a> descriptors defining which fields that will be displayed in the grid.\nThe <a href="#Grid/column/Column#config-field">field</a> property in the column descriptor maps to a field in your dataset. The simplest grid configured with inline data and two columns would\nlook like this:</p>\n<pre><code> let grid = new Grid({\n     appendTo : document.body,\n\n     columns: [\n         { field: \'name\', text: \'Name\' },\n         { field: \'job\', text: \'Job\', renderer: ({value}) =&gt; value ? value : \'Unemployed\' }\n     ],\n\n     data: [\n         { name: \'Bill\', job: \'Retired\' },\n         { name: \'Elon\', job: \'Visionary\' },\n         { name: \'Me\' }\n     ]\n });\n</code></pre>\n<p><div class="external-example" data-file="grid/Grid.js">\n            <i class="b-icon b-icon-code b-inline-example"></i>\n            <div class="external-code-container">\n                <div class="external-code example">\n                    <pre><code>\n                    </code></pre>\n                </div>\n            </div>\n            <div class="external-target"></div>\n       </div></p>\n<h2>Features</h2>\nTo avoid the Grid core being bloated, its main features are implemented in separate ´feature´ classes. These can be turned on and off based\non your requirements. To configure (or disable) a feature, use the <a href="#Grid/view/Grid#config-features">features</a> object to provide your desired configuration for the features\nyou want to use. Each feature has an ´id´ that you use as a key in the features object:\n<pre><code> let grid = new Grid({\n     appendTo : document.body,\n\n     features : {\n         cellEdit     : false,\n         regionResize : true,\n         cellTooltip  : {\n             tooltipRenderer : (data) =&gt; {\n             }\n         },\n         ...\n     }\n });\n</code></pre>\n<p><section class="collapsible"><h2>Column configuration options</h2>\nA grid contains a number of columns that control how your data is rendered. The simplest option is to simply point a Column to a field in your dataset, or define a custom <a href="#Grid/column/Column#config-renderer">renderer</a>.\nThe renderer function receives one object parameter containing rendering data for the current cell being rendered.</p>\n<pre><code> let grid = new Grid({\n     appendTo : document.body,\n\n     columns: [\n         {\n             field: \'task\',\n             text: \'Task\',\n             renderer: (renderData) =&gt; {\n                 const record = renderData.record;\n\n                 if (record.percentDone === 100) {\n                     renderData.cellElement.classList.add(\'taskDone\');\n                     renderData.cellElement.style.background = \'green\';\n                 }\n\n                 return renderData.value;\n             }\n         }\n     ]\n });\n</code></pre>\n<p></section>\n<section class="collapsible"><h2>Grid sections (aka "locked" or "frozen" columns)</h2>\nThe grid can be divided horizontally into individually scrollable sections. This is great if you have lots of columns that\ndon\'t fit the available width of the screen. To enable this feature, simply mark the columns you want to <code>lock</code>.\nLocked columns are then displayed in their own section to the left of the other columns:</p>\n<pre><code> let grid = new Grid({\n     appendTo : document.body,\n     width    : 500,\n     subGridConfigs : {\n         // set a fixed locked section width if desired\n         locked : { width: 300 }\n     },\n     columns : [\n         { field : \'name\', text : \'Name\', width : 200, locked : true },\n         { field : \'firstName\', text : \'First name\', width : 100, locked : true },\n         { field : \'surName\', text : \'Last name\', width : 100, locked : true },\n         { field : \'city\', text : \'City\', width : 100 },\n         { type : \'number\', field : \'age\', text : \'Age\', width : 200 },\n         { field : \'food\', text : \'Food\', width : 200 }\n     ]\n });\n</code></pre>\n<p><div class="external-example" data-file="grid/LockedGrid.js">\n            <i class="b-icon b-icon-code b-inline-example"></i>\n            <div class="external-code-container">\n                <div class="external-code example">\n                    <pre><code>\n                    </code></pre>\n                </div>\n            </div>\n            <div class="external-target"></div>\n       </div>\nYou can also move columns between sections by using drag and drop, or use the built-in header context menu. If you want to be able to resize the\nlocked grid section, enable the <a href="#Grid/feature/RegionResize">regionResize</a> feature.\n</section>\n<section class="collapsible"><h2>Filtering</h2>\nOne important requirement of a good Grid component is the ability to filter large datasets to quickly find what you\'re looking for. To\nenable filtering (through the context menu), add the <a href="#Grid/feature/Filter">filter</a> feature:</p>\n<pre><code> let grid = new Grid({\n     features: {\n         filter: true\n     }\n });\n</code></pre>\n<p>Or activate a default filter at initial rendering:</p>\n<pre><code> let grid = new Grid({\n     features: {\n         filter: { property : \'city\', value : \'New York\' }\n     }\n });\n</code></pre>\n<p><div class="external-example" data-file="feature/Filter.js">\n            <i class="b-icon b-icon-code b-inline-example"></i>\n            <div class="external-code-container">\n                <div class="external-code example">\n                    <pre><code>\n                    </code></pre>\n                </div>\n            </div>\n            <div class="external-target"></div>\n       </div>\n</section>\n<section class="collapsible"><h2>Tooltips</h2>\nIf you have a data models with many fields, and you want to show\nadditional data when hovering over a cell, use the <a href="#Grid/feature/CellTooltip">cellTooltip</a> feature. To show a tooltip for all cells:</p>\n<pre><code> let grid = new Grid({\n     features: {\n         cellTooltip: ({value}) =&gt; value\n     }\n });\n</code></pre>\n<p><div class="external-example" data-file="feature/CellTooltip.js">\n            <i class="b-icon b-icon-code b-inline-example"></i>\n            <div class="external-code-container">\n                <div class="external-code example">\n                    <pre><code>\n                    </code></pre>\n                </div>\n            </div>\n            <div class="external-target"></div>\n       </div>\n</section>\n<section class="collapsible"><h2>Inline Editing (default <strong>on</strong>)</h2>\nTo enable inline cell editing in the grid, simply add the <a href="#Grid/feature/CellEdit">cellEdit</a> feature:</p>\n<pre><code> let grid = new Grid({\n     appendTo : document.body,\n\n     features : {\n         cellEdit : true\n     },\n     columns: [\n         {\n             field: \'task\',\n             text: \'Task\'\n         }\n     ]\n });\n</code></pre>\n<p><div class="external-example" data-file="feature/CellEdit.js">\n            <i class="b-icon b-icon-code b-inline-example"></i>\n            <div class="external-code-container">\n                <div class="external-code example">\n                    <pre><code>\n                    </code></pre>\n                </div>\n            </div>\n            <div class="external-target"></div>\n       </div>\n</section>\n<section class="collapsible"><h2>Context Menu</h2>\nUse the <a href="#Grid/feature/ContextMenu">contextMenu</a> feature if you want your users to be able to interact with the data through the context menu:</p>\n<pre><code> let grid = new Grid({\n     features: {\n         contextMenu: {\n             headerItems: [\n                 {\n                     text: \'Show info\',\n                     icon: \'fa fa-info-circle\',\n                     weight: 200,\n                     onItem : ({ item }) =&gt; console.log(item.text)\n                 }\n             ],\n\n         cellItems: [\n             { text: \'Show options\', icon: \'fa fa-cog\', weight: 200 }\n         ]\n     }\n }\n</code></pre>\n<p><div class="external-example" data-file="feature/ContextMenu.js">\n            <i class="b-icon b-icon-code b-inline-example"></i>\n            <div class="external-code-container">\n                <div class="external-code example">\n                    <pre><code>\n                    </code></pre>\n                </div>\n            </div>\n            <div class="external-target"></div>\n       </div>\n</section>\n<section class="collapsible"><h2>Grouping</h2>\nTo group rows by a field in your dataset, use the <a href="#Grid/feature/Group">group</a> feature.\n<div class="external-example" data-file="feature/Group.js">\n            <i class="b-icon b-icon-code b-inline-example"></i>\n            <div class="external-code-container">\n                <div class="external-code example">\n                    <pre><code>\n                    </code></pre>\n                </div>\n            </div>\n            <div class="external-target"></div>\n       </div>\n</section>\n<section class="collapsible"><h2>Searching</h2>\nWhen working with lots of data, a quick alternative to filtering is the <a href="#Grid/feature/Search">search</a> feature. It highlights\nmatching values in the grid as you type.\n<div class="external-example" data-file="feature/Search.js">\n            <i class="b-icon b-icon-code b-inline-example"></i>\n            <div class="external-code-container">\n                <div class="external-code example">\n                    <pre><code>\n                    </code></pre>\n                </div>\n            </div>\n            <div class="external-target"></div>\n       </div>\n</section>\n<section class="collapsible"><h2>Loading and saving data</h2>\nThe grid keeps all its data in a <a href="#Core/data/Store">Core.data.Store</a>, which is essentially an Array of <a href="#Core/data/Model">Model</a> items.\nYou define your own Model representing your data entities and use the Model API to get and set values.</p>\n<pre><code> class Person extends Model {}\n\n let person = new Person({\n     name: \'Steve\',\n     age: 38\n });\n\n person.name = \'Linda\'; // person object is now `dirty`\n\n let store = new Store({\n     data : [\n         { name : \'Don\', age : 40 }\n     ]\n });\n\n store.add(person);\n\n console.log(store.count()); // === 2\n\n store.remove(person); // Remove from store\n</code></pre>\n<p>When you update a record in a store, it\'s considered dirty, until you call <a href="#Core/data/mixin/StoreCRUD#function-commit">commit</a> on the containing Store. You can also configure your Store to commit automatically (like Google docs).\nIf you use an AjaxStore, it will send changes to your server when commit is called.\nAny changes you make to the Store or its records are immediately reflected in the Grid, so there is no need to tell it to refresh manually.</p>\n<p>To learn more about loading and saving data, please refer to <a href="#guides/data/displayingdata.md">this guide</a>.\n</section>\n<section class="collapsible"><h2>Default configs</h2>\nThere is a myriad of configs and features available for Grid, some of them on by default and some of them requiring\nextra configuration. The code below tries to illustrate the major things that are used by default:</p>\n<pre class="prettyprint source lang-javascript"><code>let grid = new Grid({\n   // The following features are enabled by default:\n   features : {\n       cellEdit      : true,\n       columnPicker  : true,\n       columnReorder : true,\n       columnResize  : true,\n       contextMenu   : true,\n       group         : true,\n       sort          : true\n   },\n\n   animateRemovingRows       : true,  // Rows will slide out on removal\n   autoHeight                : false, // Grid needs to have a height supplied through CSS (strongly recommended) or by specifying `height`\n   columnLines               : true,  // Themes might override it to hide lines anyway\n   emptyText                 : \'No rows to display\',\n   enableTextSelection       : false, // Not allowed to select text in cells by default,\n   fillLastColumn            : true,  // By default the last column is stretched to fill the grid\n   fullRowRefresh            : true,  // Refreshes entire row when a cell value changes\n   loadMask                  : \'Loading...\',\n   resizeToFitIncludesHeader : true,  // Also measure header when auto resizing columns\n   responsiveLevels : {\n     small : 400,\n     medium : 600,\n     large : \'*\'\n   },\n   rowHeight                  : null,  // Determined using CSS, it will measure rowHeight\n   showDirty                  : false, // No indicator for changed cells\n   showRemoveRowInContextMenu : true   // Context menu has &quot;Remove row&quot; item\n});\n</code></pre>\n<p></section>\n<section class="collapsible"><h2>Performance</h2>\nIn general the Grid widget has very good performance and you can try loading any amount of data in the <a target="_blank" href="../examples/bigdataset">bigdataset</a> demo.\nThe overall rendering performance is naturally affected by many other things than\nthe data volume. Other important factors that can impact performance: number of columns, complex cell renderers, locked columns, the number of features enabled\nand of course the browser (Chrome fastest, IE slowest).\n</section></p>',extends:["Grid/view/GridBase"],constructor:{name:"constructor"},filename:"Grid.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/view",lineno:288,classType:"grid"},{name:"module:Grid/view/GridBase",classDescription:'<p>A thin base class for <a href="#Grid/view/Grid">Grid.view.Grid</a>. Does not include any features by default, allowing smaller custom built bundles if used\nin place of <a href="#Grid/view/Grid">Grid.view.Grid</a>.</p>\n<p><strong>NOTE:</strong> In most scenarios you probably want to use Grid instead of GridBase.</p>',extends:["Core/widget/Widget"],mixes:["Core/mixin/Events","Core/mixin/Pluggable","Core/mixin/State","Grid/view/mixin/GridElementEvents","Grid/view/mixin/GridFeatures","Grid/view/mixin/GridResponsive","Grid/view/mixin/GridSelection","Grid/view/mixin/GridState","Grid/view/mixin/GridSubGrids"],constructor:{name:"constructor"},filename:"GridBase.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/view",lineno:80,configs:[{name:"rowHeight",description:"<p>Row height in pixels. When set to null, an empty row will be measured and its height will be used as\ndefault row height, enabling it to be controlled using CSS</p>",type:"Number",scope:"inner",defaultvalue:"null",category:"Common"},{name:"fixedRowHeight",description:'<p>Use fixed row height. Setting this to <code>true</code> will configure the underlying RowManager to use fixed row\nheight, which sacrifices the ability to use rows with variable height to gain a fraction better\nperformance.</p>\n<p>Using this setting also ignores the <a href="#Grid/view/GridBase#config-getRowHeight">getRowHeight</a> function, and thus any\nrow height set in data. Only Grids configured <a href="#Grid/view/GridBase#config-rowHeight">rowHeight</a> is used.</p>',type:"Boolean",scope:"inner",category:"Layout"},{name:"getRowHeight",description:'<p>A function called for each row to determine its height. It is passed a <a href="#Core/data/Model">record</a> and\nexpected to return the desired height of that records row. If the function returns a falsy value, Grids\nconfigured <a href="#Grid/view/GridBase#config-rowHeight">rowHeight</a> is used.</p>\n<p>The default implementation of this function returns the row height from the records\n<a href="#Grid/data/GridRowModel#field-rowHeight">rowHeight field</a>.</p>\n<p>Override this function to take control over how row heights are determined:</p>\n<pre class="prettyprint source lang-javascript"><code>new Grid({\n   getRowHeight(record) {\n       if (record.low) {\n           return 20;\n       }\n       else if (record.high) {\n           return 60;\n       }\n\n       // Will use grids configured rowHeight\n       return null;\n   }\n});\n</code></pre>\n<p>NOTE: Height set in a Column renderer takes precedence over the height returned by this function.</p>',type:"function",scope:"inner",returns:[{type:{names:["Number"]},description:"<p>Desired row height</p>"}],category:"Layout",parameters:[{name:"getRowHeight.record",type:"Core.data.Model",description:"<p>Record to determine row height for</p>",isSubParam:true}]},{name:"emptyText",description:"<p>Text to display when there is no data to display in the grid</p>",type:"String",scope:"inner",defaultvalue:"L{noRows}",category:"Common"},{name:"fullRowRefresh",description:'<p>Refresh entire row when a record changes (<code>true</code>) or, if possible, only the cells affected (<code>false</code>).</p>\n<p>When this is set to <code>false</code>, then if a column uses a renderer, cells in that column will still\nbe updated because it is impossible to know whether the cells value will be affected.</p>\n<p>If a standard, provided Column class is used with no custom renderer, its cells will only be updated\nif the column\'s <a href="#Grid/column/Column#config-field">field</a> is changed.</p>',type:"Boolean",scope:"inner",defaultvalue:true,category:"Misc"},{name:"readOnly",description:"<p>Read only or not</p>",type:"Boolean",scope:"inner",defaultvalue:"false",category:"Common"},{name:"hideHeaders",description:"<p>True to not create any grid column headers</p>",type:"Boolean",scope:"inner",defaultvalue:"false",category:"Misc"},{name:"showRemoveRowInContextMenu",description:"<p>Show &quot;Remove row&quot; item in context menu (if enabled and grid not read only)</p>",type:"Boolean",scope:"inner",defaultvalue:true,category:"Misc"},{name:"autoHeight",description:"<p>Automatically set grids height to fit all rows (no scrolling in the grid). In general you should avoid\nusing <code>autoHeight: true</code>, since it will bypass Grids virtual rendering and render all rows at once, which\nin a larger grid is really bad for performance.</p>",type:"Boolean",scope:"inner",defaultvalue:"false",category:"Layout"},{name:"store",description:"<p>Store that holds records to display in the grid, or a store config object.\nA store will be created if none is specified</p>",type:["Core.data.Store","Object"],scope:"inner",category:"Common"},{name:"data",description:"<p>Data to set in grids store (a Store will be created if none is specified)</p>",type:"Array.<Object>",scope:"inner",category:"Common"},{name:"columns",description:"<p>Column definitions for the grid, will be used to create Column instances that are added to a ColumnStore:</p>\n<pre class=\"prettyprint source\"><code>new Grid({\n  columns : [\n    { text : 'Alias', field : 'alias' },\n    { text : 'Superpower', field : 'power' }\n  ]\n});\n</code></pre>\n<p>Also accepts a store config object:</p>\n<pre class=\"prettyprint source\"><code>new Grid({\n  columns : {\n    data : [\n      { text : 'Alias', field : 'alias' },\n      { text : 'Superpower', field : 'power' }\n    ],\n    listeners : {\n      update() {\n        // Some update happened\n      }\n    }\n  }\n});\n</code></pre>\n<p>This store can be accessed using <a href=\"#Grid/view/GridBase#property-columns\">columns</a>:</p>\n<pre class=\"prettyprint source\"><code>grid.columns.add({ field : 'column', text : 'New column' });\n</code></pre>",type:["Array.<Object>","Object"],scope:"inner",category:"Common"},{name:"defaultRegion",description:"<p>Region to which columns are added when they have none specified</p>",type:"String",scope:"inner",defaultvalue:"normal",category:"Misc"},{name:"destroyStore",description:"<p>true to destroy the store when the grid is destroyed</p>",type:"Boolean",scope:"inner",defaultvalue:"false",category:"Misc"},{name:"enableTextSelection",description:"<p>Set to true to allow text selection in the grid cells</p>",type:"Boolean",scope:"inner",defaultvalue:"false",category:"Selection"},{name:"loadMask",description:'<p>A message to be shown when a store or Crud Manager is performing a remote operation. Set to <code>null</code> to disable default load mask.</p>\n<p>To create a custom load mask need to subscribe to the grid\'s store events and show <a href="#Core/widget/Mask">Mask</a>\non <a href="#Core/data/AjaxStore#event-beforeRequest">beforeRequest</a> and hide it on <a href="#Core/data/AjaxStore#event-afterRequest">afterRequest</a>.\nNote, for Crud Manager events are different: show Mask on <code>beforeSend</code> and hide it on <code>requestDone</code> and <code>requestFail</code>.</p>\n<pre class="prettyprint source lang-javascript"><code>const grid = new Grid({\n    loadMask : null,\n    syncMask : null\n});\n\ngrid.store.on({\n    beforeRequest : () => {\n        Mask.mask({\n            text : \'Data is loading...\',\n            mode : \'dark-blur\'\n        }, document.body);\n    }\n    afterRequest : () => {\n        Mask.unmask(document.body);\n    }\n});\n\nstore.load();\n</code></pre>',type:["String","null"],scope:"inner",defaultvalue:'"Loading..."',category:"Misc"},{name:"syncMask",description:'<p>A message to be shown when Crud Manager is persisting changes on the server. Set to <code>null</code> to disable default sync mask.\nThis config is similar to <a href="#Grid/view/GridBase#config-loadMask">loadMask</a> but designed for saving data.</p>\n<p>To create a custom sync mask need to subscribe to the Crud Manager events and show <a href="#Core/widget/Mask">Mask</a>\non <code>beforeSend</code> and hide it on <code>requestDone</code> and <code>requestFail</code>.</p>',type:["String","null"],scope:"inner",defaultvalue:'"Saving changes, please wait..."',category:"Misc"},{name:"columnLines",description:"<p>Set to <code>false</code> to inhibit column lines</p>",type:"Boolean",scope:"inner",defaultvalue:true,category:"Misc"},{name:"fillLastColumn",description:"<p>Set to <code>true</code> to stretch the last column in a grid with all fixed width columns\nto fill extra available space if the grid's width is wider than the sum of all\nconfigured column widths.</p>",type:"Boolean",scope:"inner",defaultvalue:true,category:"Layout"},{name:"resizeToFitIncludesHeader",description:"<p>Set to <code>false</code> to only measure cell contents when double clicking the edge between column headers.</p>",type:"Boolean",scope:"inner",defaultvalue:true,category:"Layout"},{name:"animateRemovingRows",description:"<p>Set to <code>false</code> to prevent remove row animation and remove the delay related to that.</p>",type:"Boolean",scope:"inner",category:"Misc"},{name:"disableGridRowModelWarning",description:"<p>Set to <code>true</code> to not get a warning when using another base class than GridRowModel for your grid data. If\nyou do, and would like to use the full feature set of the grid then include the fields from GridRowModel\nin your model definition.</p>",type:"Boolean",scope:"inner",defaultvalue:"false",category:"Misc"},{name:"monitorResize",description:"<p>Grid monitors window resize by default.</p>",type:"Boolean",scope:"inner",defaultvalue:"true",category:"Misc"},{name:"features",description:"<p>An object containing Feature configuration objects (or <code>true</code> if no configuration is required)\nkeyed by the Feature class name in all lowercase.</p>",type:"Object",scope:"inner",category:"Common",typings:"any"},{name:"subGridConfigs",description:"<p>An object containing sub grid configuration objects keyed by a <code>region</code> property.\nBy default, grid has a 'locked' region (if configured with locked columns) and a 'normal' region.\nThe 'normal' region defaults to use <code>flex: 1</code>.</p>\n<p>This config can be used to reconfigure the &quot;built in&quot; sub grids or to define your own.</p>\n<pre class=\"prettyprint source\"><code>// Redefining the &quot;built in&quot; regions\nnew Grid({\n  subGridConfigs : {\n    locked : { flex : 1 },\n    normal : { width : 100 }\n  }\n});\n\n// Defining your own multi region sub grids\nnew Grid({\n  subGridConfigs : {\n    left   : { width : 100 },\n    middle : { flex : 1 },\n    right  : { width  : 100 }\n  },\n\n  columns : {\n    { field : 'manufacturer', text: 'Manufacturer', region : 'left' },\n    { field : 'model', text: 'Model', region : 'middle' },\n    { field : 'year', text: 'Year', region : 'middle' },\n    { field : 'sales', text: 'Sales', region : 'right' }\n  }\n});\n</code></pre>",type:"Object",scope:"inner",category:"Misc"},{name:"scrollable",description:'<p>Configures whether the grid is scrollable in the <code>Y</code> axis. This is used to configure a <a href="#Grid/util/GridScroller">Grid.util.GridScroller</a>.\nSee the <a href="#Grid/view/GridBase#config-scrollerClass">scrollerClass</a> config option.</p>',type:["Boolean","Object","Core.helper.util.Scroller"],scope:"inner",category:"Scrolling"},{name:"scrollerClass",description:'<p>The class to instantiate to use as the <a href="#Grid/view/GridBase#config-scrollable">scrollable</a>. Defaults to <a href="#Grid/util/GridScroller">Grid.util.GridScroller</a>.</p>',type:"Core.helper.util.Scroller",scope:"inner",category:"Scrolling"},{name:"scrollManager",description:'<p>Configuration values for the <a href="#Grid/util/ScrollManager">Grid.util.ScrollManager</a> class.</p>',type:"Object",scope:"inner",category:"Scrolling"},{name:"showDirty",description:"<p>Configure as <code>true</code> to have the grid show a red &quot;changed&quot; tag in cells who's\nfield value has changed and not yet been committed.</p>",type:"Boolean",scope:"inner",defaultvalue:"false",category:"Misc"},{name:"transitionDuration",description:"<p>Animation transition duration in milliseconds.</p>",type:"number",scope:"inner",defaultvalue:500},{name:"contextMenuTriggerEvent",description:"<p>Event which is used to show context menus.\nAvailable options are: 'contextmenu', 'click', 'dblclick'.\nDefault value is 'contextmenu'</p>",type:"String",scope:"inner",category:"Misc"}],properties:[{name:"transitionDuration",description:"<p>Animation transition duration in milliseconds.</p>",scope:"inner",properties:[{type:{names:["number"]}}]},{name:"columns",description:'<p>Get the <a href="#Grid/data/ColumnStore">ColumnStore</a> used by this Grid.</p>',scope:"instance",readonly:true,category:"Common",properties:[{type:{names:["Grid.data.ColumnStore"]}}]},{name:"topRow",access:"private",description:"<p>Get the Row that is currently displayed at top.</p>",type:{names:["Grid.row.Row"]},scope:"inner",readonly:true,category:"Rows"},{name:"bottomRow",access:"private",description:"<p>Get the Row currently displayed furthest down.</p>",type:{names:["Grid.row.Row"]},scope:"inner",readonly:true,category:"Rows"},{name:"store",description:"<p>Get/set the store used by this Grid. The setter accepts Store or a configuration object for a store.\nIf the configuration contains a <code>readUrl</code>, an AjaxStore will be created.</p>",scope:"instance",category:"Common",properties:[{type:{names:["Core.data.Store","Object"]}}]},{name:"data",description:"<p>Convenience functions for getting/setting data in related store</p>",scope:"instance",category:"Common",properties:[{type:{names:["Array.<Object>"]}}]},{name:"bodyHeight",description:"<p>Body height</p>",scope:"instance",readonly:true,category:"Layout",properties:[{type:{names:["Number"]}}]},{name:"headerHeight",description:"<p>Header height</p>",scope:"instance",readonly:true,category:"Layout",properties:[{type:{names:["Number"]}}]},{name:"columnLines",description:"<p>Toggle column line visibility. End result might be overruled by/differ between themes.</p>",scope:"instance",properties:[{type:{names:["Boolean"]}}]},{name:"readOnly",description:"<p>Get/set read only mode, which prevents cell editing etc.\nExactly what is prevented is up to each feature.</p>",scope:"instance",category:"Common",properties:[{type:{names:["Boolean"]}}]},{name:"contentHeight",access:"private",description:"<p>Returns content height calculated from row manager</p>",scope:"instance"}],functions:[{name:"doDestroy",access:"private",description:"<p>Cleanup</p>",scope:"instance"},{name:"setGridClassList",access:"private",description:"<p>Adds extra classes to the Grid element after it's been configured.\nAlso iterates through features, thus ensuring they have been initialized.</p>",scope:"instance"},{name:"collapseAll",description:'<p>Collapse all groups/parent nodes.</p>\n<p><em>NOTE: Only available when the <a href="#Grid/feature/Group">Group</a> or the <a href="#Grid/feature/Tree">Tree</a> feature is enabled.</em></p>',scope:"inner",category:"Feature shortcuts"},{name:"expandAll",description:'<p>Expand all groups/parent nodes.</p>\n<p><em>NOTE: Only available when the <a href="#Grid/feature/Group">Group</a> or the <a href="#Grid/feature/Tree">Tree</a> feature is enabled.</em></p>',scope:"inner",category:"Feature shortcuts"},{name:"startEditing",description:'<p>Start editing specified cell. If no cellContext is given it starts with the first cell in the first row.</p>\n<p><em>NOTE: Only available when the <a href="#Grid/feature/CellEdit">CellEdit</a> feature is enabled.</em></p>',parameters:[{name:"cellContext",type:"Object",description:"<p>Cell specified in format { id: 'x', columnId/column/field: 'xxx' }. See <a href=\"#Grid/view/Grid#function-getCell\">getCell</a> for details.</p>"}],scope:"inner",category:"Feature shortcuts",returns:{type:"Boolean"}},{name:"toggleCollapse",description:'<p>Collapse an expanded node or expand a collapsed. Optionally forcing a certain state.</p>\n<p><em>NOTE: Only available when the <a href="#Grid/feature/Tree">Tree</a> feature is enabled.</em></p>',parameters:[{name:"idOrRecord",type:["String","Number","Core.data.Model"],description:"<p>Record (the node itself) or id of a node to toggle</p>"},{name:"collapse",type:"Boolean",description:"<p>Force collapse (true) or expand (false)</p>",optional:true},{name:"skipRefresh",type:"Boolean",description:"<p>Set to true to not refresh rows (if calling in batch)</p>",optional:true}],scope:"inner",category:"Feature shortcuts",returns:{type:"Promise"},async:true},{name:"collapse",description:'<p>Collapse a single node.</p>\n<p><em>NOTE: Only available when the <a href="#Grid/feature/Tree">Tree</a> feature is enabled.</em></p>',parameters:[{name:"idOrRecord",type:["String","Number","Core.data.Model"],description:"<p>Record (the node itself) or id of a node to collapse</p>"}],scope:"inner",category:"Feature shortcuts",returns:{type:"Promise"},async:true},{name:"expand",description:'<p>Expand a single node.</p>\n<p><em>NOTE: Only available when the <a href="#Grid/feature/Tree">Tree</a> feature is enabled.</em></p>',parameters:[{name:"idOrRecord",type:["String","Number","Core.data.Model"],description:"<p>Record (the node itself) or id of a node to expand</p>"}],scope:"inner",category:"Feature shortcuts",returns:{type:"Promise"},async:true},{name:"expandTo",description:'<p>Expands parent nodes to make this node &quot;visible&quot;.</p>\n<p><em>NOTE: Only available when the <a href="#Grid/feature/Tree">Tree</a> feature is enabled.</em></p>',parameters:[{name:"idOrRecord",type:["String","Number","Core.data.Model"],description:"<p>Record (the node itself) or id of a node</p>"}],scope:"inner",category:"Feature shortcuts",returns:{type:"Promise"},async:true},{name:"getRowById",access:"private",description:"<p>Get Row for specified record id.</p>",parameters:[{name:"recordOrId",type:["Core.data.Model","String","Number"],description:"<p>Record id (or a record)</p>"}],scope:"inner",category:"Rows",returns:{type:"Grid.row.Row",description:"<p>Found Row or null if record not rendered</p>"}},{name:"getRecordCoords",access:"private",description:"<p>Returns top and bottom for rendered row or estimated coordinates for unrendered.</p>",parameters:[{name:"recordOrId",type:["Core.data.Model","string","Number"],description:"<p>Record or record id</p>"}],scope:"inner",category:"Calculations",returns:{type:"Object",description:"<p>Record bounds with format { top, height, bottom }</p>"}},{name:"getRow",access:"private",description:"<p>Get the Row at specified index. &quot;Wraps&quot; index if larger than available rows.</p>",parameters:[{name:"index",type:"Number"}],scope:"inner",category:"Rows",returns:{type:"Grid.row.Row"}},{name:"getRowFor",access:"private",description:"<p>Get a Row for either a record, a record id or an HTMLElement</p>",parameters:[{name:"recordOrId",type:["HTMLElement","Core.data.Model","String","Number"],description:"<p>Record or record id or HTMLElement</p>"}],scope:"inner",category:"Rows",returns:{type:"Grid.row.Row",description:"<p>Found Row or null if record not rendered</p>"}},{name:"getRowFromElement",access:"private",description:"<p>Get a Row from an HTMLElement</p>",parameters:[{name:"element",type:"HTMLElement"}],scope:"inner",category:"Rows",returns:{type:"Grid.row.Row",description:"<p>Found Row or null if record not rendered</p>"}},{name:"bindStore",access:"private",description:"<p>Hooks up data store listeners</p>",scope:"instance",category:"Store"},{name:"onStoreUpdateRecord",access:"private",description:"<p>Rerenders a cell if a record is updated in the store</p>",scope:"instance",category:"Store"},{name:"onStoreAdd",access:"private",description:"<p>Refreshes rows when data is added to the store</p>",scope:"instance",category:"Store"},{name:"onStoreException",access:"private",description:"<p>Responds to exceptions signalled by the store</p>",scope:"instance",category:"Store"},{name:"onStoreDataChange",access:"private",description:"<p>Refreshes rows when data is changed in the store</p>",scope:"instance",category:"Store"},{name:"onStoreRecordIdChange",access:"private",description:"<p>The hook is called when the id of a record has changed.</p>",scope:"instance",category:"Store"},{name:"onStoreBeforeRequest",access:"private",description:"<p>Shows a load mask while the connected store is loading</p>",scope:"instance",category:"Store"},{name:"onStoreAfterRequest",access:"private",description:"<p>Hides load mask after a load request ends either in success or failure</p>",scope:"instance",category:"Store"},{name:"onStoreRemove",access:"private",description:"<p>Animates removal of record.</p>",scope:"instance",category:"Store"},{name:"onStoreRemoveAll",access:"private",description:"<p>Rerenders grid when all records have been removed</p>",scope:"instance",category:"Store"},{name:"getHeaderMenuItems",access:"internal",description:"<p>Populates the header context menu. Chained in features to add menu items.</p>",parameters:[{name:"column",description:"<p>Column for which the menu will be shown</p>"},{name:"items",description:"<p>Array of menu items, add to it and return it</p>"}],scope:"instance",category:"Menu items"},{name:"getCellMenuItems",access:"internal",description:"<p>Populates the cell context menu. Chained in features to add menu items.</p>",parameters:[{name:"column",type:"Grid.column.Column",description:"<p>Column for which the menu will be shown</p>"},{name:"record",type:"Core.data.Model",description:"<p>Record (row) for which the menu will be shown</p>"},{name:"items",type:"Array.<Object>",description:"<p>Array of menu items, add to it and return it</p>"}],scope:"instance",category:"Menu items"},{name:"getCell",description:"<p>Returns a cell if rendered.</p>",parameters:[{name:"cellContext",type:"Object",description:"<p>{ id: rowId, columnId: columnId [,column: column number, field: column field] }</p>"},{name:"cellContext.row",type:"Number",description:"<p>The row index of the row to access. Exclusive with <code>id</code> and 'record'.</p>",optional:true,isSubParam:true},{name:"cellContext.id",type:["String","Number"],description:"<p>The record id of the row to access. Exclusive with <code>row</code> and 'record'.</p>",optional:true,isSubParam:true},{name:"cellContext.record",type:"Core.data.Model",description:"<p>The record of the row to access. Exclusive with <code>id</code> and 'row'.</p>",optional:true,isSubParam:true},{name:"cellContext.column",type:"Number",description:"<p>The column instance or the index of the cell to access.  Exclusive with <code>columnId</code>.</p>",optional:true,isSubParam:true},{name:"cellContext.columnId",type:["String","Number"],description:"<p>The column id of the column to access. Exclusive with <code>column</code>.</p>",optional:true,isSubParam:true},{name:"cellContext.field",type:"String",description:"<p>The field of the column to access. Exclusive with <code>column</code>.</p>",optional:true,isSubParam:true}],scope:"instance",category:"Getters",returns:{type:"HTMLElement"}},{name:"getHeaderElement",description:"<p>Returns the header element for the column</p>",parameters:[{name:"columnId",type:["String","Number","Grid.column.Column"],description:"<p>or Column instance</p>"}],scope:"instance",category:"Getters",returns:{type:"HTMLElement",description:"<p>Header element</p>"}},{name:"getRecordFromElement",description:"<p>Searches up from the specified element for a grid row and returns the record associated with that row.</p>",parameters:[{name:"element",type:"HTMLElement",description:"<p>Element somewhere within a row or the row container element</p>"}],scope:"instance",category:"Getters",returns:{type:"Core.data.Model",description:"<p>Record for the row</p>"}},{name:"getColumnFromElement",description:"<p>Searches up from specified element for a grid cell or an header and returns the column which the cell belongs to</p>",parameters:[{name:"element",type:"HTMLElement",description:"<p>Element somewhere in a cell</p>"}],scope:"instance",category:"Getters",returns:{type:"Grid.column.Column",description:"<p>Column to which the cell belongs</p>"}},{name:"fixSizes",access:"private",description:"<p>Sets widths and heights for headers, rows and other parts of the grid as needed</p>",scope:"instance",category:"Width & height"},{name:"refreshTotalHeight",access:"private",description:"<p>Makes height of vertical scroller match estimated total height of grid. Called when scrolling vertically and\nwhen showing/hiding rows.</p>",parameters:[{name:"height",type:"Number",description:"<p>Total height supplied by RowManager</p>",optional:true},{name:"immediate",type:"Boolean",description:"<p>Flag indicating if buffered element sizing should be bypassed</p>",default:false,optional:true}],scope:"instance",category:"Width & height"},{name:"enableScrollingCloseToEdges",description:"<p>Activates automatic scrolling of a subGrid when mouse is moved closed to the edges</p>",parameters:[{name:"subGrid",type:["Grid.view.SubGrid","String"],description:"<p>A subGrid instance or its region name</p>"}],scope:"instance"},{name:"disableScrollingCloseToEdges",description:"<p>Deactivates automatic scrolling of a subGrid when mouse is moved closed to the edges</p>",parameters:[{name:"subGrid",type:["Grid.view.SubGrid","String"],description:"<p>A subGrid instance or its region name</p>"}],scope:"instance"},{name:"onRowManagerRequestScrollChange",access:"private",description:"<p>Responds to request from RowManager to adjust scroll position. Happens when jumping to a scroll position with\nvariable row height.</p>",parameters:[{name:"bottomMostRowY",type:"Number"}],scope:"instance",category:"Scrolling"},{name:"initScroll",access:"private",description:"<p>Scroll syncing for normal headers &amp; grid + triggers virtual rendering for vertical scroll</p>",scope:"instance",fires:["event:scroll"],category:"Scrolling"},{name:"scrollRowIntoView",description:"<p>Scrolls a row into view. If row isn't rendered it tries to calculate position</p>",parameters:[{name:"recordOrId",type:["Core.data.Model","String","Number"],description:"<p>Record or record id</p>"},{name:"options",type:"Object",description:"<p>How to scroll.</p>",optional:true},{name:"options.column",type:"String",description:"<p>Field name or ID of the column, or the Column instance to scroll to.</p>",optional:true,isSubParam:true},{name:"options.block",type:"String",description:"<p>How far to scroll the element: <code>start/end/center/nearest</code>.</p>",optional:true,isSubParam:true},{name:"options.edgeOffset",type:"Number",description:"<p>edgeOffset A margin around the element or rectangle to bring into view.</p>",optional:true,isSubParam:true},{name:"options.animate",type:["Boolean","Number"],description:"<p>Set to <code>true</code> to animate the scroll, or the number of milliseconds to animate over.</p>",optional:true,isSubParam:true},{name:"options.highlight",type:"Boolean",description:"<p>Set to <code>true</code> to highlight the element when it is in view.</p>",optional:true,isSubParam:true}],scope:"instance",category:"Scrolling",returns:{type:"Promise",description:"<p>A promise which resolves when the specified row has been scrolled into view.</p>"},async:true},{name:"scrollColumnIntoView",description:"<p>Scrolls a column into view (if it is not already)</p>",parameters:[{name:"column",type:["Grid.column.Column","String","Number"],description:"<p>Column name (data) or column index or actual column object.</p>"},{name:"options",type:"Object",description:"<p>How to scroll.</p>",optional:true},{name:"options.block",type:"String",description:"<p>How far to scroll the element: <code>start/end/center/nearest</code>.</p>",optional:true,isSubParam:true},{name:"options.edgeOffset",type:"Number",description:"<p>edgeOffset A margin around the element or rectangle to bring into view.</p>",optional:true,isSubParam:true},{name:"options.animate",type:["Object","Boolean","Number"],description:"<p>Set to <code>true</code> to animate the scroll by 300ms,\nor the number of milliseconds to animate over, or an animation config object.</p>",optional:true,isSubParam:true},{name:"options.animate.duration",type:"Number",description:"<p>The number of milliseconds to animate over.</p>",optional:true,isSubParam:true},{name:"options.animate.easing",type:"String",description:"<p>The name of an easing function.</p>",optional:true,isSubParam:true},{name:"options.highlight",type:"Boolean",description:"<p>Set to <code>true</code> to highlight the element when it is in view.</p>",optional:true,isSubParam:true},{name:"options.focus",type:"Boolean",description:"<p>Set to <code>true</code> to focus the element when it is in view.</p>",optional:true,isSubParam:true}],scope:"instance",category:"Scrolling",returns:{type:"Promise",description:"<p>If the column exists, a promise which is resolved when the column header element has been scrolled into view.</p>"},async:true},{name:"scrollCellIntoView",description:"<p>Scrolls a cell into view (if it is not already)</p>",parameters:[{name:"cellContext",type:"Object",description:"<p>Cell selector { id: recordId, column: 'columnName' }</p>"}],scope:"instance",category:"Scrolling"},{name:"scrollToBottom",description:"<p>Scroll all the way down</p>",scope:"instance",category:"Scrolling",returns:{type:"Promise",description:"<p>A promise which resolves when the bottom is reached.</p>"},async:true},{name:"scrollToTop",description:"<p>Scroll all the way up</p>",scope:"instance",category:"Scrolling",returns:{type:"Promise",description:"<p>A promise which resolves when the top is reached.</p>"},async:true},{name:"storeScroll",description:"<p>Store scroll state (scrollTop for entire grid and scrollLeft per sub grid)</p>",scope:"instance",category:"Scrolling",returns:{type:"Object"}},{name:"restoreScroll",description:"<p>Restore scroll state. If state is not specified, restores the last stored state.</p>",parameters:[{name:"state",description:"<p>Scroll state, optional</p>"}],scope:"instance",category:"Scrolling"},{name:"measureRowHeight",access:"private",description:"<p>Creates a fake subgrid with one row and mesaures its height. Result is used as rowHeight.</p>",scope:"instance"},{name:"onThemeChange",access:"private",description:"<p>Handler for global theme change event (triggered by shared.js). Remeasures row height.</p>",scope:"instance"},{name:"refreshRows",description:"<p>Triggers a render of records to all row elements. Call after changing order, grouping etc to reflect changes\nvisually. Preserves scroll.</p>",scope:"instance",category:"Rendering"},{name:"refreshColumn",description:"<p>Triggers a render of all the cells in a column.</p>",parameters:[{name:"column",type:"Grid.column.Column"}],scope:"instance",category:"Rendering"},{name:"refreshVirtualScrollbars",access:"private",description:"<p>Recalculates virtual scrollbars widths and scrollWidth</p>",scope:"instance"},{name:"renderHeader",access:"private",description:"<p>Called after headers have been rendered to the headerContainer.\nThis does not do anything, it's just for Features to hook in to.</p>",parameters:[{name:"headerContainer",type:"HTMLElement",description:"<p>DOM element which contains the headers.</p>"},{name:"element",type:"HTMLElement",description:"<p>Grid element</p>"}],scope:"instance",category:"Rendering"},{name:"renderFooter",access:"private",description:"<p>Called after footers have been rendered to the footerContainer.\nThis does not do anything, it's just for Features to hook in to.</p>",parameters:[{name:"footerContainer",type:"HTMLElement",description:"<p>DOM element which contains the footers.</p>"},{name:"element",type:"HTMLElement",description:"<p>Grid element</p>"}],scope:"instance",category:"Rendering"},{name:"renderRows",description:"<p>Rerenders all grid rows, completely replacing all row elements with new ones</p>",scope:"instance",category:"Rendering"},{name:"renderContents",description:"<p>Rerenders the grids rows, headers and footers, completely replacing all row elements with new ones</p>",scope:"instance",category:"Rendering"},{name:"maskBody",description:"<p>Show a load mask with a spinner and the specified message. When using an AjaxStore masking and unmasking is\nhandled automatically, but if you are loading data in other ways you can call this function manually when your\nload starts.</p>\n<pre class=\"prettyprint source\"><code>myLoadFunction() {\n  // Show mask before initiating loading\n  grid.maskBody('Loading data');\n  // Your custom loading code\n  load.then(() => {\n     // Hide the mask when loading is finished\n     grid.unmaskBody();\n  });\n}\n</code></pre>",parameters:[{name:"loadMask",type:"String",description:"<p>Message to show next to the spinner</p>"}],scope:"instance",returns:{type:"Core.widget.Mask"}},{name:"unmaskBody",description:"<p>Hide the load mask.</p>",scope:"instance"}],events:[{name:"beforeToggleNode",description:'<p><em>Only when the <a href="#Grid/feature/Tree">Grid.feature.Tree</a> feature is enabled</em>.</p>\n<p>Fired before a record toggles its collapsed state.',parameters:[{name:"record",type:"Core.data.Model",description:"<p>The record being toggled.</p>"},{name:"collapse",type:"Boolean",description:"<p><code>true</code> if the node is being collapsed.</p>"}]},{name:"collapseNode",description:'<p><em>Only when the <a href="#Grid/feature/Tree">Grid.feature.Tree</a> feature is enabled</em>.</p>\n<p>Fired after a record has been collapsed.',parameters:[{name:"record",type:"Core.data.Model",description:"<p>The record which has been collapsed.</p>"}]},{name:"expandNode",description:'<p><em>Only when the <a href="#Grid/feature/Tree">Grid.feature.Tree</a> feature is enabled</em>.</p>\n<p>Fired after a record has been expanded.',parameters:[{name:"record",type:"Core.data.Model",description:"<p>The record which has been expanded.</p>"}]},{name:"toggleNode",description:'<p><em>Only when the <a href="#Grid/feature/Tree">Grid.feature.Tree</a> feature is enabled</em>.</p>\n<p>Fired after a record toggles its collapsed state.',parameters:[{name:"record",type:"Core.data.Model",description:"<p>The record being toggled.</p>"},{name:"collapse",type:"Boolean",description:"<p><code>true</code> if the node is being collapsed.</p>"}]},{name:"readOnly",description:"<p>Fired when grids read only state is toggled</p>",parameters:[{name:"readOnly",type:"Boolean",description:"<p>Read only or not</p>"}]},{name:"scroll",description:"<p>Grid has scrolled vertically</p>",parameters:[{name:"grid",type:"Grid.view.Grid"},{name:"scrollTop",type:"Number"}]},{name:"beforeRenderRows",description:"<p>Grid rows are about to be rendered</p>",parameters:[{name:"source",type:"Grid.view.Grid",description:"<p>This grid.</p>"}]},{name:"renderRows",description:"<p>Grid rows have been rendered</p>",parameters:[{name:"source",type:"Grid.view.Grid",description:"<p>This grid.</p>"}]}]},{name:"module:Grid/view/Header",classDescription:'<p>The Grid header, which contains simple columns but also allows grouped columns. One instance is created and used per SubGrid\nautomatically, you should not need to instantiate this class manually. See <a href="#Grid/column/Column">Grid.column.Column</a> for information about\ncolumn configuration.</p>',extends:["Grid/view/Bar"],access:"internal",constructor:{name:"constructor"},filename:"Header.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/view",lineno:19,externalExamples:["grid/Header.js"],functions:[{name:"contentTemplate",access:"private",description:'<p>Header template, recursive template for column headers.\nStyle not included because of CSP. Widths are fixed up in\n<a href="#Grid/view/Header#function-fixHeaderWidths">fixHeaderWidths</a></p>',scope:"instance"},{name:"fixHeaderWidths",access:"private",description:"<p>Fix header widths (flex or fixed width) after rendering. Not a part of template any longer because of CSP</p>",scope:"instance"},{name:"initDepths",access:"private",description:"<p>Depths are used for styling of grouped headers. Sets them on meta.</p>",scope:"instance"},{name:"getHeader",description:"<p>Get the header cell element for the specified column.</p>",parameters:[{name:"columnId",type:"String",description:"<p>Column id</p>"}],scope:"instance",returns:{type:"HTMLElement",description:"<p>Header cell element</p>"}}]},{name:"module:Grid/view/SubGrid",classDescription:"<p>A SubGrid is a part of the grid (it has at least one and normally no more than two, called locked and normal). It\nhas its own header, which holds the columns to display rows for in the SubGrid. SubGrids are created by Grid, you\nshould not need to create instances directly.</p>\n<p>If not configured with a width or flex, the SubGrid will be sized to fit its columns. In this case, if all columns\nhave a fixed width (not using flex) then toggling columns will also affect the width of the SubGrid.</p>",extends:["Core/widget/Widget"],constructor:{name:"constructor"},filename:"SubGrid.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/view",lineno:25,configs:[{name:"region",description:"<p>Region (name) for this SubGrid</p>",type:"String",scope:"inner"},{name:"columns",description:"<p>Column store, a store containing the columns for this SubGrid</p>",type:"Grid.data.ColumnStore",scope:"inner"},{name:"collapsed",description:'<p>Set <code>true</code> to start subgrid collapsed. To operate collapsed state on subgrid use\n<a href="#Grid/view/SubGrid#function-collapse">collapse</a>/<a href="#Grid/view/SubGrid#function-expand">expand</a> methods.</p>',type:"Boolean",scope:"inner",defaultvalue:"false"},{name:"sealedColumns",access:"private",description:"<p>Set <code>true</code> to disable moving columns into or out of this SubGrid.</p>",type:"Boolean",scope:"inner",defaultvalue:"false"}],functions:[{name:"construct",access:"private",description:"<p>SubGrid constructor</p>",parameters:[{name:"config"}],scope:"instance"},{name:"initHeader",access:"private",description:"<p>Creates a header for the SubGrid</p>",scope:"instance"},{name:"initElements",access:"private",description:"<p>Initializes elements for the SubGrid and its header and footer (if any)</p>",scope:"instance"},{name:"toggleSplitterCls",access:"private",description:"<p>Toggle (add/remove) class for splitters</p>",parameters:[{name:"cls",type:"String",description:"<p>class name</p>"},{name:"add",type:"Boolean",description:"<p>actions. Set to <code>true</code> to add class, <code>false</code> to remove</p>",default:true,optional:true}],scope:"instance"},{name:"fixCellWidths",access:"private",description:"<p>Sets cell widths. Cannot be done in template because of CSP</p>",scope:"instance"},{name:"fixWidths",access:"private",description:"<p>Sets header width and scroller width (if needed, depending on if using flex). Might also change the subgrids\nwidth, if it uses a width calculated from its columns.</p>",scope:"instance"},{name:"onInternalResize",access:"private",description:"<p>Called when grid changes size. SubGrid determines if it has changed size and triggers scroll (for virtual\nrendering in cells to work when resizing etc.)</p>",scope:"instance"},{name:"syncParallelSplitters",access:"private",description:"<p>Keeps the parallel splitters in the header, footer and fake scroller synced in terms\nof being collapsed or not.</p>",scope:"instance"},{name:"updateHasFlex",access:"internal",description:"<p>Called when updating column widths to apply 'b-has-flex' which is used when fillLastColumn is configured.</p>",scope:"instance"},{name:"refreshFakeScroll",access:"private",description:"<p>Fixes widths of fake scrollers</p>",scope:"instance"},{name:"initScroll",access:"private",description:"<p>Init scroll syncing for header and footer (if available).</p>",scope:"instance"},{name:"syncScrollingPartners",access:"internal",description:"<p>This syncs the horizontal scroll position of the header and the footer with\nthe horizontal scroll position of the grid. Usually, this will be called automatically\nwhen the grid scrolls. In some cases, such as a refresh caused by column changes\nit will need to be called from elsewhere.</p>",scope:"instance"},{name:"scrollColumnIntoView",description:"<p>Scrolls a column into view (if it is not already). Called by Grid#scrollColumnIntoView, use it instead to not\nhave to care about which SubGrid contains a column.</p>",parameters:[{name:"column",type:["Grid.column.Column","String","Number"],description:"<p>Column name (data) or column index or actual column object.</p>"},{name:"options",type:"Object",description:"<p>How to scroll.</p>",optional:true},{name:"options.block",type:"String",description:"<p>How far to scroll the element: <code>start/end/center/nearest</code>.</p>",optional:true,isSubParam:true},{name:"options.edgeOffset",type:"Number",description:"<p>edgeOffset A margin around the element or rectangle to bring into view.</p>",optional:true,isSubParam:true},{name:"options.animate",type:["Object","Boolean","Number"],description:"<p>Set to <code>true</code> to animate the scroll by 300ms,\nor the number of milliseconds to animate over, or an animation config object.</p>",optional:true,isSubParam:true},{name:"options.animate.duration",type:"Number",description:"<p>The number of milliseconds to animate over.</p>",optional:true,isSubParam:true},{name:"options.animate.easing",type:"String",description:"<p>The name of an easing function.</p>",optional:true,isSubParam:true},{name:"options.highlight",type:"Boolean",description:"<p>Set to <code>true</code> to highlight the element when it is in view.</p>",optional:true,isSubParam:true},{name:"options.focus",type:"Boolean",description:"<p>Set to <code>true</code> to focus the element when it is in view.</p>",optional:true,isSubParam:true}],scope:"instance",returns:{type:"Promise",description:"<p>If the column exists, a promise which is resolved when the column header element has been scrolled into view.</p>"},async:true},{name:"onAddRow",access:"private",description:"<p>Creates elements for the new rows when RowManager has determined that more rows are needed</p>",scope:"instance"},{name:"clearRows",access:"private",description:"<p>Removes all row elements from the subgrids body and empties cache</p>",scope:"instance"},{name:"collapse",description:"<p>Collapses subgrid. If collapsing subgrid is the only one expanded, next subgrid to the right (or previous) will\nbe expanded.</p>",examples:["let locked = grid.getSubGrid('locked');\nlocked.collapse().then(() => {\n    console.log(locked.collapsed); // Logs 'True'\n});\n\nlet normal = grid.getSubGrid('normal');\nnormal.collapse().then(() => {\n    console.log(locked.collapsed); // Logs 'False'\n    console.log(normal.collapsed); // Logs 'True'\n});"],scope:"instance",returns:{type:"Promise",description:"<p>A Promise which resolves when this SubGrid is fully collapsed.</p>"},async:true},{name:"expand",description:"<p>Expands subgrid.</p>",examples:["grid.getSubGrid('locked').expand().then(() => console.log('locked grid expanded'));"],scope:"instance",returns:{type:"Promise",description:"<p>A Promise which resolves when this SubGrid is fully expanded.</p>"},async:true}],properties:[{name:"width",description:"<p>Get/set SubGrid width, which also sets header and footer width (if available).</p>",scope:"instance",properties:[{type:{names:["Number"]}}]},{name:"flex",description:"<p>Get/set SubGrid flex, which also sets header and footer flex (if available).</p>",scope:"instance",properties:[{type:{names:["Number","String"]}}]},{name:"viewRectangle",description:"<p>Get the &quot;viewport&quot; for the SubGrid as a Rectangle</p>",scope:"instance",readonly:true,properties:[{type:{names:["Core.helper.util.Rectangle"]}}]},{name:"rowElements",description:"<p>Get all row elements for this SubGrid.</p>",scope:"instance",returns:[{type:{names:["Array.<HTMLElement>"]},description:"<p>Row elements</p>"}],readonly:true},{name:"collapsed",description:"<p>Get/set collapsed state</p>",scope:"instance",properties:[{type:{names:["Boolean"]}}]}]},{name:"module:Grid/view/TreeGrid",classDescription:'<p>A TreeGrid, a Tree combined with a Grid. Must be configured with exactly one <a href="#Grid/column/TreeColumn">Grid.column.TreeColumn</a> (<code>type: tree</code>), but can also have an\narbitrary number of other columns. Most features that can be used with Grid also works with TreeGrid, with the\nexception of the Group feature.</p>',extends:["Grid/view/Grid"],constructor:{name:"constructor"},filename:"TreeGrid.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/view",lineno:22,classType:"treegrid",externalExamples:["grid/TreeGrid.js"],configs:[{name:"store",description:"<p>Store that holds records to display in the TreeGrid, or a store config object.\nIf you supply a Store, make sure it is configured with <code>tree : true</code> to handle tree data.\nA store will be created if none is specified</p>",type:["Core.data.Store","Object"],scope:"inner"}],functions:[{name:"toggleCollapse",description:"<p>Collapse an expanded node or expand a collapsed. Optionally forcing a certain state.</p>",parameters:[{name:"idOrRecord",type:["String","Number","Core.data.Model"],description:"<p>Record (the node itself) or id of a node to toggle</p>"},{name:"collapse",type:"Boolean",description:"<p>Force collapse (true) or expand (false)</p>",optional:true},{name:"skipRefresh",type:"Boolean",description:"<p>Set to true to not refresh rows (if calling in batch)</p>",optional:true}],scope:"inner",category:"Feature shortcuts",returns:{type:"Promise"},async:true},{name:"collapse",description:"<p>Collapse a single node.</p>",parameters:[{name:"idOrRecord",type:["String","Number","Core.data.Model"],description:"<p>Record (the node itself) or id of a node to collapse</p>"}],scope:"inner",category:"Feature shortcuts",returns:{type:"Promise"},async:true},{name:"expand",description:"<p>Expand a single node.</p>",parameters:[{name:"idOrRecord",type:["String","Number","Core.data.Model"],description:"<p>Record (the node itself) or id of a node to expand</p>"}],scope:"inner",category:"Feature shortcuts",returns:{type:"Promise"},async:true},{name:"expandTo",description:"<p>Expands parent nodes to make this node &quot;visible&quot;.</p>",parameters:[{name:"idOrRecord",type:["String","Number","Core.data.Model"],description:"<p>Record (the node itself) or id of a node</p>"}],scope:"inner",category:"Feature shortcuts",returns:{type:"Promise"},async:true}],properties:[{name:"store",description:"<p>Get/set the store used by this TreeGrid. Accepts a config or a Store. If assigning an already existing Store,\nit must be configured with <code>tree: true</code></p>",scope:"instance",properties:[{type:{names:["Core.data.Store","Object"]}}]}]},{name:"module:Grid/view/export/ExportDialog",classDescription:"<p>Dialog window which allows to pick export options.</p>\n<pre class=\"prettyprint source\"><code>grid = new Grid({\n    features : {\n        pdfExport : { exportServer : '...' }\n    }\n});\n\ngrid.features.pdfExport.showExportDialog();\n</code></pre>",extends:["Core/widget/Popup"],constructor:{name:"constructor"},filename:"ExportDialog.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/view/export",lineno:30,properties:[{name:"client",description:"<p>Grid instance to build export dialog for</p>",scope:"inner"},{name:"hidePNGMultipageOption",description:"<p>Set to <code>false</code> to allow using PNG + Multipage config in export dialog</p>",scope:"inner"}],events:[{name:"export",description:"<p>Fires when export button is clicked</p>",parameters:[{name:"values",type:"Object",description:'<p>Object containing config for <a href="#Grid/feature/export/PdfExport#function-export">export()</a> method</p>'}]},{name:"cancel",description:"<p>Fires when cancel button is clicked. Popup will hide itself.</p>"}]},{name:"module:Grid/view/mixin/GridElementEvents",description:"<p>Mixin for Grid that handles dom events. Some listeners fire own events but all can be chained by features. None of\nthe functions in this class are indented to be called directly.</p>",mixin:true,constructor:{name:"constructor"},filename:"GridElementEvents.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/view/mixin",lineno:43,configs:[{name:"longPressTime",description:"<p>Time in ms until a longpress is triggered</p>",type:"Number",scope:"inner",defaultvalue:400,category:"Events"}],events:[{name:"cellClick",description:"<p>User clicked in a grid cell</p>",parameters:[{name:"grid",type:"Grid.view.Grid"},{name:"record",type:"Core.data.Model"},{name:"column",type:"Grid.column.Column"},{name:"cellSelector",type:"Object"},{name:"cellElement",type:"HTMLElement"},{name:"target",type:"HTMLElement"},{name:"event",type:"Event"}]},{name:"cellDblClick",description:"<p>User double clicked in a grid cell</p>",parameters:[{name:"grid",type:"Grid.view.Grid"},{name:"record",type:"Core.data.Model"},{name:"column",type:"Grid.column.Column"},{name:"cellSelector",type:"Object"},{name:"cellElement",type:"HTMLElement"},{name:"target",type:"HTMLElement"},{name:"event",type:"Event"}]},{name:"cellContextMenu",description:"<p>User activated contextmenu in a grid cell</p>",parameters:[{name:"grid",type:"Grid.view.Grid"},{name:"record",type:"Core.data.Model"},{name:"column",type:"Grid.column.Column"},{name:"cellSelector",type:"Object"},{name:"cellElement",type:"HTMLElement"},{name:"target",type:"HTMLElement"},{name:"event",type:"Event"}]},{name:"cellMouseOver",description:"<p>User moved moused to a grid cell</p>",parameters:[{name:"grid",type:"Grid.view.Grid"},{name:"record",type:"Core.data.Model"},{name:"column",type:"Grid.column.Column"},{name:"cellSelector",type:"Object"},{name:"cellElement",type:"HTMLElement"},{name:"target",type:"HTMLElement"},{name:"event",type:"Event"}]},{name:"cellMouseOut",description:"<p>User moved moused out of a grid cell</p>",parameters:[{name:"grid",type:"Grid.view.Grid"},{name:"record",type:"Core.data.Model"},{name:"column",type:"Grid.column.Column"},{name:"cellSelector",type:"Object"},{name:"cellElement",type:"HTMLElement"},{name:"target",type:"HTMLElement"},{name:"event",type:"Event"}]},{name:"mouseOver",description:"<p>Mouse moved in over element in grid</p>",parameters:[{name:"event",type:"Event"}]},{name:"mouseOut",description:"<p>Mouse moved out from element in grid</p>",parameters:[{name:"event",type:"Event"}]}],functions:[{name:"initInternalEvents",access:"private",description:"<p>Init listeners for a bunch of dom events. All events are handled by handleEvent().</p>",scope:"instance",category:"Events"},{name:"getEventData",access:"private",description:"<p>This method find the cell location of the passed event. It returns an object describing the cell.</p>",parameters:[{name:"event",type:"Event",description:"<p>A Mouse, Pointer or Touch event targeted at part of the grid.</p>"}],scope:"instance",category:"Events",returns:{type:"Object",description:'<p>An object containing the following properties:</p>\n<ul>\n<li><code>cellElement</code> - The cell element clicked on.</li>\n<li><code>columnId</code> - The <code>id</code> of the column clicked under.</li>\n<li><code>record</code> - The <a href="#Core/data/Model">record</a> clicked on.</li>\n<li><code>id</code> - The <code>id</code> of the <a href="#Core/data/Model">record</a> clicked on.</li>\n</ul>'}},{name:"handleEvent",access:"private",description:"<p>Handles all dom events, routing them to correct functions (touchstart -&gt; onElementTouchStart)</p>",parameters:[{name:"event"}],scope:"instance",category:"Events"},{name:"onElementTouchStart",access:"internal",description:"<p>Touch start, chain this function in features to handle the event.</p>",parameters:[{name:"event"}],scope:"instance",category:"Touch events"},{name:"onElementTouchMove",access:"internal",description:"<p>Touch move, chain this function in features to handle the event.</p>",parameters:[{name:"event"}],scope:"instance",category:"Touch events"},{name:"onElementTouchEnd",access:"internal",description:"<p>Touch end, chain this function in features to handle the event.</p>",parameters:[{name:"event"}],scope:"instance",category:"Touch events"},{name:"onElementMouseDown",access:"internal",description:"<p>Mouse down, chain this function in features to handle the event.</p>",parameters:[{name:"event"}],scope:"instance",category:"Mouse events"},{name:"onElementMouseMove",access:"internal",description:"<p>Mouse move, chain this function in features to handle the event.</p>",parameters:[{name:"event"}],scope:"instance",category:"Mouse events"},{name:"onElementMouseUp",access:"internal",description:"<p>Mouse up, chain this function in features to handle the event.</p>",parameters:[{name:"event"}],scope:"instance",category:"Mouse events"},{name:"onHandleElementClick",access:"internal",description:"<p>Called before <a href=\"#Grid/view/mixin/GridElementEvents#function-onElementClick\">onElementClick</a>.\nFires 'beforeElementClick' event which can return false to cancel further onElementClick actions.</p>",parameters:[{name:"event"}],scope:"instance",fires:["event:beforeElementClick"],category:"Mouse events"},{name:"onElementClick",access:"internal",description:"<p>Click, select cell on click and also fire 'cellClick' event.\nChain this function in features to handle the dom event.</p>",parameters:[{name:"event"}],scope:"instance",fires:["event:cellClick"],category:"Mouse events"},{name:"onElementDblClick",access:"internal",description:"<p>Double click, fires 'cellDblClick' event.\nChain this function in features to handle the dom event.</p>",parameters:[{name:"event",type:"Event"}],scope:"instance",fires:["event:cellDblClick"],category:"Mouse events"},{name:"onElementMouseOver",access:"internal",description:"<p>Mouse over, adds 'hover' class to elements.</p>",parameters:[{name:"event"}],scope:"instance",fires:["event:mouseOver"],category:"Mouse events"},{name:"onElementMouseOut",access:"internal",description:"<p>Mouse out, removes 'hover' class from elements.</p>",parameters:[{name:"event"}],scope:"instance",fires:["event:mouseOut"],category:"Mouse events"},{name:"onElementKeyDown",access:"internal",description:"<p>Key down, handles arrow keys for selection.\nChain this function in features to handle the dom event.</p>",parameters:[{name:"event"}],scope:"instance",category:"Keyboard events"},{name:"onElementKeyPress",access:"internal",description:"<p>Key press, chain this function in features to handle the dom event.</p>",parameters:[{name:"event"}],scope:"instance",category:"Keyboard events"},{name:"onElementKeyUp",access:"internal",description:"<p>Key up, chain this function in features to handle the dom event.</p>",parameters:[{name:"event"}],scope:"instance",category:"Keyboard events"},{name:"onElementContextMenu",access:"internal",description:"<p>Context menu, chain this function in features to handle the dom event.\nIn most cases, include ContextMenu feature instead.</p>",parameters:[{name:"event"}],scope:"instance",category:"Other events"},{name:"onInternalResize",access:"internal",description:"<p>Overrides empty base function in View, called when view is resized.</p>",parameters:[{name:"element"},{name:"width"},{name:"height"},{name:"oldWidth"},{name:"oldHeight"}],scope:"instance",fires:["event:resize"],category:"Other events"}]},{name:"module:Grid/view/mixin/GridFeatures",description:'<p>Mixin for Grid that handles features. Features are plugins that add functionality to the grid. Feature classes should\nregister with Grid by calling <a href="#Grid/feature/GridFeatureManager#function-registerFeature-static">registerFeature</a>. This\nenables features to be specified and configured in grid\nconfig.</p>\n<p>Define which features to use:</p>\n<pre class="prettyprint source lang-javascript"><code>// specify which features to use (note that some features are used by default)\nconst grid = new Grid({\n  features: {\n     sort: \'name\',\n     search: true\n  }\n});\n</code></pre>\n<p>Access a feature in use:</p>\n<pre class="prettyprint source lang-javascript"><code>grid.features.search.search(\'cat\');\n</code></pre>\n<p>Basic example of implementing a feature:</p>\n<pre class="prettyprint source lang-javascript"><code>class MyFeature extends InstancePlugin {\n\n}\n\nGridFeatures.registerFeature(MyFeature);\n\n// using the feature\nconst grid = new Grid({\n  features: {\n    myFeature: true\n  }\n});\n</code></pre>',mixin:true,constructor:{name:"constructor"},filename:"GridFeatures.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/view/mixin",lineno:59,configs:[{name:"features",description:"<p>Specify which features to use on the grid. Most features accepts a boolean, some also accepts a config object.\nPlease note that if you are not using the bundles you might need to import the features you want to use.</p>\n<pre class=\"prettyprint source lang-javascript\"><code>const grid = new Grid({\n    features : {\n        stripe : true,   // Enable stripe feature\n        sort   : 'name', // Configure sort feature\n        group  : false   // Disable group feature\n    }\n}\n</code></pre>",type:"Object",scope:"inner",category:"Common"}],properties:[{name:"features",description:'<p>Map of the features available on the grid. Use it to access them on your grid object</p>\n<pre class="prettyprint source lang-javascript"><code>grid.features.group.expandAll();\n</code></pre>',scope:"instance",readonly:true,category:"Common",typings:"any",properties:[{type:{names:["Object"]}}]}],functions:[{name:"hasFeature",description:"<p>Check if a feature is included</p>",parameters:[{name:"name",type:"String",description:"<p>Feature name, as registered with <code>GridFeatureManager.registerFeature()</code></p>"}],scope:"instance",category:"Misc",returns:{type:"Boolean"}}]},{name:"module:Grid/view/mixin/GridNavigation",description:"<p>Mixin for Grid that handles cell to cell navigation.</p>",mixin:true,constructor:{name:"constructor"},filename:"GridNavigation.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/view/mixin",lineno:23,events:[{name:"navigate",description:"<p>User navigated to a grid cell</p>",parameters:[{name:"grid",type:"Grid.view.Grid"},{name:"last",type:"Object",description:"<p>focused location</p>"},{name:"location",type:"Object",description:"<p>focus moved to</p>"},{name:"event",type:"Event",description:"<p>The UI event which caused navigation.</p>",optional:true}]}],properties:[{name:"focusedCell",description:'<p>Cell selector for focused cell, set to focus a cell or use <a href="#Grid/view/mixin/GridNavigation#function-focusCell">focusCell</a>.</p>',scope:"instance",properties:[{type:{names:["Object"]}}]},{name:"isActionableLocation",description:"<p>This property is <code>true</code> if an element <em>within</em> a cell is focused.</p>",scope:"instance",readonly:true,properties:[{type:{names:["Boolean"]}}]},{name:"cellCSSSelector",description:"<p>CSS selector for currently focused cell. Format is &quot;[data-index=index] [data-column-id=columnId]&quot;.</p>",scope:"instance",readonly:true,properties:[{type:{names:["String"]}}]}],functions:[{name:"onGridElementFocus",access:"internal",description:"<p>Grid element focus, selects first row and cell when grid is focused if none is selected (otherwise user cannot\nsee that grid is focused).\nChain this function it features to handle the dom event.</p>",parameters:[{name:"event"}],scope:"instance",category:"Other events"},{name:"isFocused",description:"<p>Checks whether or not a cell is focused.</p>",parameters:[{name:"cellSelector",type:["Object","string","Number"],description:"<p>Cell selector { id: x, columnId: xx } or row id</p>"}],scope:"instance",returns:{type:"Boolean",description:"<p>true if cell or row is focused, otherwise false</p>"}},{name:"focusCell",description:"<p>Navigates to a cell and/or its row (depending on selectionMode)</p>",parameters:[{name:"cellSelector",type:"Object",description:"<p>{ id: rowId, columnId: 'columnId' }</p>"},{name:"options",type:"Object",description:'<p>Modifier options for how to deal with focusing the cell. These\nare used as the <a href="#Core/helper/util/Scroller#function-scrollTo">scrollTo</a> options.</p>'},{name:"options.doSelect",type:"Boolean",description:"<p>Optionally pass <code>false</code> to not continue to selection.</p>",default:true,optional:true,isSubParam:true},{name:"options.event",type:"Event",description:"<p>Optionally pass the UI event which instigated the focus request.</p>",optional:true,isSubParam:true},{name:"options.scroll",type:["Object","boolean"],description:"<p>Pass <code>false</code> to not scroll the cell into view, or a\nscroll options object to affact the scroll.</p>",default:true,optional:true,isSubParam:true}],scope:"instance",fires:["event:navigate"],returns:{type:"Object",description:"<p>Cell selector</p>"}},{name:"internalNextPrevCell",access:"private",description:"<p>Selects the cell before or after currently focused cell.</p>",parameters:[{name:"next",description:"<p>Specify true to select the next cell, false to select the previous</p>",default:true},{name:"event",type:"Event",description:"<p>Optionally, the UI event which caused navigation.</p>",optional:true}],scope:"instance",returns:{type:"Object",description:"<p>Used cell selector</p>"}},{name:"navigateRight",description:"<p>Select the cell after the currently focused one.</p>",parameters:[{name:"event",type:"Event",description:"<p>Optionally, the UI event which caused navigation.</p>",optional:true}],scope:"instance",returns:{type:"Object",description:"<p>Cell selector</p>"}},{name:"navigateLeft",description:"<p>Select the cell before the currently focused one.</p>",parameters:[{name:"event",type:"Event",description:"<p>Optionally, the UI event which caused navigation.</p>",optional:true}],scope:"instance",returns:{type:"Object",description:"<p>Cell selector</p>"}},{name:"internalNextPrevRow",access:"private",description:"<p>Selects the next or previous record in relation to the current selection. Scrolls into view if outside.</p>",parameters:[{name:"next",description:"<p>Next record (true) or previous (false)</p>"},{name:"skipSpecialRows",type:"Boolean",description:"<p>True to not return specialRows like headers</p>",default:true},{name:"event",type:"Event",description:"<p>Optionally, the UI event which caused navigation.</p>",optional:true}],scope:"instance",returns:{type:["Object","Boolean"],description:"<p>Selection context for the focused row (&amp; cell) or false if no selection was made</p>"}},{name:"navigateDown",description:"<p>Navigates to the cell below the currently focused cell</p>",parameters:[{name:"event",type:"Event",description:"<p>Optionally, the UI event which caused navigation.</p>",optional:true}],scope:"instance",returns:{type:"Object",description:"<p>Selector for focused row (&amp; cell)</p>"}},{name:"navigateUp",description:"<p>Navigates to the cell above the currently focused cell</p>",parameters:[{name:"event",type:"Event",description:"<p>Optionally, the UI event which caused navigation.</p>",optional:true}],scope:"instance",returns:{type:"Object",description:"<p>Selector for focused row (&amp; cell)</p>"}}]},{name:"module:Grid/view/mixin/GridResponsive",description:"<p>Simplifies making grid responsive. Supply levels as <a href=\"#Grid/view/mixin/GridResponsive#config-responsiveLevels\">responsiveLevels</a> config, default levels are:</p>\n<dl>\n<dt>small <dd>< 400px,\n<dt>medium <dd>< 600px\n<dt>large <dd>> 600px\n</dl>\n<p>Columns can define configs per level to be resized etc:</p>\n<pre class=\"prettyprint source\"><code>let grid = new Grid({\n  responsiveLevels: {\n    small: 300,\n    medium: 400,\n    large: '*' // everything above 400\n  },\n\n  columns: [\n    {\n      field: 'name',\n      text: 'Name',\n      responsiveLevels: {\n        small: { hidden: true },\n        '*': { hidden: false } // all other levels\n      }\n    },\n    { field: 'xx', ... }\n  ]\n});\n</code></pre>\n<p>It is also possible to give a <a href=\"#Grid/view/mixin/GridState\">Grid state</a> object instead of a level width, but in that\ncase the object must contain a <code>levelWidth</code> property:</p>\n<pre class=\"prettyprint source\"><code>let grid = new Grid({\n  responsiveLevels: {\n    small: {\n      // Width is required\n      levelWidth : 400,\n      // Other configs are optional, see GridState for available options\n      rowHeight  : 30\n    },\n    medium : {\n      levelWidth : 600,\n      rowHeight  : 40\n    },\n    large: {\n      levelWidth : '*', // everything above 300\n      rowHeight  : 45\n    }\n  }\n});\n</code></pre>",mixin:true,constructor:{name:"constructor"},filename:"GridResponsive.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/view/mixin",lineno:66,demo:{product:"grid",demo:"responsive"},externalExamples:["grid/Responsive.js"],configs:[{name:"responsiveLevels",description:"<p>&quot;Break points&quot; for which responsive config to use for columns and css.</p>",type:"Object",scope:"inner",defaultvalue:"<code>{ small : 400, medium : 600, large : '*' }</code>",category:"Misc"}],functions:[{name:"getClosestBiggerLevel",access:"private",description:"<p>Find closes bigger level, aka level we want to use.</p>",scope:"instance",category:"Misc"},{name:"updateResponsive",access:"private",description:"<p>Check if resize lead to a new responsive level and take appropriate actions</p>",parameters:[{name:"width"},{name:"oldWidth"}],scope:"instance",fires:["event:responsive"],category:"Misc"}],properties:[{name:"responsiveLevel",description:"<p>Get currently used responsive level (as string)</p>",scope:"instance",returns:[{type:{names:["String"]}}],readonly:true,category:"Misc"}],events:[{name:"responsive",description:"<p>Grid resize lead to a new responsive level being applied</p>",parameters:[{name:"grid",type:"Grid.view.Grid",description:"<p>Grid that was resized</p>"},{name:"level",type:"String",description:"<p>New responsive level (small, large, etc)</p>"},{name:"width",type:"Number",description:"<p>New width in px</p>"},{name:"oldLevel",type:"String",description:"<p>Old responsive level</p>"},{name:"oldWidth",type:"Number",description:"<p>Old width in px</p>"}]}]},{name:"module:Grid/view/mixin/GridSelection",description:'<p>A mixin for Grid that handles row and cell selection. See <a href="#Grid/view/mixin/GridSelection#config-selectionMode">selectionMode</a> for details on how to control what should be selected (rows or cells)</p>',mixin:true,examples:["// select a row\ngrid.selectedRow = 7;\n\n// select a cell\ngrid.selectedCell = { id: 5, columnId: 'column1' }\n\n// select a record\ngrid.selectedRecord = grid.store.last;\n\n// select multiple records by ids\ngrid.selectedRecords = [1, 2, 4, 6]"],constructor:{name:"constructor"},filename:"GridSelection.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/view/mixin",lineno:38,configs:[{name:"selectionMode",description:"<p>The selection settings, where you can set these boolean flags to control what is selected. Options below:</p>",type:"Object",scope:"inner",category:"Selection",parameters:[{name:"selectionMode.row",type:"Boolean",description:"<p>select rows</p>",isSubParam:true},{name:"selectionMode.cell",type:"Boolean",description:"<p>select cells</p>",isSubParam:true},{name:"selectionMode.rowCheckboxSelection",type:"Boolean",description:"<p>select rows only when clicking in the checkbox column</p>",isSubParam:true},{name:"selectionMode.multiSelect",type:"Boolean",description:"<p>Allow multiple selection</p>",isSubParam:true},{name:"selectionMode.checkbox",type:"Boolean",description:"<p>true to add a checkbox selection column to the grid</p>",isSubParam:true},{name:"selectionMode.showCheckAll",type:"Boolean",description:"<p>true to add a checkbox to the selection column header to select/delselect all rows</p>",isSubParam:true}]}],functions:[{name:"onStoreRecordIdChange",access:"private",description:"<p>Triggered from Grid view when the id of a record has changed.\nUpdate the collection indices.</p>",scope:"instance",category:"Selection"},{name:"onSelectedRecordCollectionChange",access:"private",description:"<p>Responds to mutations of the underlying storage Collection</p>",parameters:[{name:"event",type:"Object"}],scope:"instance"},{name:"spliceSelectedRecords",description:"<p>Removes and adds records to/from the selection at the same time. Analogous\nto the <code>Array</code> <code>splice</code> method.</p>\n<p>Note that if items that are specified for removal are also in the <code>toAdd</code> array,\nthen those items are <em>not</em> removed then appended. They remain in the same position\nrelative to all remaining items.</p>",parameters:[{name:"index",type:"Number",description:"<p>Index at which to remove a block of items. Only valid if the\nsecond, <code>toRemove</code> argument is a number.</p>"},{name:"toRemove",type:["Array.<Object>","Number"],description:"<p>Either the number of items to remove starting\nat the passed <code>index</code>, or an array of items to remove (If an array is passed, the <code>index</code> is ignored).</p>"},{name:"toAdd",type:["Array.<Object>","Object"],description:"<p>An item, or an array of items to add.</p>"}],scope:"instance"},{name:"isSelected",description:"<p>Checks whether or not a cell or row is selected.</p>",parameters:[{name:"cellSelectorOrId",type:["Object","string","Number","Core.data.Model"],description:"<p>Cell selector { id: x, column: xx } or row id, or record</p>"}],scope:"instance",category:"Selection",returns:{type:"Boolean",description:"<p>true if cell or row is selected, otherwise false</p>"}},{name:"isSelectable",description:"<p>Checks whether or not a cell or row can be selected.</p>",parameters:[{name:"recordCellOrId",description:"<p>Record or cell or record id</p>"}],scope:"instance",category:"Selection",returns:{type:"Boolean",description:"<p>true if cell or row cane be selected, otherwise false</p>"}},{name:"selectRow",description:"<p>Selects a row (without selecting a cell).</p>",parameters:[{name:"options",type:"Object"},{name:"(Core.data.Model|String)",description:"<p>options.record Record or record id, specifying null will deselect all</p>",isSubParam:true},{name:"Grid.column.Column|String",type:"Column",description:"<p>The column to scroll into view if <code>scrollIntoView</code> is not specified as <code>false</code>. Defaults to the grid's first column.</p>",optional:true,isSubParam:true},{name:"options.scrollIntoView",type:"Boolean",description:"<p>Specify <code>false</code> to prevent row from being scrolled into view</p>",optional:true,isSubParam:true},{name:"options.addToSelection",type:"Boolean",description:"<p>Specify <code>true</code> to add to selection, defaults to <code>false</code> which replaces</p>",optional:true,isSubParam:true}],scope:"instance",fires:["event:selectionchange"],category:"Selection"},{name:"selectCell",description:"<p>Selects a cell and/or its row (depending on selectionMode)</p>",parameters:[{name:"cellSelector",type:"Object",description:"<p>{ id: rowId, columnId: 'columnId' }</p>"},{name:"scrollIntoView",type:"Boolean",description:"<p>Specify false to prevent row from being scrolled into view</p>",default:false},{name:"addToSelection",type:"Boolean",description:"<p>Specify <code>true</code> to add to selection, defaults to <code>false</code> which replaces</p>",default:false},{name:"silent",type:"Boolean",description:"<p>Specify <code>true</code> to not trigger any events when selecting the cell</p>",default:false}],scope:"instance",fires:["event:selectionchange"],category:"Selection",returns:{type:"Object",description:"<p>Cell selector</p>"}},{name:"selectAll",description:"<p>Selects all rows. If store is filterered, this will merge the selection of all visible rows with any selection made prior to filtering</p>",scope:"instance",category:"Selection"},{name:"deselectAll",description:"<p>Deselects all selected rows and cells. If store is filterered, this will unselect all visible rows only. Any selections made prior to filtering remains.</p>",scope:"instance",category:"Selection"},{name:"deselectRow",description:"<p>Deselect a row</p>",parameters:[{name:"recordOrId",type:["Core.data.Model","String","Number"],description:"<p>Record or an id for a record</p>"}],scope:"instance",category:"Selection"},{name:"deselectCell",description:"<p>Deselect a cell/row, depending on settings in Grid#selectionMode</p>",parameters:[{name:"cellSelector",type:"Object"}],scope:"instance",category:"Selection",returns:{type:"Object",description:"<p>Normalized cell selector</p>"}},{name:"selectRange",description:"<p>Selects rows corresponding to a range of records (from fromId to toId)</p>",parameters:[{name:"fromId",type:["String","Number"]},{name:"toId",type:["String","Number"]}],scope:"instance",category:"Selection"},{name:"onStoreRemove",access:"private",description:"<p>Triggered from Grid view when records get removed from the store.\nDeselects all records which have been removed.</p>",scope:"instance",category:"Selection"},{name:"onStoreDataChange",access:"private",description:"<p>Triggered from Grid view when the store changes. This might happen\nif store events are batched and then resumed.\nDeselects all records which have been removed.</p>",scope:"instance",category:"Selection"},{name:"onStoreRemoveAll",access:"private",description:"<p>Triggered from Grid view when all records get removed from the store.\nDeselects all records.</p>",scope:"instance",category:"Selection"},{name:"handleMouseMultiSelect",access:"private",description:"<p>Handles multi selection using the mouse. Called from GridElementEvents on mousedown in a cell and\nsimultaneously pressing a modifier key.</p>",parameters:[{name:"cellData"},{name:"event"}],scope:"instance",category:"Selection"},{name:"onCellNavigate",access:"private",description:"<p>Triggered from GridNavigation when focus is moved to another cell within the grid. Selects the cell unless\nmodifier keys are pressed, in which case it has already been handled</p>",scope:"instance",category:"Selection"},{name:"triggerChangeEvent",access:"private",description:"<p>Keeps the UI synced with the selectionchange event before firing it out.\nEvent is not fired if the <code>silent</code> parameter is truthy.</p>",parameters:[{name:"selectionChangeEvent",type:"Object",description:"<p>The change event to sync the UI to, and to possibly fire.</p>"},{name:"silent",type:"Boolean",description:"<p>Specify <code>true</code> to not trigger any the passed.</p>"}],scope:"instance",category:"Selection"}],events:[{name:"selectionchange",description:"<p>The selection has been changed.</p>",parameters:[{name:"action",type:"String",description:"<p><code>'select'</code>/<code>'deselect'</code></p>"},{name:"mode",type:"String",description:"<p><code>'row'</code>/<code>'cell'</code></p>"},{name:"source",type:"Grid.view.Grid"},{name:"deselected",type:["Array.<Core.data.Model>","Object"],description:"<p>The records or cells (depending on the <code>mode</code>) deselected in this operation.</p>"},{name:"selected",type:["Array.<Core.data.Model>","Object"],description:"<p>The records or cells (depending on the <code>mode</code>) selected in this operation.</p>"},{name:"selection",type:["Array.<Core.data.Model>","Object"],description:"<p>The records or cells (depending on the <code>mode</code>) in the new selection.</p>"}]}],properties:[{name:"selectedCell",description:'<p>Cell selector for selected cell, set to select a cell or use <a href="#Grid/view/mixin/GridSelection#function-selectCell">selectCell()</a>.</p>',scope:"instance",category:"Selection",properties:[{type:{names:["Object"]}}]},{name:"selectedRecord",description:"<p>The last selected record. Set to select a row or use Grid#selectRow. Set to null to\ndeselect all</p>",scope:"instance",category:"Selection",properties:[{type:{names:["Core.data.Model"]}}]},{name:"selectedRecords",description:'<p>Selected records.\nCan be set as array of ids.</p>\n<pre class="prettyprint source"><code>grid.selectedRecords = [1, 2, 4, 6]\n</code></pre>',scope:"instance",category:"Selection",properties:[{type:{names:["Array.<Core.data.Model>","Array.<Number>"]}}]},{name:"selectedCellCSSSelector",description:"<p>CSS selector for the currently selected cell. Format is &quot;[data-index=index] [data-column-id=column]&quot;.</p>",type:{names:["String"]},scope:"instance",readonly:true,category:"Selection"}]},{name:"module:Grid/view/mixin/GridState",description:'<p>Mixin for Grid that handles state. It serializes the following grid properties:</p>\n<ul>\n<li>rowHeight</li>\n<li>readOnly</li>\n<li>selectedCell</li>\n<li>selectedRecords</li>\n<li>columns (order, widths, visibility)</li>\n<li>store (sorters, groupers, filters)</li>\n<li>scroll position</li>\n</ul>\n<p>See <a href="#Core/mixin/State">Core.mixin.State</a> for more information on state.</p>',mixin:true,constructor:{name:"constructor"},filename:"GridState.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/view/mixin",lineno:33,demo:{product:"grid",demo:"state"},externalExamples:["grid/State.js"],functions:[{name:"getState",access:"private",description:"<p>Get grids current state for serialization. State includes rowHeight, headerHeight, readOnly, selectedCell,\nselectedRecordId, column states and store state.</p>",scope:"instance",returns:{type:"Object",description:"<p>State object to be serialized</p>"}},{name:"applyState",access:"private",description:"<p>Apply previously stored state.</p>",parameters:[{name:"state",type:"Object"}],scope:"instance"}]},{name:"module:Grid/view/mixin/GridSubGrids",description:"<p>Mixin for grid that handles SubGrids. Each SubGrid is scrollable horizontally separately from the other SubGrids.\nHaving two SubGrids allows you to achieve what is usually called locked or frozen columns.</p>\n<p>By default a Grid has two SubGrids, one named 'locked' and one 'normal'. The <code>locked</code> region has fixed width, while\nthe <code>normal</code> region grows to fill all available width (flex).</p>\n<p>Which SubGrid a column belongs to is\ndetermined using its <a href=\"#Grid/column/Column#config-region\">region</a> config. For example to put a column into the locked\nregion, specify <code>{ region: 'locked' }</code>. For convenience, a column can be put in the locked region using\n<code>{ locked: true }</code>.</p>",mixin:true,examples:["{ data: 'name', text: 'Name', locked: true }\n{ data: 'age', text: 'Age', region: 'locked' }"],constructor:{name:"constructor"},filename:"GridSubGrids.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Grid/view/mixin",lineno:30,demo:{product:"grid",demo:"features"},functions:[{name:"initSubGrids",access:"private",description:"<p>Initializes subGrids from subGrid configs in config.subGridConfigs. Regions specified on columns but not The default config.subGridConfigs is:\n{ normal: { flex: 1 } }</p>",scope:"instance",category:"SubGrid"},{name:"eachSubGrid",access:"internal",description:"<p>Iterate over all subGrids, calling the supplied function for each.</p>",parameters:[{name:"fn",type:"function",description:"<p>Function to call for each instance</p>"},{name:"thisObj",type:"Object",description:"<p><code>this</code> reference to call the function in, defaults to the subGrid itself</p>"}],scope:"instance",category:"SubGrid"},{name:"callEachSubGrid",access:"internal",description:"<p>Call a function by name for all subGrids (that have the function).</p>",parameters:[{name:"fnName",type:"String",description:"<p>Name of function to call, uses the subGrid itself as <code>this</code> reference</p>"},{name:"params",description:"<p>Parameters to call the function with</p>",isRestParam:true}],scope:"instance",category:"SubGrid",returns:{type:"*",description:"<p>Return value from first SubGrid is returned</p>"}},{name:"getLastRegions",access:"private",description:"<p>This method should return names of the two last regions in the grid as they are visible in the UI. In case\n<code>regions</code> property cannot be trusted, use different approach. Used by SubGrid and RegionResize to figure out\nwhich region should collapse or expand.</p>",scope:"instance",category:"SubGrid",returns:{type:"Array.<String>"}},{name:"getNextRegion",access:"private",description:"<p>This method should return right neighbour for passed region, or left neighbour in case last visible region is passed.\nThis method is used to decide which subgrid should take space of the collapsed one.</p>",parameters:[{name:"region",type:"String"}],scope:"instance",category:"SubGrid",returns:{type:"String"}},{name:"getSubGrid",description:"<p>Returns the subGrid for the specified region.</p>",parameters:[{name:"region",type:"String",description:"<p>Region, eg. locked or normal (per default)</p>"}],scope:"instance",category:"SubGrid",returns:{type:"Grid.view.SubGrid",description:"<p>A subGrid</p>"}},{name:"getSubGridFromColumn",description:"<p>Get the SubGrid that contains specified column</p>",parameters:[{name:"column",type:["String","Grid.column.Column"],description:"<p>Column &quot;name&quot; or column object</p>"}],scope:"instance",category:"SubGrid",returns:{type:"Grid.view.SubGrid"}},{name:"resolveSplitter",access:"private",description:"<p>Returns splitter element for subgrid</p>",parameters:[{name:"subGrid",type:["Grid.view.SubGrid","String"]}],scope:"instance",category:"SubGrid",returns:{type:"HTMLElement"}}]},{name:"module:Scheduler/column/ResourceInfoColumn",classDescription:'<p>Displays resource information. Defaults to showing image + name + event count, but what to show is configurable.\nBe sure to specify <a href="#Scheduler/view/mixin/SchedulerEventRendering#config-resourceImagePath">resourceImagePath</a> to instruct the\ncolumn where to look for the images.</p>',extends:["Grid/column/Column"],constructor:{name:"constructor"},filename:"ResourceInfoColumn.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/column",lineno:19,externalExamples:["scheduler/ResourceInfoColumn.js"],classType:"resourceInfo",configs:[{name:"showImage",description:"<p>Show image. Looks for image name in fields on the resource in the following order: 'imageUrl', 'image', 'name'.\nSet <code>showImage</code> to a field name to use a custom field. Set <code>imagePath</code> to specify where to load\nimages from. If no extension found, defaults to <a href=\"#Scheduler/view/mixin/SchedulerEventRendering#config-resourceImageExtension\">resourceImageExtension</a>.</p>",type:"Boolean",scope:"inner",defaultvalue:true},{name:"showEventCount",description:"<p>Show number of events assigned to the resource below the name.</p>",type:"Boolean",scope:"inner",defaultvalue:true},{name:"showRole",description:"<p>Show resource role below the name. Specify <code>true</code> to display data from the <code>role</code> field, or specify a field\nname to read this value from.</p>",type:["Boolean","String"],scope:"inner",defaultvalue:false},{name:"imagePath",description:'<p>Path to load images from.\nDefaults to using the value of <a href="#Scheduler/view/mixin/SchedulerEventRendering#config-resourceImagePath">resourceImagePath</a></p>',type:"String",scope:"inner",deprecated:true},{name:"validNames",description:"<p>Valid image names. Set to <code>null</code> to allow all names.</p>",type:"Array.<String>",scope:"inner",defaultvalue:'["amit","angelo","arcady","arnold","celia","chang","dan","dave","emilia","george","gloria","henrik","hitomi","jong","kate","lee","linda","lisa","lola","macy","madison","malik","mark","maxim","mike","rob","steve"]'},{name:"defaultImageName",description:'<p>Generic user image, used when an invalid name is specified.\nDefaults to using the value of <a href="#Scheduler/view/mixin/SchedulerEventRendering#config-defaultResourceImageName">defaultResourceImageName</a></p>',type:"String",scope:"inner",deprecated:true},{name:"autoScaleThreshold",description:"<p>Specify 0 to prevent the column from adapting its content according to the used row height, or specify a\na threshold (row height) at which scaling should start.</p>",type:"Number",scope:"inner",defaultvalue:40}]},{name:"module:Scheduler/column/TimeAxisColumn",classDescription:"<p>A column containing the timeline &quot;viewport&quot;, in which events, dependencies etc are drawn. Normally you do not need\nto interact with or create this column, it is handled by Scheduler/Gantt.</p>",extends:["Grid/column/Column"],constructor:{name:"constructor"},filename:"TimeAxisColumn.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/column",lineno:21,events:[{name:"timeAxisHeaderClick",description:"<p>Fires after a click on a time axis cell</p>",parameters:[{name:"column",type:"Scheduler.column.TimeAxisColumn",description:"<p>The column object</p>"},{name:"startDate",type:"Date",description:"<p>The start date of the header cell</p>"},{name:"endDate",type:"Date",description:"<p>The start date of the header cell</p>"},{name:"event",type:"Event",description:"<p>The event object</p>"}]},{name:"timeAxisHeaderDblClick",description:"<p>Fires after a double click on a time axis cell</p>",parameters:[{name:"column",type:"Scheduler.column.TimeAxisColumn",description:"<p>The column object</p>"},{name:"startDate",type:"Date",description:"<p>The start date of the header cell</p>"},{name:"endDate",type:"Date",description:"<p>The end date of the header cell</p>"},{name:"event",type:"Event",description:"<p>The event object</p>"}]},{name:"timeAxisHeaderContextMenu",description:"<p>Fires after a right click on a time axis cell</p>",parameters:[{name:"column",type:"Scheduler.column.TimeAxisColumn",description:"<p>The column object</p>"},{name:"startDate",type:"Date",description:"<p>The start date of the header cell</p>"},{name:"endDate",type:"Date",description:"<p>The start date of the header cell</p>"},{name:"event",type:"Event",description:"<p>The event object</p>"}]}],configs:[{name:"draggable",description:"<p>Set to false to prevent this column header from being dragged.</p>",type:"Boolean",scope:"inner",defaultvalue:"false",category:"Interaction"},{name:"groupable",description:"<p>Set to false to prevent grouping by this column.</p>",type:"Boolean",scope:"inner",defaultvalue:"false",category:"Interaction"},{name:"hideable",description:"<p>Allow column visibility to be toggled through UI.</p>",type:"Boolean",scope:"inner",defaultvalue:"false",category:"Interaction"},{name:"showColumnPicker",description:"<p>Show column picker for the column.</p>",type:"Boolean",scope:"inner",defaultvalue:"false",category:"Menu"},{name:"filterable",description:"<p>Allow filtering data in the column (if Filter feature is enabled)</p>",type:"Boolean",scope:"inner",defaultvalue:"false",category:"Interaction"},{name:"sortable",description:"<p>Allow sorting of data in the column</p>",type:"Boolean",scope:"inner",defaultvalue:"false",category:"Interaction"},{name:"resizable",description:"<p>Set to <code>false</code> to prevent the column from being drag-resized when the ColumnResize plugin is enabled.</p>",type:"Boolean",scope:"inner",defaultvalue:"false",category:"Interaction"},{name:"searchable",description:"<p>Allow searching in the column (respected by QuickFind and Search features)</p>",type:"Boolean",scope:"inner",defaultvalue:"false",category:"Interaction"},{name:"editor",description:"<p>Specifies if this column should be editable, and define which editor to use for editing cells in the column (if CellEdit feature is enabled)</p>",type:"String",scope:"inner",defaultvalue:"false",category:"Interaction"},{name:"enableCellContextMenu",description:"<p>Set to <code>true</code> to show a context menu on the cell elements in this column</p>",type:"Boolean",scope:"inner",defaultvalue:"false",category:"Menu"},{name:"tooltipRenderer",description:"<p>Renderer function for cell tooltips header (used with CellTooltip feature). Specify false to prevent\ntooltip for that column.</p>",type:"function",scope:"inner",defaultvalue:"false",category:"Rendering",parameters:[{name:"cellElement",type:"HTMLElement",description:"<p>Cell element</p>"},{name:"record",type:"Core.data.Model",description:"<p>Record for cell row</p>"},{name:"column",type:"Grid.column.Column",description:"<p>Cell column</p>"},{name:"cellTooltip",type:"CellTooltip",description:"<p>Feature instance, used to set tooltip content async</p>"},{name:"event",type:"MouseEvent",description:"<p>The event that triggered the tooltip</p>"}]},{name:"cls",description:"<p>CSS class added to the header of this column</p>",type:"String",scope:"inner",defaultvalue:"'b-sch-timeaxiscolumn'",category:"Rendering"}],functions:[{name:"refreshHeader",description:"<p>Refreshes the columns header contents (which is either a HorizontalTimeAxis or a ResourceHeader). Useful if you\nhave rendered some extra meta data that depends on external data such as the EventStore or ResourceStore.</p>",scope:"instance"}]},{name:"module:Scheduler/crud/AbstractCrudManager",classDescription:'<p>This is an abstract class serving as the base for the <a href="#Scheduler/data/CrudManager">Scheduler.data.CrudManager</a> class.\nIt implements basic mechanisms to organize batch communication with a server.\nYet it does not contain methods related to <em>data transfer</em> nor <em>encoding</em>.\nThese methods are to be provided in sub-classes by consuming the appropriate mixins.</p>\n<p>For example, this is how the class can be used to implement an JSON encoding system:</p>\n<pre class="prettyprint source lang-javascript"><code>// let\'s make new CrudManager using AJAX as a transport system and JSON for encoding\nclass MyCrudManager extends JsonEncode(AjaxTransport(AbstractCrudManager)) {\n\n}\n</code></pre>\n<h2>Data transfer and encoding methods</h2>\n<p>These are methods that must be provided by subclasses of this class:</p>\n<ul>\n<li><a href="#Scheduler/crud/AbstractCrudManagerMixin#function-sendRequest">#sendRequest</a></li>\n<li><a href="#Scheduler/crud/AbstractCrudManagerMixin#function-cancelRequest">#cancelRequest</a></li>\n<li><a href="#Scheduler/crud/AbstractCrudManagerMixin#function-encode">#encode</a></li>\n<li><a href="#Scheduler/crud/AbstractCrudManagerMixin#function-decode">#decode</a></li>\n</ul>',extends:["Core/Base"],mixes:["Core/mixin/Events","Scheduler/crud/AbstractCrudManagerMixin"],virtual:true,constructor:{name:"constructor"},filename:"AbstractCrudManager.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/crud",lineno:37,properties:[{name:"revision",description:'<p>The server revision stamp.\nThe <em>revision stamp</em> is a number which should be incremented after each server-side change.\nThis property reflects the current version of the data retrieved from the server and gets updated after each <a href="#Scheduler/crud/AbstractCrudManagerMixin#function-load">load</a> and <a href="#Scheduler/crud/AbstractCrudManagerMixin#function-sync">sync</a> call.</p>',scope:"instance",readonly:true,properties:[{type:{names:["Number"]},name:"revision"}]},{name:"stores",description:"<p>A list of registered stores whose server communication will be collected into a single batch.\nEach store is represented by a <em>store descriptor</em>, an object having following structure:</p>",type:{names:["Array.<Object>"]},scope:"inner",properties:[{description:"<p>Unique store identifier.</p>",isSubParam:true,type:{names:["String"]},name:"stores.storeId"},{description:"<p>Store itself.</p>",isSubParam:true,type:{names:["Core.data.Store"]},name:"stores.store"},{description:"<p>Set this if store model has a predefined field to keep phantom record identifier.</p>",optional:true,isSubParam:true,type:{names:["String"]},name:"stores.phantomIdField"},{description:"<p>id field name, if it's not specified then class will try to get it from a store model.</p>",optional:true,isSubParam:true,type:{names:["String"]},name:"stores.idField"}]},{name:"isLoading",description:"<p>Returns true if the crud manager is currently loading data</p>",scope:"instance",readonly:true,category:"CRUD",properties:[{type:{names:["Boolean"]}}]}],configs:[{name:"stores",description:"<p>Sets the list of stores controlled by the CRUD manager.\nStore can be provided by itself, its storeId or an object having the following structure:</p>",type:["Array.<Core.data.Store>","Array.<String>","Array.<Object>"],scope:"inner",properties:[{description:"<p>Unique store identifier. Under this name the store related requests/responses will be sent.</p>",isSubParam:true,type:{names:["String"]},name:"stores.storeId"},{description:"<p>The store itself.</p>",isSubParam:true,type:{names:["Core.data.Store"]},name:"stores.store"},{description:"<p>Set this if the store model has a predefined field to keep phantom record identifier.</p>",optional:true,isSubParam:true,type:{names:["String"]},name:"stores.phantomIdField"},{description:"<p>id field name, if it's not specified then class will try to get it from a store model.</p>",optional:true,isSubParam:true,type:{names:["String"]},name:"stores.idField"}]}],functions:[{name:"commit",description:"<p>Commits all records changes of all the registered stores.</p>",scope:"instance"},{name:"reject",description:"<p>Rejects all records changes on all stores and re-insert any records that were removed locally. Any phantom records will be removed.</p>",scope:"instance"},{name:"addStore",description:"<p>Adds a store to the collection.</p>\n<pre class=\"prettyprint source lang-javascript\"><code>// append stores to the end of collection\ncrudManager.addStore([\n    store1,\n    // storeId\n    'bar',\n    // store descriptor\n    {\n        storeId : 'foo',\n        store   : store3\n    },\n    {\n        storeId         : 'bar',\n        store           : store4,\n        // to write all fields of modified records\n        writeAllFields  : true\n    }\n]);\n</code></pre>\n<p><strong>Note:</strong> Order in which stores are kept in the collection is very essential sometimes.\nExactly in this order the loaded data will be put into each store.</p>",parameters:[{name:"store",type:["Core.data.Store","String","Object","Array.<Core.data.Store>","Array.<String>","Array.<Object>"],description:"<p>A store or list of stores. Each store might be specified by its instance, <code>storeId</code> or <em>descriptor</em>.\nThe <em>store descriptor</em> is an object having following properties:</p>"},{name:"store.storeId",type:"String",description:"<p>The store identifier that will be used as a key in requests.</p>",isSubParam:true},{name:"store.store",type:"Core.data.Store",description:"<p>The store itself.</p>",isSubParam:true},{name:"store.idField",type:"String",description:"<p>The idField of the store. If not specified will be taken from the store model.</p>",optional:true,isSubParam:true},{name:"store.phantomIdField",type:"String",description:"<p>The field holding unique Ids of phantom records (if store has such model).</p>",optional:true,isSubParam:true},{name:"store.writeAllFields",type:"Boolean",description:"<p>Set to true to write all fields from modified records</p>",optional:true,isSubParam:true},{name:"position",type:"Number",description:'<p>The relative position of the store. If <code>fromStore</code> is specified the this position will be taken relative to it.\nIf not specified then store(s) will be appended to the end of collection.\nOtherwise it will be just a position in stores collection.</p>\n<pre class="prettyprint source lang-javascript"><code>// insert stores store4, store5 to the start of collection\ncrudManager.addStore([ store4, store5 ], 0);\n</code></pre>',optional:true},{name:"fromStore",type:["String","Core.data.Store","Object"],description:"<p>The store relative to which position should be calculated. Can be defined as a store identifier, instance or descriptor (the result of <a href=\"#Scheduler/crud/AbstractCrudManagerMixin#function-getStoreDescriptor\">getStoreDescriptor</a> call).</p>\n<pre class=\"prettyprint source lang-javascript\"><code>// insert store6 just before a store having storeId equal to 'foo'\ncrudManager.addStore(store6, 0, 'foo');\n\n// insert store7 just after store3 store\ncrudManager.addStore(store7, 1, store3);\n</code></pre>",optional:true}],scope:"instance"}]},{name:"module:Scheduler/crud/AbstractCrudManagerMixin",description:'<p>An abstract mixin that supplies most of the CrudManager functionality.\nIt implements basic mechanisms of collecting stores to organize batch communication with a server.\nYet it does not contain methods related to <em>data transfer</em> nor <em>encoding</em>.\nThese methods are to be provided in sub-classes.\nOut of the box there are mixins implementing <a href="#Scheduler/crud/transport/AjaxTransport">support of AJAX for data transferring</a>\nand <a href="#Scheduler/crud/encoder/JsonEncoder">JSON for data encoding system</a>.\nFor example this is how we make a model that will implement CrudManager protocol and use AJAX/JSON to pass the dada to the server:</p>\n<pre class="prettyprint source lang-javascript"><code>class SystemSettings extends JsonEncode(AjaxTransport(AbstractCrudManagerMixin(Model))) {\n    ...\n}\n</code></pre>\n<h2>Data transfer and encoding methods</h2>\n<p>These are methods that must be provided by subclasses of this class:</p>\n<ul>\n<li><a href="#Scheduler/crud/AbstractCrudManagerMixin#function-sendRequest">sendRequest</a></li>\n<li><a href="#Scheduler/crud/AbstractCrudManagerMixin#function-cancelRequest">cancelRequest</a></li>\n<li><a href="#Scheduler/crud/AbstractCrudManagerMixin#function-encode">encode</a></li>\n<li><a href="#Scheduler/crud/AbstractCrudManagerMixin#function-decode">decode</a></li>\n</ul>',mixin:true,virtual:true,constructor:{name:"constructor"},filename:"AbstractCrudManagerMixin.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/crud",lineno:64,properties:[{name:"crudRevision",description:'<p>The server revision stamp.\nThe <em>revision stamp</em> is a number which should be incremented after each server-side change.\nThis property reflects the current version of the data retrieved from the server and gets updated after each <a href="#Scheduler/crud/AbstractCrudManagerMixin#function-load">load</a> and <a href="#Scheduler/crud/AbstractCrudManagerMixin#function-sync">sync</a> call.</p>',scope:"inner",readonly:true,properties:[{type:{names:["Number"]}}]},{name:"crudStores",description:"<p>A list of registered stores whose server communication will be collected into a single batch.\nEach store is represented by a <em>store descriptor</em>, an object having following structure:</p>",type:{names:["Array.<Object>"]},scope:"inner",properties:[{description:"<p>Unique store identifier.</p>",isSubParam:true,type:{names:["String"]},name:"stores.storeId"},{description:"<p>Store itself.</p>",isSubParam:true,type:{names:["Core.data.Store"]},name:"stores.store"},{description:"<p>Set this if store model has a predefined field to keep phantom record identifier.</p>",optional:true,isSubParam:true,type:{names:["String"]},name:"stores.phantomIdField"},{description:"<p>id field name, if it's not specified then class will try to get it from a store model.</p>",optional:true,isSubParam:true,type:{names:["String"]},name:"stores.idField"}]},{name:"syncApplySequence",description:"<p>An array of stores presenting an alternative sync responses apply order.\nEach store is represented by a <em>store descriptor</em>, an object having following structure:</p>",type:{names:["Array.<Object>"]},scope:"inner",properties:[{description:"<p>Unique store identifier.</p>",isSubParam:true,type:{names:["String"]},name:"syncApplySequence.storeId"},{description:"<p>Store itself.</p>",isSubParam:true,type:{names:["Core.data.Store"]},name:"syncApplySequence.store"},{description:"<p>Set this if store model has a predefined field to keep phantom record identifier.</p>",optional:true,isSubParam:true,type:{names:["String"]},name:"syncApplySequence.phantomIdField"},{description:"<p>id field name, if it's not specified then class will try to get it from a store model.</p>",optional:true,isSubParam:true,type:{names:["String"]},name:"syncApplySequence.idField"}]},{name:"isCrudManagerLoading",description:"<p>Returns true if the crud manager is currently loading data</p>",scope:"instance",readonly:true,category:"CRUD",properties:[{type:{names:["Boolean"]}}]},{name:"requestId",access:"internal",description:"<p>Generates unique request identifier.</p>",scope:"instance",returns:[{type:{names:["Number"]},description:"<p>The request identifier.</p>"}]}],configs:[{name:"crudStores",description:"<p>Sets the list of stores controlled by the CRUD manager.\nStore can be provided by itself, its storeId or an object having the following structure:</p>",type:["Array.<Core.data.Store>","Array.<String>","Array.<Object>"],scope:"inner",properties:[{description:"<p>Unique store identifier. Under this name the store related requests/responses will be sent.</p>",isSubParam:true,type:{names:["String"]},name:"stores.storeId"},{description:"<p>The store itself.</p>",isSubParam:true,type:{names:["Core.data.Store"]},name:"stores.store"},{description:"<p>Set this if the store model has a predefined field to keep phantom record identifier.</p>",optional:true,isSubParam:true,type:{names:["String"]},name:"stores.phantomIdField"},{description:"<p>id field name, if it's not specified then class will try to get it from a store model.</p>",optional:true,isSubParam:true,type:{names:["String"]},name:"stores.idField"}]},{name:"storeIdProperty",description:"<p>Name of a store property to retrieve store identifiers from.\nStore identifier is used as a container name holding corresponding store data while transferring them to/from the server.\nBy default <code>storeId</code> property is used. And in case a container identifier has to differ this config can be used:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>class CatStore extends Store {\n    // storeId is &quot;meow&quot; but for sending/receiving store data\n    // we want have &quot;cats&quot; container in JSON, so we create a new property &quot;storeIdForCrud&quot;\n    storeId          : 'meow',\n    storeIdForCrud   : 'cats'\n});\n\nclass MyCrudManager extends CrudManager {\n    ...\n    crudStores           : ['meow'],\n    // crud manager will get store identifier from &quot;storeIdForCrud&quot; property\n    storeIdProperty  : 'storeIdForCrud'\n});\n</code></pre>\n<p>The <code>storeIdProperty</code> property can also be specified directly on a store:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>class CatStore extends Store {\n    // storeId is &quot;meow&quot; but for sending/receiving store data\n    // we want have &quot;cats&quot; container in JSON\n    storeId          : 'meow',\n    // so we create a new property &quot;storeIdForCrud&quot;..\n    storeIdForCrud  : 'cats',\n    // and point CrudManager to use it as the store identifier source\n    storeIdProperty  : 'storeIdForCrud'\n});\n\nclass DogStore extends Store {\n    // storeId is &quot;dogs&quot; and it will be used as a container name for the store data\n    storeId          : 'dogs'\n});\n\nclass MyCrudManager extends CrudManager {\n    ...\n    crudStores           : ['meow', 'dogs']\n});\n</code></pre>",type:"String",scope:"inner"},{name:"trackResponseType",description:"<p>When <code>true</code> forces the CRUD manager to process responses depending on their <code>type</code> attribute.\nSo <code>load</code> request may be responded with <code>sync</code> response for example.\nCan be used for smart server logic allowing the server to decide when it's better to respond with a complete data set (<code>load</code> response)\nor it's enough to return just a delta (<code>sync</code> response).</p>",type:"Boolean",scope:"inner",defaultvalue:false},{name:"phantomIdField",description:"<p>Field name to be used to transfer a phantom record identifier.</p>",type:"String",scope:"inner",defaultvalue:"$PhantomId"},{name:"phantomParentIdField",description:"<p>Field name to be used to transfer a phantom parent record identifier.</p>",type:"String",scope:"inner",defaultvalue:"$PhantomParentId"},{name:"autoLoad",description:'<p><code>true</code> to automatically call <a href="#Scheduler/crud/AbstractCrudManagerMixin#function-load">load</a> method after creation.</p>',type:"Boolean",scope:"inner",defaultvalue:false},{name:"autoSyncTimeout",description:'<p>The timeout in milliseconds to wait before persisting changes to the server.\nUsed when <a href="#Scheduler/crud/AbstractCrudManagerMixin#config-autoSync">autoSync</a> is set to <code>true</code>.</p>',type:"Number",scope:"inner",defaultvalue:100},{name:"autoSync",description:'<p><code>true</code> to automatically persist store changes after edits are made in any of the stores monitored.\nPlease note that sync request will not be invoked immediately but only after <a href="#Scheduler/crud/AbstractCrudManagerMixin#config-autoSyncTimeout">autoSyncTimeout</a> interval.</p>',type:"Boolean",scope:"inner",defaultvalue:false},{name:"resetIdsBeforeSync",description:"<p><code>True</code> to reset identifiers (defined by <code>idField</code> config) of phantom records before submitting them to the server.</p>",type:"Boolean",scope:"inner",defaultvalue:true},{name:"syncApplySequence",description:"<p>An array of store identifiers sets an alternative sync responses apply order.\nBy default the order in which sync responses are applied to the stores is the same as they registered in.\nBut in case of some tricky dependencies between stores this order can be changed:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>class MyCrudManager extends CrudManager {\n    // register stores (they will be loaded in the same order: 'store1' then 'store2' and finally 'store3')\n    crudStores : ['store1', 'store2', 'store3'],\n    // but we apply changes from server to them in an opposite order\n    syncApplySequence : ['store3', 'store2', 'store1']\n});\n</code></pre>",type:"Array.<String>",scope:"inner"},{name:"writeAllFields",description:"<p>true to write all fields from the record to the server. If set to false it will only send the fields that\nwere modified. Note that any fields that have <code>persist</code> set to false will still be ignored while those\nwith <code>critical</code> set to true will be included.</p>",type:"Boolean",scope:"inner",defaultvalue:false}],functions:[{name:"sendRequest",virtual:true,description:"<p>Sends request to the server.</p>",parameters:[{name:"request",type:"Object",description:"<p>The request to send. An object having following properties:</p>"},{name:"request.data",type:"String",description:'<p><a href="#Scheduler/crud/AbstractCrudManagerMixin#function-encode">Encoded</a> request.</p>',isSubParam:true},{name:"request.type",type:"String",description:"<p>Request type, can be either <code>load</code> or <code>sync</code></p>",isSubParam:true},{name:"request.success",type:"function",description:"<p>Callback to be started on successful request transferring</p>",isSubParam:true},{name:"request.failure",type:"function",description:"<p>Callback to be started on request transfer failure</p>",isSubParam:true},{name:"request.thisObj",type:"Object",description:"<p><code>this</code> reference for the above <code>success</code> and <code>failure</code> callbacks</p>",isSubParam:true}],scope:"inner",returns:{type:"Promise",description:"<p>The request promise.</p>"},async:true},{name:"cancelRequest",virtual:true,description:"<p>Cancels request to the server.</p>",parameters:[{name:"request",type:"Object",description:'<p>The request to cancel (a value returned by corresponding <a href="#Scheduler/crud/AbstractCrudManagerMixin#function-sendRequest">sendRequest</a> call).</p>'}],scope:"inner"},{name:"encode",virtual:true,description:"<p>Encodes request to the server.</p>",parameters:[{name:"request",type:"Object",description:"<p>The request to encode.</p>"}],scope:"inner",returns:{type:"String",description:"<p>The encoded request.</p>"}},{name:"decode",virtual:true,description:"<p>Decodes response from the server.</p>",parameters:[{name:"response",type:"String",description:"<p>The response to decode.</p>"}],scope:"inner",returns:{type:"Object",description:"<p>The decoded response.</p>"}},{name:"getStoreDescriptor",description:"<p>Returns a registered store descriptor.</p>",parameters:[{name:"storeId",type:["String","Core.data.Store"],description:"<p>The store identifier or registered store instance.</p>"}],scope:"instance",returns:{type:"Object",description:"<p>The descriptor of the store.</p>"}},{name:"getCrudStore",description:"<p>Returns a registered store.</p>",parameters:[{name:"storeId",type:"String",description:"<p>Store identifier.</p>"}],scope:"instance",returns:{type:"Core.data.Store",description:"<p>Found store instance.</p>"}},{name:"addCrudStore",description:"<p>Adds a store to the collection.</p>\n<pre class=\"prettyprint source lang-javascript\"><code>// append stores to the end of collection\ncrudManager.addCrudStore([\n    store1,\n    // storeId\n    'bar',\n    // store descriptor\n    {\n        storeId : 'foo',\n        store   : store3\n    },\n    {\n        storeId         : 'bar',\n        store           : store4,\n        // to write all fields of modified records\n        writeAllFields  : true\n    }\n]);\n</code></pre>\n<p><strong>Note:</strong> Order in which stores are kept in the collection is very essential sometimes.\nExactly in this order the loaded data will be put into each store.</p>",parameters:[{name:"store",type:["Core.data.Store","String","Object","Array.<Core.data.Store>","Array.<String>","Array.<Object>"],description:"<p>A store or list of stores. Each store might be specified by its instance, <code>storeId</code> or <em>descriptor</em>.\nThe <em>store descriptor</em> is an object having following properties:</p>"},{name:"store.storeId",type:"String",description:"<p>The store identifier that will be used as a key in requests.</p>",isSubParam:true},{name:"store.store",type:"Core.data.Store",description:"<p>The store itself.</p>",isSubParam:true},{name:"store.idField",type:"String",description:"<p>The idField of the store. If not specified will be taken from the store model.</p>",optional:true,isSubParam:true},{name:"store.phantomIdField",type:"String",description:"<p>The field holding unique Ids of phantom records (if store has such model).</p>",optional:true,isSubParam:true},{name:"store.writeAllFields",type:"Boolean",description:"<p>Set to true to write all fields from modified records</p>",optional:true,isSubParam:true},{name:"position",type:"Number",description:'<p>The relative position of the store. If <code>fromStore</code> is specified the this position will be taken relative to it.\nIf not specified then store(s) will be appended to the end of collection.\nOtherwise it will be just a position in stores collection.</p>\n<pre class="prettyprint source lang-javascript"><code>// insert stores store4, store5 to the start of collection\ncrudManager.addCrudStore([ store4, store5 ], 0);\n</code></pre>',optional:true},{name:"fromStore",type:["String","Core.data.Store","Object"],description:"<p>The store relative to which position should be calculated. Can be defined as a store identifier, instance or descriptor (the result of <a href=\"#Scheduler/crud/AbstractCrudManagerMixin#function-getStoreDescriptor\">getStoreDescriptor</a> call).</p>\n<pre class=\"prettyprint source lang-javascript\"><code>// insert store6 just before a store having storeId equal to 'foo'\ncrudManager.addCrudStore(store6, 0, 'foo');\n\n// insert store7 just after store3 store\ncrudManager.addCrudStore(store7, 1, store3);\n</code></pre>",optional:true}],scope:"instance"},{name:"removeCrudStore",description:'<p>Removes a store from collection. If the store was registered in alternative sync sequence list\nit will be removed from there as well.</p>\n<pre class="prettyprint source lang-javascript"><code>   // remove store having storeId equal to &quot;foo&quot;\n   crudManager.removeCrudStore(&quot;foo&quot;);\n\n   // remove store3\n   crudManager.removeCrudStore(store3);\n</code></pre>',parameters:[{name:"store",type:["Object","String","Core.data.Store"],description:"<p>The store to remove. Either the store descriptor, store identifier or store itself.</p>"}],scope:"instance"},{name:"addStoreToApplySequence",description:'<p>Adds a store to the alternative sync responses apply sequence.\nBy default the order in which sync responses are applied to the stores is the same as they registered in.\nBut this order can be changes either on construction step using <a href="#Scheduler/crud/AbstractCrudManagerMixin#config-syncApplySequence">syncApplySequence</a> option\nor but calling this method.</p>\n<p><strong>Please note</strong>, that if the sequence was not initialized before this method call then\nyou will have to do it yourself like this for example:</p>\n<pre class="prettyprint source lang-javascript"><code>// alternative sequence was not set for this crud manager\n// so let\'s fill it with existing stores keeping the same order\ncrudManager.addStoreToApplySequence(crudManager.crudStores);\n\n// and now we can add our new store\n\n// we will load its data last\ncrudManager.addCrudStore(someNewStore);\n// but changes to it will be applied first\ncrudManager.addStoreToApplySequence(someNewStore, 0);\n</code></pre>\n<p>add registered stores to the sequence along with the store(s) you want to add</p>',parameters:[{name:"store",type:["Core.data.Store","Object","Array.<Core.data.Store>","Array.<Object>"],description:"<p>The store to add or its <em>descriptor</em> (or array of stores or descriptors).\nWhere <em>store descriptor</em> is an object having following properties:</p>"},{name:"store.storeId",type:"String",description:"<p>The store identifier that will be used as a key in requests.</p>",isSubParam:true},{name:"store.store",type:"Core.data.Store",description:"<p>The store itself.</p>",isSubParam:true},{name:"store.idField",type:"String",description:"<p>The idField of the store. If not specified will be taken from the store model.</p>",optional:true,isSubParam:true},{name:"store.phantomIdField",type:"String",description:"<p>The field holding unique Ids of phantom records (if store has such model).</p>",optional:true,isSubParam:true},{name:"position",type:"Number",description:'<p>The relative position of the store. If <code>fromStore</code> is specified the this position will be taken relative to it.\nIf not specified then store(s) will be appended to the end of collection.\nOtherwise it will be just a position in stores collection.</p>\n<pre class="prettyprint source lang-javascript"><code>// insert stores store4, store5 to the start of sequence\ncrudManager.addStoreToApplySequence([ store4, store5 ], 0);\n</code></pre>',optional:true},{name:"fromStore",type:["String","Core.data.Store","object"],description:"<p>The store relative to which position should be calculated. Can be defined as a store identifier, instance or its descriptor (the result of <a href=\"#Scheduler/crud/AbstractCrudManagerMixin#function-getStoreDescriptor\">getStoreDescriptor</a> call).</p>\n<pre class=\"prettyprint source lang-javascript\"><code>// insert store6 just before a store having storeId equal to 'foo'\ncrudManager.addStoreToApplySequence(store6, 0, 'foo');\n\n// insert store7 just after store3 store\ncrudManager.addStoreToApplySequence(store7, 1, store3);\n</code></pre>",optional:true}],scope:"instance"},{name:"removeStoreFromApplySequence",description:'<p>Removes a store from the alternative sync sequence.</p>\n<pre class="prettyprint source lang-javascript"><code>// remove store having storeId equal to &quot;foo&quot;\ncrudManager.removeCrudStore(&quot;foo&quot;);\n\n// remove store3\ncrudManager.removeCrudStore(store3);\n</code></pre>',parameters:[{name:"store",type:["Object","String","Core.data.Store"],description:"<p>The store to remove. Either the store descriptor, store identifier or store itself.</p>"}],scope:"instance"},{name:"crudStoreHasChanges",description:'<p>Returns <code>true</code> if any of registered stores (or some particular store) has non persisted changes.</p>\n<pre class="prettyprint source lang-javascript"><code>// if we have any unsaved changes\nif (crudManager.crudStoreHasChanges()) {\n    // persist them\n    crudManager.sync();\n// otherwise\n} else {\n    alert(&quot;There are no unsaved changes...&quot;);\n}\n</code></pre>',parameters:[{name:"storeId",type:["String","Core.data.Store"],description:"<p>The store identifier or store instance to check changes for.\nIf not specified then will check changes for all of the registered stores.</p>",optional:true}],scope:"instance",returns:{type:"Boolean",description:"<p><code>true</code> if there are not persisted changes.</p>"}},{name:"load",description:"<p>Loads data to the stores registered in the crud manager. For example:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>crudManager.load(\n    // here are request parameters\n    {\n        store1 : { append : true, page : 3, smth : 'foo' },\n        store2 : { page : 2, bar : '!!!' }\n    }\n).then(\n    () => alert('OMG! It works!'),\n    ({ response, cancelled }) => console.log(`Error: ${cancelled ? 'Cancelled' : response.message}`)\n);\n</code></pre>\n<p>** Note: ** If there is an incomplete load request in progress then system will try to cancel it by calling <a href=\"#Scheduler/crud/AbstractCrudManagerMixin#function-cancelRequest\">cancelRequest</a>.</p>",parameters:[{name:"options",type:"Object",description:"<p>The request parameters. This argument can be omitted like this:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>crudManager.load().then(\n    () => alert('OMG! It works!'),\n    ({ response, cancelled }) => console.log(`Error: ${cancelled ? 'Cancelled' : response.message}`)\n);\n</code></pre>\n<p>When presented it should be an object where keys are store Ids and values are, in turn, objects\nof parameters related to the corresponding store. And these parameters will be transferred with a load request.</p>\n<pre class=\"prettyprint source lang-javascript\"><code>{\n    store1 : { page : 3, append : true, smth : 'foo' },\n    store2 : { page : 2, bar : '!!!' }\n},\n</code></pre>\n<p>Additionally for flat stores <code>append: true</code> can be specified to add loaded records to the existing records, default is to remove corresponding store's existing records first.\n<strong>Please note</strong> that for delta loading you can also use an <a href=\"#Scheduler/crud/AbstractCrudManagerMixin#config-trackResponseType\">alternative approach</a>.</p>",optional:true}],scope:"instance",returns:{type:"Promise",description:'<p>Promise, which is resolved if request was successful.\nBoth the resolve and reject functions are passed a <code>state</code> object. State object has following structure:</p>\n<pre><code>{\n    cancelled       : Boolean, // **optional** flag, which is present when promise was rejected\n    rawResponse     : String,  // raw response from ajax request, either response xml or text\n    rawResponseText : String,  // raw response text as String from ajax request\n    response        : Object,  // processed response in form of object\n    options         : Object   // options, passed to load request\n}\n</code></pre>\n<p>If promise was rejected by <a href="#Scheduler/crud/AbstractCrudManagerMixin#event-beforeLoad">beforeLoad</a> event, <code>state</code> object will have structure:</p>\n<pre><code>{\n    cancelled : true\n}</code></pre>'},async:true},{name:"sync",description:'<p>Persists changes made on the registered stores to the server. Usage:</p>\n<pre class="prettyprint source lang-javascript"><code>// persist and run a callback on request completion\ncrud.sync().then(\n    () => console.log(&quot;Changes saved...&quot;),\n    ({ response, cancelled }) => console.log(`Error: ${cancelled ? \'Cancelled\' : response.message}`)\n);\n</code></pre>\n<p>** Note: ** If there is an incomplete sync request in progress then system will queue the call and delay it until previous request completion.\nIn this case <a href="#Scheduler/crud/AbstractCrudManagerMixin#event-syncDelayed">syncDelayed</a> event will be fired.</p>\n<p>** Note: ** Please take a look at <a href="#Scheduler/crud/AbstractCrudManagerMixin#config-autoSync">autoSync</a> config. This option allows to persist changes automatically after any data modification.</p>',scope:"instance",returns:{type:"Promise",description:'<p>Promise, which is resolved if request was successful.\nBoth the resolve and reject functions are passed a <code>state</code> object. State object has following structure:</p>\n<pre><code>{\n    cancelled       : Boolean, // **optional** flag, which is present when promise was rejected\n    rawResponse     : String,  // raw response from ajax request, either response xml or text\n    rawResponseText : String,  // raw response text as String from ajax request\n    response        : Object,  // processed response in form of object\n}\n</code></pre>\n<p>If promise was rejected by <a href="#Scheduler/crud/AbstractCrudManagerMixin#event-beforeSync">beforeSync</a> event, <code>state</code> object will have structure:</p>\n<pre><code>{\n    cancelled : true\n}</code></pre>'},async:true},{name:"commitCrudStores",description:"<p>Commits all records changes of all the registered stores.</p>",scope:"instance"},{name:"rejectCrudStores",description:"<p>Rejects all records changes on all stores and re-insert any records that were removed locally. Any phantom records will be removed.</p>",scope:"instance"},{name:"doDestroy",description:"<p>Removes all stores and cancels active requests.</p>",scope:"instance"},{name:"isValidResponse",access:"private",description:"<p>Check if response is valid</p>",parameters:[{name:"rawResponse",type:"Response",description:"<p>raw</p>"},{name:"response",type:"Object",description:"<p>parsed response</p>"}],scope:"instance",returns:{type:"Boolean",description:"<p>truthy when response is <code>ok</code> or <code>status</code> is 500 or 404 and it is successfully parsed</p>"}}],events:[{name:"crudStoreHasChanges",description:"<p>Fires when any record in a registered stores is changed.</p>\n<pre class=\"prettyprint source lang-javascript\"><code>    crudManager.on('hasChanges', function (crud) {\n        // enable persist changes button when some store gets changed\n        saveButton.enable();\n    });\n</code></pre>",parameters:[{name:"source",type:"Scheduler.crud.AbstractCrudManager",description:"<p>The CRUD manager.</p>"}]},{name:"requestFail",description:"<p>Fires when a request fails.</p>",parameters:[{name:"source",type:"Scheduler.crud.AbstractCrudManager",description:"<p>The CRUD manager instance.</p>"},{name:"requestType",type:"String",description:"<p>The request type (<code>sync</code> or <code>load</code>).</p>"},{name:"response",type:"Object",description:"<p>The decoded server response object.</p>"},{name:"responseText",type:"String",description:"<p>The raw server response text</p>"},{name:"responseOptions",type:"Object",description:"<p>The response options.</p>"}]},{name:"loadFail",description:'<p>Fires when a <a href="#Scheduler/crud/AbstractCrudManagerMixin#function-load">load request</a> fails.</p>',parameters:[{name:"source",type:"Scheduler.crud.AbstractCrudManager",description:"<p>The CRUD manager instance.</p>"},{name:"response",type:"Object",description:"<p>The decoded server response object.</p>"},{name:"responseText",type:"String",description:"<p>The raw server response text</p>"},{name:"responseOptions",type:"Object",description:"<p>The response options.</p>"}]},{name:"syncFail",description:'<p>Fires when a <a href="#Scheduler/crud/AbstractCrudManagerMixin#function-sync">sync request</a> fails.</p>',parameters:[{name:"source",type:"Scheduler.crud.AbstractCrudManager",description:"<p>The CRUD manager instance.</p>"},{name:"response",type:"Object",description:"<p>The decoded server response object.</p>"},{name:"responseText",type:"String",description:"<p>The raw server response text</p>"},{name:"responseOptions",type:"Object",description:"<p>The response options.</p>"}]},{name:"beforeResponseApply",description:"<p>Fires before server response gets applied to the stores. Return <code>false</code> to prevent data applying.\nThis event can be used for server data preprocessing. To achieve it user can modify the <code>response</code> object.</p>",parameters:[{name:"source",type:"Scheduler.crud.AbstractCrudManager",description:"<p>The CRUD manager.</p>"},{name:"requestType",type:"String",description:"<p>The request type (<code>sync</code> or <code>load</code>).</p>"},{name:"response",type:"Object",description:"<p>The decoded server response object.</p>"}]},{name:"beforeLoadApply",description:"<p>Fires before loaded data get applied to the stores. Return <code>false</code> to prevent data applying.\nThis event can be used for server data preprocessing. To achieve it user can modify the <code>response</code> object.</p>",parameters:[{name:"source",type:"Scheduler.crud.AbstractCrudManager",description:"<p>The CRUD manager.</p>"},{name:"response",type:"Object",description:"<p>The decoded server response object.</p>"},{name:"options",type:"Object",description:'<p>Options provided to the <a href="#Scheduler/crud/AbstractCrudManagerMixin#function-load">load</a> method.</p>'}]},{name:"beforeSyncApply",description:"<p>Fires before sync response data get applied to the stores. Return <code>false</code> to prevent data applying.\nThis event can be used for server data preprocessing. To achieve it user can modify the <code>response</code> object.</p>",parameters:[{name:"source",type:"Scheduler.crud.AbstractCrudManager",description:"<p>The CRUD manager.</p>"},{name:"response",type:"Object",description:"<p>The decoded server response object.</p>"}]},{name:"requestDone",description:"<p>Fires on successful request completion after data gets applied to the stores.</p>",parameters:[{name:"source",type:"Scheduler.crud.AbstractCrudManager",description:"<p>The CRUD manager.</p>"},{name:"requestType",type:"String",description:"<p>The request type (<code>sync</code> or <code>load</code>).</p>"},{name:"response",type:"Object",description:"<p>The decoded server response object.</p>"},{name:"responseOptions",type:"Object",description:"<p>The server response options.</p>"}]},{name:"load",description:'<p>Fires on successful <a href="#Scheduler/crud/AbstractCrudManagerMixin#function-load">load request</a> completion after data gets loaded to the stores.</p>',parameters:[{name:"source",type:"Scheduler.crud.AbstractCrudManager",description:"<p>The CRUD manager.</p>"},{name:"response",type:"Object",description:"<p>The decoded server response object.</p>"},{name:"responseOptions",type:"Object",description:"<p>The server response options.</p>"}]},{name:"sync",description:'<p>Fires on successful <a href="#Scheduler/crud/AbstractCrudManagerMixin#function-sync">sync request</a> completion.</p>',parameters:[{name:"source",type:"Scheduler.crud.AbstractCrudManager",description:"<p>The CRUD manager.</p>"},{name:"response",type:"Object",description:"<p>The decoded server response object.</p>"},{name:"responseOptions",type:"Object",description:"<p>The server response options.</p>"}]},{name:"noChanges",description:'<p>Fires when registered stores get into state when they don\'t have any\nnot persisted change. This happens after <a href="#Scheduler/crud/AbstractCrudManagerMixin#function-load">load</a> or <a href="#Scheduler/crud/AbstractCrudManagerMixin#function-sync">sync</a> request\ncompletion. Or this may happen after a record update which turns its fields back to their original state.</p>\n<pre class="prettyprint source lang-javascript"><code>    crudManager.on(\'nochanges\', function (crud) {\n        // disable persist changes button when there is no changes\n        saveButton.disable();\n    });\n</code></pre>',parameters:[{name:"source",type:"Scheduler.crud.AbstractCrudManager",description:"<p>The CRUD manager.</p>"}]},{name:"beforeLoad",description:'<p>Fires before <a href="#Scheduler/crud/AbstractCrudManagerMixin#function-load">load request</a> is sent. Return <code>false</code> to cancel load request.</p>',parameters:[{name:"source",type:"Scheduler.crud.AbstractCrudManager",description:"<p>The CRUD manager.</p>"},{name:"pack",type:"Object",description:"<p>The data package which contains data for all stores managed by the crud manager.</p>"}]},{name:"loadCanceled",description:'<p>Fired after <a href="#Scheduler/crud/AbstractCrudManagerMixin#function-load">load request</a> was canceled by some <a href="#Scheduler/crud/AbstractCrudManagerMixin#event-beforeLoad">beforeLoad</a>\nlistener or due to incomplete prior load request.</p>',parameters:[{name:"source",type:"Scheduler.crud.AbstractCrudManager",description:"<p>The CRUD manager.</p>"},{name:"pack",type:"Object",description:"<p>The data package which contains data for all stores managed by the crud manager.</p>"}]},{name:"syncDelayed",description:'<p>Fires after <a href="#Scheduler/crud/AbstractCrudManagerMixin#function-sync">sync request</a> was delayed due to incomplete previous one.</p>',parameters:[{name:"source",type:"Scheduler.crud.AbstractCrudManager",description:"<p>The CRUD manager.</p>"},{name:"arguments",type:"Object",description:'<p>The arguments of <a href="#Scheduler/crud/AbstractCrudManagerMixin#function-sync">sync</a> call.</p>'}]},{name:"beforeSync",description:'<p>Fires before <a href="#Scheduler/crud/AbstractCrudManagerMixin#function-sync">sync request</a> is sent. Return <code>false</code> to cancel sync request.</p>\n<pre class="prettyprint source lang-javascript"><code>    crudManager.on(\'beforesync\', function() {\n       // cannot persist changes before at least one record is added\n       // to the `someStore` store\n       if (!someStore.getCount()) return false;\n    });\n</code></pre>',parameters:[{name:"source",type:"Scheduler.crud.AbstractCrudManager",description:"<p>The CRUD manager.</p>"},{name:"pack",type:"Object",description:"<p>The data package which contains data for all stores managed by the crud manager.</p>"}]},{name:"syncCanceled",description:'<p>Fires after <a href="#Scheduler/crud/AbstractCrudManagerMixin#function-sync">sync request</a> was canceled by some <a href="#Scheduler/crud/AbstractCrudManagerMixin#event-beforeSync">beforeSync</a> listener.</p>',parameters:[{name:"source",type:"Scheduler.crud.AbstractCrudManager",description:"<p>The CRUD manager.</p>"},{name:"pack",type:"Object",description:"<p>The data package which contains data for all stores managed by the crud manager.</p>"}]}]},{name:"module:Scheduler/crud/encoder/JsonEncoder",description:'<p>Implements data encoding functional that should be mixed to a <a href="#Scheduler/crud/AbstractCrudManager">Scheduler.crud.AbstractCrudManager</a> sub-class.\nUses <em>JSON</em> as an encoding system.</p>',mixin:true,examples:["// create a new CrudManager using AJAX as a transport system and JSON for encoding\nclass MyCrudManager extends JsonEncode(AjaxTransport(AbstractCrudManager)) {}"],constructor:{name:"constructor"},filename:"JsonEncoder.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/crud/encoder",lineno:18,functions:[{name:"encode",description:"<p>Encodes a request object to <em>JSON</em> encoded string. If encoding fails (due to circular structure), it returns null.\nSupposed to be overridden in case data provided by the CRUD manager has to be transformed into format requested by server.</p>",parameters:[{name:"request",type:"Object",description:"<p>The request to encode.</p>"}],scope:"instance",returns:{type:"String",description:"<p>The encoded request.</p>"}},{name:"decode",description:"<p>Decodes (parses) a <em>JSON</em> response string to an object. If parsing fails, it returns null.\nSupposed to be overridden in case data provided by server has to be transformed into format requested by the CRUD manager.</p>",parameters:[{name:"responseText",type:"String",description:"<p>The response text to decode.</p>"}],scope:"instance",returns:{type:"Object",description:"<p>The decoded response.</p>"}}]},{name:"module:Scheduler/crud/mixin/CrudManagerView",description:'<p>This mixin class adds Crud Manager functionality to a <a href="#Grid/view/GridBase">Grid.view.GridBase</a> instance.</p>\n<p>It adds <a href="#Scheduler/crud/mixin/CrudManagerView#config-crudManager">crudManager</a> config allowing to provide a Crud Manager either as a class instance or as a configuration object\n(for later the mixin provides <a href="#Scheduler/crud/mixin/CrudManagerView#config-crudManagerClass">crudManagerClass</a> config defining which class should be instantiated).</p>\n<p>The mixin also tracks Crud Manager requests to the server and masks the view during them. For masking it\nuses the grid <a href="#Grid/view/GridBase#config-loadMask">loadMask</a> and <a href="#Grid/view/GridBase#config-syncMask">syncMask</a> properties.</p>',mixin:true,constructor:{name:"constructor"},filename:"CrudManagerView.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/crud/mixin",lineno:16,configs:[{name:"crudManagerClass",description:'<p>Class that should be used to instantiate a CrudManager in case it\'s provided as a simple object to <a href="#Scheduler/crud/mixin/CrudManagerView#config-crudManager">crudManager</a> config</p>',type:"Scheduler.crud.AbstractCrudManagerMixin",scope:"inner",category:"Data"},{name:"crudManager",description:"<p>Supply a CrudManager instance or a config object if you want to use CrudManager for handling data</p>",type:["Object","Scheduler.crud.AbstractCrudManagerMixin"],scope:"inner",category:"Data"}],functions:[{name:"bindCrudManager",access:"private",description:"<p>Hooks up crud manager listeners</p>",scope:"instance",category:"Store"}],properties:[{name:"crudManager",description:"<p>Get/set the CrudManager instance</p>",scope:"instance",category:"Data",properties:[{type:{names:["Scheduler.data.CrudManager"]}}]}]},{name:"module:Scheduler/crud/transport/AjaxTransport",description:'<p>Implements data transferring functional that can be used for <a href="#Scheduler/crud/AbstractCrudManager">Scheduler.crud.AbstractCrudManager</a> super classing.\nUses the fetch API for transport, https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API</p>',mixin:true,virtual:true,examples:["// create a new CrudManager using AJAX as a transport system and JSON for encoding\nclass MyCrudManager extends AjaxTransport(JsonEncode(AbstractCrudManager)) {}"],constructor:{name:"constructor"},filename:"AjaxTransport.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/crud/transport",lineno:19,configs:[{name:"transport",description:"<p>Configuration of the AJAX requests used by <strong>Crud Manager</strong> to communicate with a server-side.</p>\n<pre class=\"prettyprint source lang-javascript\"><code>transport : {\n    load : {\n        url       : 'http://mycool-server.com/load.php',\n        // HTTP request parameter used to pass serialized &quot;load&quot;-requests\n        paramName : 'data',\n        // pass extra HTTP request parameter\n        params    : {\n            foo : 'bar'\n        }\n    },\n    sync : {\n        url     : 'http://mycool-server.com/sync.php',\n        // specify Content-Type for requests\n        headers : {\n            'Content-Type' : 'application/json'\n        }\n    }\n}\n</code></pre>\n<p>Since the class uses Fetch API you can use\nany its <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Request\">Request interface</a> options:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>transport : {\n    load : {\n        url         : 'http://mycool-server.com/load.php',\n        // HTTP request parameter used to pass serialized &quot;load&quot;-requests\n        paramName   : 'data',\n        // pass few Fetch API options\n        method      : 'GET',\n        credentials : 'include',\n        cache       : 'no-cache\n    },\n    sync : {\n        url         : 'http://mycool-server.com/sync.php',\n        // specify Content-Type for requests\n        headers     : {\n            'Content-Type' : 'application/json'\n        },\n        credentials : 'include'\n    }\n}\n</code></pre>\n<p>An object where you can set the following possible properties:</p>",type:"Object",scope:"inner",properties:[{description:"<p>Load requests configuration:</p>",isSubParam:true,type:{names:["Object"]},name:"transport.load"},{description:"<p>URL to request for data loading.</p>",isSubParam:true,type:{names:["String"]},name:"transport.load.url"},{description:"<p>HTTP method to be used for load requests.</p>",default:"'GET'",optional:true,isSubParam:true,type:{names:["String"]},defaultvalue:"'GET'",name:"transport.load.method"},{description:"<p>Name of the parameter that will contain a serialized <code>load</code> request.\nThe value is mandatory for requests using <code>GET</code> method (default for <code>load</code>) so if the value is not provided <code>data</code> string is used as default.\nThis value is optional for HTTP methods like <code>POST</code> and <code>PUT</code>, the request body will be used for data transferring in these cases.</p>",default:"'data'",optional:true,isSubParam:true,type:{names:["String"]},defaultvalue:"'data'",name:"transport.load.paramName"},{description:"<p>An object containing extra HTTP parameters to pass to the server when sending a <code>load</code> request.</p>\n<pre class=\"prettyprint source lang-javascript\"><code>transport : {\n    load : {\n        url       : 'http://mycool-server.com/load.php',\n        // HTTP request parameter used to pass serialized &quot;load&quot;-requests\n        paramName : 'data',\n        // pass extra HTTP request parameter\n        // so resulting URL will look like: http://mycool-server.com/load.php?userId=123456&data=...\n        params    : {\n            userId : '123456'\n        }\n    },\n    ...\n}\n</code></pre>",optional:true,isSubParam:true,type:{names:["Object"]},name:"transport.load.params"},{description:"<p>An object containing headers to pass to each server request.</p>\n<pre class=\"prettyprint source lang-javascript\"><code>transport : {\n    load : {\n        url       : 'http://mycool-server.com/load.php',\n        // HTTP request parameter used to pass serialized &quot;load&quot;-requests\n        paramName : 'data',\n        // specify Content-Type for &quot;load&quot; requests\n        headers   : {\n            'Content-Type' : 'application/json'\n        }\n    },\n    ...\n}\n</code></pre>",optional:true,isSubParam:true,type:{names:["Object"]},name:"transport.load.headers"},{description:"<p><strong>DEPRECATED:</strong> Any Fetch API options can be simply defined on the upper configuration level:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>transport : {\n    load : {\n        url          : 'http://mycool-server.com/load.php',\n        // HTTP request parameter used to pass serialized &quot;load&quot;-requests\n        paramName    : 'data',\n        // Fetch API options\n        method       : 'GET',\n        credentials  : 'include'\n    },\n    ...\n}\n</code></pre>",optional:true,isSubParam:true,type:{names:["Object"]},name:"transport.load.fetchOptions"},{description:"<p><strong>DEPRECATED:</strong> The config options can be defined on the upper configuration level.</p>",optional:true,isSubParam:true,type:{names:["Object"]},name:"transport.load.requestConfig"},{description:"<p>Sync requests (<code>sync</code> in further text) configuration:</p>",isSubParam:true,type:{names:["Object"]},name:"transport.sync"},{description:"<p>URL to request for <code>sync</code>.</p>",isSubParam:true,type:{names:["String"]},name:"transport.sync.url"},{description:"<p>HTTP request method to be used for <code>sync</code>.</p>",default:"'POST'",optional:true,isSubParam:true,type:{names:["String"]},defaultvalue:"'POST'",name:"transport.sync.method"},{description:"<p>Name of the parameter in which <code>sync</code> data will be transferred.\nThis value is optional for requests using methods like <code>POST</code> and <code>PUT</code>, the request body will be used for data transferring in this case (default for <code>sync</code>).\nAnd the value is mandatory for requests using <code>GET</code> method (if the value is not provided <code>data</code> string will be used as fallback).</p>",optional:true,isSubParam:true,type:{names:["String"]},name:"transport.sync.paramName"},{description:"<p>HTTP headers to pass with an HTTP request handling <code>sync</code>.</p>\n<pre class=\"prettyprint source lang-javascript\"><code>transport : {\n    sync : {\n        url    : 'http://mycool-server.com/sync.php',\n        // extra HTTP request parameter\n        params : {\n            userId : '123456'\n        }\n    },\n    ...\n}\n</code></pre>",optional:true,isSubParam:true,type:{names:["Object"]},name:"transport.sync.params"},{description:"<p>HTTP headers to pass with an HTTP request handling <code>sync</code>.</p>\n<pre class=\"prettyprint source lang-javascript\"><code>transport : {\n    sync : {\n        url     : 'http://mycool-server.com/sync.php',\n        // specify Content-Type for &quot;sync&quot; requests\n        headers : {\n            'Content-Type' : 'application/json'\n        }\n    },\n    ...\n}\n</code></pre>",optional:true,isSubParam:true,type:{names:["Object"]},name:"transport.sync.headers"},{description:"<p><strong>DEPRECATED:</strong> Any Fetch API options can be simply defined on the upper configuration level:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>transport : {\n    sync : {\n        url         : 'http://mycool-server.com/sync.php',\n        credentials : 'include'\n    },\n    ...\n}\n</code></pre>",optional:true,isSubParam:true,type:{names:["Object"]},name:"transport.sync.fetchOptions"},{description:"<p><strong>DEPRECATED:</strong> The config options can be defined on the upper configuration level.</p>",optional:true,isSubParam:true,type:{names:["Object"]},name:"transport.sync.requestConfig"}]}],functions:[{name:"cancelRequest",description:"<p>Cancels a sent request.</p>",parameters:[{name:"requestPromise",type:"Promise",description:'<p>The Promise object wrapping the Request to be cancelled.\nThe <em>requestPromise</em> is the value returned from the corresponding <a href="#Scheduler/crud/transport/AjaxTransport#function-sendRequest">sendRequest</a> call.</p>'}],scope:"instance"},{name:"sendRequest",description:"<p>Sends a <strong>Crud Manager</strong> request to the server.</p>",parameters:[{name:"request",type:"Object",description:"<p>The request configuration object having following properties:</p>"},{name:"request.type",type:"String",description:"<p>The request type. Either <code>load</code> or <code>sync</code>.</p>",isSubParam:true},{name:"request.data",type:"String",description:"<p>The encoded <strong>Crud Manager</strong> request data.</p>",isSubParam:true},{name:"request.success",type:"function",description:"<p>A function to be started on successful request transferring.</p>",isSubParam:true},{name:"request.success.rawResponse",type:"String",description:'<p><code>Response</code> object returned by the <a href="https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API">fetch api</a>.</p>',isSubParam:true},{name:"request.failure",type:"function",description:"<p>A function to be started on request transfer failure.</p>",isSubParam:true},{name:"request.failure.rawResponse",type:"String",description:'<p><code>Response</code> object returned by the <a href="https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API">fetch api</a>.</p>',isSubParam:true},{name:"request.thisObj",type:"Object",description:"<p><code>this</code> reference for the above <code>success</code> and <code>failure</code> functions.</p>",isSubParam:true}],scope:"instance",fires:["event:beforesend"],returns:{type:"Promise",description:"<p>The fetch Promise object.</p>"},async:true}],events:[{name:"beforeSend",description:"<p>Fires before a request is sent to the server.</p>\n<pre class=\"prettyprint source lang-javascript\"><code>crudManager.on('beforeSend', function ({ params, type }) {\n    // let's set &quot;sync&quot; request parameters\n    if (type == 'sync') {\n        // dynamically depending on &quot;flag&quot; value\n        if (flag) {\n            params.foo = 'bar';\n        }\n        else {\n            params.foo = 'smth';\n        }\n    }\n});\n</code></pre>",parameters:[{name:"crudManager",type:"Scheduler.crud.AbstractCrudManager",description:"<p>The CRUD manager.</p>"},{name:"params",type:"Object",description:"<p>HTTP request params to be passed in the request URL.</p>"},{name:"type",type:"String",description:"<p>CrudManager request type (<code>load</code>/<code>sync</code>)</p>"},{name:"requestConfig",type:"Object",description:"<p>Configuration object for Ajax request call</p>"}]}]},{name:"module:Scheduler/data/AssignmentStore",classDescription:'<p>A class representing a collection of assignments between events in the <a href="#Scheduler/data/EventStore">Scheduler.data.EventStore</a> and resources\nin the <a href="#Scheduler/data/ResourceStore">Scheduler.data.ResourceStore</a>.</p>\n<p>Contains a collection of <a href="#Scheduler/model/AssignmentModel">Scheduler.model.AssignmentModel</a> records.</p>',extends:["Core/data/AjaxStore"],constructor:{name:"constructor"},filename:"AssignmentStore.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/data",lineno:17,properties:[{name:"loadPriority",access:"private",description:"<p>CrudManager must load stores in the correct order. Lowest first.</p>",scope:"inner"},{name:"syncPriority",access:"private",description:"<p>CrudManager must sync stores in the correct order. Lowest first.</p>",scope:"inner"},{name:"eventStore",description:"<p>Get/set the associated event store instance.  Usually it is configured automatically, by the event store itself.</p>",scope:"instance",parameters:[{type:"Scheduler.data.EventStore"}]}],events:[{name:"eventstorechange",description:'<p>Fires when new event store is set via <a href="#Scheduler/data/AssignmentStore#property-eventStore">eventStore</a> method.</p>',parameters:[{name:"this",type:"Scheduler.data.AssignmentStore"},{name:"newEventStore",type:"Scheduler.data.EventStore"},{name:"oldEventStore",type:"Scheduler.data.EventStore"}]}],functions:[{name:"mapAssignmentsForEvent",description:"<p>Maps over event assignments.</p>",parameters:[{name:"event",type:"Scheduler.model.EventModel"},{name:"fn",type:"function",optional:true},{name:"filterFn",type:"function",optional:true}],scope:"instance",returns:{type:"Array"}},{name:"mapAssignmentsForResource",description:"<p>Maps over resource assignments.</p>",parameters:[{name:"resource",type:["Scheduler.model.ResourceModel","Number","String"]},{name:"fn",type:"function",optional:true},{name:"filterFn",type:"function",optional:true}],scope:"instance",returns:{type:"Array.<Scheduler.model.ResourceModel>"}},{name:"getAssignmentsForEvent",description:"<p>Returns all assignments for a given event.</p>",parameters:[{name:"event",type:"Scheduler.model.TimeSpan"}],scope:"instance",returns:{type:"Array.<Scheduler.model.AssignmentModel>"}},{name:"removeAssignmentsForEvent",description:"<p>Removes all assignments for given event</p>",parameters:[{name:"event",type:["Scheduler.model.TimeSpan","Object"]}],scope:"instance"},{name:"getAssignmentsForResource",description:"<p>Returns all assignments for a given resource.</p>",parameters:[{name:"event",type:["Scheduler.model.ResourceModel","Object"]}],scope:"instance",returns:{type:"Array.<Scheduler.model.TimeSpan>"}},{name:"removeAssignmentsForResource",description:"<p>Removes all assignments for given resource</p>",parameters:[{name:"resource",type:["Scheduler.model.ResourceModel","*"]}],scope:"instance"},{name:"getResourcesForEvent",description:"<p>Returns all resources assigned to an event.</p>",parameters:[{name:"event",type:"Scheduler.model.EventModel"}],scope:"instance",returns:{type:"Array.<Scheduler.model.ResourceModel>"}},{name:"getEventsForResource",description:"<p>Returns all events assigned to a resource</p>",parameters:[{name:"resource",type:["Scheduler.model.ResourceModel","*"]}],scope:"instance",returns:{type:"Array.<Scheduler.model.TimeSpan>"}},{name:"assignEventToResource",description:"<p>Creates and adds assignment record(s) for a given event and resource.</p>",parameters:[{name:"event",type:["Scheduler.model.TimeSpan","*"]},{name:"resources",type:["Scheduler.model.ResourceModel","Array.<Scheduler.model.ResourceModel>"],description:"<p>The resource(s) to assign to the event</p>"}],scope:"instance",returns:{type:"Array.<Scheduler.model.AssignmentModel>",description:"<p>An array with the created assignment(s)</p>"}},{name:"unassignEventFromResource",description:"<p>Removes assignment record for a given event and resource.</p>",parameters:[{name:"event",type:["Scheduler.model.TimeSpan","String","Number"]},{name:"resources",type:["Scheduler.model.ResourceModel","String","Number"],description:"<p>The resource to unassign the event from. If omitted, all resources of the events will be unassigned</p>",optional:true}],scope:"instance",returns:{type:["Scheduler.model.AssignmentModel","Array.<Scheduler.model.AssignmentModel>"]}},{name:"isEventAssignedToResource",description:"<p>Checks whether an event is assigned to a resource.</p>",parameters:[{name:"event",type:["Scheduler.model.EventModel","String","Number"],description:"<p>Event record or id</p>"},{name:"resource",type:["Scheduler.model.ResourceModel","String","Number"],description:"<p>Resource record or id</p>"}],scope:"instance",returns:{type:"Boolean"}},{name:"getAssignmentForEventAndResource",description:"<p>Returns an assignment record for a given event and resource</p>",parameters:[{name:"event",type:["Scheduler.model.EventModel","String","Number"],description:"<p>The event or its id</p>"},{name:"resource",type:["Scheduler.model.ResourceModel","String","Number"],description:"<p>The resource or its id</p>"}],scope:"instance",returns:{type:"Scheduler.model.AssignmentModel"}}]},{name:"module:Scheduler/data/Calendar",classDescription:'<p>A class representing a customizable calendar with weekends, holidays and availability information for any day.\nInternally, it\'s just a subclass of the AjaxStore class which should be loaded with a collection\nof <a href="#Scheduler/model/CalendarDayModel">Scheduler.model.CalendarDayModel</a> instances. Additionally, calendars may have parent-child relations,\nallowing &quot;child&quot; calendars to &quot;inherit&quot; all special dates from its &quot;parent&quot; and add its own.\nSee <a href="#Scheduler/data/Calendar#property-parent">parent</a> property for details.</p>\n<p>A calendar can be instantiated like this:</p>\n<pre class="prettyprint source"><code>let calendar = new Scheduler.data.Calendar({\n    data : [\n        {\n            date            : new Date(2010, 0, 13),\n            cls             : \'national-holiday\'\n        },\n        {\n            date            : new Date(2010, 1, 1),\n            cls             : \'company-holiday\'\n        },\n        {\n            date            : new Date(2010, 0, 16),\n            isWorkingDay    : true\n        }\n    ]\n});\n</code></pre>\n<p>Please refer to the <a href="#Scheduler/model/CalendarDayModel">Scheduler.model.CalendarDayModel</a> class to learn the data model used for the calendar.</p>',constructor:{name:"constructor"},filename:"Calendar.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/data",lineno:40,configs:[{name:"daysPerMonth",description:"<p>Number of days per month. Will be used when converting the big duration units like month/year to days.</p>",type:"Number",scope:"inner",defaultvalue:30},{name:"daysPerWeek",description:"<p>Number of days per week. Will be used when converting the duration in weeks to days.</p>",type:"Number",scope:"inner",defaultvalue:7},{name:"hoursPerDay",description:'<p>Number of hours per day. Will be used when converting the duration in days to hours.</p>\n<p><strong>Please note</strong>, that this config is used for duration conversion and not anything else. If you need to change\nthe number of working hours in the day, update the <a href="#Scheduler/data/Calendar#config-defaultAvailability">defaultAvailability</a></p>',type:"Number",scope:"inner",defaultvalue:24},{name:"weekendsAreWorkdays",description:"<p>Setting this option to <code>true</code> will treat <em>all</em> days as working days. Default value is <code>false</code>.</p>",type:"Boolean",scope:"inner",defaultvalue:false},{name:"weekendFirstDay",description:"<p>The index of the first day in a weekend, 0 for Sunday, 1 for Monday, 2 for Tuesday, and so on. '\nDefault value is 6 - Saturday</p>",type:"Number",scope:"inner",defaultvalue:6},{name:"weekendSecondDay",description:"<p>The index of the second day in weekend, 0 for Sunday, 1 for Monday, 2 for Tuesday, and so on.\nDefault value is 0 - Sunday</p>",type:"Number",scope:"inner",defaultvalue:0},{name:"calendarId",description:'<p>The unique id for the calendar. Providing a <code>calendarId</code> will register this calendar in the calendars\nregistry and it can be retrieved later with <a href="#Scheduler/data/Calendar#function-getCalendar-static">getCalendar</a>. Generally only required if want to use\n<a href="#Scheduler/data/Calendar#property-parent">parent-child relations</a> between the calendars, or assign this calendar to a particular\ntask or resource.</p>',type:"String",scope:"inner"},{name:"parent",description:'<p>The parent calendar. Can be provided as the calendar id or calendar instance itself. If this property is\nprovided or set with <a href="#Scheduler/data/Calendar#property-parent">parent</a> property, this calendar becomes a &quot;child&quot; of the specified\ncalendar. This means that it will &quot;inherit&quot; all day overrides, week days and week day overrides from its\n&quot;parent&quot;. In the same time, special days, defined in this calendar take priority over the ones from the\n&quot;parent&quot;.</p>\n<p>You can use this feature if you\'d like to create a single &quot;main&quot; calendar for the whole project, and then\nallow some task or resource to have slightly different calendar (with an additional day off for example).\nYou will not have to re-create all special days in the calendar of such task/resource - just set the\n&quot;main&quot; calendar as a &quot;parent&quot; for it.</p>',type:["String","Scheduler.data.Calendar"],scope:"inner"},{name:"defaultAvailability",description:'<p>The array of default availability intervals (in the format of the\n<code>Availability</code> field in the <a href="#Scheduler/model/CalendarDayModel">Scheduler.model.CalendarDayModel</a>) for each working weekday (Monday-Friday). Defaults\nto whole day (00-24) for backward compatibility.</p>',type:"Array.<String>",scope:"inner",defaultvalue:'["00:00-24:00"]'},{name:"name",description:"<p>The name of this calendar</p>",type:"String",scope:"inner"},{name:"availabilitySearchLimit",description:"<p>Maximum number of days to search for calendar availability intervals.\nUsed in various calculations requiring to respect working time.\nIn these cases the system iterates through the working time day by day. This option determines the maximum distance\nto iterate. Prevents against infinite loop in case of wrong calendar configuration.</p>",type:"Number",scope:"inner",defaultvalue:1825}],properties:[{name:"allCalendars",description:"<p>Returns an array of all registered calendars.</p>",scope:"static",returns:[{type:{names:["Array.<Scheduler.data.Calendar>"]}}]},{name:"calendarId",description:"<p>Get/set the calendarId of the current calendar, also registers it in the calendar registry.</p>",scope:"instance",properties:[{type:{names:["String"]}}]},{name:"parent",description:'<p>Sets the <a href="#Scheduler/data/Calendar#property-parent">parent</a> for this calendar. Pass <code>null</code> to remove the parent.</p>',scope:"instance",parameters:[{name:"parentOrId",type:["String","Scheduler.data.Calendar"],description:'<p>String with <a href="#Scheduler/data/Calendar#config-calendarId">calendarId</a> value or calendar instance itself.</p>'}]}],events:[{name:"parentChange",description:"<p>Triggered when a calender is assigned to a new parent calendar.</p>",parameters:[{name:"source",type:"Scheduler.data.Calendar",description:"<p>The calendar which parent has changed</p>"},{name:"newParent",type:"Scheduler.data.Calendar",description:"<p>The new parent of this calendar (can be <code>null</code> if parent is being removed)</p>"},{name:"oldParent",type:"Scheduler.data.Calendar",description:"<p>The old parent of this calendar (can be <code>null</code> if there was no parent)</p>"}]},{name:"calendarChange",description:"<p>Triggered on changes to the calendar.</p>",parameters:[{name:"source",type:"Scheduler.data.Calendar"}]}],functions:[{name:"getCalendar",description:"<p>Returns the registered calendar with the given id.</p>",parameters:[{name:"id",type:"String",description:"<p>The calendar id</p>"}],scope:"static",returns:{type:"Scheduler.data.Calendar"}},{name:"removeAll",description:"<p>Destroys all registered calendars.</p>",scope:"instance",returns:{type:"Array.<Scheduler.data.Calendar>"}},{name:"intersectsWithCurrentWeeks",description:"<p>Returns <code>true</code> or <code>false</code> depending whether the given time span intersects with one of the defined week day overrides.</p>",parameters:[{name:"startDate",type:"Date",description:"<p>The start date of the time span</p>"},{name:"endDate",type:"Date",description:"<p>The end date of the time span</p>"}],scope:"instance",returns:{type:"Boolean"}},{name:"addNonStandardWeek",description:"<p>Adds a week day override (&quot;non-standard&quot; week) to the calendar. As a reminder, week day override consists from up to 7 days,\nthat re-defines the default week days availability only within certain time span.</p>",parameters:[{name:"startDate",type:"Date",description:"<p>The start date of the time span</p>"},{name:"endDate",type:"Date",description:"<p>The end date of the time span</p>"},{name:"weekAvailability",type:["Array.<Scheduler.model.CalendarDayModel>","Array.<String>"],description:'<p>The array indexed from 0 to 7, containing items for week days.\nIndex 0 corresponds to Sunday, 1 to Monday, etc. Some items can be not defined or set to <code>null</code>, indicating that override does not\nchange this week day. Item can be - an instance of <a href="#Scheduler/model/CalendarDayModel">Scheduler.model.CalendarDayModel</a> (only <code>Availability</code> field needs to be set), or\nan array of strings, defining the availability (see the description of the <code>Availability</code> field in the <a href="#Scheduler/model/CalendarDayModel">Scheduler.model.CalendarDayModel</a>).</p>'},{name:"name",type:"String",description:"<p>The name of this week day override</p>"}],scope:"instance"},{name:"getNonStandardWeekByStartDate",description:"<p>Returns an object describing a week day override (&quot;non-standard&quot; week), that starts at the given date or <code>null</code> if there's no any.</p>",parameters:[{name:"startDate",type:"Date",description:"<p>The start date of the week day override</p>"}],scope:"instance",returns:{type:"Object",description:"<p>An object with the following properties</p>"}},{name:"removeNonStandardWeek",description:"<p>Removes all calendar day instances, that forms a week day override (&quot;non-standard&quot; week) with the given start date.</p>",parameters:[{name:"startDate",type:"Date",description:"<p>The start date of the week day override</p>"}],scope:"instance"},{name:"getNonStandardWeekByDate",description:"<p>Returns an object describing a week day override (&quot;non-standard&quot; week), that contains the given date or <code>null</code> if there's no any.</p>",parameters:[{name:"timeDate",type:"Date",description:"<p>The date that falls within some of the week day overrides</p>"}],scope:"instance",returns:{type:"Object",description:'<p>An object describing week day override. See <a href="#Scheduler/data/Calendar#function-getNonStandardWeekByStartDate">getNonStandardWeekByStartDate</a> method for details.</p>'}},{name:"setWeekendsAreWorkDays",description:"<p>Updates the default availability information based on the value provided.</p>",parameters:[{name:"value",type:"Boolean",description:"<p>true if weekends should be regarded as working time.</p>"}],scope:"instance"},{name:"areWeekendsWorkDays",description:"<p>Returns true if weekends are regarded as working time.</p>",scope:"instance",returns:{type:"Boolean",description:"<p>true if weekends should be regarded as working time.</p>"}},{name:"forEachNonStandardWeek",description:"<p>Iterator for each week day override, defined in this calendar.</p>",parameters:[{name:"func",type:"function",description:'<p>The function to call for each override. It will receive a single argument - object, describing the override.\nSee <a href="#Scheduler/data/Calendar#function-getNonStandardWeekByStartDate">getNonStandardWeekByStartDate</a> for details. Returning <code>false</code> from the function stops the iterator.</p>'},{name:"thisObj",type:"Object",description:"<p><code>this</code> reference for the function</p>"}],scope:"instance",returns:{type:"Boolean",description:"<p><code>false</code> if any of the function calls have returned <code>false</code></p>"}},{name:"getCalendarDay",description:'<p>Returns a corresponding <a href="#Scheduler/model/CalendarDayModel">Scheduler.model.CalendarDayModel</a> instance for the given date. First, this method checks for <a href="#Scheduler/data/Calendar#function-getOverrideDay">day overrides</a>\n(either in this or parent calendars), then for week days (again, in this or parent calendars) and finally fallbacks to the\ncalendar day with the <a href="#Scheduler/data/Calendar#config-defaultAvailability">defaultAvailability</a> availability.</p>',parameters:[{name:"timeDate",type:"Date",description:"<p>A date (can contain time portion which will be ignored)</p>"}],scope:"instance",returns:{type:"Scheduler.model.CalendarDayModel"}},{name:"getOverrideDay",description:"<p>Returns a day override corresponding to the given date (possibly found in the parent calendars) or <code>null</code> if the given date\nhas no overrides in this calendar and all its parents.</p>",parameters:[{name:"timeDate",type:"Date",description:"<p>The date to check for day overrides for</p>"}],scope:"instance",returns:{type:"Scheduler.model.CalendarDayModel"}},{name:"getOwnCalendarDay",description:"<p>Returns an &quot;own&quot; day override corresponding to the given date. That is - day override defined in the current calendar only.</p>",parameters:[{name:"timeDate",type:"Date",description:"<p>The date to check for day overrides for</p>"}],scope:"instance",returns:{type:"Scheduler.model.CalendarDayModel"}},{name:"getWeekDay",description:'<p>Returns a &quot;special&quot; week day corresponding to the given date. Under &quot;special&quot; week day we mean a calendar day with the <code>Type = WEEKDAY</code> or <code>WEEKDAYOVERRIDE</code>.\nSee the <a href="#Scheduler/model/CalendarDayModel">Scheduler.model.CalendarDayModel</a> class for details. If the concrete date is given as 2nd argument, this method will\nfirst check for any week overrides passing on it.</p>\n<p>If not found in current calendar, this method will consult parent. If no &quot;special&quot; week day found neither in this calendar, no parents - it returns <code>null</code>.</p>',parameters:[{name:"weekDayIndex",type:"Number",description:"<p>The index of the week day to retrieve (0-Sunday, 1-Monday, etc)</p>"},{name:"timeDate",type:"Date",description:"<p>The date for which the week day is being retrieved.</p>",optional:true}],scope:"instance",returns:{type:"Scheduler.model.CalendarDayModel"}},{name:"isHoliday",description:"<p>Returns a boolean indicating whether a passed date falls on the weekend or holiday.</p>",parameters:[{name:"timeDate",type:"Date",description:"<p>A given date (can contain time portion)</p>"}],scope:"instance",returns:{type:"Boolean"}},{name:"getDefaultCalendarDay",description:'<p>Returns a &quot;default&quot; calendar day instance, corresponding to the one, generated from <a href="#Scheduler/data/Calendar#config-defaultAvailability">defaultAvailability</a>. By default all working days in the week\ncorresponds to the day with <a href="#Scheduler/data/Calendar#config-defaultAvailability">defaultAvailability</a> set in the <code>Availability</code> field and non-working days has empty <code>Availability</code>.</p>',parameters:[{name:"weekDayIndex",type:"Number",description:"<p>The index of the &quot;default&quot; week day to retrieve (0-Sunday, 1-Monday, etc)</p>"}],scope:"instance",returns:{type:"Scheduler.model.CalendarDayModel"}},{name:"isWorkingDay",description:"<p>Returns a boolean indicating whether a passed date is a working day.</p>",parameters:[{name:"date",type:"Date",description:"<p>A given date (can contain time portion which will be ignored)</p>"}],scope:"instance",returns:{type:"Boolean"}},{name:"isWeekend",description:'<p>Returns <code>true</code> if given date passes on the weekend and <code>false</code> otherwise. Weekend days can be re-defined with the <a href="#Scheduler/data/Calendar#config-weekendFirstDay">weekendFirstDay</a> and <a href="#Scheduler/data/Calendar#config-weekendSecondDay">weekendSecondDay</a> options.</p>',parameters:[{name:"timeDate",type:"Date",description:"<p>The date to check</p>"}],scope:"instance",returns:{type:"Boolean"}},{name:"convertMSDurationToUnit",description:'<p>Convert the duration given in milliseconds to a given unit. Uses the <a href="#Scheduler/data/Calendar#config-daysPerMonth">daysPerMonth</a> configuration option.</p>',parameters:[{name:"durationInMs",type:"Number",description:"<p>Duration in milliseconds</p>"},{name:"unit",type:"String",description:"<p>Duration unit to which the duration should be converted</p>"}],scope:"instance",returns:{type:"Number",description:"<p>converted value</p>"}},{name:"convertDurationToMs",description:'<p>Convert the duration given in some unit to milliseconds. Uses the <a href="#Scheduler/data/Calendar#config-daysPerMonth">daysPerMonth</a> configuration option.</p>',parameters:[{name:"durationInMs",type:"Number"},{name:"unit",type:"String"}],scope:"instance",returns:{type:"Number",description:"<p>converted value</p>"}},{name:"forEachAvailabilityInterval",description:"<p>This an iterator that passes through the all availability intervals (working time intervals) in the given date range.</p>\n<p>For example if the default availability in this calendar is [ '09:00-13:00', '14:00-18:00' ] and this function is called, like this:</p>\n<pre><code> calendar.forEachAvailabilityInterval(\n      //             midnight  Friday                 midnight Tuesday\n     { startDate : new Date(2013, 1, 8), endDate : new Date(2013, 1, 12) },\n     function (startDate, endDate) { ... }\n )\n</code></pre>\n<p>then the provided function will be called 4 times with the following arguments:</p>\n<pre><code> startDate : new Date(2013, 1, 8, 9),    endDate : new Date(2013, 1, 8, 13)\n startDate : new Date(2013, 1, 8, 14),   endDate : new Date(2013, 1, 8, 18)\n startDate : new Date(2013, 1, 11, 9),   endDate : new Date(2013, 1, 11, 13)\n startDate : new Date(2013, 1, 11, 14),  endDate : new Date(2013, 1, 11, 18)</code></pre>",parameters:[{name:"options",type:"Object",description:"<p>An object with the following properties:</p>"},{name:"options.startDate",type:"Date",description:"<p>A start date of the date range. Can be omitted, if <code>isForward</code> flag is set to <code>false</code>. In this case iterator\nwill not stop until the call to <code>func</code> will return <code>false</code>.</p>",isSubParam:true},{name:"options.endDate",type:"Date",description:"<p>An end date of the date range. Can be omitted, if <code>isForward</code> flag is set to <code>true</code>. In this case iterator\nwill not stop until the call to <code>func</code> will return <code>false</code>.</p>",isSubParam:true},{name:"options.isForward",type:"Boolean",description:"<p>A flag, defining the direction, this iterator advances in. If set to <code>true</code> iterations\nwill start from the <code>startDate</code> option and will advance in date increasing direction. If set to <code>false</code> iterations will start from the <code>endDate</code>\noption and will advance in date decreasing direction.</p>",default:true,optional:true,isSubParam:true},{name:"func",type:"function",description:"<p>A function to call for each availability interval, in the given date range. It receives 2 arguments - the start date\nof the availability interval and the end date.</p>"},{name:"thisObj",type:"Object",description:"<p><code>this</code> reference for the function</p>"}],scope:"instance",returns:{type:"Boolean",description:"<p><code>false</code> if any of the calls to <code>func</code> has returned <code>false</code></p>"}},{name:"calculateDuration",description:"<p>Calculate the duration in the given <code>unit</code> between 2 dates, taking into account the availability/holidays information (non-working time will be excluded from the duration).</p>",parameters:[{name:"startDate",type:"Date",description:"<p>The start date</p>"},{name:"endDate",type:"Date",description:"<p>The end date</p>"},{name:"unit",type:"String",description:"<p>One of the units used by DateHelper</p>"}],scope:"instance",returns:{type:"Number",description:"<p>Working time duration between given dates.</p>"}},{name:"getHolidaysRanges",description:'<p>Returns an array of ranges for non-working days between <code>startDate</code> and <code>endDate</code>. For example normally, given a\nfull month, it will return an array of 4 <code>Scheduler.model.TimeSpan</code> instances, containing ranges for the\nweekends. If a holiday lasts for several days and all <a href="#Scheduler/model/CalendarDayModel">Scheduler.model.CalendarDayModel</a> instances have\nthe same <code>cls</code> value then all days will be combined into a single range.</p>',parameters:[{name:"startDate",type:"Date",description:"<p>A start date of the timeframe to extract the holidays from</p>"},{name:"endDate",type:"Date",description:"<p>An end date of the timeframe to extract the holidays from</p>"}],scope:"instance",returns:{type:"Array.<Scheduler.model.TimeSpan>"}},{name:"calculateEndDate",description:"<p>Calculate the end date for the given start date and duration, taking into account the availability/holidays information (non-working time will not be counted as duration).</p>",parameters:[{name:"startDate",type:"Date",description:"<p>The start date</p>"},{name:"duration",type:"Number",description:"<p>The &quot;pure&quot; duration (w/o any non-working time).</p>"},{name:"unit",type:"String",description:'<p>One of the units of the <a href="#Core/helper/DateHelper">Core.helper.DateHelper</a> class.</p>'}],scope:"instance",returns:{type:"Date",description:"<p>The end date</p>"}},{name:"skipNonWorkingTime",description:"<p>This method starts from the given <code>date</code> and moves forward/backward in time (depending from the <code>isForward</code> flag) skiping the non-working time.\nIt returns the nearest edge of the first working time interval it encounters. If the given <code>date</code> falls on the working time, then <code>date</code> itself is returned.</p>\n<p>For example, if this function is called with some Saturday as <code>date</code> and <code>isForward</code> flag is set, it will return the earliest working hours on following Monday.\nIf <code>isForward</code> flag will be set to <code>false</code> - it will return the latest working hours on previous Friday.</p>",parameters:[{name:"date",type:"Date",description:"<p>A date (presumably falling on the non-working time).</p>"},{name:"isForward",type:"Boolean",description:"<p>Pass <code>true</code> to skip the non-working time in forward direction, <code>false</code> - in backward</p>"}],scope:"instance",returns:{type:"Date",description:"<p>Nearest working date.</p>"}},{name:"calculateStartDate",description:"<p>Calculate the start date for the given end date and duration, taking into account the availability/holidays information (non-working time will not be counted as duration).</p>",parameters:[{name:"endDate",type:"Date",description:"<p>The end date</p>"},{name:"duration",type:"Number",description:"<p>The &quot;pure&quot; duration (w/o any non-working time).</p>"},{name:"unit",type:"String",description:'<p>One of the units of the <a href="#Core/helper/DateHelper">Core.helper.DateHelper</a> class.</p>'}],scope:"instance",returns:{type:"Date",description:"<p>The start date</p>"}},{name:"skipWorkingTime",description:'<p>This method starts from the given <code>date</code> and moves forward/backward in time (depending from the <code>duration</code> argument).\nIt stops as soon as it skips the amount of <em>working</em> time defined by the <code>duration</code> and <code>unit</code> arguments. Skipped non-working time simply will not\nbe counted.</p>\n<p><strong>Note</strong> that this method behaves differently from the <a href="#Scheduler/data/Calendar#function-skipNonWorkingTime">skipNonWorkingTime</a> - that method stops as soon as it encounters the non-working time.\nThis method stops as soon as it accumulate enough skipped working time.</p>',parameters:[{name:"date",type:"Date",description:"<p>A starting point</p>"},{name:"duration",type:"Number",description:"<p>The duration of the working time. To skip working time in backward direction pass a negative value.</p>"},{name:"unit",type:"String",description:'<p>One of the units of the <a href="#Core/helper/DateHelper">Core.helper.DateHelper</a> class.</p>'}],scope:"instance",returns:{type:"Date"}},{name:"getAvailabilityIntervalsFor",description:"<p>Returns the availability intervals of a specific day. Potentially can consult a parent calendar.</p>",parameters:[{name:"timeDate",type:["Date","Number"],description:"<p>A date or timestamp</p>"}],scope:"instance",returns:{type:"Array.<Object>",description:"<p>Array of objects, like:</p>\n<pre><code> {\n     startDate       : new Date(...),\n     endDate         : new Date(...)\n }</code></pre>"}}]},{name:"module:Scheduler/data/CrudManager",classDescription:"<p>The Crud Manager (or &quot;CM&quot;) is a class implementing centralized loading and saving of data in multiple stores.\nLoading the stores and saving all changes is done using a single AJAX request.\nThis class uses JSON as the data encoding format.</p>\n<h2>Scheduler stores</h2>\n<p>The class supports Scheduler specific stores (namely: resource, event and assignment stores).\nFor these stores, the CM has separate configs (<a href=\"#Scheduler/data/CrudManager#config-resourceStore\">resourceStore</a>, <a href=\"#Scheduler/data/CrudManager#config-eventStore\">eventStore</a>,\n<a href=\"#Scheduler/data/CrudManager#config-assignmentStore\">assignmentStore</a>) to register them. The class can also grab them from the task store (this behavior\ncan be changed using <a href=\"#Scheduler/data/CrudManager#config-addRelatedStores\">addRelatedStores</a> config).</p>\n<pre class=\"prettyprint source lang-javascript\"><code>const crudManager = new CrudManager({\n    autoLoad        : true,\n    resourceStore   : resourceStore,\n    eventStore      : eventStore,\n    assignmentStore : assignmentStore,\n    transport       : {\n        load : {\n            url : 'php/read.php'\n        },\n        sync : {\n            url : 'php/save.php'\n        }\n    }\n});\n</code></pre>\n<h2>AJAX request configuration</h2>\n<p>To configure AJAX request parameters please take a look at the\n<a href=\"#Scheduler/crud/transport/AjaxTransport\">AjaxTransport</a> docs.</p>\n<pre class=\"prettyprint source lang-javascript\"><code>const crudManager = new CrudManager({\n    autoLoad        : true,\n    resourceStore   : resourceStore,\n    eventStore      : eventStore,\n    assignmentStore : assignmentStore,\n    transport       : {\n        load    : {\n            url         : 'php/read.php',\n            // use GET request\n            method      : 'GET',\n            // pass request JSON in &quot;rq&quot; parameter\n            paramName   : 'rq',\n            // extra HTTP request parameters\n            params      : {\n                foo     : 'bar'\n            },\n            // pass some extra Fetch API option\n            credentials : 'include'\n        },\n        sync : {\n            url : 'php/save.php'\n        }\n    }\n});\n</code></pre>\n<h2>Load order</h2>\n<p>The CM is aware of the proper load order for Scheduler specific stores so you don't need to worry about it.\nIf you provide any extra stores (using <a href=\"#Scheduler/crud/AbstractCrudManager#config-stores\">stores</a> config) they will be\nadded to the start of collection before the Scheduler specific stores.\nIf you need a different loading order, you should use <a href=\"#Scheduler/crud/AbstractCrudManager#function-addStore\">addStore</a> method to\nregister your store:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>const crudManager = new CrudManager({\n    resourceStore   : resourceStore,\n    eventStore      : eventStore,\n    assignmentStore : assignmentStore,\n    // extra user defined stores will get to the start of collection\n    // so they will be loaded first\n    stores          : [ store1, store2 ],\n    transport       : {\n        load : {\n            url : 'php/read.php'\n        },\n        sync : {\n            url : 'php/save.php'\n        }\n    }\n});\n\n// append store3 to the end so it will be loaded last\ncrudManager.addStore(store3);\n\n// now when we registered all the stores let's load them\ncrudManager.load();\n</code></pre>\n<h2>Features</h2>\n<p>The Crud Manager can automatically add Scheduler feature stores to the tracked collection.\nFor example, it tracks TimeRanges <a href=\"#Scheduler/feature/TimeRanges#config-store\">store</a>.\nYou can receive a tracked store by its id:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>const timeRangesStore = crudManager.getStore('timeRanges');\n</code></pre>",extends:["Scheduler/crud/AbstractCrudManager"],mixes:["Scheduler/crud/encoder/JsonEncoder","Scheduler/crud/transport/AjaxTransport"],constructor:{name:"constructor"},filename:"CrudManager.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/data",lineno:122,configs:[{name:"resourceStore",description:"<p>A store with resources (or its descriptor).</p>",type:["Scheduler.data.ResourceStore","Object"],scope:"inner"},{name:"eventStore",description:'<p>A store with events (or its descriptor).</p>\n<pre class="prettyprint source"><code>crudManager : {\n     eventStore {\n         storeClass : MyEventStore\n     }\n}\n</code></pre>',type:["Scheduler.data.EventStore","Object"],scope:"inner"},{name:"assignmentStore",description:"<p>A store with assignments (or its descriptor).</p>",type:["Scheduler.data.AssignmentStore","Object"],scope:"inner"},{name:"dependencyStore",description:"<p>A store with dependencies (or its descriptor).</p>",type:["Scheduler.data.DependencyStore","Object"],scope:"inner"},{name:"addRelatedStores",description:'<p>When set to <code>true</code> this class will try to get the <a href="#Scheduler/data/CrudManager#config-resourceStore">resourceStore</a> and <a href="#Scheduler/data/CrudManager#config-assignmentStore">assignmentStore</a> stores from\nthe specified <a href="#Scheduler/data/CrudManager#config-eventStore">eventStore</a> instance.</p>',type:"Boolean",scope:"inner"}],properties:[{name:"timeRangesStore",description:"<p>Returns store associated with timeRanges feature, if feature is enabled.</p>",scope:"instance",readonly:true,properties:[{type:{names:["Core.data.Store"]}}]},{name:"resourceStore",description:"<p>Get/set the resource store bound to the CRUD manager.</p>",scope:"instance",properties:[{type:{names:["Scheduler.data.ResourceStore"]}}]},{name:"eventStore",description:"<p>Get/set the event store bound to the CRUD manager.</p>",scope:"instance",properties:[{type:{names:["Scheduler.data.EventStore"]}}]},{name:"assignmentStore",description:"<p>Get/set the assignment store bound to the CRUD manager.</p>",scope:"instance",properties:[{type:{names:["Scheduler.data.AssignmentStore"]}}]},{name:"dependencyStore",description:"<p>Get/set the dependency store bound to the CRUD manager.</p>",scope:"instance",properties:[{type:{names:["Scheduler.data.DependencyStore"]}}]}]},{name:"module:Scheduler/data/DependencyStore",classDescription:'<p>A class representing a collection of dependencies between events in the <a href="#Scheduler/data/EventStore">Scheduler.data.EventStore</a>.\nContains a collection of <a href="#Scheduler/model/DependencyModel">Scheduler.model.DependencyModel</a> records.</p>',extends:["Core/data/AjaxStore"],constructor:{name:"constructor"},filename:"DependencyStore.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/data",lineno:17,properties:[{name:"loadPriority",access:"private",description:"<p>CrudManager must load stores in the correct order. Lowest first.</p>",scope:"inner"},{name:"syncPriority",access:"private",description:"<p>CrudManager must sync stores in the correct order. Lowest first.</p>",scope:"inner"},{name:"eventStore",description:"<p>Get/set the associated event store instance.</p>",scope:"instance",properties:[{type:{names:["Scheduler.data.EventStore"]}}]}],events:[{name:"eventstorechange",description:'<p>Fires when a new event store is set via the <a href="#Scheduler/data/DependencyStore#property-eventStore">eventStore</a> property.</p>',parameters:[{name:"this",type:"Scheduler.data.DependencyStore"},{name:"newEventStore",type:"Scheduler.data.EventStore"},{name:"oldEventStore",type:"Scheduler.data.EventStore"}]}],functions:[{name:"getEventDependencies",description:"<p>Returns all dependencies for a certain event (both incoming and outgoing)</p>",parameters:[{name:"event",type:"Scheduler.model.EventModel"},{name:"flat",type:"Boolean",default:false,optional:true}],scope:"instance",returns:{type:"Array.<Scheduler.model.DependencyModel>"}},{name:"getEventPredecessors",description:"<p>Returns all incoming dependencies of the given event</p>",parameters:[{name:"event",type:"Scheduler.model.EventModel"},{name:"flat",type:"Boolean",default:false,optional:true}],scope:"instance",returns:{type:"Array.<Scheduler.model.DependencyModel>"}},{name:"getEventSuccessors",description:"<p>Returns all outcoming dependencies of a event</p>",parameters:[{name:"event",type:"Scheduler.model.EventModel"},{name:"flat",type:"Boolean",default:false,optional:true}],scope:"instance",returns:{type:"Array.<Scheduler.model.DependencyModel>"}},{name:"getDependencyForSourceAndTargetEvents",description:"<p>Returns dependency model instance linking tasks with given ids. The dependency can be forward (from 1st\ntask to 2nd) or backward (from 2nd to 1st).</p>",parameters:[{name:"sourceEvent",type:["Scheduler.model.EventModel","String"],description:"<p>1st event</p>"},{name:"targetEvent",type:["Scheduler.model.EventModel","String"],description:"<p>2nd event</p>"}],scope:"instance",returns:{type:"Scheduler.model.DependencyModel"}},{name:"getEventsLinkingDependency",description:"<p>Returns a dependency model instance linking given events if such dependency exists in the store.\nThe dependency can be forward (from 1st event to 2nd) or backward (from 2nd to 1st).</p>",parameters:[{name:"sourceEvent",type:["Scheduler.model.EventModel","String"]},{name:"targetEvent",type:["Scheduler.model.EventModel","String"]}],scope:"instance",returns:{type:"Scheduler.model.DependencyModel"}},{name:"isValidDependency",description:'<p>Validation method used to validate a dependency. Override and return <code>true</code> to indicate that an\nexisting dependency between two tasks is valid. For a new dependency being created please see\n<a href="#Scheduler/data/DependencyStore#function-isValidDependencyToCreate">isValidDependencyToCreate</a>.</p>',parameters:[{name:"dependencyOrFromId",type:["Scheduler.model.DependencyModel","Number","String"],description:"<p>The dependency model or from event id</p>"},{name:"toId",type:["Number","String"],description:"<p>To event id if the first parameter is not a dependency model instance</p>",optional:true},{name:"type",type:"Number",description:'<p>Dependency <a href="#Scheduler/model/DependencyBaseModel#property-Type-static">Type</a>  if the first parameter is not a dependency model instance.</p>',optional:true}],scope:"instance",returns:{type:"Boolean"}},{name:"isValidDependencyToCreate",description:"<p>Validation method used to validate a dependency while creating. Override and return <code>true</code> to indicate that\na new dependency is valid to be created.</p>",parameters:[{name:"fromId",type:["Number","String"],description:"<p><code>From</code> event id</p>"},{name:"toId",type:["Number","String"],description:"<p><code>To</code> event id</p>"},{name:"type",type:"Number",description:'<p>Dependency <a href="#Scheduler/model/DependencyBaseModel#property-Type-static">Type</a></p>'}],scope:"instance",returns:{type:"Boolean"}},{name:"getHighlightedDependencies",description:"<p>Returns all dependencies highlighted with the given CSS class</p>",parameters:[{name:"cls",type:"String"}],scope:"instance",returns:{type:"Array.<Scheduler.model.DependencyBaseModel>"}}]},{name:"module:Scheduler/data/EventStore",classDescription:'<p>This is a class holding all the <a href="#Scheduler/model/EventModel">events</a> to be rendered into a <a href="#Scheduler/view/Scheduler">Scheduler</a>.\nThis class only accepts a model class inheriting from <a href="#Scheduler/model/EventModel">Scheduler.model.EventModel</a>.</p>',extends:["Core/data/AjaxStore"],mixes:["Scheduler/data/mixin/EventStoreMixin"],constructor:{name:"constructor"},filename:"EventStore.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/data",lineno:17,properties:[{name:"loadPriority",access:"private",description:"<p>CrudManager must load stores in the correct order. Lowest first.</p>",scope:"inner"},{name:"syncPriority",access:"private",description:"<p>CrudManager must sync stores in the correct order. Lowest first.</p>",scope:"inner"},{name:"modelClass",description:"<p>Class used to represent records. Defaults to class EventModel.</p>",scope:"inner",category:"Records",typings:"{ new(data: object): EventModel }",properties:[{type:{names:["Scheduler.model.EventModel"]}}]}],configs:[{name:"modelClass",description:"<p>Class used to represent records</p>",type:"Scheduler.model.EventModel",scope:"inner",category:"Common",typings:"{ new(data: object): EventModel }"}],functions:[{name:"append",description:"<p>Appends a new record to the store</p>",parameters:[{name:"record",type:"Scheduler.model.EventModel",description:"<p>The record to append to the store</p>"}],scope:"instance"}]},{name:"module:Scheduler/data/ResourceStore",classDescription:'<p>This is a class holding the collection the <a href="#Scheduler/model/ResourceModel">resources</a> to be rendered into a\n<a href="#Scheduler/view/Scheduler">scheduler</a>.</p>',extends:["Core/data/AjaxStore"],mixes:["Scheduler/data/mixin/ResourceStoreMixin"],constructor:{name:"constructor"},filename:"ResourceStore.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/data",lineno:16,properties:[{name:"loadPriority",access:"private",description:"<p>CrudManager must load stores in the correct order. Lowest first.</p>",scope:"inner"},{name:"syncPriority",access:"private",description:"<p>CrudManager must sync stores in the correct order. Lowest first.</p>",scope:"inner"}]},{name:"module:Scheduler/data/ResourceTimeRangeStore",classDescription:'<p>A class representing a collection of resource time ranges.\nContains a collection of <a href="#Scheduler/model/ResourceTimeRangeModel">Scheduler.model.ResourceTimeRangeModel</a> records.</p>',extends:["Core/data/AjaxStore"],constructor:{name:"constructor"},filename:"ResourceTimeRangeStore.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/data",lineno:14,properties:[{name:"loadPriority",access:"private",description:"<p>CrudManager must load stores in the correct order. Lowest first.</p>",scope:"inner"},{name:"syncPriority",access:"private",description:"<p>CrudManager must sync stores in the correct order. Lowest first.</p>",scope:"inner"}],configs:[{name:"resourceStore",description:"<p>This store should be linked to a ResourceStore to link the time ranges to resources</p>",type:"Scheduler.data.ResourceStore",scope:"inner"}]},{name:"module:Scheduler/data/TimeAxis",classDescription:'<p>A class representing the time axis of the scheduler. The scheduler timescale is based on the ticks generated by this class.\nThis is a pure &quot;data&quot; (model) representation of the time axis and has no UI elements.</p>\n<p>The time axis can be <a href="#Scheduler/data/TimeAxis#config-continuous">continuous</a> or not. In continuous mode, each timespan starts where the previous ended, and in non-continuous mode\nthere can be gaps between the ticks.\nA non-continuous time axis can be used when want to filter out certain periods of time (like weekends) from the time axis.</p>\n<p>To create a non-continuos time axis you have 2 options. First, you can create a time axis containing only the time spans of interest.\nTo do that, subclass this class and override the <a href="#Scheduler/data/TimeAxis#function-generateTicks">generateTicks</a> method.</p>\n<p>The other alternative is to call the <a href="#Scheduler/data/TimeAxis#function-filterBy">filterBy</a> method, passing a function to it which should return <code>false</code> if the time tick should be filtered out.\nCalling <a href="#Core/data/mixin/StoreFilter#function-clearFilters">clearFilters</a> will return you to a full time axis.</p>',extends:["Core/data/Store"],constructor:{name:"constructor"},filename:"TimeAxis.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/data",lineno:27,events:[{name:"beforereconfigure",description:"<p>Fires before the timeaxis is about to be reconfigured (e.g. new start/end date or unit/increment). Return false to abort the operation.</p>",parameters:[{name:"source",type:"Scheduler.data.TimeAxis",description:"<p>The time axis instance</p>"},{name:"startDate",type:"Date",description:"<p>The new time axis start date</p>"},{name:"endDate",type:"Date",description:"<p>The new time axis end date</p>"}]},{name:"endreconfigure",access:"private",description:"<p>Event that is triggered when we end reconfiguring and everything UI-related should be done</p>"},{name:"reconfigure",description:"<p>Fires when the timeaxis has been reconfigured (e.g. new start/end date or unit/increment)</p>",parameters:[{name:"source",type:"Scheduler.data.TimeAxis",description:"<p>The time axis instance</p>"}]},{name:"invalidFilter",description:"<p>Fires if all the ticks in the timeaxis are filtered out. After firing the filter is cleared to return the time\naxis to a valid state.</p>",parameters:[{name:"source",type:"Scheduler.data.TimeAxis",description:"<p>The time axis instance</p>"}]}],configs:[{name:"continuous",description:"<p>Set to false if the timeline is not continuous, e.g. the next timespan does not start where the previous ended (for example skipping weekends etc).</p>",type:"Boolean",scope:"inner",defaultvalue:true},{name:"include",description:'<p>Include only certain hours or days in the time axis (makes it <code>continuous : false</code>). Accepts and object\nwith <code>day</code> and <code>hour</code> properties:</p>\n<pre class="prettyprint source"><code>const scheduler = new Scheduler({\n    timeAxis : {\n        include : {\n             // Do not display hours after 17 or before 9 (only display 9 - 17). The `to´ value is not\n             // included in the time axis\n             hour : {\n                 from : 9,\n                 to   : 17\n             },\n             // Do not display sunday or saturday\n             day : [0, 6]\n        }\n    }\n}\n</code></pre>\n<p>In most cases we recommend that you use Scheduler\'s workingTime config instead. It is easier to use and\nmakes sure all parts of the Scheduler gets updated.</p>',type:"Object",scope:"inner"},{name:"autoAdjust",description:'<p>Automatically adjust the timespan when generating ticks with <a href="#Scheduler/data/TimeAxis#function-generateTicks">generateTicks</a> according to\nthe <code>viewPreset</code> configuration. Setting this to false may lead to shifting time/date of ticks.</p>',type:"Boolean",scope:"inner",defaultvalue:true}],functions:[{name:"reconfigure",access:"private",description:"<p>Reconfigures the time axis based on the config object supplied and generates the new 'ticks'.</p>",parameters:[{name:"config",type:"Object"},{name:"suppressRefresh",type:"Boolean",default:false,optional:true}],scope:"instance"},{name:"setTimeSpan",description:"<p>Changes the time axis timespan to the supplied start and end dates.</p>",parameters:[{name:"newStartDate",type:"Date",description:"<p>The new start date</p>"},{name:"newEndDate",type:"Date",description:"<p>The new end date</p>"}],scope:"instance"},{name:"shift",description:'<p>Moves the time axis by the passed amount and unit.</p>\n<p>NOTE: When using a filtered TimeAxis the result of <code>shift()</code> cannot be guaranteed, it might shift into a\nfiltered out span. It tries to be smart about it by shifting from unfiltered start and end dates.\nIf that solution does not work for your filtering setup, please call <a href="#Scheduler/data/TimeAxis#function-setTimeSpan">setTimeSpan</a> directly\ninstead.</p>',parameters:[{name:"amount",type:"Number",description:"<p>The number of units to jump</p>"},{name:"unit",type:"String",description:"<p>The unit (Day, Week etc)</p>",optional:true}],scope:"instance"},{name:"shiftNext",description:'<p>Moves the time axis forward in time in units specified by the view preset <code>shiftUnit</code>, and by the amount specified by the <code>shiftIncrement</code>\nconfig of the current view preset.</p>\n<p>NOTE: When using a filtered TimeAxis the result of <code>shiftNext()</code> cannot be guaranteed, it might shift into a\nfiltered out span. It tries to be smart about it by shifting from unfiltered start and end dates.\nIf that solution does not work for your filtering setup, please call <a href="#Scheduler/data/TimeAxis#function-setTimeSpan">setTimeSpan</a> directly\ninstead.</p>',parameters:[{name:"amount",type:"Number",description:"<p>The number of units to jump forward</p>",optional:true}],scope:"instance"},{name:"shiftPrevious",description:'<p>Moves the time axis backward in time in units specified by the view preset <code>shiftUnit</code>, and by the amount specified by the <code>shiftIncrement</code> config of the current view preset.</p>\n<p>NOTE: When using a filtered TimeAxis the result of <code>shiftPrev()</code> cannot be guaranteed, it might shift into a\nfiltered out span. It tries to be smart about it by shifting from unfiltered start and end dates.\nIf that solution does not work for your filtering setup, please call <a href="#Scheduler/data/TimeAxis#function-setTimeSpan">setTimeSpan</a> directly\ninstead.</p>',parameters:[{name:"amount",type:"Number",description:"<p>The number of units to jump backward</p>",optional:true}],scope:"instance"},{name:"filterBy",description:"<p>Filter the time axis by a function. The passed function will be called with each tick in time axis.\nIf the function returns true, the 'tick' is included otherwise it is filtered. If all ticks are filtered out\nthe time axis is considered invalid, triggering <code>invalidFilter</code> and then removing the filter.</p>",parameters:[{name:"fn",type:"function",description:"<p>The function to be called, it will receive an object with startDate/endDate properties, and 'index' of the tick.</p>"},{name:"thisObj",type:"Object",description:"<p><code>this</code> reference for the function</p>",optional:true}],scope:"instance"},{name:"roundDate",access:"private",description:"<p>Rounds the date to nearest unit increment</p>",scope:"instance"},{name:"generateTicks",description:'<p>Method generating the ticks for this time axis. Should return an array of ticks. Each tick is an object of the following structure:</p>\n<pre class="prettyprint source"><code>{\n   startDate : ..., // start date\n   endDate   : ...  // end date\n}\n</code></pre>\n<p>Take notice, that this function either has to be called with <code>start</code>/<code>end</code> parameters, or create those variables.</p>\n<p>To see it in action please check out our <a href="https://bryntum.com/examples/scheduler/timeaxis/">TimeAxis</a> example and navigate to &quot;Compressed non-working time&quot; tab.</p>',parameters:[{name:"axisStartDate",type:"Date",description:"<p>The start date of the interval</p>"},{name:"axisEndDate",type:"Date",description:"<p>The end date of the interval</p>"},{name:"unit",type:"String",description:"<p>The unit of the time axis</p>"},{name:"increment",type:"Number",description:"<p>The increment for the unit specified.</p>"}],scope:"instance",returns:{type:"Array",description:"<p>ticks The ticks representing the time axis</p>"}},{name:"getTickFromDate",description:"<p>Gets a tick &quot;coordinate&quot; representing the date position on the time scale. Returns -1 if the date is not part of the time axis.</p>",parameters:[{name:"date",type:"Date",description:"<p>the date</p>"}],scope:"instance",returns:{type:"Number",description:"<p>the tick position on the scale or -1 if the date is not part of the time axis</p>"}},{name:"getDateFromTick",description:"<p>Gets the time represented by a tick &quot;coordinate&quot;.</p>",parameters:[{name:"tick",type:"Number",description:"<p>the tick &quot;coordinate&quot;</p>"},{name:"roundingMethod",type:"String",description:"<p>The rounding method to use</p>",optional:true}],scope:"instance",returns:{type:"Date",description:"<p>The date to represented by the tick &quot;coordinate&quot;, or null if invalid.</p>"}},{name:"updateTickCache",access:"private",description:"<p>Caches ticks and start/end dates for faster processing during rendering of events.</p>",scope:"instance"},{name:"dateInAxis",description:"<p>Returns true if the passed date is inside the span of the current time axis.</p>",parameters:[{name:"date",type:"Date",description:"<p>The date to query for</p>"}],scope:"instance",returns:{type:"Boolean",description:"<p>true if the date is part of the timeaxis</p>"}},{name:"timeSpanInAxis",description:"<p>Returns true if the passed timespan is part of the current time axis (in whole or partially).</p>",parameters:[{name:"start",type:"Date",description:"<p>The start date</p>"},{name:"end",type:"Date",description:"<p>The end date</p>"}],scope:"instance",returns:{type:"Boolean",description:"<p>true if the timespan is part of the timeaxis</p>"}},{name:"forEachAuxInterval",access:"internal",description:"<p>Calls the supplied iterator function once per interval. The function will be called with three parameters, start date and end date and an index.</p>",parameters:[{name:"unit",type:"String",description:"<p>The unit to use when iterating over the timespan</p>"},{name:"increment",type:"Number",description:"<p>The increment to use when iterating over the timespan</p>",default:1},{name:"iteratorFn",type:"function",description:"<p>The function to call</p>"},{name:"thisObj",type:"Object",description:"<p><code>this</code> reference for the function</p>",optional:true}],scope:"instance"}],properties:[{name:"viewPreset",description:"<p>Get/set currently used preset</p>",scope:"instance",properties:[{type:{names:["Scheduler.preset.ViewPreset"]}}]},{name:"isContinuous",description:"<p>Returns <code>true</code> if the time axis is continuous (will return <code>false</code> when filtered)</p>",scope:"instance",returns:[{type:{names:["Boolean"]}}]},{name:"startDate",description:"<p>Method to get the current start date of the time axis.</p>",scope:"instance",properties:[{type:{names:["Date"]}}]},{name:"endDate",description:"<p>Method to get a the current end date of the time axis</p>",scope:"instance",properties:[{type:{names:["Date"]}}]},{name:"ticks",description:"<p>Returns the ticks of the timeaxis in an array of objects with a &quot;start&quot; and &quot;end&quot; date.</p>",scope:"instance",returns:[{type:{names:["Array.<Object>"]},description:"<p>the ticks on the scale</p>"}]}]},{name:"module:Scheduler/data/api/AssignmentAPI",description:"<p>Assignment model data API mixin</p>\n<p>The mixin should be mixed alongside with other API mixins, because it might rely on them.</p>",mixin:true,constructor:{name:"constructor"},filename:"AssignmentAPI.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/data/api",lineno:14},{name:"module:Scheduler/data/api/BatchAPI",description:"<p>Propagation batch API mixin.</p>\n<p>For the basic Scheduler methods in this mixin are noop, they are overriden in Scheduler Pro batch API mixin, where batching makes sense.</p>",mixin:true,constructor:{name:"constructor"},filename:"BatchAPI.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/data/api",lineno:16,functions:[{name:"beginPropagationBatch",description:"<p>Starts batch of operations which naturally will end with propagation process. This makes sence only in Scheduler Pro\nenvironment for the basic Scheduler this operation is noop.</p>",scope:"instance"},{name:"endPropagationBatch",description:"<p>Ends batch of operations (which naturally will end with propagation process each) with single finalizing\ncall to projects propagate method. This makes sense only in Scheduler Pro/Gantt environment for the basic\nScheduler this operation is noop.</p>",scope:"instance",returns:{type:"Promise",description:"<p>For the basic Scheduler the promise will be initially resolved</p>"},async:true}]},{name:"module:Scheduler/data/api/DataAPI",description:"<p>This mixin combines all data layer APIs and provides a way to call API method regardless\nif it conflicts with host class method.</p>",mixin:true,constructor:{name:"constructor"},filename:"DataAPI.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/data/api",lineno:21,properties:[{name:"dataApi",description:"<p>Data layer API gateway</p>",scope:"instance",properties:[{type:{names:["Object"]}}]}]},{name:"module:Scheduler/data/api/DependencyAPI",description:"<p>Dependency model data API mixin</p>\n<p>The mixin should be mixed alongside with other API mixins, because it might rely on them.</p>",mixin:true,constructor:{name:"constructor"},filename:"DependencyAPI.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/data/api",lineno:14},{name:"module:Scheduler/data/api/EventAPI",description:"<p>Event model data API mixin</p>\n<p>The mixin should be mixed alongside with other API mixins, because it might rely on them.</p>",mixin:true,constructor:{name:"constructor"},filename:"EventAPI.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/data/api",lineno:14},{name:"module:Scheduler/data/api/ResourceAPI",description:"<p>Resource model data API mixin</p>\n<p>The mixin should be mixed alongside with other API mixins, because it might rely on them.</p>",mixin:true,constructor:{name:"constructor"},filename:"ResourceAPI.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/data/api",lineno:14},{name:"module:Scheduler/data/mixin/EventStoreMixin",description:'<p>This is a mixin, containing functionality related to managing events.</p>\n<p>It is consumed by the regular <a href="#Scheduler/data/EventStore">Scheduler.data.EventStore</a> class and the Gantt <code>TaskStore</code> classes\nto allow data sharing between a Gantt chart and a Scheduler.</p>',mixin:true,constructor:{name:"constructor"},filename:"EventStoreMixin.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/data/mixin",lineno:22,properties:[{name:"resourceStore",description:"<p>Get/set the resource store for this store</p>",scope:"instance",properties:[{type:{names:["Scheduler.data.ResourceStore"]}}]},{name:"assignmentStore",description:"<p>Get/set assignment store this event store is using by default</p>",scope:"instance",properties:[{type:{names:["Scheduler.data.AssignmentStore"]}}]},{name:"dependencyStore",description:"<p>Get/set a dependecy store instance this event store is associated with\nGet/set a dependecy store instance this event store is associated with</p>",scope:"instance",properties:[{type:{names:["Scheduler.data.DependencyStore"]}}]}],events:[{name:"resourcestorechange",description:'<p>Fires when new resource store is set via <a href="#Scheduler/data/mixin/EventStoreMixin#property-resourceStore">resourceStore</a> setter.</p>',parameters:[{name:"this",type:"Scheduler.data.EventStore"},{name:"newResourceStore",type:"Scheduler.data.ResourceStore"},{name:"oldResourceStore",type:"Scheduler.data.ResourceStore"}]},{name:"assignmentStoreChange",description:'<p>Fires when new assignment store is set via <a href="#Scheduler/data/mixin/EventStoreMixin#property-assignmentStore">assignmentStore</a> setter.</p>',parameters:[{name:"this",type:"Scheduler.data.EventStore"},{name:"newAssignmentStore",type:"Scheduler.data.AssignmentStore"},{name:"oldAssignmentStore",type:"Scheduler.data.AssignmentStore"}]},{name:"dependencystorechange",description:'<p>Fires when new dependency store is set via <a href="#Scheduler/data/mixin/EventStoreMixin#property-dependencyStore">dependencyStore</a> setter.</p>',parameters:[{name:"this",type:"Scheduler.data.EventStore"},{name:"newDependencyStore",type:"Scheduler.data.DependencyStore"},{name:"oldDependencyStore",type:"Scheduler.data.DependencyStore"}]}],configs:[{name:"assignmentStore",description:"<p>Provide assignment store to enable multiple connections between events and resources</p>",type:"Scheduler.data.AssignmentStore",scope:"inner"}],functions:[{name:"createModelPersistencyManager",access:"internal",description:"<p>Creates and returns model persistency manager</p>",scope:"instance",returns:{type:"Scheduler.data.util.ModelPersistencyManager"}},{name:"getEventsInTimeSpan",description:"<p>Returns events between the supplied start and end date</p>",parameters:[{name:"start",type:"Date",description:"<p>The start date</p>"},{name:"end",type:"Date",description:"<p>The end date</p>"},{name:"allowPartial",type:"Boolean",description:"<p>false to only include events that start and end inside of the span</p>",default:true},{name:"onlyAssigned",type:"Boolean",description:"<p>true to only include events that are assigned to a resource</p>",default:false}],scope:"instance",category:"Events",returns:{type:"Array.<Scheduler.model.EventModel>",description:"<p>the events</p>"}},{name:"getEventsByStartDate",description:"<p>Returns all events that starts on the specified day.</p>",parameters:[{name:"start",description:"<p>Start date</p>"}],scope:"instance",category:"Events",returns:{type:"Array.<Scheduler.model.EventModel>",description:"<p>Events starting on specified day</p>"}},{name:"forEachScheduledEvent",description:"<p>Calls the supplied iterator function once for every scheduled event, providing these arguments</p>\n<ul>\n<li>event : the event record</li>\n<li>startDate : the event start date</li>\n<li>endDate : the event end date</li>\n</ul>\n<p>Returning false cancels the iteration.</p>",parameters:[{name:"fn",type:"function",description:"<p>iterator function</p>"},{name:"thisObj",type:"Object",description:"<p><code>this</code> reference for the function</p>"}],scope:"instance",category:"Events"},{name:"getTotalTimeSpan",description:"<p>Returns an object defining the earliest start date and the latest end date of all the events in the store.</p>",scope:"instance",category:"Events",returns:{type:"Object",description:"<p>An object with 'start' and 'end' Date properties (or null values if data is missing).</p>"}},{name:"isEventPersistable",description:"<p>Checks if given event record is persistable.\nIn case assignment store is used to assign events to resources and vise versa event is considered to be always\npersistable. Otherwise backward compatible logic is used, i.e. event is considered to be persistable when\nresources it's assigned to are not phantom.</p>",parameters:[{name:"event",type:"Scheduler.model.EventModel"}],scope:"instance",category:"Events",returns:{type:"Boolean"}},{name:"isDateRangeAvailable",description:"<p>Checks if a date range is allocated or not for a given resource.</p>",parameters:[{name:"start",type:"Date",description:"<p>The start date</p>"},{name:"end",type:"Date",description:"<p>The end date</p>"},{name:"excludeEvent",type:"Scheduler.model.EventModel",description:"<p>An event to exclude from the check (or null)</p>"},{name:"resource",type:"Scheduler.model.ResourceModel",description:"<p>The resource</p>"}],scope:"instance",category:"Resource",returns:{type:"Boolean",description:"<p>True if the timespan is available for the resource</p>"}},{name:"filterEventsForResource",access:"private",description:"<p>Filters the events associated with a resource, based on the function provided. An array will be returned for those\nevents where the passed function returns true.</p>",parameters:[{name:"resource",type:"Scheduler.model.ResourceModel"},{name:"fn",type:"function",description:"<p>The function</p>"},{name:"thisObj",type:"Object",description:"<p><code>this</code> reference for the function</p>",optional:true}],scope:"instance",category:"Resource",returns:{type:"Array.<Scheduler.model.EventModel>",description:"<p>the events in the time span</p>"}},{name:"getResourcesForEvent",description:"<p>Returns all resources assigned to an event.</p>",parameters:[{name:"event",type:["Scheduler.model.EventModel","String","Number"]}],scope:"instance",category:"Resource",returns:{type:"Array.<Scheduler.model.ResourceModel>"}},{name:"getEventsForResource",description:"<p>Returns all events assigned to a resource</p>",parameters:[{name:"resource",type:["Scheduler.model.ResourceModel","String","Number"],description:"<p>Resource or resource id</p>"}],scope:"instance",category:"Resource",returns:{type:"Array.<Scheduler.model.EventModel>"}},{name:"getAssignmentsForEvent",description:'<p>Returns all assignments for a given event.\nWorks only if <a href="#Scheduler/data/mixin/EventStoreMixin#property-assignmentStore">assignmentStore</a> is defined, otherwise returns an empty array.</p>',parameters:[{name:"event",type:["Scheduler.model.EventModel","String","Number"]}],scope:"instance",category:"Assignment",returns:{type:"Array.<Scheduler.model.AssignmentModel>"}},{name:"getAssignmentsForResource",description:'<p>Returns all assignments for a given resource.\nWorks only if <a href="#Scheduler/data/mixin/EventStoreMixin#property-assignmentStore">assignmentStore</a> is defined, otherwise returns an empty array.</p>',parameters:[{name:"resource",type:["Scheduler.model.ResourceModel","String","Number"]}],scope:"instance",category:"Assignment",returns:{type:"Array.<Scheduler.model.AssignmentModel>"}},{name:"assignEventToResource",description:"<p>Creates and adds assignment record for a given event and a resource.</p>",parameters:[{name:"event",type:["Scheduler.model.EventModel","String","number"]},{name:"resource",type:["Scheduler.model.ResourceModel","String","number","Array.<Scheduler.model.ResourceModel>","Array.<String>","Array.<number>"],description:"<p>The resource(s) to assign to the event</p>"}],scope:"instance",category:"Assignment"},{name:"unassignEventFromResource",description:"<p>Removes assignment record for a given event and a resource.</p>",parameters:[{name:"event",type:["Scheduler.model.EventModel","String","Number"]},{name:"resource",type:["Scheduler.model.ResourceModel","String","Number"]}],scope:"instance",category:"Assignment"},{name:"reassignEventFromResourceToResource",description:"<p>Reassigns an event from an old resource to a new resource</p>",parameters:[{name:"event",type:"Scheduler.model.EventModel",description:"<p>An event or id of the event to reassign</p>"},{name:"oldResource",type:["Scheduler.model.ResourceModel","Array.<Scheduler.model.ResourceModel>"],description:"<p>A resource or id to unassign from</p>"},{name:"newResource",type:["Scheduler.model.ResourceModel","Array.<Scheduler.model.ResourceModel>"],description:"<p>A resource or id to assign to</p>"}],scope:"instance",category:"Assignment"},{name:"isEventAssignedToResource",description:"<p>Checks whether an event is assigned to a resource.</p>",parameters:[{name:"event",type:["Scheduler.model.EventModel","String","Number"]},{name:"resource",type:["Scheduler.model.ResourceModel","String","Number"]}],scope:"instance",category:"Assignment",returns:{type:"Boolean"}},{name:"removeAssignmentsForEvent",description:"<p>Removes all assignments for given event</p>",parameters:[{name:"event",type:["Scheduler.model.EventModel","String","Number"]}],scope:"instance",category:"Assignment"},{name:"removeAssignmentsForResource",description:"<p>Removes all assignments for given resource</p>",parameters:[{name:"resource",type:["Scheduler.model.ResourceModel","String","Number"]}],scope:"instance",category:"Assignment"}]},{name:"module:Scheduler/data/mixin/RecurringEventsMixin",description:'<p>This mixin class provides recurring events functionality to the <a href="#Scheduler/data/EventStore">event store</a>.</p>',extends:["Scheduler/data/mixin/RecurringTimeSpansMixin"],mixin:true,constructor:{name:"constructor"},filename:"RecurringEventsMixin.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/data/mixin",lineno:13,properties:[{name:"supportsRecurringEvents",description:"<p>Indicates that the store supports recurring events.</p>",scope:"instance",defaultvalue:"true",readonly:true,properties:[{type:{names:["Boolean"]}}]}],functions:[{name:"generateOccurrencesForEventsBuffered",description:'<p>Schedules generating the occurrences of the provided recurring events in the provided time interval.\nThe method waits for <a href="#Scheduler/data/mixin/RecurringTimeSpansMixin#property-delayedCallTimeout">delayedCallTimeout</a> milliseconds timeout during which it collects repeating calls.\nEvery further call restarts the timeout. After the timeout the method processes the collected calls trying to merge startDate/endDate ranges\nto reduce the number of calls and then launches occurrences generation.</p>',parameters:[{name:"events",type:"Array.<Scheduler.model.EventModel>",description:"<p>Events to build occurrences for.</p>"},{name:"startDate",type:"Date",description:"<p>Time interval start.</p>"},{name:"endDate",type:"Date",description:"<p>Time interval end.</p>"},{name:"preserveExisting",type:"Boolean",description:"<p><code>false</code> to generate occurrences even if there is already an existing one on a calculated date.</p>",default:true,optional:true}],scope:"instance",returns:{type:"Promise"},async:true},{name:"regenerateOccurrencesForEventsBuffered",description:'<p>Schedules regenerating (removing and building back) the occurrences of the provided recurring events in the provided time interval.\nThe method waits for <a href="#Scheduler/data/mixin/RecurringTimeSpansMixin#property-delayedCallTimeout">delayedCallTimeout</a> milliseconds timeout during which it collects repeating calls.\nEvery further call restarts the timeout. After the timeout the method processes the collected calls trying to merge startDate/endDate ranges\nto reduce the number of calls and then launches new occurrences generation and removes the previous ones.</p>',parameters:[{name:"events",type:"Array.<Scheduler.model.EventModel>",description:"<p>Events to build occurrences for.</p>"},{name:"startDate",type:"Date",description:"<p>Time interval start.</p>"},{name:"endDate",type:"Date",description:"<p>Time interval end.</p>"}],scope:"instance",returns:{type:"Promise"},async:true},{name:"getRecurringEvents",description:'<p>Returns all the recurring events.</p>\n<p>**An alias for ** <a href="#Scheduler/data/mixin/RecurringTimeSpansMixin#function-getRecurringTimeSpans">getRecurringTimeSpans</a> method.</p>',scope:"instance",returns:{type:"Array.<Scheduler.model.EventModel>",description:"<p>Array of recurring events.</p>"}},{name:"getOccurrencesForEvents",description:'<p>Returns occurrences of the provided recurring events.</p>\n<p>**An alias for ** <a href="#Scheduler/data/mixin/RecurringTimeSpansMixin#function-getOccurrencesForTimeSpans">getOccurrencesForTimeSpans</a> method.</p>',parameters:[{name:"events",type:["Scheduler.model.EventModel","Array.<Scheduler.model.EventModel>"],description:"<p>Recurring events which occurrences should be retrieved.</p>"}],scope:"instance",returns:{type:"Array.<Scheduler.model.EventModel>",description:"<p>Array of the provided events occurrences.</p>"}},{name:"removeOccurrencesForEvents",description:'<p>Removes occurrences of the provided recurring events.</p>\n<p>**An alias for ** <a href="#Scheduler/data/mixin/RecurringTimeSpansMixin#function-removeOccurrencesForTimeSpans">removeOccurrencesForTimeSpans</a> method.</p>',parameters:[{name:"events",type:["Scheduler.model.EventModel","Array.<Scheduler.model.EventModel>"],description:"<p>Recurring events which occurrences should be removed.</p>"}],scope:"instance"}]},{name:"module:Scheduler/data/mixin/RecurringTimeSpansMixin",description:'<p>This mixin class provides recurring timespans functionality to a store of <a href="#Scheduler/model/TimeSpan">Scheduler.model.TimeSpan</a> models.</p>',mixin:true,constructor:{name:"constructor"},filename:"RecurringTimeSpansMixin.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/data/mixin",lineno:16,properties:[{name:"supportsRecurringTimeSpans",description:"<p>Indicates that the store supports recurring timespans.</p>",scope:"instance",defaultvalue:"true",readonly:true,properties:[{type:{names:["Boolean"]}}]},{name:"delayedCallTimeout",description:"<p>Timeout in milliseconds during which to collect calls for generating occurrences related methods.</p>",scope:"instance",defaultvalue:"100",properties:[{type:{names:["Number"]}}]},{name:"delayedCallsManager",access:"internal",description:"<p>Returns delayed calls manager</p>",scope:"instance",returns:[{type:{names:["Scheduler.data.util.DelayedCallsManager"]}}]}],functions:[{name:"buildOccurrencesForTimeSpan",access:"private",description:"<p>Builds the provided timespan occurrences for the provided timespan.</p>",scope:"instance"},{name:"regenerateOccurrencesForTimeSpansBuffered",description:'<p>Schedules regenerating (removing and building back) the occurrences of the provided recurring timespans in the provided time interval.\nThe method waits for <a href="#Scheduler/data/mixin/RecurringTimeSpansMixin#property-delayedCallTimeout">delayedCallTimeout</a> milliseconds timeout during which it collects repeating calls.\nEvery further call restarts the timeout. After the timeout the method processes the collected calls trying to merge startDate/endDate ranges\nto reduce the number of calls and then generates new occurrences and removes the previous ones.</p>',parameters:[{name:"timeSpans",type:"Array.<Scheduler.model.TimeSpan>",description:"<p>Timespans to build occurrences for.</p>"},{name:"startDate",type:"Date",description:"<p>Time interval start.</p>"},{name:"endDate",type:"Date",description:"<p>Time interval end.</p>"}],scope:"instance",returns:{type:"Promise"},async:true},{name:"generateOccurrencesForTimeSpansBuffered",description:'<p>Schedules generating the occurrences of the provided recurring timespans in the provided time interval.\nThe method waits for <a href="#Scheduler/data/mixin/RecurringTimeSpansMixin#property-delayedCallTimeout">delayedCallTimeout</a> milliseconds timeout during which it collects repeating calls.\nEvery further call restarts the timeout. After the timeout the method processes the collected calls trying to merge startDate/endDate ranges\nto reduce the number of calls and then generates occurrences.</p>',parameters:[{name:"timeSpans",type:"Array.<Scheduler.model.TimeSpan>",description:"<p>Timespans to build occurrences for.</p>"},{name:"startDate",type:"Date",description:"<p>Time interval start.</p>"},{name:"endDate",type:"Date",description:"<p>Time interval end.</p>"},{name:"preserveExisting",type:"Boolean",description:"<p><code>false</code> to generate occurrences even if there is already an existing one on a calculated date.</p>",default:true,optional:true}],scope:"instance",returns:{type:"Promise"},async:true},{name:"generateOccurrencesForTimeSpans",access:"private",description:"<p>Generates occurrences of the provided recurring timespans in the provided time interval.</p>",parameters:[{name:"timeSpans",type:"Array.<Scheduler.model.TimeSpan>",description:"<p>Timespans to build occurrences for.</p>"},{name:"startDate",type:"Date",description:"<p>Time interval start.</p>"},{name:"endDate",type:"Date",description:"<p>Time interval end.</p>"},{name:"preserveExisting",type:"Boolean",description:"<p><code>false</code> to generate occurrences even if there is already an existing one on a calculated date.</p>",default:true,optional:true}],scope:"instance"},{name:"generateOccurrencesForAll",access:"private",description:"<p>Generates occurrences for all the existing recurring timespans in the provided time interval.</p>",parameters:[{name:"startDate",type:"Date",description:"<p>Time interval start.</p>"},{name:"endDate",type:"Date",description:"<p>Time interval end.</p>"},{name:"preserveExisting",type:"Boolean",description:"<p><code>true</code> to not generate occurrences if there are already existing ones on the calculated dates.</p>",default:false,optional:true}],scope:"instance"},{name:"getRecurringTimeSpans",description:"<p>Returns all the recurring timespans.</p>",scope:"instance",returns:{type:"Array.<Scheduler.model.TimeSpan>",description:"<p>Array of recurring events.</p>"}},{name:"getOccurrencesForTimeSpans",description:"<p>Returns occurrences of the provided recurring timespans.</p>",parameters:[{name:"records",type:["Scheduler.model.TimeSpan","Array.<Scheduler.model.TimeSpan>"],description:"<p>Recurring timespans which occurrences should be retrieved.</p>"}],scope:"instance",returns:{type:"Array.<Scheduler.model.TimeSpan>",description:"<p>Array of the provided timespans occurrences.</p>"}},{name:"getOccurrencesForAll",description:"<p>Returns occurrences of all the existing recurring timespans.</p>",scope:"instance",returns:{type:"Array.<Scheduler.model.TimeSpan>",description:"<p>Array of the occurrences.</p>"}},{name:"removeOccurrencesForTimeSpans",description:"<p>Removes occurrences of the provided recurring timespans.</p>",parameters:[{name:"timeSpans",type:["Scheduler.model.TimeSpan","Array.<Scheduler.model.TimeSpan>"],description:"<p>Recurring timespans which occurrences should be removed.</p>"}],scope:"instance"},{name:"removeOccurrencesForAll",description:"<p>Removes occurrences of all the existing recurring events.</p>",scope:"instance"}],events:[{name:"occurrencesReady",description:"<p>Fires when occurrences building is done. This happens:</p>\n<ul>\n<li>after panel got rendered;</li>\n<li>on timespans store <code>refresh</code>, <code>add</code>, <code>update</code> and <code>remove</code> events;</li>\n<li>on visible timespan change.</li>\n</ul>",parameters:[{name:"source",type:"Core.data.Store",description:"<p>Timespans store.</p>"}]}]},{name:"module:Scheduler/data/mixin/ResourceStoreMixin",description:'<p>This is a mixin for the ResourceStore functionality. It is consumed by the <a href="#Scheduler/data/ResourceStore">Scheduler.data.ResourceStore</a>.</p>',mixin:true,constructor:{name:"constructor"},filename:"ResourceStoreMixin.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/data/mixin",lineno:12,properties:[{name:"eventStore",description:"<p>Get/set the associated event store instance</p>",scope:"instance",properties:[{type:{names:["Scheduler.data.EventStore"]}}]}],events:[{name:"eventstorechange",description:'<p>Fires when new event store is set via <a href="#Scheduler/data/mixin/ResourceStoreMixin#property-eventStore">eventStore</a> method.</p>',parameters:[{name:"this",type:"Scheduler.data.ResourceStore"},{name:"newEventStore",type:"Scheduler.data.EventStore"},{name:"oldEventStore",type:"Scheduler.data.EventStore"}]}]},{name:"module:Scheduler/data/util/DelayedCallsManager",classDescription:'<p>This class delays a function call in the same way <a href="#Core/helper/FunctionHelper#function-createBuffered-static">createBuffered</a> does, plus it:</p>\n<ul>\n<li>accepts a function call as a configuration object</li>\n<li>collects arguments of the wrapped function calls</li>\n<li>provides a hook that allows to process/combine the collected call arguments</li>\n<li>triggers wrapping <code>delayed${Id}Start</code>, <code>delayed${Id}End</code> events (where <code>${Id}</code> is capitalized <code>id</code> of the delayed call).</li>\n</ul>',access:"private",constructor:{name:"constructor"},filename:"DelayedCallsManager.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/data/util",lineno:19,functions:[{name:"execute",description:"<p>Schedules a delayed call.</p>",parameters:[{name:"config",type:"Object",description:"<p>Call configuration object:</p>"},{name:"config.id",type:"String",description:"<p>Call identifier. This is used as part of triggered <code>delayed${Id}Start</code>, <code>delayed${Id}End</code> events</p>",isSubParam:true},{name:"config.fn",type:"function",description:"<p>Function that should be called</p>",isSubParam:true},{name:"config.args",type:"Array.<Object>",description:"<p><code>fn</code> function arguments</p>",isSubParam:true},{name:"config.scope",type:"Object",description:"<p><code>this</code> object for <code>fn</code> function call</p>",isSubParam:true},{name:"config.beforeFn",type:"function",description:"<p>Function that should be called before real invoking of the <code>fn</code> function</p>",isSubParam:true},{name:"config.beforeFn.delayedCall",type:"Object",description:"<p>Object containing the delayed call config plus additional property:</p>",isSubParam:true},{name:"config.beforeFn.delayedCall.entries",type:"Array.<Array>",description:"<p>Array of collected call arguments</p>",isSubParam:true}],scope:"instance",returns:{type:"Promise"},async:true}]},{name:"module:Scheduler/data/util/ModelPersistencyManager",classDescription:"<p>This class manages model persistency, it listens to model stores' beforesync event and removes all non persistable\nrecords from sync operation. The logic has meaning only for CRUD-less sync operations.</p>",access:"private",constructor:{name:"constructor"},filename:"ModelPersistencyManager.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/data/util",lineno:13},{name:"module:Scheduler/data/util/recurrence/RecurrenceLegend",classDescription:"<p>A static class allowing to get a human readable description of the provided recurrence.</p>\n<pre class=\"prettyprint source lang-javascript\"><code>const event = new EventModel({ startDate : new Date(2018, 6, 3), endDate : new Date(2018, 6, 4) });\nconst recurrence = new RecurrenceModel({ frequency : 'WEEKLY', days : ['MO', 'TU', 'WE'] });\nevent.recurrence = recurrence;\n// &quot;Weekly on  Mon, Tue and Wed&quot;\nRecurrenceLegend.getLegend(recurrence);\n</code></pre>",mixes:["Core/localization/Localizable"],constructor:{name:"constructor"},filename:"RecurrenceLegend.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/data/util/recurrence",lineno:21,functions:[{name:"getLegend",description:"<p>Returns the provided recurrence description. The recurrence might be assigned to a timespan model,\nin this case the timespan start date should be provided in the second argument.</p>",parameters:[{name:"recurrence",type:"Scheduler.model.RecurrenceModel",description:"<p>Recurrence model.</p>"},{name:"timeSpanStartDate",type:"Date",description:'<p>The recurring timespan start date. Can be omitted if the recurrence is assigned to a timespan model\n(and the timespan has <a href="#Scheduler/model/TimeSpan#field-startDate">startDate</a> filled).\nThen start date will be retrieved from the model.</p>',optional:true}],scope:"static",returns:{type:"String",description:"<p>The recurrence description.</p>"}}]},{name:"module:Scheduler/eventlayout/HorizontalLayout",classDescription:'<p>Base class for HorizontalLayoutPack &amp; HorizontalLayoutStack. Should not be used directly, instead specify\n<a href="#Scheduler/view/mixin/SchedulerEventRendering#config-eventLayout">eventLayout</a> in Scheduler config (stack, pack or none):</p>',access:"private",virtual:true,examples:["let scheduler = new Scheduler({\n  eventLayout: 'stack'\n});"],constructor:{name:"constructor"},filename:"HorizontalLayout.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/eventlayout",lineno:17},{name:"module:Scheduler/eventlayout/HorizontalLayoutPack",classDescription:"<p>Handles layout of events within a row (resource) in horizontal mode. Packs events (adjusts their height) to fit\navailable row height</p>",extends:["Scheduler/eventlayout/HorizontalLayout"],mixes:["Scheduler/eventlayout/PackMixin"],access:"private",constructor:{name:"constructor"},filename:"HorizontalLayoutPack.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/eventlayout",lineno:16},{name:"module:Scheduler/eventlayout/HorizontalLayoutStack",classDescription:"<p>Handles layout of events within a row (resource) in horizontal mode. Stacks events, increasing row height when to fit\nall overlapping events.</p>\n<p>This layout is used by default in horizontal mode.</p>",extends:["Scheduler/eventlayout/HorizontalLayout"],access:"private",constructor:{name:"constructor"},filename:"HorizontalLayoutStack.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/eventlayout",lineno:16},{name:"module:Scheduler/eventlayout/PackMixin",description:"<p>Mixin holding functionality shared between HorizontalLayoutPack and VerticalLayout.</p>",mixin:true,access:"private",constructor:{name:"constructor"},filename:"PackMixin.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/eventlayout",lineno:14},{name:"module:Scheduler/eventlayout/VerticalLayout",classDescription:"<p>Assists with event layout in vertical mode, handles <code>eventLayout: none|pack|mixed</code></p>",mixes:["Scheduler/eventlayout/PackMixin"],access:"private",constructor:{name:"constructor"},filename:"VerticalLayout.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/eventlayout",lineno:12},{name:"module:Scheduler/feature/AbstractTimeRanges",classDescription:"<p>Abstract base class, you should not use this class directly.</p>",extends:["Core/mixin/InstancePlugin"],mixes:["Core/mixin/Delayable"],virtual:true,constructor:{name:"constructor"},filename:"AbstractTimeRanges.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/feature",lineno:22,configs:[{name:"store",description:'<p>Store that holds timeRanges (using the <a href="#Scheduler/model/TimeSpan">Scheduler.model.TimeSpan</a> model or subclass thereof).\nA store will be automatically created if none is specified</p>',type:["Object","Core.data.Store"],scope:"inner"},{name:"enableResizing",description:'<p>Set to <code>true</code> to enable dragging and resizing of range elements in the header. Only relevant when <a href="#Scheduler/feature/AbstractTimeRanges#config-showHeaderElements">showHeaderElements</a> is true.</p>',type:"Boolean",scope:"inner",defaultvalue:false},{name:"showTooltip",description:"<p>Specifies whether or not to show tooltip while resizing range elements</p>",type:"Boolean",scope:"inner",defaultvalue:true},{name:"showHeaderElements",description:"<p><code>true</code> to render range elements into the time axis header</p>",type:"Boolean",scope:"inner",defaultvalue:true}],properties:[{name:"showHeaderElements",description:"<p>Get/set if header elements should be rendered</p>",scope:"instance",properties:[{type:{names:["boolean"]}}]},{name:"store",description:'<p>Returns the <a href="#Core/data/Store">store</a> used by this feature</p>',scope:"instance",properties:[{type:{names:["Core.data.Store"]}}]}],functions:[{name:"getHeaderMenuItems",access:"private",scope:"instance"},{name:"getTipHtml",description:"<p>Generates the html to display in the tooltip during drag drop.</p>",scope:"instance"}]},{name:"module:Scheduler/feature/ColumnLines",classDescription:'<p>Displays column lines for ticks, with a different styling for major ticks (by default they are darker). If this\nfeature is disabled, no lines are shown. If it\'s enabled, line are shown for the tick level which is set in current\nViewPreset. Please see <a href="#Scheduler/preset/ViewPreset#field-columnLinesFor">columnLinesFor</a> config for details.</p>\n<p>The lines are drawn to a canvas, converted to an image and used as background in the schedulers background canvas.\nIn certain scenarios, major column lines are drawn as divs.</p>\n<p>The color and style of the lines are determined by extracting the values for <code>border-left-color</code> and\n<code>border-left-style</code> (solid, dashed or dotted are supported) from the css rules for <code>.b-column-line</code> and\n<code>.b-column-line-major</code>.</p>\n<p>This feature is <strong>enabled</strong> by default</p>',extends:["Core/mixin/InstancePlugin"],constructor:{name:"constructor"},filename:"ColumnLines.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/feature",lineno:28,demo:{product:"scheduler",demo:"basic"},externalExamples:["scheduler/ColumnLines.js"],functions:[{name:"getColorsFromCSS",access:"private",description:"<p>Reads lines colors from temporary element</p>",scope:"instance"},{name:"render",access:"private",description:"<p>Draw lines when scheduler/gantt is rendered.</p>",scope:"instance"},{name:"drawLines",access:"private",description:"<p>Draw column lines to a offscreen canvas, convert to base64 and use as background image.</p>",scope:"instance"},{name:"updateCanvasSize",access:"private",description:"<p>Redraw lines when time axis changes.</p>",scope:"instance"}]},{name:"module:Scheduler/feature/Dependencies",classDescription:'<p>Feature that draws dependencies between events Uses a <a href="#Scheduler/data/DependencyStore">DependencyStore</a> to determine which dependencies to draw, if\nnone is defined one will be created automatically. Dependencies can also be specified as Scheduler#dependencies, see\nexample below.</p>\n<p>This feature is <strong>disabled</strong> by default. It is <strong>not</strong> supported in vertical mode.</p>',extends:["Core/mixin/InstancePlugin"],mixes:["Core/mixin/Delayable","Scheduler/feature/mixin/DependencyCreation"],constructor:{name:"constructor"},filename:"Dependencies.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/feature",lineno:54,demo:{product:"scheduler",demo:"dependencies"},externalExamples:["scheduler/Dependencies.js"],events:[{name:"dependenciesDrawn",description:"<p>Fired when dependencies are rendered</p>",parameters:[{name:"partial",type:"Boolean",description:"<p>Optional event parameter. <code>true</code> when subset of dependencies is repainted, omitted\nwhen all lines were repainted.</p>",optional:true}]},{name:"dependencyClick",description:"<p>Fires on the owning Scheduler/Gantt when a click is registered on a dependency line.</p>",parameters:[{name:"source",type:"Scheduler.view.Scheduler",description:"<p>The scheduler</p>"},{name:"dependency",type:"Scheduler.model.DependencyModel"},{name:"event",type:"MouseEvent"}]},{name:"dependencyDblClick",description:"<p>Fires on the owning Scheduler/Gantt when a click is registered on a dependency line.</p>",parameters:[{name:"source",type:"Scheduler.view.Scheduler",description:"<p>The scheduler</p>"},{name:"dependency",type:"Scheduler.model.DependencyModel"},{name:"event",type:"MouseEvent"}]},{name:"dependencyMouseOver",description:"<p>Fires on the owning Scheduler/Gantt when the mouse moves over a dependency line.</p>",parameters:[{name:"source",type:"Scheduler.view.Scheduler",description:"<p>The scheduler</p>"},{name:"dependency",type:"Scheduler.model.DependencyModel"},{name:"event",type:"MouseEvent"}]},{name:"dependencyMouseOut",description:"<p>Fires on the owning Scheduler/Gantt when the mouse moves out of a dependency line.</p>",parameters:[{name:"source",type:"Scheduler.view.Scheduler",description:"<p>The scheduler</p>"},{name:"dependency",type:"Scheduler.model.DependencyModel"},{name:"event",type:"MouseEvent"}]}],configs:[{name:"pathFinderConfig",description:"<p>Path finder instance configuration</p>",type:"Object",scope:"inner"},{name:"overCls",access:"private",description:"<p>The CSS class to add to a dependency line when hovering over it</p>",type:"String",scope:"inner",defaultvalue:"b-sch-dependency-over"},{name:"baseCls",access:"private",description:"<p>The CSS class applied to dependency lines</p>",type:"String",scope:"inner",defaultvalue:"b-sch-dependency"},{name:"store",description:"<p>Store that holds dependencies (using DependencyModel or subclass thereof). A store will be automatically\ncreated if none is specified</p>",type:"Scheduler.data.DependencyStore",scope:"inner"},{name:"dependencies",description:"<p>Dependency definitions (data to DependencyModels). Will be added to store. Can also be specified on\nScheduler for convenience</p>",type:["Array.<DependencyModel>","Array.<Object>"],scope:"inner"},{name:"showTooltip",description:"<p>Set to true to show a tooltip when hovering a dependency line</p>",type:"Boolean",scope:"inner"},{name:"tooltip",description:"<p>A tooltip config object that will be applied to the dependency hover tooltip. Can be used to for example\ncustomize delay</p>",type:"Object",scope:"inner"}],functions:[{name:"initMarkerElement",access:"private",description:"<p>Creates SVG marker element (arrow) which is used for all dependency lines</p>",parameters:[{name:"id",type:"String",description:"<p>Id of the marker element</p>"},{name:"refX",type:"String"},{name:"arrowPath",type:"String",description:"<p>Path defining arrow</p>"}],scope:"instance"},{name:"createLineDefAdjusters",access:"private",description:"<p>Returns an array of functions used to alter path config when no path found.\nIt first tries to shrink arrow margins and secondly hides arrows entirely</p>",scope:"instance",returns:{type:"Array.<function()>"}},{name:"onTranslateRow",access:"private",description:"<p>Flags for redrawing if a rows height has changed</p>",scope:"instance"},{name:"onChangeTotalHeight",access:"private",description:"<p>Redraws all dependencies if a rows height changed, as detected in onTranslateRow</p>",scope:"instance"},{name:"onHorizontalScroll",access:"private",description:"<p>Draws dependencies on horizontal scroll</p>",scope:"instance"},{name:"onVerticalScroll",access:"private",description:"<p>Draws dependencies on vertical scroll</p>",scope:"instance"},{name:"onRowsRerender",access:"private",description:"<p>When rows are rerendered, better redraw dependencies (might have been collapsed etc).</p>",scope:"instance"},{name:"onRowStoreRefresh",access:"private",description:"<p>Redraws dependencies when a row has changed</p>",scope:"instance"},{name:"onDependencyChange",access:"private",description:"<p>Redraws dependencies when a dependency has changed</p>",scope:"instance"},{name:"onEventChange",access:"private",description:"<p>Redraws dependencies when an event has changed</p>",scope:"instance"},{name:"refreshDependency",description:"<p>Re-caches and redraws a dependency, for all assignments.</p>",parameters:[{name:"dependency",type:"Scheduler.model.DependencyModel",description:"<p>Dependency to refresh</p>"}],scope:"instance"},{name:"refreshDependencyAssignment",access:"private",description:"<p>Re-caches and redraws a dependency for given assignment.</p>",parameters:[{name:"dependency",type:"Scheduler.model.DependencyModel",description:"<p>Dependency to refresh</p>"},{name:"assignmentData",type:"Object"},{name:"assignmentData.from",type:"Scheduler.model.AssignmentModel",description:"<p>Source assignment</p>",isSubParam:true},{name:"assignmentData.to",type:"Scheduler.model.AssignmentModel",description:"<p>Target assignment</p>",isSubParam:true}],scope:"instance"},{name:"scheduleRefreshDependency",access:"private",description:"<p>Stores all dependencies/assignments that were requested to refresh and schedules repaint on next animation frame</p>",parameters:[{name:"dependency",type:"Scheduler.model.DependencyModel",description:"<p>Dependency model to refresh</p>"},{name:"assignmentData",type:"Object",description:"<p>Assignment data</p>",optional:true},{name:"assignmentData.from",type:"Scheduler.model.AssignmentModel",description:"<p>Source assignment</p>",optional:true,isSubParam:true},{name:"assignmentData.to",type:"Scheduler.model.AssignmentModel",description:"<p>Target assignment</p>",optional:true,isSubParam:true}],scope:"instance"},{name:"refreshDependencyOnFrame",access:"private",description:"<p>Repaints scheduled dependencies/assignments</p>",scope:"instance"},{name:"drawDependency",description:"<p>Draws a single dependency (for a single assignment if using multiple), if in view.</p>",parameters:[{name:"dependency",type:"Scheduler.model.DependencyModel",description:"<p>Dependency to draw</p>"}],scope:"instance"},{name:"drawForTimeSpan",access:"private",description:"<p>Draws multiple dependencies, called from drawForEvent() or drawFromTask().</p>",scope:"instance"},{name:"drawForEvent",description:"<p>Draws all dependencies for the specified event.</p>",scope:"instance"},{name:"draw",description:"<p>Draws all dependencies that overlap the current viewport</p>",scope:"instance"},{name:"releaseDependency",description:"<p>Release a dependency that is determined to be no longer visible</p>",parameters:[{name:"dependency",type:"Scheduler.model.DependencyModel"}],scope:"instance"},{name:"getConnectorStartSide",description:"<p>Gets displaying item start side</p>",parameters:[{name:"timeSpanRecord",type:"Scheduler.model.TimeSpan"}],scope:"instance",returns:{type:"String",description:"<p>'left' / 'right' / 'top' / 'bottom'</p>"}},{name:"getConnectorEndSide",description:"<p>Gets displaying item end side</p>",parameters:[{name:"timeSpanRecord",type:"Scheduler.model.TimeSpan"}],scope:"instance",returns:{type:"String",description:"<p>'left' / 'right' / 'top' / 'bottom'</p>"}},{name:"getHoverTipHtml",access:"private",description:"<p>Generates html for the tooltip shown when hovering a dependency</p>",parameters:[{name:"tooltipConfig",type:"Object"}],scope:"instance",returns:{type:"string",description:"<p>Html to display in the tooltip</p>"}}]},{name:"module:Scheduler/feature/DependencyEdit",classDescription:'<p>Feature that displays a popup containing fields for editing a dependency. Requires the <a href="#Scheduler/feature/Dependencies">Dependencies</a> feature to be enabled.</p>\n<p>This feature is <strong>disabled</strong> by default. It does <strong>not</strong> support vertical mode.</p>',extends:["Core/mixin/InstancePlugin"],constructor:{name:"constructor"},filename:"DependencyEdit.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/feature",lineno:23,externalExamples:["scheduler/Dependencies.js"],demo:{product:"scheduler",demo:"dependencies"},configs:[{name:"autoClose",description:"<p>True to hide this editor if a click is detected outside it (defaults to true)</p>",type:"Boolean",scope:"inner",defaultvalue:true,category:"Editor"},{name:"saveAndCloseOnEnter",description:"<p>True to save and close this panel if ENTER is pressed in one of the input fields inside the panel.</p>",type:"Boolean",scope:"inner",defaultvalue:true,category:"Editor"},{name:"showDeleteButton",description:"<p>True to show a delete button in the form.</p>",type:"Boolean",scope:"inner",defaultvalue:true,category:"Editor widgets"},{name:"triggerEvent",description:"<p>The event that shall trigger showing the editor. Defaults to <code>dependencydblclick</code>, set to empty string or <code>null</code> to disable editing of dependencies.</p>",type:"String",scope:"inner",defaultvalue:"dependencydblclick",category:"Editor"},{name:"showLagField",description:"<p>True to show the lag field for the dependency</p>",type:"Boolean",scope:"inner",defaultvalue:false,category:"Editor widgets"},{name:"editorConfig",description:"<p>Default editor configuration, used to configure the Popup.</p>",type:"Object",scope:"inner",category:"Editor"}],properties:[{name:"fromNameField",description:"<p>Reference to the from name</p>",type:{names:["Core.widget.DisplayField"]},scope:"inner",readonly:true},{name:"toNameField",description:"<p>Reference to the to name field</p>",type:{names:["Core.widget.DisplayField"]},scope:"inner",readonly:true},{name:"typeField",description:"<p>Reference to the type field</p>",type:{names:["Core.widget.Combo"]},scope:"inner",readonly:true},{name:"lagField",description:"<p>Reference to the lag field</p>",type:{names:["Core.widget.DurationField"]},scope:"inner",readonly:true},{name:"saveButton",description:"<p>Reference to the save button, if used</p>",type:{names:["Core.widget.Button"]},scope:"inner",readonly:true},{name:"deleteButton",description:"<p>Reference to the delete button, if used</p>",type:{names:["Core.widget.Button"]},scope:"inner",readonly:true},{name:"cancelButton",description:"<p>Reference to the cancel button, if used</p>",type:{names:["Core.widget.Button"]},scope:"inner",readonly:true}],functions:[{name:"onBeforeSave",description:"<p>Template method, intended to be overridden. Called before the dependency record has been updated.</p>",parameters:[{name:"dependencyRecord",type:"Scheduler.model.DependencyModel",description:"<p>The dependency record</p>"}],scope:"instance"},{name:"onAfterSave",description:"<p>Template method, intended to be overridden. Called after the dependency record has been updated.</p>",parameters:[{name:"dependencyRecord",type:"Scheduler.model.DependencyModel",description:"<p>The dependency record</p>"}],scope:"instance"},{name:"updateRecord",access:"private",description:"<p>Updates record being edited with values from the editor</p>",scope:"instance"},{name:"editDependency",description:"<p>Opens a popup to edit the passed dependency.</p>",parameters:[{name:"dependencyRecord",type:"Scheduler.model.DependencyModel",description:"<p>The dependency to edit</p>"}],scope:"instance"},{name:"getEditor",access:"internal",description:"<p>Gets an editor instance. Creates on first call, reuses on consecutive</p>",scope:"instance",returns:{type:"Scheduler.view.DependencyEditor",description:"<p>Editor popup</p>"}},{name:"loadRecord",access:"private",description:"<p>Sets fields values from record being edited</p>",scope:"instance"},{name:"save",access:"private",description:"<p>Saves the changes (applies them to record if valid, if invalid editor stays open)</p>",scope:"instance",fires:["event:beforeDependencySave","event:beforeDependencyAdd","event:afterDependencySave"],returns:{type:"*"}},{name:"deleteDependency",access:"private",description:"<p>Delete dependency being edited</p>",scope:"instance",fires:["event:beforeDependencyDelete"]}],events:[{name:"beforeDependencyEdit",description:"<p>Fires on the owning Scheduler before an dependency is displayed in the editor.\nThis may be listened for to allow an application to take over dependency editing duties. Returning <code>false</code>\nstops the default editing UI from being shown.</p>",parameters:[{name:"source",type:"Scheduler.view.Scheduler",description:"<p>The scheduler</p>"},{name:"dependencyEdit",type:"Scheduler.feature.DependencyEdit",description:"<p>The dependencyEdit feature</p>"},{name:"dependencyRecord",type:"Scheduler.model.DependencyModel",description:"<p>The record about to be shown in the editor.</p>"}],preventable:true},{name:"beforeDependencyEditShow",description:"<p>Fires on the owning Scheduler when the editor for a dependency is available but before it is shown. Allows\nmanipulating fields before the widget is shown.</p>",parameters:[{name:"source",type:"Scheduler.view.Scheduler",description:"<p>The scheduler</p>"},{name:"dependencyEdit",type:"Scheduler.feature.DependencyEdit",description:"<p>The dependencyEdit feature</p>"},{name:"dependencyRecord",type:"Scheduler.model.DependencyModel",description:"<p>The record about to be shown in the editor.</p>"},{name:"editor",type:"Core.widget.Popup",description:"<p>The editor popup</p>"}]},{name:"beforeDependencySave",description:"<p>Fires on the owning Scheduler before a dependency is saved</p>",parameters:[{name:"source",type:"Scheduler.view.Scheduler",description:"<p>The scheduler instance</p>"},{name:"dependencyRecord",type:"Scheduler.model.DependencyModel",description:"<p>The dependency about to be saved</p>"},{name:"values",type:"Object",description:"<p>The new values</p>"}],preventable:true},{name:"beforeDependencyAdd",description:"<p>Fires on the owning Scheduler before a dependency is added</p>",parameters:[{name:"source",type:"Scheduler.view.Scheduler",description:"<p>The scheduler</p>"},{name:"dependencyEdit",type:"Scheduler.feature.DependencyEdit",description:"<p>The dependency edit feature</p>"},{name:"dependencyRecord",type:"Scheduler.model.DependencyModel",description:"<p>The dependency about to be added</p>"}],preventable:true},{name:"afterDependencySave",description:"<p>Fires on the owning Scheduler after a dependency is successfully saved</p>",parameters:[{name:"source",type:"Scheduler.view.Scheduler",description:"<p>The scheduler instance</p>"},{name:"dependencyRecord",type:"Scheduler.model.DependencyModel",description:"<p>The dependency about to be saved</p>"}]},{name:"beforeDependencyDelete",description:"<p>Fires on the owning Scheduler before a dependency is deleted</p>",parameters:[{name:"source",type:"Scheduler.view.Scheduler",description:"<p>The scheduler instance</p>"},{name:"dependencyRecord",type:"Scheduler.model.DependencyModel",description:"<p>The dependency record about to be deleted</p>"}],preventable:true}]},{name:"module:Scheduler/feature/EventContextMenu",classDescription:"<p>Displays a context menu for events. Items are populated by other features and/or application code.</p>\n<p>To add extra items for all events (Array notation):</p>\n<pre class=\"prettyprint source lang-javascript\"><code>const scheduler = new Scheduler({\n    features : {\n        eventContextMenu : {\n            // Extra items for all events\n            items : [\n                {\n                    text : 'Extra',\n                    icon : 'b-fa b-fa-fw b-fa-flag',\n                    onItem({eventRecord}) {\n                        eventRecord.flagged = true;\n                    }\n                }\n            ]\n        }\n    }\n});\n</code></pre>\n<p>To add extra items for all events (Object notation):</p>\n<pre class=\"prettyprint source lang-javascript\"><code>const scheduler = new Scheduler({\n    features : {\n        eventContextMenu : {\n            // Extra items for all events\n            items : {\n                extraItems : {\n                    text : 'Extra',\n                    icon : 'b-fa b-fa-fw b-fa-flag',\n                    onItem({eventRecord}) {\n                        eventRecord.flagged = true;\n                    }\n                }\n            }\n        }\n    }\n});\n</code></pre>\n<p>To remove existing items:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>const scheduler = new Scheduler({\n    features : {\n        eventContextMenu : {\n            items : {\n                deleteEvent   : false,\n                unassignEvent : false\n            }\n        }\n    }\n});\n</code></pre>\n<p>Manipulate existing items for all events or specific events:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>const scheduler = new Scheduler({\n    features : {\n        eventContextMenu : {\n            // Process items before menu is shown\n            processItems({eventRecord, items}) {\n                 // Push an extra item for conferences\n                 if (eventRecord.type === 'conference') {\n                     items.showSessionItem = {\n                         text : 'Show sessions',\n                         onItem({eventRecord}) {\n                             // ...\n                         }\n                     };\n                 }\n\n                 // Do not show menu for secret events\n                 if (eventRecord.type === 'secret') {\n                     return false;\n                 }\n            }\n        }\n    }\n});\n</code></pre>\n<p>This feature is <strong>enabled</strong> by default</p>",extends:["Scheduler/feature/base/TimeSpanRecordContextMenuBase"],constructor:{name:"constructor"},filename:"EventContextMenu.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/feature",lineno:101,demo:{product:"scheduler",demo:"eventcontextmenu"},configs:[{name:"items",description:"<p>An array of extra menu items to add to the context menu</p>\n<pre class=\"prettyprint source lang-javascript\"><code>const scheduler = new Scheduler({\n    features : {\n        eventContextMenu : {\n            // Extra items for all events\n            items : [\n                {\n                    text : 'Extra',\n                    icon : 'b-fa b-fa-fw b-fa-flag',\n                    onItem({eventRecord}) {\n                        eventRecord.flagged = true;\n                    }\n                }\n            ]\n        }\n    }\n});\n</code></pre>\n<p>or items config to add extra items to the context menu or hide default items</p>\n<pre class=\"prettyprint source lang-javascript\"><code>const scheduler = new Scheduler({\n    features : {\n        eventContextMenu : {\n            items : {\n                // Add custom 'Extra' item\n                extra : {\n                    text : 'Extra',\n                    icon : 'b-fa b-fa-fw b-fa-flag',\n                    onItem({eventRecord}) {\n                        eventRecord.flagged = true;\n                    }\n                },\n                // Hide default 'Delete event' and 'Unassign event' items\n                deleteEvent   : false,\n                unassignEvent : false\n            }\n        }\n    }\n});\n</code></pre>",type:["Object","Array.<Object>"],scope:"inner"},{name:"processItems",description:"<p>A function called before displaying the menu that allows manipulations of its items.\nCalled with a single parameter with format { date, resourceRecord, items }.\nReturning <code>false</code> from this function prevents the menu from being shown.</p>\n<pre class=\"prettyprint source lang-javascript\"><code>features : {\n    eventContextMenu : {\n        // Process items before menu is shown\n        processItems({eventRecord, items}) {\n             // Push an extra item for conferences\n             if (eventRecord.type === 'conference') {\n                 items.showSessionItem = {\n                     text : 'Show sessions',\n                     onItem({eventRecord}) {\n                         // ...\n                     }\n                 };\n             }\n\n             // Do not show menu for secret events\n             if (eventRecord.type === 'secret') {\n                 return false;\n             }\n        }\n    }\n}\n</code></pre>",type:"function",scope:"inner"},{name:"defaultItems",description:'<p>This is a preconfigured set of <a href="#Core/widget/Container#config-namedItems">namedItems</a> used to create the default context menu.</p>\n<p>The provided defaultItems setting is</p>\n<pre class="prettyprint source lang-javascript"><code>   {\n       deleteEvent   : true,\n       unassignEvent : true\n   }\n</code></pre>\n<p>The <code>namedItems</code> provided by this feature are listed below. These are the property\nnames which you may configure in the feature\'s <a href="#Scheduler/feature/EventContextMenu#config-items">items</a> config:</p>\n<ul>\n<li><code>deleteEvent</code> Deletes the context event.</li>\n<li><code>unassignEvent</code> Unassigns the context event from the context resource.</li>\n</ul>\n<p>To remove existing items, set corresponding keys to <code>false</code></p>\n<pre class="prettyprint source lang-javascript"><code>const scheduler = new Scheduler({\n    features : {\n        eventContextMenu : {\n            items : {\n                deleteEvent   : false,\n                unassignEvent : false\n            }\n        }\n    }\n});\n</code></pre>\n<p>See the feature config in the above example for details.</p>',type:"Object",scope:"inner"}],events:[{name:"eventContextMenuBeforeShow",description:"<p>Fired from scheduler before the context menu is shown for an event. Allows manipulation of the items\nto show in the same way as in <code>processItems</code>. Returning false from a listener prevents the menu from\nbeing shown.</p>",parameters:[{name:"source",type:"Scheduler.view.Scheduler"},{name:"items",type:"Object",description:"<p>Menu item configs</p>"},{name:"eventRecord",type:"Scheduler.model.EventModel",description:"<p>Event record for which the menu was triggered</p>"},{name:"resourceRecord",type:"Scheduler.model.ResourceModel",description:"<p>Resource record</p>"},{name:"assignmentRecord",type:"Scheduler.model.AssignmentModel",description:"<p>Assignment record, if assignments are used</p>"},{name:"eventElement",type:"HTMLElement"}],preventable:true},{name:"eventContextMenuItem",description:"<p>Fired from scheduler when an item is selected in the context menu.</p>",parameters:[{name:"source",type:"Scheduler.view.Scheduler"},{name:"item",type:"Core.widget.MenuItem"},{name:"eventRecord",type:"Scheduler.model.EventModel"},{name:"resourceRecord",type:"Scheduler.model.ResourceModel"},{name:"assignmentRecord",type:"Scheduler.model.AssignmentModel",description:"<p>Assignment record, if assignments are used</p>"},{name:"eventElement",type:"HTMLElement"}]},{name:"eventContextMenuShow",description:"<p>Fired from scheduler after showing the context menu for an event</p>",parameters:[{name:"source",type:"Scheduler.view.Scheduler"},{name:"menu",type:"Core.widget.Menu",description:"<p>The menu</p>"},{name:"eventRecord",type:"Scheduler.model.EventModel",description:"<p>Event record for which the menu was triggered</p>"},{name:"resourceRecord",type:"Scheduler.model.ResourceModel",description:"<p>Resource record</p>"},{name:"assignmentRecord",type:"Scheduler.model.AssignmentModel",description:"<p>Assignment record, if assignments are used</p>"},{name:"eventElement",type:"HTMLElement"}],preventable:true}],functions:[{name:"showContextMenuFor",description:"<p>Shows context menu for the provided event. If record is not rendered (outside of time span/filtered)\nmenu won't appear.</p>",parameters:[{name:"eventRecord",type:"Scheduler.model.EventModel"},{name:"options",type:"Object",optional:true},{name:"options.targetElement",type:"HTMLElement",description:"<p>Element to align context menu to</p>",isSubParam:true},{name:"options.event",type:"Event",description:"<p>Browser event. If provided menu will be aligned according to clientX/clientY coordinates.\nIf omitted, context menu will be centered to taskElement</p>",isSubParam:true}],scope:"instance"}]},{name:"module:Scheduler/feature/EventDrag",classDescription:"<p>Allows user to drag and drop events within the scheduler, to change startDate or resource assignment.</p>\n<p>This feature is <strong>enabled</strong> by default</p>\n<p>Note that changing record data during drag is not supported.</p>",extends:["Scheduler/feature/base/DragBase"],examples:["// constrain drag to current resource\nlet scheduler = new Scheduler({\n  features: {\n    eventDrag: {\n      constrainDragToResource: true\n    }\n  }\n});"],constructor:{name:"constructor"},filename:"EventDrag.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/feature",lineno:42,demo:{product:"scheduler",demo:"basic"},externalExamples:["scheduler/EventDrag.js"],configs:[{name:"dragTipTemplate",description:'<p>Template used to generate drag tooltip contents.</p>\n<pre class="prettyprint source"><code>const scheduler = new Scheduler({\n  features : {\n    eventDrag : {\n      dragTipTemplate({eventRecord, startText}) {\n        return `${eventRecord.name}: ${startText}`\n      }\n    }\n  }\n});\n</code></pre>',type:"function",scope:"inner",returns:[{type:{names:["String"]}}],parameters:[{name:"data",type:"Object",description:"<p>Tooltip data</p>"},{name:"data.eventRecord",type:"Scheduler.model.EventModel",isSubParam:true},{name:"data.valid",type:"Boolean",description:"<p>Currently over a valid drop target or not</p>",isSubParam:true},{name:"data.startDate",type:"Date",description:"<p>New start date</p>",isSubParam:true},{name:"data.endDate",type:"Date",description:"<p>New end date</p>",isSubParam:true},{name:"data.startText",type:"String",description:"<p>Formatted new start date</p>",isSubParam:true},{name:"data.endText",type:"String",description:"<p>Formatted new end date</p>",isSubParam:true},{name:"data.startClockHtml",type:"String",description:"<p>Pre-generated HTML to display startDate as clock/calendar</p>",isSubParam:true},{name:"data.endClockHtml",type:"String",description:"<p>Pre-generated HTML to display endDate as clock/calendar</p>",isSubParam:true},{name:"data.dragData",type:"Object",description:"<p>Detailed drag context</p>",isSubParam:true}]},{name:"constrainDragToResource",description:"<p>Set to true to only allow dragging events within the same resource.</p>",type:"Boolean",scope:"inner",defaultvalue:false},{name:"constrainDragToTimeSlot",description:"<p>Set to true to only allow dragging events to different resources, and disallow rescheduling by dragging.</p>",type:"Boolean",scope:"inner",defaultvalue:false},{name:"validatorFn",description:"<p>An empty function by default, but provided so that you can perform custom validation on\nthe item being dragged. This function is called during the drag and drop process and also after the drop is made.\nReturn true if the new position is valid, false to prevent the drag.</p>",type:"function",scope:"inner",returns:[{type:{names:["Boolean"]},description:"<p><code>true</code> if this validation passes</p>"}],parameters:[{name:"context",type:"Object",description:"<p>A drag drop context object</p>"},{name:"context.startDate",type:"Date",description:"<p>New start date</p>",isSubParam:true},{name:"context.endDate",type:"Date",description:"<p>New end date</p>",isSubParam:true},{name:"context.draggedRecords",type:"Array.<Scheduler.model.EventModel>",description:"<p>Event records which were dragged</p>",isSubParam:true},{name:"context.newResource",type:"Scheduler.model.ResourceModel",description:"<p>New resource record</p>",isSubParam:true},{name:"event",type:"Event",description:"<p>The event object</p>"}]},{name:"validatorFnThisObj",description:"<p>The <code>this</code> reference for the validatorFn</p>",type:"Object",scope:"inner"},{name:"unifiedDrag",description:'<p>When the host Scheduler is <code><a href="#Scheduler/view/mixin/EventSelection#config-multiEventSelect">multiEventSelect</a>: true</code>\nthen, there are two modes of dragging <em>within the same Scheduler</em>.</p>\n<p>Non unified means that all selected events are dragged by the same number of resource rows.</p>\n<p>Unified means that all selected events are collected together and dragged as one, and are all dropped\non the same targeted resource row at the same targeted time.</p>',type:"Boolean",scope:"inner",defaultvalue:"false"}],events:[{name:"beforeEventDropFinalize",description:"<p>Fired on the owning Scheduler to allow implementer to prevent immediate finalization by setting <code>data.context.async = true</code>\nin the listener, to show a confirmation popup etc</p>\n<pre class=\"prettyprint source\"><code> scheduler.on('beforeeventdropfinalize', ({context}) => {\n     context.async = true;\n     setTimeout(() => {\n         // async code don't forget to call finalize\n         context.finalize();\n     }, 1000);\n })\n</code></pre>\n<p>Changing record data during drag is not supported.</p>",parameters:[{name:"source",type:"Scheduler.view.Scheduler",description:"<p>Scheduler instance</p>"},{name:"context",type:"Object"},{name:"context.async",type:"Boolean",description:"<p>Set true to handle dragdrop asynchronously (e.g. to wait for user</p>",isSubParam:true},{name:"context.targetEventRecord",type:"Scheduler.model.EventModel",description:"<p>Event record for drop target</p>",isSubParam:true},{name:"context.newResource",type:"Scheduler.model.ResourceModel",description:"<p>Resource record for drop target\nconfirmation)</p>",isSubParam:true},{name:"context.finalize",type:"function",description:"<p>Call this method to finalize dragdrop. This method accepts one\nargument: pass true to update records, or false, to ignore changes</p>",isSubParam:true}]},{name:"afterEventDrop",description:"<p>Fired on the owning Scheduler after event drop</p>",parameters:[{name:"source",type:"Scheduler.view.Scheduler"},{name:"eventRecords",type:"Array.<Scheduler.model.EventModel>"},{name:"valid",type:"Boolean"},{name:"context",type:"Object"}]},{name:"eventDrop",description:"<p>Fired on the owning Scheduler when an event is dropped</p>",parameters:[{name:"source",type:"Scheduler.view.Scheduler"},{name:"eventRecords",type:"Array.<Scheduler.model.EventModel>"},{name:"isCopy",type:"Boolean"},{name:"context",type:"Object"},{name:"context.targetEventRecord",type:"Scheduler.model.EventModel",description:"<p>Event record for drop target</p>",isSubParam:true},{name:"context.newResource",type:"Scheduler.model.ResourceModel",description:"<p>Resource record for drop target</p>",isSubParam:true}]},{name:"beforeEventDrag",description:"<p>Fired on the owning Scheduler before event dragging starts. Return false to prevent the action</p>",parameters:[{name:"source",type:"Scheduler.view.Scheduler"},{name:"eventRecord",type:"Scheduler.model.EventModel"},{name:"context",type:"Object"}]},{name:"eventDragStart",description:"<p>Fired on the owning Scheduler when event dragging starts</p>",parameters:[{name:"source",type:"Scheduler.view.Scheduler"},{name:"eventRecords",type:"Array.<Scheduler.model.EventModel>"},{name:"context",type:"Object"}]},{name:"eventDrag",description:"<p>Fired on the owning Scheduler when event is dragged</p>",parameters:[{name:"source",type:"Scheduler.view.Scheduler"},{name:"eventRecords",type:"Array.<Scheduler.model.EventModel>"},{name:"startDate",type:"Date"},{name:"endDate",type:"Date"},{name:"newResource",type:"Scheduler.model.ResourceModel"},{name:"context",type:"Object"}]},{name:"eventDragAbort",description:"<p>Fired on the owning Scheduler after an event drag operation has been aborted</p>",parameters:[{name:"source",type:"Scheduler.view.Scheduler"},{name:"eventRecords",type:"Array.<Scheduler.model.EventModel>"},{name:"context",type:"Object"}]}],functions:[{name:"isValidDrop",access:"private",description:"<p>Checks if an event can be dropped on the specified resource.</p>",scope:"instance",returns:{type:"Boolean",description:"<p>Valid (true) or invalid (false)</p>"}},{name:"updateRecords",access:"private",description:"<p>Update events being dragged.</p>",parameters:[{name:"context",description:"<p>Drag data.</p>"}],scope:"instance"},{name:"updateRecordsSingleAssignmentMode",access:"private",description:"<p>Update records being dragged, scheduler mode. Sets resource and start date.</p>",scope:"instance"},{name:"updateRecordsMultipleAssignmentMode",access:"private",description:"<p>Update records being dragged, gantt mode. Sets resource and start date.</p>",scope:"instance"},{name:"getDragData",access:"private",description:"<p>Initializes drag data (dates, constraints, dragged events etc). Called when drag starts.</p>",parameters:[{name:"info"},{name:"event"}],scope:"instance",returns:{type:"*"}},{name:"getRelatedRecords",description:"<p>Provide your custom implementation of this to allow additional selected records to be dragged together with the original one.</p>",parameters:[{name:"eventRecord",type:"Scheduler.model.EventModel",description:"<p>The eventRecord about to be dragged</p>"}],scope:"instance",returns:{type:"Array.<Scheduler.model.EventModel>",description:"<p>An array of event records to drag together with the original event</p>"}},{name:"getCoordinate",access:"private",description:"<p>Get correct axis coordinate depending on schedulers mode (horizontal -&gt; x, vertical -&gt; y). Also takes milestone\nlayout into account.</p>",parameters:[{name:"eventRecord",type:"Scheduler.model.EventModel",description:"<p>Record being dragged</p>"},{name:"element",type:"HTMLElement",description:"<p>Element being dragged</p>"},{name:"coord",type:"Array.<Number>",description:"<p>XY coordinates</p>"}],scope:"instance",returns:{type:["Number","Array.<Number>"],description:"<p>X,Y or XY</p>"}},{name:"resolveResource",access:"private",description:"<p>Get resource record occluded by the drag proxy.</p>",scope:"instance",returns:{type:"Scheduler.model.ResourceModel"}}]},{name:"module:Scheduler/feature/EventDragCreate",classDescription:'<p>Feature that allows the user to create new events by dragging in empty parts of the scheduler rows.</p>\n<p>This feature is <strong>enabled</strong> by default</p>\n<p><strong>NOTE:</strong> Incompatible with <a href="#Scheduler/feature/Pan">Pan</a> feature.</p>',extends:["Scheduler/feature/base/DragCreateBase"],constructor:{name:"constructor"},filename:"EventDragCreate.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/feature",lineno:24,demo:{product:"scheduler",demo:"basic"},externalExamples:["scheduler/EventDragCreate.js"],configs:[{name:"validatorFn",description:"<p>An empty function by default, but provided so that you can perform custom validation on the event being created.\nReturn true if the new event is valid, false to prevent an event being created.</p>",type:"function",scope:"inner",returns:[{type:{names:["Boolean"]},description:"<p><code>true</code> if this validation passes</p>"}],parameters:[{name:"context",type:"Object",description:"<p>A drag create context</p>"},{name:"context.startDate",type:"Date",description:"<p>Event start date</p>",isSubParam:true},{name:"context.endDate",type:"Date",description:"<p>Event end date</p>",isSubParam:true},{name:"context.record",type:"Scheduler.model.EventModel",description:"<p>Event record</p>",isSubParam:true},{name:"context.resourceRecord",type:"Scheduler.model.ResourceModel",description:"<p>Resource record</p>",isSubParam:true},{name:"event",type:"Event",description:"<p>The event object</p>"}]}],events:[{name:"dragCreateEnd",description:"<p>Fires on the owning Scheduler after the new event has been created.</p>",parameters:[{name:"source",type:"Scheduler.view.Scheduler"},{name:"newEventRecord",type:"Scheduler.model.EventModel"},{name:"resourceRecord",type:"Scheduler.model.ResourceModel"},{name:"event",type:"MouseEvent",description:"<p>The ending mouseup event.</p>"},{name:"proxyElement",type:"HTMLElement",description:"<p>The proxy element showing the drag creation zone.</p>"}]},{name:"beforeDragCreate",description:"<p>Fires on the owning Scheduler at the beginning of the drag gesture</p>",parameters:[{name:"source",type:"Scheduler.view.Scheduler"},{name:"resourceRecord",type:"Scheduler.model.ResourceModel"},{name:"date",type:"Date",description:"<p>The datetime associated with the drag start point.</p>"}]},{name:"dragCreateStart",description:"<p>Fires on the owning Scheduler after the drag start has created a proxy element.</p>",parameters:[{name:"source",type:"Scheduler.view.Scheduler"},{name:"proxyElement",type:"HTMLElement",description:"<p>The proxy representing the new event.</p>"}]},{name:"beforeDragCreateFinalize",description:"<p>Fired on the owning Scheduler to allow implementer to prevent immediate finalization by setting <code>data.context.async = true</code>\nin the listener, to show a confirmation popup etc</p>\n<pre class=\"prettyprint source\"><code> scheduler.on('beforedragcreatefinalize', ({context}) => {\n     context.async = true;\n     setTimeout(() => {\n         // async code don't forget to call finalize\n         context.finalize();\n     }, 1000);\n })\n</code></pre>",parameters:[{name:"source",type:"Scheduler.view.Scheduler",description:"<p>Scheduler instance</p>"},{name:"proxyElement",type:"HTMLElement",description:"<p>Proxy element, representing future event</p>"},{name:"context",type:"Object"},{name:"context.async",type:"Boolean",description:"<p>Set true to handle drag create asynchronously (e.g. to wait for user\nconfirmation)</p>",isSubParam:true},{name:"context.finalize",type:"function",description:"<p>Call this method to finalize drag create. This method accepts one\nargument: pass true to update records, or false, to ignore changes</p>",isSubParam:true}]},{name:"afterDragCreate",description:"<p>Fires on the owning Scheduler at the end of the drag create gesture whether or not\na new event was created by the gesture.</p>",parameters:[{name:"source",type:"Scheduler.view.Scheduler"},{name:"proxyElement",type:"HTMLElement",description:"<p>The proxy element showing the drag creation zone.</p>"}]}]},{name:"module:Scheduler/feature/EventDragSelect",classDescription:'<p>Enables users to click and drag to select events inside the Scheduler\'s timeline.</p>\n<p>This feature is <strong>disabled</strong> by default.</p>\n<p><strong>NOTE:</strong> Incompatible with <a href="#Scheduler/feature/EventDragCreate">EventDragCreate</a> and the <a href="#Scheduler/feature/Pan">Pan</a> features.</p>',extends:["Core/mixin/InstancePlugin"],mixes:["Core/mixin/Delayable"],examples:["let scheduler = new Scheduler({\n  features : {\n    eventDragSelect      : true,\n    eventDragCreate      : false\n  }\n});"],constructor:{name:"constructor"},filename:"EventDragSelect.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/feature",lineno:34,demo:{product:"scheduler",demo:"dragselection"},classType:"eventDragSelect"},{name:"module:Scheduler/feature/EventEdit",classDescription:"<p>Feature that displays a popup containing fields for editing event data.</p>\n<p>To customize its contents you can:</p>\n<ul>\n<li>Toggle visibility of some built in widgets: <code>showResourceField</code>, <code>showNameField</code> and <code>showDeleteButton</code></li>\n<li>Change the date format of the date &amp; time fields: <code>dateFormat</code> and <code>timeFormat</code></li>\n<li>Configure date &amp; time fields: <code>startDateConfig</code>, <code>startTimeConfig</code>, <code>endDateConfig</code> and <code>endTimeConfig</code></li>\n<li>Configure the resource field: <code>resourceFieldConfig</code></li>\n<li>Append additional fields: <code>extraItems</code></li>\n<li>Advanced: Replace entire contents using <code>editorConfig</code></li>\n</ul>\n<p>This feature is <strong>enabled</strong> by default</p>",extends:["Scheduler/feature/base/EditBase"],mixes:["Scheduler/feature/mixin/RecurringEventEdit"],constructor:{name:"constructor"},filename:"EventEdit.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/feature",lineno:31,demo:{product:"scheduler",demo:"eventeditor"},externalExamples:["scheduler/EventEdit.js"],configs:[{name:"triggerEvent",description:"<p>The event that shall trigger showing the editor. Defaults to <code>eventdblclick</code>, set to `` or null to disable editing of existing events.</p>",type:"String",scope:"inner",defaultvalue:"eventdblclick",category:"Editor"},{name:"showResourceField",description:"<p>True to show a combo for picking resource</p>",type:"Boolean",scope:"inner",defaultvalue:true,category:"Editor widgets"},{name:"resourceFieldConfig",description:"<p>Config for the resourceField constructor.</p>",type:"Object",scope:"inner",category:"Editor widgets"},{name:"typeField",description:"<p>The data field in the model that defines the eventType.\nApplied as class (b-eventtype-xx) to the editors element, to allow showing/hiding fields depending on\neventType. Dynamic toggling of fields in the editor is activated by using <code>ref: 'eventTypeField'</code> on\nyour widget:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>const scheduler = new Scheduler({\n   features : {\n      eventEdit  : {\n          extraItems : [\n              {\n                  type  : 'combo',\n                  name  : 'eventType',\n                  ref   : 'eventTypeField',\n                  label : 'Type',\n                  items : ['Appointment', 'Internal', 'Meeting']\n              }\n          ]\n       }\n    }\n});\n</code></pre>",type:"String",scope:"inner",defaultvalue:"eventType",category:"Editor"},{name:"readOnly",description:"<p>Specify <code>true</code> to put the editor in read only mode.</p>",type:"Boolean",scope:"inner",defaultvalue:"false"},{name:"editorConfig",description:"<p>The configuration for the internal editor widget. With this config you can control which widgets to shows, if popup should be modal etc.</p>\n<pre class=\"prettyprint source lang-javascript\"><code>const scheduler = new Scheduler({\n   features : {\n      eventEdit  : {\n          editorConfig : {\n              modal  : true,\n              cls    : 'my-editor' // A CSS class\n          }\n       }\n    }\n});\n</code></pre>",type:"Object",scope:"inner",category:"Editor"}],properties:[{name:"eventRecord",description:'<p>The current <a href="#Scheduler/model/EventModel">Scheduler.model.EventModel</a> record, which is being edited by the event editor.</p>',scope:"inner",readonly:true,properties:[{type:{names:["Scheduler.model.EventModel"]}}]},{name:"nameField",description:"<p>Reference to the name field, if used</p>",type:{names:["Core.widget.TextField"]},scope:"inner",readonly:true},{name:"resourceField",description:"<p>Reference to the resource field, if used</p>",type:{names:["Core.widget.Combo"]},scope:"inner",readonly:true},{name:"startDateField",description:"<p>Reference to the start date field, if used</p>",type:{names:["Core.widget.DateField"]},scope:"inner",readonly:true},{name:"startTimeField",description:"<p>Reference to the start time field, if used</p>",type:{names:["Core.widget.TimeField"]},scope:"inner",readonly:true},{name:"endDateField",description:"<p>Reference to the end date field, if used</p>",type:{names:["Core.widget.DateField"]},scope:"inner",readonly:true},{name:"endTimeField",description:"<p>Reference to the end time field, if used</p>",type:{names:["Core.widget.TimeField"]},scope:"inner",readonly:true},{name:"saveButton",description:"<p>Reference to the save button, if used</p>",type:{names:["Core.widget.Button"]},scope:"inner",readonly:true},{name:"deleteButton",description:"<p>Reference to the delete button, if used</p>",type:{names:["Core.widget.Button"]},scope:"inner",readonly:true},{name:"cancelButton",description:"<p>Reference to the cancel button, if used</p>",type:{names:["Core.widget.Button"]},scope:"inner",readonly:true},{name:"readOnly",description:"<p>Get/set readonly state</p>",scope:"instance",properties:[{type:{names:["Boolean"]}}]}],functions:[{name:"getEditor",access:"internal",description:"<p>Gets an editor instance. Creates on first call, reuses on consecutive</p>",scope:"instance",returns:{type:"Core.widget.Popup",description:"<p>Editor popup</p>"}},{name:"editEvent",description:"<p>Opens an editor for the passed event. This function is exposed on Scheduler and can be called as\n<code>scheduler.editEvent()</code>.</p>",parameters:[{name:"eventRecord",type:"Scheduler.model.EventModel",description:"<p>Event to edit</p>"},{name:"resourceRecord",type:"Scheduler.model.ResourceModel",description:"<p>The Resource record for the event.\nThis parameter is needed if the event is newly created for a resource and has not been assigned, or when using\nmulti assignment.</p>",optional:true},{name:"element",type:"HTMLElement",description:"<p>Element to anchor editor to (defaults to events element)</p>",optional:true}],scope:"instance"},{name:"loadRecord",access:"private",description:"<p>Sets fields values from record being edited</p>",scope:"instance"},{name:"save",access:"private",description:"<p>Saves the changes (applies them to record if valid, if invalid editor stays open)</p>",scope:"instance",fires:["event:beforeEventSave","event:beforeEventAdd","event:afterEventSave"],returns:{type:"Promise"},async:true},{name:"deleteEvent",access:"private",description:"<p>Delete event being edited</p>",scope:"instance",fires:["event:beforeEventDelete"],returns:{type:"Promise"},async:true}],events:[{name:"beforeEventEdit",description:"<p>Fires on the owning Scheduler before an event is displayed in an editor.\nThis may be listened for to allow an application to take over event editing duties. Returning <code>false</code>\nstops the default editing UI from being shown.</p>",parameters:[{name:"source",type:"Scheduler.view.Scheduler",description:"<p>The scheduler</p>"},{name:"eventEdit",type:"Scheduler.feature.EventEdit",description:"<p>The eventEdit feature</p>"},{name:"eventRecord",type:"Scheduler.model.EventModel",description:"<p>The record about to be shown in the event editor.</p>"},{name:"resourceRecord",type:"Scheduler.model.ResourceModel",description:"<p>The Resource record for the event. If the event\nis being created, it will not contain a resource, so this parameter specifies the resource the\nevent is being created for.</p>"},{name:"eventElement",type:"HTMLElement",description:"<p>The element which represents the event in the scheduler display.</p>"}],preventable:true},{name:"beforeEventEditShow",description:"<p>Fires on the owning Scheduler when the editor for an event is available but before it is populated with\ndata and shown. Allows manipulating fields etc.</p>",parameters:[{name:"source",type:"Scheduler.view.Scheduler",description:"<p>The scheduler</p>"},{name:"eventEdit",type:"Scheduler.feature.EventEdit",description:"<p>The eventEdit feature</p>"},{name:"eventRecord",type:"Scheduler.model.EventModel",description:"<p>The record about to be shown in the event editor.</p>"},{name:"resourceRecord",type:"Scheduler.model.ResourceModel",description:"<p>The Resource record for the event. If the event\nis being created, it will not contain a resource, so this parameter specifies the resource the\nevent is being created for.</p>"},{name:"eventElement",type:"HTMLElement",description:"<p>The element which represents the event in the scheduler display.</p>"},{name:"editor",type:"Core.widget.Popup",description:"<p>The editor</p>"}]},{name:"beforeEventAdd",description:"<p>Fires on the owning Scheduler before an event is added</p>",parameters:[{name:"source",type:"Scheduler.view.Scheduler",description:"<p>The Scheduler instance.</p>"},{name:"eventRecord",type:"Scheduler.model.EventModel",description:"<p>The record about to be added</p>"},{name:"resources",type:"Array.<Scheduler.model.ResourceModel>",description:"<p><strong>Deprecated</strong> Use <code>resourceRecords</code> instead</p>"},{name:"resourceRecords",type:"Array.<Scheduler.model.ResourceModel>",description:"<p>Resources that the record is assigned to</p>"}],preventable:true},{name:"afterEventSave",description:"<p>Fires on the owning Scheduler after an event is successfully saved</p>",parameters:[{name:"source",type:"Scheduler.view.Scheduler",description:"<p>The scheduler instance</p>"},{name:"eventRecord",type:"Scheduler.model.EventModel",description:"<p>The record about to be saved</p>"}]},{name:"beforeEventSave",description:"<p>Fires on the owning Scheduler before an event is saved</p>",parameters:[{name:"source",type:"Scheduler.view.Scheduler",description:"<p>The scheduler instance</p>"},{name:"eventRecord",type:"Scheduler.model.EventModel",description:"<p>The record about to be saved</p>"},{name:"resourceRecord",type:"Scheduler.model.ResourceModel",description:"<p>[DEPRECATED IN FAVOR OF <code>resourceRecords</code>] The resource to which the event is assigned</p>"},{name:"resourceRecords",type:"Array.<Scheduler.model.ResourceModel>",description:"<p>The resources to which the event is assigned</p>"},{name:"values",type:"Object",description:"<p>The new values</p>"},{name:"context",type:"Object",description:"<p>Extended save context:</p>"},{name:"context.async",type:"Boolean",description:"<p>Set this to <code>true</code> in a listener to indicate that the listener will asynchronously decide to prevent or not the event save.</p>",optional:true,isSubParam:true},{name:"context.finalize",type:"function",description:"<p>Function to call to finalize the save. Used when <code>async</code> is <code>true</code>. Provide <code>false</code> to the function to prevent the save.</p>",isSubParam:true}],preventable:true}]},{name:"module:Scheduler/feature/EventFilter",classDescription:"<p>Adds event filter menu items to the timeline header context menu.</p>\n<p>This feature is <strong>enabled</strong> by default</p>",extends:["Core/mixin/InstancePlugin"],examples:["let scheduler = new Scheduler({\n  features : {\n    eventFilter : true // `true` by default, set to `false` to disable the feature and remove the menu item from the timeline header\n  }\n});"],constructor:{name:"constructor"},filename:"EventFilter.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/feature",lineno:25,classType:"EventFilter",externalExamples:["scheduler/EventFilter.js"],functions:[{name:"getHeaderMenuItems",access:"internal",description:"<p>Populates the header context menu items.</p>",parameters:[{name:"column",type:"Grid.column.Column",description:"<p>Column for which the menu will be shown</p>"},{name:"items",type:"Array.<Object>",description:"<p>Array of menu items</p>"}],scope:"instance"}]},{name:"module:Scheduler/feature/EventResize",classDescription:'<p>Feature that allows resizing an event by dragging its end.</p>\n<p>By default it displays a tooltip with the new start and end dates, formatted using\n<a href="#Scheduler/view/mixin/TimelineViewPresets#config-displayDateFormat">displayDateFormat</a>.</p>\n<p>This feature is <strong>enabled</strong> by default</p>',extends:["Scheduler/feature/base/ResizeBase"],constructor:{name:"constructor"},filename:"EventResize.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/feature",lineno:24,demo:{product:"scheduler",demo:"basic"},externalExamples:["scheduler/EventResize.js"],events:[{name:"beforeEventResize",description:"<p>Fired on the owning Scheduler before resizing starts. Return false to prevent operation</p>",parameters:[{name:"eventRecord",type:"Scheduler.model.EventModel"},{name:"event",type:"Event"}]},{name:"eventResizeStart",description:"<p>Fires on the owning Scheduler when event resizing starts</p>",parameters:[{name:"eventRecord",type:"Scheduler.model.EventModel"},{name:"event",type:"Event"}]},{name:"eventPartialResize",description:"<p>Fires on the owning Scheduler on each resize move event</p>",parameters:[{name:"eventRecord",type:"Scheduler.model.EventModel"},{name:"startDate",type:"Date"},{name:"endDate",type:"Date"},{name:"element",type:"HTMLElement"}]},{name:"beforeEventResizeFinalize",description:"<p>Fired on the owning Scheduler to allow implementer to prevent immediate finalization by setting <code>data.context.async = true</code>\nin the listener, to show a confirmation popup etc</p>\n<pre class=\"prettyprint source\"><code> scheduler.on('beforeeventresizefinalize', ({context}) => {\n     context.async = true;\n     setTimeout(() => {\n         // async code don't forget to call finalize\n         context.finalize();\n     }, 1000);\n })\n</code></pre>",parameters:[{name:"data",type:"Object"},{name:"data.source",type:"Scheduler.view.Scheduler",description:"<p>Scheduler instance</p>",isSubParam:true},{name:"data.context",type:"Object",isSubParam:true},{name:"data.context.async",type:"Boolean",description:"<p>Set true to handle resize asynchronously (e.g. to wait for user\nconfirmation)</p>",isSubParam:true},{name:"data.context.finalize",type:"function",description:"<p>Call this method to finalize resize. This method accepts one\nargument: pass true to update records, or false, to ignore changes</p>",isSubParam:true}]},{name:"eventResizeEnd",description:"<p>Fires on the owning Scheduler after the resizing gesture has finished.</p>",parameters:[{name:"wasChanged",type:"Boolean"},{name:"eventRecord",type:"Scheduler.model.EventModel"}]}]},{name:"module:Scheduler/feature/EventTooltip",classDescription:"<p>Displays a tooltip when hovering events. The template used to render the tooltip can be customized, see <a href=\"#Scheduler/feature/EventTooltip#config-template\">template</a>.\nConfig options are also applied to the tooltip shown, see <a href=\"#Core/widget/Tooltip\">Core.widget.Tooltip</a> for available options.</p>\n<h2>Showing local data</h2>\n<p>To show a basic &quot;local&quot; tooltip (with data available in the Event record) upon hover:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>new Scheduler({\n  features : {\n    eventTooltip : {\n        // Tooltip configs can be used here\n        align : 'l-r' // Align left to right,\n        // A custom HTML template\n        template : data => `&lt;dl>\n          &lt;dt>Assigned to:&lt;/dt>\n             &lt;dt>Time:&lt;/dt>\n             &lt;dd>\n                 ${DateHelper.format(data.eventRecord.startDate, 'LT')} - ${DateHelper.format(data.eventRecord.endDate, 'LT')}\n             &lt;/dd>\n             ${data.eventRecord.get('note') ? `&lt;dt>Note:&lt;/dt>&lt;dd>${data.eventRecord.note}&lt;/dd>` : ''}\n\n             ${data.eventRecord.get('image') ? `&lt;dt>Image:&lt;/dt>&lt;dd>&lt;img class=&quot;image&quot; src=&quot;${data.eventRecord.get('image')}&quot;/>&lt;/dd>` : ''}\n         &lt;/dl>\n    }\n  }\n});\n</code></pre>\n<h2>Showing remotely loaded data</h2>\n<p>Loading remote data into the event tooltip is easy. Simply use the <a href=\"#Scheduler/feature/EventTooltip#config-template\">template</a> and return a Promise which yields the content to show.</p>\n<pre class=\"prettyprint source lang-javascript\"><code>new Scheduler({\n  features : {\n    eventTooltip : {\n       template : ({ eventRecord }) => AjaxHelper.get(`./fakeServer?name=${eventRecord.name}`).then(response => response.text())\n    }\n  }\n});\n</code></pre>\n<p>This feature is <strong>enabled</strong> by default</p>\n<p>By default, the tooltip <a href=\"#Core/widget/Widget#config-scrollAction\">realigns on scroll</a>\nmeaning that it will stay aligned with its target should a scroll interaction make the target move.</p>\n<p>If this is causing performance issues in a Scheduler, such as if there are many dozens of events\nvisible, you can configure this feature with <code>scrollAction: 'hide'</code>. This feature's configuration is\napplied to the tooltip, so that will mean that the tooltip will hide if its target is moved by a\nscroll interaction.</p>",extends:["Scheduler/feature/base/TooltipBase"],constructor:{name:"constructor"},filename:"EventTooltip.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/feature",lineno:61,demo:{product:"scheduler",demo:"basic"},externalExamples:["scheduler/EventTooltip.js"],configs:[{name:"template",description:"<p>A function which receives data about the event and returns a string,\nor a Promise yielding a string (for async tooltips), to be displayed in the tooltip.\nThis method will be called with an object containing the fields below</p>",type:"function",scope:"inner",parameters:[{name:"data",type:"Object"},{name:"data.eventRecord",type:"Scheduler.model.EventModel",isSubParam:true},{name:"data.startDate",type:"Date",isSubParam:true},{name:"data.endDate",type:"Date",isSubParam:true},{name:"data.startText",type:"String",isSubParam:true},{name:"data.endText",type:"String",isSubParam:true}]}]},{name:"module:Scheduler/feature/GroupSummary",classDescription:'<p>A special version of the Grid GroupSummary feature that enables summaries within scheduler. To use a single summary\nit is easiest to configure <a href="#Scheduler/feature/GroupSummary#config-renderer">renderer</a>, for multiple summaries see <a href="#Scheduler/feature/GroupSummary#config-summaries">summaries</a>.</p>\n<p>This feature is <strong>disabled</strong> by default. It is <strong>not</strong> supported in vertical mode.</p>',extends:["Grid/feature/GroupSummary"],constructor:{name:"constructor"},filename:"GroupSummary.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/feature",lineno:34,typings:"Grid/feature/GroupSummary -> Grid/feature/GridGroupSummary",classType:"groupsummary",externalExamples:["scheduler/GroupSummary.js"],demo:{product:"scheduler",demo:"groupsummary"},configs:[{name:"showTooltip",description:"<p>Show tooltip containing summary values and labels</p>",type:"Boolean",scope:"inner",defaultvalue:true},{name:"summaries",description:"<p>Array of summary configs, with format\n<code>[{ label: 'Label', renderer : ({startDate, endDate, eventStore, resourceStore, events, element}) }]</code>.</p>",type:"Array.<Object>",scope:"inner"},{name:"renderer",description:'<p>Easier way to configure when using a single summary. Accepts a renderer function with the format specified\nin <a href="#Scheduler/feature/GroupSummary#config-summaries">summaries</a></p>',type:"function",scope:"inner"}],functions:[{name:"onBeforeRenderRow",access:"private",description:"<p>Called before rendering row contents, used to reset rows no longer used as group summary rows</p>",scope:"instance"},{name:"generateHtml",access:"private",description:'<p>Called by parent class to fill timeaxis with summary contents. Generates tick &quot;cells&quot; and populates them with\nsummaries.</p>\n<pre class="prettyprint source"><code>&lt;div class=&quot;b-timeaxis-group-summary&quot;>\n    &lt;div class=&quot;b-timeaxis-tick&quot;>\n        &lt;div class=&quot;b-timeaxix-summary-value&quot;>x&lt;/div>\n        ...\n    &lt;/div>\n    ...\n&lt;/div>\n</code></pre>',scope:"instance"},{name:"updateSummaryHtml",access:"private",description:"<p>Overrides parents function to return correct summary count, used when sizing row</p>",scope:"instance"},{name:"getTipHtml",access:"private",description:"<p>Generates tooltip contents for hovered summary tick</p>",scope:"instance"},{name:"render",access:"private",description:"<p>Initialize tooltip on render</p>",scope:"instance"}]},{name:"module:Scheduler/feature/HeaderContextMenu",classDescription:"<p>Adds scheduler specific menu items to the timeline header context menu. Can be populated by other features.</p>\n<p>By default the menu has the following items:</p>\n<ul>\n<li>Filter tasks - provided by the <a href=\"#Scheduler/feature/EventFilter\">EventFilter</a> feature, enabled if the feature is enabled</li>\n<li>Zoom - provided by the context menu feature, always enabled by default</li>\n<li>Date range - provided by the context menu feature, always enabled by default</li>\n</ul>\n<p>To add extra items to the menu:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>const scheduler = new Scheduler({\n    features : {\n        headerContextMenu : {\n            // Extra items\n            extraItems : [\n                {\n                    text : 'Extra',\n                    icon : 'b-fa b-fa-fw b-fa-flag',\n                    onItem() {\n                        ...\n                    }\n                }\n            ]\n        }\n    }\n});\n</code></pre>\n<p>Manipulate existing menu items in the timeaxis header menu:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>const scheduler = new Scheduler({\n    features : {\n        headerContextMenu : {\n            // Process items before menu is shown\n            processItems({ items }) {\n                 // Push an extra item\n                items.push({\n                    text : 'Cool action',\n                    onItem() {\n                          // ...\n                    }\n                 }\n\n                 // Remove a default item ('pickZoomLevel' or 'activeDateRange')\n                 const index = items.findIndex(item => item.text === LocaleManager.locale.HeaderContextMenu.activeDateRange);\n\n                 if (index > -1) {\n                     items.splice(index, 1);\n                 }\n            }\n        }\n    }\n});\n</code></pre>\n<p>To disable header context menu for locked grid, but leave it for normal grid:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>const scheduler = new Scheduler({\n    features : {\n        contextMenu : {\n            // to disable menu for headers except timeline header\n            processHeaderItems : ({ column }) => column instanceof TimeAxisColumn,\n            // to disable menu for cells\n            processCellItems   : () => false\n        }\n    }\n});\n</code></pre>\n<p>This feature is <strong>enabled</strong> by default</p>",extends:["Core/mixin/InstancePlugin"],constructor:{name:"constructor"},filename:"HeaderContextMenu.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/feature",lineno:88,externalExamples:["scheduler/HeaderContextMenu.js"],demo:{product:"scheduler",demo:"basic"},configs:[{name:"extraItems",description:"<p>An array of additional items to add to the menu</p>",type:"Array.<Object>",scope:"inner"},{name:"processItems",description:"<p>A function called before displaying the menu that allows manipulations of its items. Called with a\nsingle parameter with format { eventRecord, resourceRecord, eventElement, items }.</p>\n<pre class=\"prettyprint source lang-javascript\"><code>features : {\n    headerContextMenu : {\n        processItems({ items }) {\n            // Add or remove items here as needed\n            items.push({ text: 'Some action', icon : 'b-fa b-fa-fw b-fa-ban' })\n        }\n    }\n}\n</code></pre>",type:"function",scope:"inner"}],functions:[{name:"getHeaderMenuItems",access:"internal",description:"<p>Populates the header context menu items.</p>",parameters:[{name:"column",description:"<p>Column for which the menu will be shown</p>"},{name:"items",description:"<p>Array of menu items</p>"}],scope:"instance"}]},{name:"module:Scheduler/feature/HeaderZoom",classDescription:"<p>Enables users to click and drag to zoom to a date range in Scheduler's header time axis.</p>\n<p>This feature is <strong>disabled</strong> by default.</p>",extends:["Core/mixin/InstancePlugin"],examples:["let scheduler = new Scheduler({\n  features : {\n    headerZoom : true\n  }\n});"],constructor:{name:"constructor"},filename:"HeaderZoom.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/feature",lineno:28,classType:"HeaderZoom",externalExamples:["scheduler/HeaderZoom.js"]},{name:"module:Scheduler/feature/Labels",classDescription:'<p>Displays labels at positions <a href="#Scheduler/feature/Labels#config-top">top</a>, <a href="#Scheduler/feature/Labels#config-right">right</a>, <a href="#Scheduler/feature/Labels#config-bottom">bottom</a> and <a href="#Scheduler/feature/Labels#config-left">left</a>.</p>\n<p>Text in labels can be set from a field on the <a href="#Scheduler/model/EventModel">EventModel</a>\nor the <a href="#Scheduler/model/ResourceModel">ResourceModel</a> or using a custom renderer.</p>\n<p>Since <code>top</code> and <code>bottom</code> labels occupy space that would otherwise be used by the event we recommend using bigger rowHeights\n(&gt;55px for both labels with default styling) and zero barMargins because <code>top</code>/<code>bottom</code> labels give space around events anyway.</p>\n<p>This feature is <strong>disabled</strong> by default. It is <strong>not</strong> supported in vertical mode.</p>',extends:["Core/mixin/InstancePlugin"],constructor:{name:"constructor"},filename:"Labels.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/feature",lineno:47,demo:{product:"scheduler",demo:"labels"},externalExamples:["scheduler/Labels.js"],configs:[{name:"labelCls",description:"<p>CSS class to apply to label elements</p>",type:"String",scope:"inner",defaultvalue:"b-sch-label"},{name:"top",description:'<p>Top label configuration object. May contain the following properties:</p>\n<ul>\n<li>field : <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String">String</a> The name of a field in one of the associated records,  <a href="#Scheduler/model/EventModel">EventModel</a> or  <a href="#Scheduler/model/ResourceModel">ResourceModel</a>. The record from which the field value is drawn will be ascertained by checking for field definitions by the specified name.<br></li>\n<li>renderer : <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function">Function</a> A function, which when passed an object containing <code>eventRecord</code>, <code>resourceRecord</code> and <code>labelElement</code> properties, returns the HTML to display as the label.<br></li>\n<li>thisObj : <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object">Object</a> The <code>this</code> reference to use in the <code>renderer</code>.</li>\n<li>editor : <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object">Object</a> / <a href="#Core/widget/Field">Field</a> If the label is to be editable, a field configuration object with a <code>type</code> property, or an instantiated Field. <strong>The <code>field</code> property is mandatory for editing to work</strong>.</li>\n</ul>',type:"Object",scope:"inner"},{name:"right",description:'<p>Right label configuration object. May contain the following properties:</p>\n<ul>\n<li>field : <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String">String</a> The name of a field in one of the associated records,  <a href="#Scheduler/model/EventModel">EventModel</a> or  <a href="#Scheduler/model/ResourceModel">ResourceModel</a>. The record from which the field value is drawn will be ascertained by checking for field definitions by the specified name.<br></li>\n<li>renderer : <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function">Function</a> A function, which when passed an object containing <code>eventRecord</code>, <code>resourceRecord</code> and <code>labelElement</code> properties, returns the HTML to display as the label.<br></li>\n<li>thisObj : <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object">Object</a> The <code>this</code> reference to use in the <code>renderer</code>.</li>\n<li>editor : <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object">Object</a> / <a href="#Core/widget/Field">Field</a> If the label is to be editable, a field configuration object with a <code>type</code> property, or an instantiated Field. <strong>The <code>field</code> property is mandatory for editing to work</strong>.</li>\n</ul>',type:"Object",scope:"inner"},{name:"bottom",description:'<p>Bottom label configuration object. May contain the following properties:</p>\n<ul>\n<li>field : <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String">String</a> The name of a field in one of the associated records,  <a href="#Scheduler/model/EventModel">EventModel</a> or  <a href="#Scheduler/model/ResourceModel">ResourceModel</a>. The record from which the field value is drawn will be ascertained by checking for field definitions by the specified name.<br></li>\n<li>renderer : <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function">Function</a> A function, which when passed an object containing <code>eventRecord</code>, <code>resourceRecord</code> and <code>labelElement</code> properties, returns the HTML to display as the label.<br></li>\n<li>thisObj : <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object">Object</a> The <code>this</code> reference to use in the <code>renderer</code>.</li>\n<li>editor : <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object">Object</a> / <a href="#Core/widget/Field">Field</a> If the label is to be editable, a field configuration object with a <code>type</code> property, or an instantiated Field. <strong>The <code>field</code> property is mandatory for editing to work</strong>.</li>\n</ul>',type:"Object",scope:"inner"},{name:"left",description:'<p>Left label configuration object. May contain the following properties:</p>\n<ul>\n<li>field : <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String">String</a> The name of a field in one of the associated records,  <a href="#Scheduler/model/EventModel">EventModel</a> or  <a href="#Scheduler/model/ResourceModel">ResourceModel</a>. The record from which the field value is drawn will be ascertained by checking for field definitions by the specified name.<br></li>\n<li>renderer : <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function">Function</a> A function, which when passed an object containing <code>eventRecord</code>, <code>resourceRecord</code> and <code>labelElement</code> properties, returns the HTML to display as the label.<br></li>\n<li>thisObj : <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object">Object</a> The <code>this</code> reference to use in the <code>renderer</code>.</li>\n<li>editor : <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object">Object</a> / <a href="#Core/widget/Field">Field</a> If the label is to be editable, a field configuration object with a <code>type</code> property, or an instantiated Field. <strong>The <code>field</code> property is mandatory for editing to work</strong>.</li>\n</ul>',type:"Object",scope:"inner"},{name:"blurAction",description:"<p>What action should be taken when focus moves leaves the cell editor, for example when clicking outside.\nMay be <code>'complete'</code> or <code>'cancel</code>'.</p>",type:"String",scope:"inner",defaultvalue:"cancel"}],functions:[{name:"onEventPaint",access:"private",description:"<p>Called when a new event element is created or updated. Make correct label state.</p>",scope:"instance"},{name:"appendLabel",access:"private",description:"<p>Appends a label to a wrapping element</p>",parameters:[{name:"side"},{name:"appendTo"},{name:"eventRecord"}],scope:"instance"},{name:"updateLabel",access:"private",description:"<p>Updates a labels content</p>",parameters:[{name:"side"},{name:"eventRecord"}],scope:"instance"}]},{name:"module:Scheduler/feature/NonWorkingTime",classDescription:"<p>Feature that allows styling of weekends (and other non working time) by adding timeRanges for those days.</p>\n<p>This feature is <strong>disabled</strong> by default</p>",extends:["Scheduler/feature/AbstractTimeRanges"],constructor:{name:"constructor"},filename:"NonWorkingTime.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/feature",lineno:19,demo:{product:"scheduler",demo:"configuration"},externalExamples:["scheduler/NonWorkingTime.js"],configs:[{name:"highlightWeekends",description:"<p>Highlight weekends</p>",type:"Boolean",scope:"inner",defaultvalue:true}]},{name:"module:Scheduler/feature/Pan",classDescription:'<p>Makes the scheduler\'s timeline pannable by dragging with the mouses.</p>\n<p>This feature is <strong>disabled</strong> by default.</p>\n<p><strong>NOTE:</strong> Incompatible with <a href="#Scheduler/feature/EventDragCreate">EventDragCreate</a> feature.</p>',extends:["Core/mixin/InstancePlugin"],examples:["// enable Pan\nlet scheduler = new Scheduler({\n  features : {\n    pan : true,\n    eventDragCreate : false\n  }\n});"],constructor:{name:"constructor"},filename:"Pan.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/feature",lineno:30,classType:"pan",configs:[{name:"vertical",description:"<p>Set to false to only pan horizontally</p>",type:"Boolean",scope:"inner",defaultvalue:true}]},{name:"module:Scheduler/feature/RecurringEvents",classDescription:'<p>A feature that adds recurring events functionality to the Scheduler.</p>\n<p>The main purpose of the class is generating occurrences of the repeating events for the visible timespan.\nTo achieve this it tracks changes on the <a href="#Scheduler/view/mixin/SchedulerStores#config-eventStore">event store</a> to apply a repeating event changes\nto its visible occurrences.\nThe feature also tracks the Scheduler visible timespan changes to make sure the new timespan is populated\nwith corresponding event occurrences.</p>\n<p>Additionally the class implements displaying of a <a href="#Scheduler/view/recurrence/RecurrenceConfirmationPopup">special confirmation</a>\non user mouse dragging/resizing repeating events and its occurrences.</p>\n<p>This feature is <strong>disabled</strong> by default.</p>',extends:["Scheduler/feature/RecurringTimeSpans"],constructor:{name:"constructor"},filename:"RecurringEvents.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/feature",lineno:27,classType:"recurringEvents",demo:{product:"scheduler",demo:"recurrence"}},{name:"module:Scheduler/feature/RecurringTimeSpans",classDescription:'<p>Class that adds recurring timespans functionality to the Scheduler.</p>\n<p>The main purpose of the class is generating occurrences of timespan models that should recur\nfor the displayed time range of the scheduler.\nThe feature tracks changes on the <a href="#Scheduler/feature/RecurringTimeSpans#property-store">store</a> that contains timespan records\nin order to propagate changes to all recurring record occurrences.\nThe feature also tracks the Scheduler visible date range to make sure it is properly populated with occurrences.</p>\n<p>This feature is <strong>disabled</strong> by default.</p>',extends:["Core/mixin/InstancePlugin"],constructor:{name:"constructor"},filename:"RecurringTimeSpans.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/feature",lineno:22,classType:"recurringTimeSpans",configs:[{name:"store",description:"<p>Store to attach the feature to.\nBy default you don't need to provide the config since the store is taken from the scheduler.</p>",type:["Object","Core.data.Store"],scope:"inner"}],functions:[{name:"bindClient",access:"protected",description:'<p>Setups event listeners to the provided scheduler panel or destroys existing listeners if <code>null</code> provided.\nThe method is called when setting <a href="#Scheduler/feature/RecurringTimeSpans#property-client">client</a> property.\nOverride this to setup custom event listeners to the associated panel.</p>',parameters:[{name:"panel",type:"Scheduler.view.Scheduler",description:"<p>Panel to listen to. Provide <code>null</code> or skip the argument to remove the current listeners.</p>",optional:true}],scope:"instance"},{name:"bindStore",access:"protected",description:'<p>Setups event listeners to the provided timespan store (or destroys set listeners if <code>null</code> provided).\nThe method is called when setting <a href="#Scheduler/feature/RecurringTimeSpans#property-store">store</a> property.\nOverride this to setup custom listeners to the store.</p>',parameters:[{name:"store",type:"Core.data.Store",description:"<p>Timespan store to listen to. Provide <code>null</code> or skip the argument to remove the current listeners.</p>",optional:true}],scope:"instance"},{name:"isRecurrenceRelatedFieldChange",access:"protected",description:"<p>The method restricts which field modifications should trigger timespan occurrences building.\nBy default any field change of a recurring timespan causes the rebuilding.</p>",parameters:[{name:"timeSpan",type:"Scheduler.model.TimeSpan",description:"<p>The modified timespan.</p>"},{name:"toSet",type:"Object",description:"<p>Object containing changed fields.</p>"}],scope:"instance",returns:{type:"Boolean",description:"<p><code>True</code> if the fields modification should trigger the timespan occurrences rebuilding.</p>"}}],properties:[{name:"store",description:"<p>The timespan store associated with the feature.</p>",scope:"instance",properties:[{type:{names:["Core.data.Store"]}}]}]},{name:"module:Scheduler/feature/ResourceTimeRanges",classDescription:'<p>Feature that draws resource time ranges, shaded areas displayed behind events. These zones are similar to events in\nthat they have a start and end date but different in that they do not take part in the event layout and they always\noccupy full row height.</p>\n<p>Each time range is represented by an instances of <a href="#Scheduler/model/ResourceTimeRangeModel">Scheduler.model.ResourceTimeRangeModel</a>, held in a\n<a href="#Scheduler/data/ResourceTimeRangeStore">Scheduler.data.ResourceTimeRangeStore</a>. Currently the they are readonly UI-wise, but can be manipulated on\nthe data level. To style the rendered elements, use the <a href="#Scheduler/model/TimeSpan#field-cls">cls</a> field or use the <a href="#Scheduler/model/ResourceTimeRangeModel#field-timeRangeColor">timeRangeColor</a> field.</p>\n<p>Data can be provided either using the <a href="#Scheduler/feature/ResourceTimeRanges#config-store">store</a> config:</p>\n<pre class="prettyprint source lang-javascript"><code>new Scheduler({\n  features :  {\n      resourceTimeRanges : {\n         store : new Scheduler.data.ResourceTimeRangeStore({\n             readUrl : \'./resourceTimeRanges/\'\n         })\n      }\n  }\n})\n</code></pre>\n<p>or the <code>resourceTimeRanges</code> config on the Scheduler config object:</p>\n<pre class="prettyprint source lang-javascript"><code>new Scheduler({\n  features :  {\n      resourceTimeRanges : true\n  },\n\n  // Data specified directly on the Scheduler instance\n  resourceTimeRanges : [\n    // Either specify startDate & endDate or startDate & duration when defining a range\n    { startDate : new Date(2019,0,1), endDate : new Date(2019,0,3), name : \'Occupied\', timeRangeColor : \'red\' },\n    { startDate : new Date(2019,0,3), duration : 2, durationUnit : \'d\', name : \'Available\' },\n  ]\n})\n</code></pre>\n<p>This feature is <strong>disabled</strong> by default</p>',extends:["Core/mixin/InstancePlugin"],constructor:{name:"constructor"},filename:"ResourceTimeRanges.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/feature",lineno:55,demo:{product:"scheduler",demo:"resourcetimeranges"},externalExamples:["scheduler/ResourceTimeRanges.js"],configs:[{name:"store",description:"<p>Store that holds resource time ranges (using ResourceTimeRangeModel or subclass thereof). A store will be\nautomatically created if none is specified</p>",type:"Scheduler.data.ResourceTimeRangeStore",scope:"inner"},{name:"resourceTimeRanges",description:"<p>Time range definitions (data to ResourceTimeRangeModels). Will be added to store. Can also be specified\non Scheduler for convenience</p>",type:["Array.<Scheduler.model.ResourceTimeRangeModel>","Array.<Object>"],scope:"inner"}],properties:[{name:"store",access:"private",description:"<p>Called during construction to do product specific store setup</p>",scope:"instance"}]},{name:"module:Scheduler/feature/ScheduleContextMenu",classDescription:"<p>Displays a context menu for empty parts of the schedule. Items are populated in the first place\nby configurations of this Feature, then by other features and/or application code.</p>\n<p>To add extra items (Array notation):</p>\n<pre class=\"prettyprint source lang-javascript\"><code>const scheduler = new Scheduler({\n    features : {\n        scheduleContextMenu : {\n            // Extra items for all events\n            items : [\n                {\n                    text : 'Extra',\n                    icon : 'b-fa b-fa-fw b-fa-flag',\n                    onItem({date, resourceRecord, items}) {\n                        // Custom date based action\n                    }\n                }\n            ]\n        }\n    }\n});\n</code></pre>\n<p>To add extra items (Object notation):</p>\n<pre class=\"prettyprint source lang-javascript\"><code>const scheduler = new Scheduler({\n    features : {\n        scheduleContextMenu : {\n            // Extra items for all events\n            items : {\n                extraItem : {\n                    text : 'Extra',\n                    icon : 'b-fa b-fa-fw b-fa-flag',\n                    onItem({date, resourceRecord, items}) {\n                        // Custom date based action\n                    }\n                }\n            }\n        }\n    }\n});\n</code></pre>\n<p>To remove existing items:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>const scheduler = new Scheduler({\n    features : {\n        scheduleContextMenu : {\n            items : {\n                addEvent : false\n            }\n        }\n    }\n});\n</code></pre>\n<p>Manipulate existing menu items:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>const scheduler = new Scheduler({\n    features : {\n        scheduleContextMenu : {\n            // Process items before menu is shown\n            processItems({date, resourceRecord, items}) {\n                 // Push an extra item for ancient times\n                 if (date &lt; new Date(2018, 11, 17)) {\n                     items.modernize = {\n                         text : 'Modernize',\n                         ontItem({date}) {\n                             // Custom date based action\n                         }\n                     };\n                 }\n\n                 // Do not show menu for Sundays\n                 if (date.getDay() === 0) {\n                     return false;\n                 }\n            }\n        }\n    }\n});\n</code></pre>\n<p>This feature is <strong>enabled</strong> by default</p>",extends:["Scheduler/feature/base/TimeSpanRecordContextMenuBase"],constructor:{name:"constructor"},filename:"ScheduleContextMenu.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/feature",lineno:101,demo:{product:"scheduler",demo:"basic"},configs:[{name:"items",description:"<p>An array of extra menu items to add to the context menu</p>\n<pre class=\"prettyprint source lang-javascript\"><code>const scheduler = new Scheduler({\n    features : {\n        scheduleContextMenu : {\n            // Extra items for all events\n            items : [\n                {\n                    text : 'Add meeting',\n                    icon : 'b-fa b-fa-fw b-fa-calendar-plus',\n                    onItem({ date, resourceRecord }) {\n                        scheduler.eventStore.add({\n                            name : 'Meeting',\n                            startDate : date,\n                            duration: 2,\n                            resourceId : resourceRecord.id\n                        });\n                    }\n                }\n            ]\n        }\n    }\n});\n</code></pre>\n<p>or items config to add extra items to the context menu or hide default items</p>\n<pre class=\"prettyprint source lang-javascript\"><code>features : {\n    scheduleContextMenu : {\n        items : {\n            // Add custom 'Add meeting' item\n            addMeeting : {\n                text : 'Add meeting',\n                icon : 'b-fa b-fa-fw b-fa-calendar-plus',\n                onItem({ date, resourceRecord }) {\n                    scheduler.eventStore.add({\n                        name : 'Meeting',\n                        startDate : date,\n                        duration: 2,\n                        resourceId : resourceRecord.id\n                    });\n                }\n            },\n            // Hide default 'Add event' item\n            addEvent : false\n        }\n    }\n}\n</code></pre>",type:["Object","Array.<Object>"],scope:"inner"},{name:"processItems",description:"<p>A function called before displaying the menu that allows manipulations of its items.\nCalled with a single parameter with format { date, resourceRecord, items }.\nReturning <code>false</code> from this function prevents the menu from being shown.</p>\n<pre class=\"prettyprint source lang-javascript\"><code>const scheduler = new Scheduler({\n    features : {\n        scheduleContextMenu : {\n            // Process items before menu is shown\n            processItems({date, resourceRecord, items}) {\n                 // Push an extra item for ancient times\n                 if (date &lt; new Date(2018, 11, 17)) {\n                     items.modernize = {\n                         text : 'Modernize',\n                         ontItem({date}) {\n                             // Custom date based action\n                         }\n                     };\n                 }\n\n                 // Do not show menu for Sundays\n                 if (date.getDay() === 0) {\n                     return false;\n                 }\n            }\n        }\n    }\n});\n</code></pre>",type:"function",scope:"inner"},{name:"defaultItems",description:'<p>This is a preconfigured set of <a href="#Core/widget/Container#config-namedItems">namedItems</a> used to create the default context menu.</p>\n<p>The provided defaultItems setting is</p>\n<pre class="prettyprint source lang-javascript"><code>   {\n       addEvent : true\n   }\n</code></pre>\n<p>The <code>namedItems</code> provided by this feature are listed below. These are the property\nnames which you may configure in the feature\'s <a href="#Scheduler/feature/ScheduleContextMenu#config-items">items</a> config:</p>\n<ul>\n<li><code>addEvent</code> Add an event for at the resource and time indicated by the <code>contextmenu</code> event.</li>\n</ul>\n<p>To remove existing items, set corresponding keys to <code>false</code></p>\n<pre class="prettyprint source lang-javascript"><code>const scheduler = new Scheduler({\n    features : {\n        scheduleContextMenu : {\n            items : {\n                addEvent : false\n            }\n        }\n    }\n});\n</code></pre>',type:"Object",scope:"inner"}],events:[{name:"scheduleContextMenuBeforeShow",description:"<p>Fired from scheduler before the context menu is shown for an event. Allows manipulation of the items\nto show in the same way as in <code>processItems</code>. Returning false from a listener prevents the menu from\nbeing shown.</p>",parameters:[{name:"source",type:"Scheduler.view.Scheduler"},{name:"items",type:"Object",description:"<p>Menu item configs</p>"},{name:"eventRecord",type:"Scheduler.model.EventModel",description:"<p>Event record for which the menu was triggered</p>"},{name:"resourceRecord",type:"Scheduler.model.ResourceModel",description:"<p>Resource record</p>"},{name:"assignmentRecord",type:"Scheduler.model.AssignmentModel",description:"<p>Assignment record, if assignments are used</p>"},{name:"eventElement",type:"HTMLElement"}],preventable:true},{name:"scheduleContextMenuItem",description:"<p>Fired from scheduler when an item is selected in the context menu.</p>",parameters:[{name:"source",type:"Scheduler.view.Scheduler"},{name:"item",type:"Core.widget.MenuItem"},{name:"eventRecord",type:"Scheduler.model.EventModel"},{name:"resourceRecord",type:"Scheduler.model.ResourceModel"},{name:"assignmentRecord",type:"Scheduler.model.AssignmentModel",description:"<p>Assignment record, if assignments are used</p>"},{name:"eventElement",type:"HTMLElement"}]},{name:"scheduleContextMenuShow",description:"<p>Fired from scheduler after showing the context menu for an event</p>",parameters:[{name:"source",type:"Scheduler.view.Scheduler"},{name:"menu",type:"Core.widget.Menu",description:"<p>The menu</p>"},{name:"eventRecord",type:"Scheduler.model.EventModel",description:"<p>Event record for which the menu was triggered</p>"},{name:"resourceRecord",type:"Scheduler.model.ResourceModel",description:"<p>Resource record</p>"},{name:"assignmentRecord",type:"Scheduler.model.AssignmentModel",description:"<p>Assignment record, if assignments are used</p>"},{name:"eventElement",type:"HTMLElement"}],preventable:true}]},{name:"module:Scheduler/feature/ScheduleTooltip",classDescription:'<p>Feature that displays a tooltip containing the time at the mouse position when hovering empty parts of the schedule.\nTo hide the schedule tooltip, just disable this feature:</p>\n<pre class="prettyprint source lang-javascript"><code>const scheduler = new Scheduler({\n    features : {\n        scheduleTooltip : false\n    }\n});\n</code></pre>\n<p>You can also output a message along with the default time indicator (to indicate resource availability etc)</p>\n<pre class="prettyprint source lang-javascript"><code>const scheduler = new Scheduler({\n   features : {\n      scheduleTooltip : {\n          getText(date, event, resource) {\n              return \'Hovering \' + resource.name;\n          }\n      }\n  }\n});\n</code></pre>\n<p>To take full control over the markup shown in the tooltip you can override the <a href="#Scheduler/feature/ScheduleTooltip#function-generateTipContent">generateTipContent</a> method:</p>\n<pre class="prettyprint source"><code>const scheduler = new Scheduler({\n    features : {\n        scheduleTooltip : {\n            generateTipContent({ date, event, resourceRecord }) {\n                return `\n                    &lt;dl>\n                        &lt;dt>Date&lt;/dt>&lt;dd>${date}&lt;/dd>\n                        &lt;dt>Resource&lt;/dt>&lt;dd>${resourceRecord.name}&lt;/dd>\n                    &lt;/dl>\n                `;\n            }\n        }\n    }\n});</code></pre>',extends:["Core/mixin/InstancePlugin"],constructor:{name:"constructor"},filename:"ScheduleTooltip.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/feature",lineno:57,demo:{product:"scheduler",demo:"basic"},externalExamples:["scheduler/ScheduleTooltip.js"],functions:[{name:"render",access:"private",description:"<p>Called when scheduler is rendered. Sets up drag and drop and hover tooltip.</p>",scope:"instance"},{name:"getHoverTipHtml",access:"private",scope:"instance",deprecated:true},{name:"generateTipContent",description:"<p>Called as mouse pointer is moved over a new resource or time block. You can override this to show\ncustom HTML in the tooltip.</p>",parameters:[{name:"context",type:"Object"},{name:"context.date",type:"Date",description:"<p>The date of the hovered point</p>",isSubParam:true},{name:"context.event",type:"Event",description:"<p>The DOM event that triggered this tooltip to show</p>",isSubParam:true},{name:"context.resourceRecord",type:"Scheduler.model.ResourceModel",description:"<p>The resource record</p>",isSubParam:true}],scope:"instance"},{name:"getText",description:"<p>Override this to render custom text to default hover tip</p>",parameters:[{name:"date",type:"Date"},{name:"event",type:"Event",description:"<p>Browser event</p>"},{name:"resourceRecord",type:"Scheduler.model.ResourceModel",description:"<p>The resource record</p>"}],scope:"instance",returns:{type:"String"}}]},{name:"module:Scheduler/feature/SimpleEventEdit",classDescription:'<p>Feature that displays a text field to edit the event name. You can control the flow of this by listening to the events relayed by this class from the underlying <a href="#Core/widget/Editor">Core.widget.Editor</a>.\nTo use this feature, you also need to disable the built-in default editing feature:</p>\n<pre class="prettyprint source lang-javascript"><code>const scheduler = new Scheduler({\n    features : {\n        eventEdit       : false,\n        simpleEventEdit : true\n    }\n});\n</code></pre>\n<p>This feature is <strong>disabled</strong> by default</p>',extends:["Core/mixin/InstancePlugin"],constructor:{name:"constructor"},filename:"SimpleEventEdit.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/feature",lineno:30,demo:{product:"scheduler",demo:"simpleeditor"},externalExamples:["scheduler/SimpleEventEdit.js"],events:[{name:"beforeStart",description:"<p>Fired before the editor is shown to start an edit operation. Returning <code>false</code> from a handler vetoes the edit operation.</p>",preventable:true},{name:"start",description:"<p>Fired when an edit operation has begun.</p>"},{name:"beforeComplete",description:"<p>Fired when an edit completion has been requested, either by <code>ENTER</code>, or focus loss (if configured to complete on blur).\nThe completion may be vetoed, in which case, focus is moved back into the editor.</p>",preventable:true},{name:"complete",description:"<p>Edit has been completed, and any associated record or element has been updated.</p>"},{name:"beforeCancel",description:"<p>Fired when cancellation has been requested, either by <code>ESC</code>, or focus loss (if configured to cancel on blur).\nThe cancellation may be vetoed, in which case, focus is moved back into the editor.</p>",preventable:true},{name:"cancel",description:"<p>Edit has been canceled without updating the associated record or element.</p>"}],configs:[{name:"triggerEvent",description:"<p>The event that shall trigger showing the editor. Defaults to <code>eventdblclick</code>, set to `` or null to disable editing of existing events.</p>",type:"String",scope:"inner",defaultvalue:"eventdblclick",category:"Editor"},{name:"field",description:'<p>The <a href="#Scheduler/model/EventModel">Scheduler.model.EventModel</a> field to edit</p>',type:"String",scope:"inner",category:"Editor"},{name:"editorConfig",description:"<p>The editor configuration, where you can control which widget to show</p>",type:"Object",scope:"inner",category:"Editor"}],properties:[{name:"eventRecord",description:'<p>The current <a href="#Scheduler/model/EventModel">Scheduler.model.EventModel</a> record, which is being edited by the event editor.</p>',scope:"inner",readonly:true,properties:[{type:{names:["Scheduler.model.EventModel"]}}]}],functions:[{name:"editEvent",description:"<p>Opens an Editor for the passed event. This function is exposed on Scheduler and can be called as\n<code>scheduler.editEvent()</code>.</p>",parameters:[{name:"eventRecord",type:"Scheduler.model.EventModel",description:"<p>The Event to edit</p>"},{name:"resourceRecord",type:"Scheduler.model.ResourceModel",description:"<p>The Resource record for the event.</p>",optional:true}],scope:"instance"}]},{name:"module:Scheduler/feature/Summary",classDescription:'<p>A special version of the Grid Summary feature. This feature displays a summary row in the grid footer.\nFor regular columns in the locked section - specify type of summary on columns, available types are:</p>\n<dl class="wide">\n<dt>sum <dd>Sum of all values in the column\n<dt>add <dd>Alias for sum\n<dt>count <dd>Number of rows\n<dt>countNotEmpty <dd>Number of rows containing a value\n<dt>average <dd>Average of all values in the column\n<dt>function <dd>A custom function, used with store.reduce. Should take arguments (sum, record)\n</dl>\nColumns can also specify a summaryRender to format the calculated sum.\n<p>To summarize events, either provide a <a href="#Scheduler/feature/Summary#config-renderer">renderer</a> or use <a href="#Scheduler/feature/Summary#config-summaries">summaries</a></p>\n<p>This feature is <strong>disabled</strong> by default. It is <strong>not</strong> supported in vertical mode.</p>',extends:["Grid/feature/Summary"],constructor:{name:"constructor"},filename:"Summary.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/feature",lineno:36,typings:"Grid/feature/Summary -> Grid/feature/GridSummary",classType:"summary",externalExamples:["scheduler/Summary.js"],demo:{product:"scheduler",demo:"summary"},configs:[{name:"showTooltip",description:"<p>Show tooltip containing summary values and labels</p>",type:"Boolean",scope:"inner",defaultvalue:true},{name:"summaries",description:"<p>Array of summary configs, with format\n<code>[{ label: 'Label', renderer : ({startDate, endDate, eventStore, resourceStore, events, element}) }]</code>.</p>",type:"Array.<Object>",scope:"inner"},{name:"renderer",description:'<p>Easier way to configure When using single summary, accepts a renderer function with the format specified\nin <a href="#Scheduler/feature/Summary#config-summaries">summaries</a></p>',type:"function",scope:"inner"}],functions:[{name:"updateScheduleSummaries",access:"private",description:"<p>Updates summaries.</p>",scope:"instance"}]},{name:"module:Scheduler/feature/TimeRanges",classDescription:'<p>Feature that renders global ranges of time in the timeline. Use this feature to visualize a <code>range</code> like a 1 hr lunch or some important point in time\n(a <code>line</code>, i.e. a range with 0 duration). This feature can also show a current time indicator if you set <a href="#Scheduler/feature/TimeRanges#config-showCurrentTimeLine">showCurrentTimeLine</a> to true. To style\nthe rendered elements, use the <a href="#Scheduler/model/TimeSpan#field-cls">cls</a> field of the <code>TimeSpan</code> class.</p>\n<p>Each time range is represented by an instances of <a href="#Scheduler/model/TimeSpan">Scheduler.model.TimeSpan</a>, held in a simple <a href="#Core/data/Store">Core.data.Store</a>.\nIf <a href="#Scheduler/data/CrudManager">Scheduler.data.CrudManager</a> is specified for the scheduler, the <a href="#Scheduler/feature/TimeRanges#config-store">store</a> will be added at the end of the CrudManager\n<a href="#Scheduler/crud/AbstractCrudManager#property-stores">stores</a> collection.</p>\n<p>This feature is <strong>disabled</strong> by default</p>',extends:["Scheduler/feature/AbstractTimeRanges"],constructor:{name:"constructor"},filename:"TimeRanges.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/feature",lineno:26,classType:"timeRanges",demo:{product:"scheduler",demo:"timeranges"},externalExamples:["scheduler/TimeRanges.js"],configs:[{name:"store",description:'<p>Store that holds timeRanges (using the <a href="#Scheduler/model/TimeSpan">Scheduler.model.TimeSpan</a> model or subclass thereof).\nA store will be automatically created if none is specified</p>',type:["Object","Core.data.Store"],scope:"inner"},{name:"currentDateFormat",description:'<p>The date format to show in the header for the current time line, see <a href="#Scheduler/feature/TimeRanges#config-showCurrentTimeLine">showCurrentTimeLine</a></p>',type:"String",scope:"inner",defaultvalue:"HH:mm"},{name:"timeRanges",description:'<p>Range definitions (data to <a href="#Scheduler/model/TimeSpan">Scheduler.model.TimeSpan</a> models). Will be added to store.</p>',type:["Array.<Scheduler.model.TimeSpan>","Array.<Object>"],scope:"inner"},{name:"showCurrentTimeLine",description:"<p>Show a line indicating current time</p>",type:"Boolean",scope:"inner",defaultvalue:false}],properties:[{name:"showCurrentTimeLine",description:"<p>Get/set the current time line display state</p>",scope:"instance",properties:[{type:{names:["boolean"]}}]},{name:"disabled",description:"<p>Get/set the features disabled state</p>",scope:"instance",properties:[{type:{names:["Boolean"]}}]},{name:"store",description:'<p>Returns the <a href="#Core/data/Store">store</a> used by this feature</p>',scope:"instance",properties:[{type:{names:["Core.data.Store"]}}]}],functions:[{name:"getHeaderMenuItems",access:"private",description:"<p>Adds a menu item to show/hide current time line.</p>",parameters:[{name:"column",description:"<p>Column</p>"},{name:"items",description:"<p>Menu items</p>"}],scope:"instance",returns:{type:"Array.<Object>",description:"<p>Menu items</p>"}}]},{name:"module:Scheduler/feature/base/DragBase",classDescription:"<p>Base class for EventDrag (Scheduler) and TaskDrag (Gantt) features. Contains shared code. Not to be used directly.</p>",extends:["Core/mixin/InstancePlugin"],virtual:true,constructor:{name:"constructor"},filename:"DragBase.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/feature/base",lineno:25,configs:[{name:"showTooltip",description:"<p>Specifies whether or not to show tooltip while dragging event</p>",type:"Boolean",scope:"inner",defaultvalue:true},{name:"showExactDropPosition",description:"<p>When enabled, the event being dragged always &quot;snaps&quot; to the exact start date that it will have after drop.</p>",type:"Boolean",scope:"inner",defaultvalue:false},{name:"constrainDragToTimeline",description:"<p>Set to <code>false</code> to allow dragging tasks outside of the client Scheduler.\nUseful when you want to drag tasks between multiple Scheduler instances</p>",type:"Boolean",scope:"inner",defaultvalue:true},{name:"dragHelperConfig",description:'<p>An object used to configure the internal <a href="#Core/helper/DragHelper">Core.helper.DragHelper</a> class</p>',type:"Object",scope:"inner"}],functions:[{name:"render",access:"private",description:"<p>Called when scheduler is rendered. Sets up drag and drop and hover tooltip.</p>",scope:"instance"},{name:"onDragStart",access:"private",description:"<p>Triggered when dragging of an event starts. Initializes drag data associated with the event being dragged.</p>",scope:"instance"},{name:"onDrag",access:"private",description:"<p>Triggered while dragging an event. Updates drag data, validation etc.</p>",scope:"instance"},{name:"onDrop",access:"private",description:"<p>Triggered when dropping an event. Finalizes the operation.</p>",scope:"instance"},{name:"onInternalInvalidDrop",access:"private",description:"<p>Triggered internally on invalid drop.</p>",scope:"instance"},{name:"finalize",access:"private",description:"<p>Called on drop to update the record of the event being dropped.</p>",parameters:[{name:"updateRecords",type:"Boolean",description:"<p>Specify true to update the record, false to treat as invalid</p>"}],scope:"instance"},{name:"updateDragContext",access:"private",description:"<p>Updates drag datas dates and validity (calls #validatorFn if specified)</p>",scope:"instance"},{name:"getDragData",access:"private",description:"<p>Initializes drag data (dates, constraints, dragged events etc). Called when drag starts.</p>",parameters:[{name:"info"},{name:"event"}],scope:"instance",returns:{type:"*"}},{name:"getTipHtml",description:"<p>Gets html to display in tooltip while dragging event. Uses clockTemplate to display start &amp; end dates.</p>",scope:"instance"}],properties:[{name:"disabled",description:"<p>Disable this feature</p>",scope:"instance",properties:[{type:{names:["Boolean"]}}]}]},{name:"module:Scheduler/feature/base/DragCreateBase",classDescription:"<p>Base class for EventDragCreate (Scheduler) and TaskDragCreate (Gantt) features. Contains shared code. Not to be used directly.</p>",extends:["Core/mixin/InstancePlugin"],constructor:{name:"constructor"},filename:"DragCreateBase.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/feature/base",lineno:25,configs:[{name:"showTooltip",description:"<p>true to show a time tooltip when dragging to create a new event</p>",type:"Boolean",scope:"inner",defaultvalue:true},{name:"dragTolerance",description:"<p>Number of pixels the drag target must be moved before dragging is considered to have started. Defaults to 2.</p>",type:"Number",scope:"inner",defaultvalue:2},{name:"validatorFnThisObj",description:"<p><code>this</code> reference for the validatorFn</p>",type:"Object",scope:"inner"},{name:"proxyCls",access:"private",description:"<p>CSS class to add to proxy used when creating a new event</p>",type:"String",scope:"inner",defaultvalue:"b-sch-dragcreator-proxy"}],functions:[{name:"addProxy",description:"<p>Adds a proxy element to illustrate the timespan that might be created</p>",parameters:[{name:"config"},{name:"config.rowRecord",type:"Core.data.Model",description:"<p>The row for which an event proxy element is being created.</p>",isSubParam:true},{name:"config.startX",type:"Number",description:"<p>the position along the time axis at which to display the proxy element.</p>",isSubParam:true},{name:"config.width",type:"Number",description:"<p>the width of the proxy element.</p>",optional:true,isSubParam:true}],scope:"instance"},{name:"removeProxy",access:"private",description:"<p>Remove proxy element and clean up related stuff</p>",scope:"instance"},{name:"initResizer",description:"<p>Creates an instance of ResizeHelper used to resize the proxy element</p>",parameters:[{name:"event"},{name:"data"}],scope:"instance"},{name:"initTooltip",description:"<p>Creates a tooltip that displays start &amp; end dates. Anchored to the proxy element</p>",scope:"instance"},{name:"getTipHtml",description:"<p>Updates tooltips contents</p>",scope:"instance",returns:{type:"*"}},{name:"onElementContextMenu",access:"internal",description:"<p>Prevent right click when drag creating</p>",scope:"instance",returns:{type:"Boolean"}}]},{name:"module:Scheduler/feature/base/EditBase",classDescription:"<p>Base class for EventEdit (Scheduler) and TaskEdit (Gantt) features. Contains shared code. Not to be used directly.</p>",extends:["Core/mixin/InstancePlugin"],constructor:{name:"constructor"},filename:"EditBase.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/feature/base",lineno:52,configs:[{name:"autoClose",description:"<p>True to hide this editor if a click is detected outside it (defaults to true)</p>",type:"Boolean",scope:"inner",defaultvalue:true,category:"Editor"},{name:"saveAndCloseOnEnter",description:"<p>True to save and close this panel if ENTER is pressed in one of the input fields inside the panel.</p>",type:"Boolean",scope:"inner",defaultvalue:true,category:"Editor"},{name:"showDeleteButton",description:"<p>True to show a delete button in the form.</p>",type:"Boolean",scope:"inner",defaultvalue:true,category:"Editor widgets"},{name:"showNameField",description:"<p>True to show a text field for entering event name</p>",type:"Boolean",scope:"inner",defaultvalue:true,category:"Editor widgets"},{name:"startTimeConfig",description:"<p>Config for the <code>startTimeField</code> constructor.</p>",type:"Object",scope:"inner",category:"Editor widgets"},{name:"startDateConfig",description:"<p>Config for the <code>startDateField</code> constructor.</p>",type:"Object",scope:"inner",category:"Editor widgets"},{name:"endTimeConfig",description:"<p>Config for the <code>endTimeField</code> constructor.</p>",type:"Object",scope:"inner",category:"Editor widgets"},{name:"endDateConfig",description:"<p>Config for the <code>endDateField</code> constructor.</p>",type:"Object",scope:"inner",category:"Editor widgets"},{name:"dateFormat",description:"<p>This config parameter is passed to the <code>startDateField</code> and <code>endDateField</code> constructor.</p>",type:"String",scope:"inner",defaultvalue:"L",category:"Editor widgets"},{name:"timeFormat",description:"<p>This config parameter is passed to the <code>startTimeField</code> and <code>endTimeField</code> constructor.</p>",type:"String",scope:"inner",defaultvalue:"LT",category:"Editor widgets"},{name:"editorConfig",description:"<p>Default editor configuration, which widgets it shows etc.</p>",type:"Object",scope:"inner",category:"Editor"},{name:"extraItems",description:"<p>Array of widgets. Will be inserted above buttons unless an index is\nspecified for the widget:</p>\n<pre class=\"prettyprint source\"><code>new Grid({\n  features : {\n    eventEdit : {\n      extraItems : [\n        { type : 'text', index : 1 },\n        ...\n      ]\n    }\n  }\n});\n</code></pre>",type:["String","Array.<Object>"],scope:"inner",category:"Editor widgets"},{name:"extraWidgets",description:'<p>This config has been deprecated in favour of <a href="#Scheduler/feature/base/EditBase#config-extraItems">extraItems</a>.</p>',type:["String","Array.<Object>"],scope:"inner",category:"Editor widgets",deprecated:true},{name:"weekStartDay",description:"<p>The week start day used in all date fields of the feature editor form by default.\n0 means Sunday, 6 means Saturday.\nDefaults to the locale's week start day.</p>",type:"Number",scope:"inner"}],functions:[{name:"insertExtraWidgetsIntoDefaultWidgets",access:"private",description:"<p>Insert extra fields into default Editor fields according to specific rules:</p>\n<ul>\n<li>If no index provided insert them into <code>extraItems</code> placeholder (or at the end if not);</li>\n<li>If index provided sort ASC and insert one by one, but only after no-index fields are inserted;</li>\n<li>If <code>extraItems</code> placeholder exists, don't take widgets that go after it into account;</li>\n</ul>",scope:"instance"},{name:"onBeforeSave",description:"<p>Template method, intended to be overridden. Called before the event record has been updated.</p>",parameters:[{name:"eventRecord",type:"Scheduler.model.EventModel",description:"<p>The event record</p>"}],scope:"instance"},{name:"onAfterSave",description:"<p>Template method, intended to be overridden. Called after the event record has been updated.</p>",parameters:[{name:"eventRecord",type:"Scheduler.model.EventModel",description:"<p>The event record</p>"}],scope:"instance"},{name:"updateRecord",access:"private",description:"<p>Updates record being edited with values from the editor</p>",scope:"instance"}]},{name:"module:Scheduler/feature/base/ResizeBase",classDescription:"<p>Base class for EventResize (Scheduler) and TaskResize (Gantt) features. Contains shared code. Not to be used directly.</p>",extends:["Core/mixin/InstancePlugin"],virtual:true,constructor:{name:"constructor"},filename:"ResizeBase.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/feature/base",lineno:28,configs:[{name:"showTooltip",description:"<p><code>false</code> to not show a tooltip while resizing</p>",type:"Boolean",scope:"inner",defaultvalue:true},{name:"showExactResizePosition",description:"<p>true to see exact event length during resizing</p>",type:"Boolean",scope:"inner",defaultvalue:false},{name:"validatorFn",description:"<p>An empty function by default, but provided so that you can perform custom validation on\nthe item being resized. Return true if the new duration is valid, false to signal that it is not.</p>",type:"function",scope:"inner",returns:[{type:{names:["Boolean"]}}],parameters:[{name:"context",type:"Object",description:"<p>The resize context, contains the record &amp; dates.</p>"},{name:"e",type:"Event",description:"<p>The browser Event object</p>"}]},{name:"validatorFnThisObj",description:"<p><code>this</code> reference for the validatorFn</p>",type:"Object",scope:"inner"},{name:"tip",description:'<p>The tooltip instance to show while resizing an event or a configuration object for the <a href="#Core/widget/Tooltip">Core.widget.Tooltip</a>.</p>',type:"Core.widget.Tooltip",scope:"inner"}]},{name:"module:Scheduler/feature/base/TimeSpanRecordContextMenuBase",classDescription:'<p>Abstract base class used by other context menu features such as <a href="#Scheduler/feature/EventContextMenu">EventContextMenu</a> and\n<a href="#Scheduler/feature/ScheduleContextMenu">ScheduleContextMenu</a>.</p>',extends:["Core/mixin/InstancePlugin"],virtual:true,constructor:{name:"constructor"},filename:"TimeSpanRecordContextMenuBase.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/feature/base",lineno:39,configs:[{name:"defaultItems",description:'<p>This is a preconfigured set of <a href="#Core/widget/Container#config-namedItems">namedItems</a> used to create the default\ncontext menu.</p>',type:"Object",scope:"inner"},{name:"items",description:"<p>An <a href=\"#Core/widget/Menu\">Menu</a> items object containing named child menu items\nto apply to the feature's provided context menu, see <a href=\"#Scheduler/feature/base/TimeSpanRecordContextMenuBase#config-defaultItems\">defaultItems</a>.</p>\n<p>This may add extra items as below, but may also remove any of the <a href=\"#Scheduler/feature/base/TimeSpanRecordContextMenuBase#config-defaultItems\">defaultItems</a>\nby configuring the name of the item as <code>false</code></p>\n<pre class=\"prettyprint source lang-javascript\"><code>features : {\n    taskContextMenu : { // use eventContextMenu in the Scheduler product\n        // This object is applied to the Feature's predefined defaultItems object\n        items : {\n            switchToDog : {\n                text : 'Dog',\n                icon : 'b-fa b-fa-fw b-fa-dog',\n                onItem({contextRecord}) {\n                    contextRecord.dog = true;\n                    contextRecord.cat = false;\n                },\n                weight : 500     // Make this second from end\n            },\n            switchToCat : {\n                text : 'Cat',\n                icon : 'b-fa b-fa-fw b-fa-cat',\n                onItem({contextRecord}) {\n                    contextRecord.dog = false;\n                    contextRecord.cat = true;\n                },\n                weight : 510     // Make this sink to end\n            },\n            add : false // We do not want the &quot;Add&quot; submenu to be available\n        }\n    }\n}\n</code></pre>",type:["Object","Array.<Object>"],scope:"inner"},{name:"processItems",description:"<p>A function called before displaying the menu that allows manipulations of its items. Called with a\nsingle parameter with format { contextRecord, eventElement, items }. Returning <code>false</code>\nfrom this function prevents the menu from being shown.</p>\n<pre class=\"prettyprint source lang-javascript\"><code>features : {\n    taskContextMenu : {\n        processItems({contextRecord, items}) {\n            // Add or remove items here as needed\n            if (contextRecord.type === 'Meeting') {\n                items.cancel = {\n                    text   : 'Cancel',\n                    icon   : 'b-fa b-fa-fw b-fa-ban',\n                    weight : 200 // Move to end\n                };\n            }\n\n            // Hide delete for parents\n            items.deleteTask.hidden = contextRecord.isParent;\n        }\n    }\n}\n</code></pre>",type:"function",scope:"inner"},{name:"triggerEvent",description:"<p>Event which is used to show context menu.\nAvailable options are: 'contextmenu', 'click', 'dblclick'.\nDefault value is used from <a href=\"#Grid/view/GridBase#config-contextMenuTriggerEvent\">contextMenuTriggerEvent</a></p>",type:"String",scope:"inner"}],functions:[{name:"showEventContextMenu",access:"internal",description:"<p>Show event context menu.</p>",parameters:[{name:"event"}],scope:"instance",fires:["event:eventContextMenuItem"]},{name:"showContextMenuFor",description:"<p>Shows context menu for the provided record. If record is not rendered (outside of time span, or collapsed)\nmenu won't appear.</p>",parameters:[{name:"record",type:"Scheduler.model.TimeSpan"},{name:"options",type:"Object",optional:true},{name:"options.targetElement",type:"HTMLElement",description:"<p>Element to align context menu to</p>",isSubParam:true},{name:"options.eventElement",type:"HTMLElement",description:"<p>Event element if target is an event, otherwise <code>null</code></p>",isSubParam:true},{name:"options.event",type:"Event",description:"<p>Browser event. If provided menu will be aligned according to clientX/clientY coordinates.\nIf omitted, context menu will be centered to targetElement</p>",isSubParam:true}],scope:"instance"},{name:"showContextMenu",access:"internal",parameters:[{name:"eventParams",type:"Object"},{name:"items",type:"Array.<Object>"}],scope:"instance"},{name:"hideContextMenu",access:"internal",description:"<p>Hides the context menu</p>",scope:"instance"}],properties:[{name:"defaultItems",access:"private",description:"<p>Provides the default configuration of the context menu.</p>\n<p>Concrete classes must all provide their own defaultItems value in their defaultConfig blocks</p>",scope:"instance"}]},{name:"module:Scheduler/feature/base/TooltipBase",classDescription:"<p>Base class for EventTooltip (Scheduler) and TaskTooltip (Gantt) features. Contains shared code. Not to be used directly.</p>",extends:["Core/mixin/InstancePlugin"],constructor:{name:"constructor"},filename:"TooltipBase.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/feature/base",lineno:14,configs:[{name:"autoUpdate",description:"<p>Specify true to have tooltip updated when mouse moves, if you for example want to display date at mouse\nposition.</p>",type:"Boolean",scope:"inner",defaultvalue:false,category:"Misc"}],properties:[{name:"tooltip",description:"<p>A reference to the tooltip instance, which will have a special <code>eventRecord</code> property that\nyou can use to get data from the contextual event record to which this tooltip is related.</p>",type:{names:["Core.widget.Tooltip"]},scope:"inner",readonly:true,category:"Misc"}]},{name:"module:Scheduler/feature/experimental/ExcelExporter",classDescription:"<p><strong>NOTE</strong>: This class requires a 3rd party library to operate.</p>\n<p>A plugin that allows exporting Scheduler data to Excel without involving the server. It uses <a href=\"#Scheduler/util/ScheduleTableExporter\">Scheduler.util.ScheduleTableExporter</a>\nclass as data provider, <a href=\"https://www.npmjs.com/package/zipcelx\">zipcelx library</a>\nforked and adjusted to support <a href=\"https://github.com/bryntum/zipcelx/tree/column-width-build\">column width config</a>\nand <a href=\"https://msdn.microsoft.com/en-us/library/office/documentformat.openxml.spreadsheet.aspx\">Microsoft XML specification</a>.\nZipcelx should be either in global scope (window) or can be provided with <a href=\"#Scheduler/feature/experimental/ExcelExporter#config-zipcelx\">zipcelx</a> config.</p>\n<pre class=\"prettyprint source\"><code>// Global scope\n&lt;script src=&quot;zipcelx.js&quot;>&lt;/script>\n\n// importing from package\nimport zipcelx from 'zipcelx';\n\nconst grid = new Grid({\n    features : {\n        excelExporter : {\n            zipcelx\n        }\n    }\n})\n</code></pre>\n<p>Here is an example of how to add the feature:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>const scheduler = new Scheduler({\n    features : {\n        excelExporter : {\n            // Choose the date format for date fields\n            dateFormat : 'YYYY-MM-DD HH:mm',\n\n            // Choose the Resource fields to include in the exported file\n            columns : [{ text : 'Staff', field : 'name' }],\n\n            // Choose the Event fields to include in the exported file\n            eventColumns    : [\n                { text : 'Task', field : 'name' },\n                { text : 'Starts', field : 'startDate', width : 140 },\n                { text : 'Ends', field : 'endDate', width : 140 }\n            ]\n        }\n    }\n});\n</code></pre>\n<p>And how to call it:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>scheduler.features.excelExporter.export({\n    filename : 'Export'\n})\n</code></pre>",extends:["Grid/feature/experimental/ExcelExporter"],constructor:{name:"constructor"},filename:"ExcelExporter.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/feature/experimental",lineno:70,typings:"Grid/feature/experimental/ExcelExporter -> Grid/feature/experimental/GridExcelExporter",demo:{product:"scheduler",demo:"exporttoexcel"},configs:[{name:"exporterClass",description:'<p>Exporter class. Must subclass <a href="#Scheduler/util/ScheduleTableExporter">Scheduler.util.ScheduleTableExporter</a></p>',type:"Scheduler.util.ScheduleTableExporter",scope:"inner"},{name:"exporterConfig",description:'<p>Configuration object for <a href="#Scheduler/feature/experimental/ExcelExporter#config-exporterClass">exporter class</a>.</p>',type:"Object",scope:"inner"}]},{name:"module:Scheduler/feature/export/PdfExport",classDescription:'<p>Generates PDF/PNG files from the Scheduler component.</p>\n<img src="resources/images/export-dialog.png" style="max-width : 300px" alt="Scheduler Export dialog">\n<p><strong>NOTE:</strong> This feature makes a fetch request to the server, posting\nthe HTML fragments to be exported. The <a href="#Scheduler/feature/export/PdfExport#config-exportServer">exportServer</a> URL must be configured.</p>\n<h2>Usage</h2>\n<pre class="prettyprint source lang-javascript"><code>let scheduler = new Scheduler({\n    features : {\n        pdfExport : {\n            exportServer : \'http://localhost:8080\' // Required\n        }\n    }\n})\n\n// Opens popup allowing to customize export settings\nscheduler.features.pdfExport.showExportDialog();\n\n// Simple export\nscheduler.features.pdfExport.export({\n    columns : scheduler.columns.map(c => c.id) // Required, set list of column ids to export\n}).then(result => {\n    // Response instance and response content in JSON\n    let { response, responseJSON } = result;\n});\n</code></pre>\n<p>Appends configs related to exporting time axis: <a href="#Scheduler/feature/export/PdfExport#config-scheduleRange">scheduleRange</a>, <a href="#Scheduler/feature/export/PdfExport#config-rangeStart">rangeStart</a>,\n<a href="#Scheduler/feature/export/PdfExport#config-rangeEnd">rangeEnd</a></p>',extends:["Grid/feature/export/PdfExport"],constructor:{name:"constructor"},filename:"PdfExport.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/feature/export",lineno:50,typings:"Grid/feature/export/PdfExport -> Grid/feature/export/GridPdfExport",configs:[{name:"scheduleRange",description:'<p>Specifies how to export time span.</p>\n<ul>\n<li>completeview - Complete configured time span, from scheduler start date to end date</li>\n<li>currentview  - Currently visible time span</li>\n<li>daterange    - Use specific date range, provided additionally in config. See <a href="#Scheduler/feature/export/PdfExport#config-rangeStart">rangeStart</a>/\n<a href="#Scheduler/feature/export/PdfExport#config-rangeEnd">rangeEnd</a></li>\n</ul>',type:"String",scope:"inner",defaultvalue:"completeview"},{name:"rangeStart",description:'<p>Exported time span range start. Used with <code>daterange</code> config of the <a href="#Scheduler/feature/export/PdfExport#config-scheduleRange">scheduleRange</a></p>',type:"Date",scope:"inner"},{name:"rangeEnd",description:'<p>Exported time span range end. Used with <code>daterange</code> config of the <a href="#Scheduler/feature/export/PdfExport#config-scheduleRange">scheduleRange</a></p>',type:"Date",scope:"inner"}]},{name:"module:Scheduler/feature/mixin/DependencyCreation",description:'<p>Mixin for Dependencies feature that handles dependency creation (drag &amp; drop from terminals which are shown on hover).\nRequires <a href="#Core/mixin/Delayable">Core.mixin.Delayable</a>, <a href="#Scheduler/data/api/DataAPI">Scheduler.data.api.DataAPI</a> to be mixed in alongside.</p>',mixin:true,constructor:{name:"constructor"},filename:"DependencyCreation.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/feature/mixin",lineno:20,configs:[{name:"showCreationTooltip",description:"<p><code>false</code> to not show a tooltip while creating a dependency</p>",type:"Boolean",scope:"inner",defaultvalue:true},{name:"creationTooltip",description:"<p>A tooltip config object that will be applied to the dependency creation tooltip</p>",type:"Object",scope:"inner"},{name:"terminalCls",description:"<p>CSS class used for terminals</p>",type:"String",scope:"inner",defaultvalue:"b-sch-terminal"},{name:"terminalSides",description:"<p>Where (at events borders) to display terminals</p>",type:"Array.<String>",scope:"inner",defaultvalue:'["left","top","right","bottom"]'},{name:"allowCreate",description:"<p>Set to <code>false</code> to not allow creating dependencies</p>",type:"Boolean",scope:"inner",defaultvalue:true}],functions:[{name:"onTimeSpanMouseEnter",access:"private",description:"<p>Show terminals when mouse enters event/task element</p>",scope:"instance"},{name:"onTimeSpanMouseLeave",access:"private",description:"<p>Hide terminals when mouse leaves event/task element</p>",scope:"instance"},{name:"onTerminalMouseOut",access:"private",description:"<p>Remove hover styling when mouse leaves terminal. Also hides terminals when mouse leaves one it and not creating a dependency.</p>",scope:"instance"},{name:"onTerminalMouseDown",access:"private",description:"<p>Start creating a dependency when mouse is pressed over terminal</p>",scope:"instance"},{name:"onMouseMove",access:"private",description:"<p>Update connector line showing dependency between source and target when mouse moves. Also check if mouse is over a valid\ntarget terminal</p>",scope:"instance"},{name:"onMouseUp",access:"private",description:"<p>Create a new dependency if mouse release over valid terminal. Hides connector</p>",scope:"instance"},{name:"abort",description:"<p>Aborts dependency creation, removes proxy and cleans up listeners</p>",scope:"instance"},{name:"createConnector",access:"private",description:"<p>Creates a connector line that visualizes dependency source &amp; target</p>",scope:"instance"},{name:"removeConnector",access:"private",description:"<p>Remove connector</p>",scope:"instance"},{name:"showTerminals",description:"<p>Show terminals for specified event at sides defined in #terminalSides.</p>",parameters:[{name:"timeSpanRecord",type:"Scheduler.model.TimeSpan",description:"<p>Event/task to show terminals for</p>"},{name:"element",type:"HTMLElement",description:"<p>Event/task element</p>"}],scope:"instance"},{name:"hideTerminals",description:"<p>Hide terminals for specified event</p>",parameters:[{name:"eventElement",type:"HTMLElement",description:"<p>Event element</p>"}],scope:"instance"},{name:"createDependency",access:"internal",description:"<p>Create a new dependency from source terminal to target terminal</p>",scope:"instance"},{name:"generateTooltipContent",access:"private",description:"<p>Update dependency creation tooltip</p>",scope:"instance"}],events:[{name:"beforeDependencyCreateDrag",description:"<p>Fired on the owning Scheduler/Gantt before a dependency creation drag operation starts. Return false to prevent it</p>",parameters:[{name:"data",type:"Object"},{name:"data.source",type:"Scheduler.model.TimeSpan",description:"<p>The source task</p>",isSubParam:true}]},{name:"dependencyCreateDragStart",description:"<p>Fired on the owning Scheduler/Gantt when a dependency creation drag operation starts</p>",parameters:[{name:"data",type:"Object"}]},{name:"dependencyValidationComplete",description:"<p>Fired on the owning Scheduler/Gantt when asynchronous dependency validation completes</p>",parameters:[{name:"data",type:"Object"}]},{name:"dependencyValidationStart",description:"<p>Fired on the owning Scheduler/Gantt when asynchronous dependency validation starts</p>",parameters:[{name:"data",type:"Object"}]},{name:"dependencyCreateDrop",description:"<p>Fired on the owning Scheduler/Gantt when a dependency drag creation operation succeeds</p>",parameters:[{name:"data",type:"Object"}]},{name:"afterDependencyCreateDrop",description:"<p>Fired on the owning Scheduler/Gantt after a dependency drag creation operation finished, no matter to outcome</p>",parameters:[{name:"data",type:"Object"}]}]},{name:"module:Scheduler/feature/mixin/RecurringEventEdit",description:'<p>This mixin class provides recurring events functionality to the <a href="#Scheduler/feature/EventEdit">event editor</a>.</p>',mixin:true,constructor:{name:"constructor"},filename:"RecurringEventEdit.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/feature/mixin",lineno:16,properties:[{name:"recurrenceCombo",description:"<p>Reference to the <code>Repeat</code> event field, if used</p>",type:{names:["Scheduler.view.recurrence.field.RecurrenceCombo"]},scope:"inner",readonly:true},{name:"editRecurrenceButton",description:"<p>Reference to the button that opens the event repeat settings dialog, if used</p>",type:{names:["Scheduler.view.recurrence.RecurrenceLegendButton"]},scope:"inner",readonly:true}],configs:[{name:"showRecurringUI",description:'<p>Set to <code>false</code> to hide recurring fields in event editor,\neven if the <a href="#Scheduler/feature/RecurringEvents">Recurring Events</a> feature is enabled</p>',type:"Boolean",scope:"inner",category:"Recurring"}]},{name:"module:Scheduler/feature/mixin/SchedulerFeatureDataLayer",description:"<p>Scheduler feature data layer mixin, provides methods and properties\nto get scheduler stores, attach to their events and react gracefully on their change.</p>",mixin:true,access:"private",constructor:{name:"constructor"},filename:"SchedulerFeatureDataLayer.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/feature/mixin",lineno:15},{name:"module:Scheduler/model/AssignmentModel",classDescription:'<p>This class represent a single assignment of a resource to an event in scheduler.\nIt is a subclass of <a href="#Core/data/Model">Core.data.Model</a> class.\nPlease refer to the documentation for that class to become familiar with the base interface of this class.</p>\n<p>An Assignment has the following fields:</p>\n<ul>\n<li><code>id</code> - The id of the assignment</li>\n<li><code>resourceId</code> - The id of the resource assigned</li>\n<li><code>eventId</code> - The id of the event to which the resource is assigned</li>\n</ul>\n<p>The data source for these fields can be customized by subclassing this class.</p>',extends:["Core/data/Model"],constructor:{name:"constructor"},filename:"AssignmentModel.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/model",lineno:21,fields:[{name:"resourceId",description:"<p>Id for the resource assigned</p>",type:["String","Number"],scope:"inner"},{name:"eventId",description:"<p>Id for the event assigned</p>",type:["String","Number"],scope:"inner"}],properties:[{name:"resource",description:"<p>Resource assigned</p>",type:{names:["Scheduler.model.ResourceModel"]},scope:"inner"},{name:"event",description:"<p>Event assigned</p>",type:{names:["Scheduler.model.EventModel"]},scope:"inner"},{name:"eventResourceKey",description:"<p>A key made up from the event id and the id of the resource assigned to.</p>",scope:"instance",readonly:true,properties:[{name:"eventResourceKey"}]},{name:"assignmentStore",description:"<p>Returns an assigment store this assignment is part of. Assignment must be part of an assigment store\nto be able to retrieve it.</p>",scope:"instance",returns:[{type:{names:["Scheduler.data.AssignmentStore"]}}]},{name:"eventStore",description:"<p>Returns an event store this assignment uses as default event store. Assignment must be part\nof an assignment store to be able to retrieve default event store.</p>",scope:"instance",returns:[{type:{names:["Scheduler.data.EventStore"]}}]},{name:"resourceStore",description:"<p>Returns a resource store this assignment uses as default resource store. Assignment must be part\nof an assignment store to be able to retrieve default resource store.</p>",scope:"instance",returns:[{type:{names:["Scheduler.data.ResourceStore"]}}]},{name:"eventName",description:"<p>Convenience property to get the name of the associated event.</p>",scope:"instance",readonly:true,properties:[{type:{names:["String"]}}]},{name:"resourceName",description:"<p>Convenience property to get the name of the associated resource.</p>",scope:"instance",readonly:true,properties:[{type:{names:["String"]}}]},{name:"isPersistable",description:"<p>Returns true if the Assignment can be persisted (e.g. task and resource are not 'phantoms')</p>",scope:"instance",returns:[{type:{names:["Boolean"]},description:"<p>true if this model can be persisted to server.</p>"}]}],functions:[{name:"getResource",description:"<p>Returns the resource associated with this assignment.</p>",scope:"instance",returns:{type:"Scheduler.model.ResourceModel",description:"<p>Instance of resource</p>"}}]},{name:"module:Scheduler/model/CalendarDayModel",classDescription:'<p>A model representing a single day in the calendar. Depending on the <code>type</code> field, day may be a concrete day per se (2012/01/01),\na certain weekday (all Thursdays), or an override for all certain weekdays in the timeframe\n(all Fridays between 2012/01/01 - 2012/01/15, inclusive).</p>\n<p>A collection of CalendarDayModel instances to be provided for the <a href="#Scheduler/data/Calendar">calendar</a></p>',extends:["Core/data/Model"],constructor:{name:"constructor"},filename:"CalendarDayModel.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/model",lineno:17,fields:[{name:"id",description:"<p>The id of the date. Can be an arbitrary unique value, assigned by the server</p>",type:["String","Number"],scope:"inner"},{name:"date",description:"<p>The date for this day in the ISO 8601 format. Any time information in this field will be cleared. If this\ninstance represents a weekday or week override, this field will be ignored.</p>",type:["String","Date"],scope:"inner"},{name:"weekday",description:"<p>The index of the week day (0 - Sunday, 1 - Monday and so on) if this instance contains information about the week day (applicable for <code>WEEKDAY</code> and <code>WEEKDAYOVERRIDE</code>).\nShould be set to -1 for the &quot;main&quot; instance of the week overrides.</p>",type:"Number",scope:"inner"},{name:"overrideStartDate",description:"<p>The start date of the timespan for week day override.</p>",type:"Date",scope:"inner"},{name:"overrideEndDate",description:"<p>The end date of the timespan for week day override.</p>",type:"Date",scope:"inner"},{name:"type",description:'<p>The type of this calendar day. Can be one of the following <code>DAY</code>, <code>WEEKDAY</code>, <code>WEEKDAYOVERRIDE</code>:</p>\n<ul>\n<li>Default value is <code>DAY</code> meaning this day represents a &quot;real&quot; day in the calendar (2012/01/01 for example) and contains availability information for that particular day only.\nThe date is stored in the <code>Date</code> field.</li>\n<li>The <code>WEEKDAY</code> value means calendar day contains information about all weekdays with the index, given in the <code>Weekday</code> field (0 - Sunday, 1 - Monday and so on).\nFor example - all Fridays. <code>Date</code> field is ignored.</li>\n<li>\n<p>The `WEEKDAYOVERRIDE` value means calendar day contains information about all weekdays within certain timespan. For example - all Fridays between 2012/01/01 - 2012/01/15.\n</li>\n</ul>\n<p>Week day index should be stored in the <code>Weekday</code> field again, beginning of the timespan - in the <code>OverrideStartDate</code> field and the end of timespan - in the <code>OverrideEndDate</code>.</p>\n</p>\n<p>\nA single day instance contains the override for a single week day. So, to define overrides for several days (Monday and Tuesday for example) - add an additional instance\nto the calendar with the same `Name/OverrideStartDate/OverrideEndDate` values. There\'s no need to define an override for every weekday - if some day is not defined - the\ndefault availability will be used.\n</p>\n<p>\n* **Note** Every week override should also have a "main" calendar day instance, representing the override itself. It should have the same\nvalues for `Name/OverrideStartDate/OverrideEndDate` fields and -1 for `Weekday`. Also, the timespans of all week overrides should not intersect.\n</p>\n<p>\nTo avoid manual creation of week overrides you can use the calendar API (for example, <a href="#Scheduler/data/Calendar#function-addNonStandardWeek">addNonStandardWeek</a>,\n<a href="#Scheduler/data/Calendar#function-removeNonStandardWeek">removeNonStandardWeek</a> methods).\n</p>',type:"String",scope:"inner",defaultvalue:"'DAY'"},{name:"isWorkingDay",description:"<p>Optional boolean flag, allowing you to specify exceptions - working days which falls on weekends. Default value is <code>false</code>. <strong>Please note</strong>, that simply setting this\nfield to &quot;true&quot; is not enough - you also need to specify the exact hours that are available for work with the <code>Availability</code> field (see below).</p>",type:"Boolean",scope:"inner",defaultvalue:"false"},{name:"cls",description:"<p>Optional name of the CSS class, which can be used by various plugins working with weekends and holidays.\nDefault value is <code>gnt-holiday</code> If a holiday lasts for several days, then all days should have the same\n<code>cls</code> value.</p>",type:"String",scope:"inner"},{name:"name",description:"<p>Optional name of the day (holiday name for example)</p>",type:"String",scope:"inner"},{name:"availability",description:"<p>Availability information for this day. Should be an array of strings or objects, containing the hourly\navailability for this day. Strings should have the following format:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>// two working intervals\n[ '08:00-12:00', '13:00-17:00' ]\n\n// whole 24 hours are available\n[ '00:00-24:00' ]\n</code></pre>\n<p>Objects:</p>\n<pre class=\"prettyprint source\"><code>[{\n   startTime       : new Date(0, 0, 0, 8),\n   endTime         : new Date(0, 0, 0, 12)\n}]\n</code></pre>\n<p><strong>Please note</strong>, that this field overrides <code>isWorkingDay</code> - for example, a day with\n&quot;isWorkingDay : false&quot; and &quot;Availability : [ '08:00-12:00' ]&quot; - will be considered a working day.</p>",type:["Array.<String>","Array.<Object>"],scope:"inner"}],functions:[{name:"clearDate",description:"<p>Clears the date for this day</p>",scope:"instance"},{name:"getAvailability",description:"<p>This method returns the availability for this day. By default it will decode an array of strings '08:00-12:00' to\nan array of objects like:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>{\n   startTime       : new Date(0, 0, 0, 8),\n   endTime         : new Date(0, 0, 0, 12)\n}\n</code></pre>\n<p>You can pass the &quot;asString&quot; flag to disable that and just return strings.</p>",parameters:[{name:"asString",type:"Boolean",description:"<p>Whether to just return an array of strings, instead of objects.</p>"}],scope:"instance",returns:{type:["Array.<Object>","Array.<String>"],description:"<p>Array of objects with &quot;startTime&quot;, &quot;endTime&quot; properties.</p>"}},{name:"addAvailabilityInterval",description:"<p>Adds a new availability interval to this day. Both arguments should have the same format.</p>",parameters:[{name:"startTime",type:["Date","String"],description:"<p>Start time of the interval. Can be a Date object (new Date(0, 0, 0, 8)) or just a plain string: '08'</p>"},{name:"endTime",type:["Date","String"],description:"<p>End time of the interval. Can be a Date object (new Date(0, 0, 0, 12)) or just a plain string: '12'</p>"}],scope:"instance"},{name:"removeAvailabilityInterval",description:"<p>Removes the availability interval by its index.</p>",parameters:[{name:"index",type:"Number",description:"<p>Ordinal position of the interval to be removed</p>"}],scope:"instance"},{name:"getAvailabilityIntervalsFor",description:"<p>Applies the availability intervals to a concrete day. For example the availability intervals [ '08:00-12:00', '13:00-17:00' ],\napplied to a day 2012/01/01 will return the following result:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>[\n{\n    startDate       : new Date(2012, 0, 1, 8),\n    endDate         : new Date(2012, 0, 1, 12)\n},\n{\n    startDate       : new Date(2012, 0, 1, 13),\n    endDate         : new Date(2012, 0, 1, 17)\n}\n]\n</code></pre>",parameters:[{name:"timeDate",type:"Date",description:"<p>The date to apply the intervals to</p>"}],scope:"instance",returns:{type:"Array.<Object>",description:"<p>Array of objects with &quot;startDate / endDate&quot; properties.</p>"}},{name:"getAvailabilityStartFor",description:"<p>Returns the earliest available time for the given date. If this day has no availability intervals it returns <code>null</code>.</p>",parameters:[{name:"timeDate",type:"Date",description:"<p>The date to get the earliest availability time for.</p>"}],scope:"instance",returns:{type:"Date"}},{name:"getAvailabilityEndFor",description:"<p>Returns the latest available time for the given date. If this day has no availability intervals, it returns <code>null</code>.</p>",parameters:[{name:"timeDate",type:"Date",description:"<p>The date to get the latest availability time for.</p>"}],scope:"instance",returns:{type:"Date"}}],properties:[{name:"totalHours",description:"<p>Returns the total length of all availability intervals for this day in hours.</p>",scope:"instance",readonly:true,properties:[{type:{names:["Number"]}}]},{name:"totalMS",description:"<p>Returns the total length of all availability intervals for this day in milliseconds.</p>",scope:"instance",readonly:true,properties:[{type:{names:["Number"]}}]}]},{name:"module:Scheduler/model/DependencyBaseModel",classDescription:"<p>Base class used for both Ext Scheduler and Ext Gantt. Not intended to be used directly</p>",extends:["Core/data/Model"],constructor:{name:"constructor"},filename:"DependencyBaseModel.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/model",lineno:22,properties:[{name:"Type",description:"<p>An enumerable object, containing names for the dependency types integer constants.</p>\n<ul>\n<li>0 StartToStart</li>\n<li>1 StartToEnd</li>\n<li>2 EndToStart</li>\n<li>3 EndToEnd</li>\n</ul>",scope:"static",readonly:true,properties:[{type:{names:["Object"]}}]},{name:"hardType",description:'<p>Alias to dependency type, but when set resets <a href="#Scheduler/model/DependencyBaseModel#field-fromSide">fromSide</a> <a href="#Scheduler/model/DependencyBaseModel#field-toSide">toSide</a> to null as well.</p>',scope:"instance",properties:[{type:{names:["Number"]}}]},{name:"fullLag",description:'<p>Property which encapsulates the lag\'s magnitude and units.\nAn object which contains two properties:</p>\n<ul>\n<li>magnitude : <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number">Number</a> The magnitude of the duration.</li>\n<li>unit : <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String">String</a> The unit in which the duration is measured, eg <code>\'d\'</code> for days.</li>\n</ul>',scope:"instance",properties:[{type:{names:["Object"]}}]},{name:"sourceEvent",description:"<p>Gets/sets the source event of the dependency</p>",scope:"instance",properties:[{type:{names:["Scheduler.model.EventModel"]}}]},{name:"targetEvent",description:"<p>Gets/sets the target event of the dependency</p>",scope:"instance",properties:[{type:{names:["Scheduler.model.EventModel"]}}]},{name:"isPersistable",description:"<p>Returns true if the linked events have been persisted (e.g. neither of them are 'phantoms')</p>",scope:"instance",readonly:true,properties:[{type:{names:["Boolean"]}}]}],fields:[{name:"from",description:"<p>From event, id of source event</p>",type:["String","number"],scope:"inner"},{name:"to",description:"<p>To event, id of target event</p>",type:["String","number"],scope:"inner"},{name:"type",description:"<p>Dependency type, see static property Type</p>",type:"Number",scope:"inner",defaultvalue:"2"},{name:"cls",description:"<p>CSS class to apply to lines drawn for the dependency</p>",type:"String",scope:"inner"},{name:"bidirectional",description:"<p>Bidirectional, drawn with arrows in both directions</p>",type:"Boolean",scope:"inner"},{name:"fromSide",description:"<p>Start side on source (top, left, bottom, right)</p>",type:"String",scope:"inner"},{name:"toSide",description:"<p>End side on target (top, left, bottom, right)</p>",type:"String",scope:"inner"},{name:"lag",description:"<p>The magnitude of this dependency's lag (the number of units).</p>",type:"Number",scope:"inner"},{name:"lagUnit",description:"<p>The units of this dependency's lag, defaults to &quot;d&quot; (days). Valid values are:</p>\n<ul>\n<li>&quot;ms&quot; (milliseconds)</li>\n<li>&quot;s&quot; (seconds)</li>\n<li>&quot;m&quot; (minutes)</li>\n<li>&quot;h&quot; (hours)</li>\n<li>&quot;d&quot; (days)</li>\n<li>&quot;w&quot; (weeks)</li>\n<li>&quot;M&quot; (months)</li>\n<li>&quot;y&quot; (years)</li>\n</ul>\n<p>This field is readonly after creation, to change lagUnit use #setlag().</p>",type:"String",scope:"inner"}],functions:[{name:"getHardType",description:'<p>Returns dependency hard type, see <a href="#Scheduler/model/DependencyBaseModel#property-hardType">hardType</a>.</p>',scope:"instance",returns:{type:"Number"}},{name:"setHardType",description:'<p>Sets dependency <a href="#Scheduler/model/DependencyBaseModel#field-type">type</a> and resets <a href="#Scheduler/model/DependencyBaseModel#field-fromSide">fromSide</a> and <a href="#Scheduler/model/DependencyBaseModel#field-toSide">toSide</a> to null.</p>',parameters:[{name:"type",type:"Number"}],scope:"instance"},{name:"setLag",description:"<p>Sets lag and lagUnit in one go. Only allowed way to change lagUnit, the lagUnit field is\nreadonly after creation</p>",parameters:[{name:"lag",type:["Number","String","Object"],description:"<p>The lag value. May be just a numeric magnitude, or a full string descriptor eg '1d'</p>"},{name:"lagUnit",type:"String",description:'<p>Unit for numeric lag value, see <a href="#Scheduler/model/DependencyBaseModel#field-lagUnit">lagUnit</a> for valid values</p>',optional:true}],scope:"instance"},{name:"getSourceEvent",description:"<p>Returns the source event of the dependency</p>",scope:"instance",returns:{type:"Scheduler.model.EventModel",description:"<p>The source event of this dependency</p>"}},{name:"getTargetEvent",description:"<p>Returns the target event of the dependency</p>",scope:"instance",returns:{type:"Scheduler.model.EventModel",description:"<p>The target event of this dependency</p>"}},{name:"highlight",description:"<p>Applies given CSS class to dependency, the value doesn't persist</p>",parameters:[{name:"cls",type:"String"}],scope:"instance"},{name:"unhighlight",description:"<p>Removes given CSS class from dependency if applied, the value doesn't persist</p>",parameters:[{name:"cls",type:"String"}],scope:"instance"},{name:"isHighlightedWith",description:"<p>Checks if the given CSS class is applied to dependency.</p>",parameters:[{name:"cls",type:"String"}],scope:"instance",returns:{type:"Boolean"}},{name:"isValid",description:"<p>Returns <code>true</code> if the dependency is valid. Has valid type and both source and target ids set and not links to itself.</p>",scope:"instance",typings:"ignore",returns:{type:"Boolean"}}]},{name:"module:Scheduler/model/DependencyModel",classDescription:'<p>This class represents a single Dependency between two events. It is a subclass of the <a href="#Scheduler/model/DependencyBaseModel">Scheduler.model.DependencyBaseModel</a>\nclass, which in its turn subclasses <a href="#Core/data/Model">Core.data.Model</a>.\nPlease refer to documentation of those classes to become familiar with the base interface of this class.</p>\n<p>A Dependency has the following fields:</p>\n<ul>\n<li><code>id</code> - The id of the dependency itself</li>\n<li><code>from</code> - The id of the event at which the dependency starts</li>\n<li><code>to</code> - The id of the event at which the dependency ends</li>\n<li><code>cls</code> - A CSS class that will be applied to each rendered dependency DOM element</li>\n<li><code>type</code> - An integer constant representing the type of the dependency:\n<ul>\n<li>0 - start-to-start dependency</li>\n<li>1 - start-to-end dependency</li>\n<li>2 - end-to-start dependency</li>\n<li>3 - end-to-end dependency</li>\n</ul>\n</li>\n<li><code>bidirectional</code> - A boolean indicating if a dependency goes both directions (default false)</li>\n</ul>\n<h2>Subclassing the Dependency class</h2>\n<p>The name of any fields data source can be customized in the subclass, see the example below. Please also refer to <a href="#Core/data/Model">Core.data.Model</a>\nfor details.</p>',extends:["Scheduler/model/DependencyBaseModel"],examples:["class MyDependency extends DependencyModel {\n      static get fields() {\n          return [\n              { name: 'to', dataSource: 'targetId' },\n              { name: 'from', dataSource: 'sourceId' }\n          ]);\n      }\n\n      ...\n }"],constructor:{name:"constructor"},filename:"DependencyModel.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/model",lineno:44},{name:"module:Scheduler/model/EventModel",classDescription:"<p>This class represent a single event in your schedule. It is a subclass of the <a href=\"#Scheduler/model/TimeSpan\">Scheduler.model.TimeSpan</a>, which is in turn subclass of <a href=\"#Core/data/Model\">Core.data.Model</a>.\nPlease refer to documentation of that class to become familiar with the base interface of the event.</p>\n<p>The Event model has a few predefined fields as seen below. If you want to add new fields or change the options for the existing fields,\nyou can do that by subclassing this class (see example below).</p>\n<h2>Subclassing the Event model class</h2>\n<pre class=\"prettyprint source\"><code>class MyEvent extends EventModel {\n\n    static get fields() {\n        return [\n           // Add new field\n           { name: 'myField', type : 'number', defaultValue : 0 }\n        ];\n    },\n\n    myCheckMethod() {\n        return this.myField > 0\n    },\n\n    ...\n});\n</code></pre>\n<p>If you in your data want to use other names for the startDate, endDate, resourceId and name fields you can configure\nthem as seen below:</p>\n<pre class=\"prettyprint source\"><code>class MyEvent extends EventModel {\n\n    static get fields() {\n        return [\n           { name: 'startDate', dataSource 'taskStart', type: 'date', format: 'YYYY-MM-DD' },\n           { name: 'endDate', dataSource 'taskEnd', type: 'date', format: 'YYYY-MM-DD' },\n           { name: 'resourceId', dataSource 'userId' },\n           { name: 'name', dataSource 'taskTitle' },\n        ];\n    },\n    ...\n});\n</code></pre>\n<p>Please refer to <a href=\"#Core/data/Model\">Core.data.Model</a> for additional details.</p>",extends:["Scheduler/model/TimeSpan"],mixes:["Scheduler/model/mixin/RecurringTimeSpan"],constructor:{name:"constructor"},filename:"EventModel.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/model",lineno:55,fields:[{name:"id",description:"<p>The unique identifier of a task (mandatory)</p>",type:["String","Number"],scope:"inner"},{name:"resourceId",description:"<p>Id of the resource this event is associated with (only usable for single assignments)</p>",type:["String","Number"],scope:"inner"},{name:"draggable",description:"<p>Specify false to prevent the event from being dragged (if EventDrag feature is used)</p>",type:"Boolean",scope:"inner",defaultvalue:"true"},{name:"resizable",description:"<p>Specify false to prevent the event from being resized (if EventResize feature is used). You can also\nspecify 'start' or 'end' to only allow resizing in one direction</p>",type:["boolean","String"],scope:"inner",defaultvalue:"true"},{name:"eventStyle",description:'<p>Controls this events appearance, see Schedulers\n<a href="#Scheduler/view/mixin/TimelineEventRendering#config-eventStyle">eventStyle config</a> for\navailable options.</p>',type:"String",scope:"inner"},{name:"eventColor",description:'<p>Controls the primary color of the event, see Schedulers\n<a href="#Scheduler/view/mixin/TimelineEventRendering#config-eventColor">eventColor config</a> for\navailable colors.</p>',type:"String",scope:"inner"},{name:"milestoneWidth",description:"<p>Width (in px) to use for this milestone when using Scheduler#milestoneLayoutMode 'data'.</p>",type:"Number",scope:"inner"}],properties:[{name:"assignments",description:"<p>Returns all assignments for the event. Event must be part of the store for this method to work.</p>",type:{names:["Array.<Scheduler.model.AssignmentModel>"]},scope:"inner"},{name:"resource",description:"<p>Returns the assigned resource. Only valid when not using an AssignmentStore (single assignment)</p>",type:{names:["Scheduler.model.ResourceModel"]},scope:"inner"},{name:"eventStore",description:"<p>Returns the event store this event is part of.</p>",scope:"instance",returns:[{type:{names:["Scheduler.data.EventStore"]}}],readonly:true},{name:"resourceStore",description:"<p>Returns the resource store this event uses as its default resource store. Event must be part\nof an event store to be able to retrieve default resource store.</p>",scope:"instance",returns:[{type:{names:["Scheduler.data.ResourceStore"]}}],readonly:true},{name:"assignmentStore",description:"<p>Returns the assigment store this event uses as its default assignment store. Event must be part\nof an event store to be able to retrieve default assignment store.</p>",scope:"instance",returns:[{type:{names:["Scheduler.data.AssignmentStore"]}}],readonly:true},{name:"resources",description:"<p>Returns all resources assigned to an event.</p>",scope:"instance",returns:[{type:{names:["Array.<Scheduler.model.ResourceModel>"]}}],readonly:true},{name:"isEvent",description:"<p>Sets the resource which the event should belong to.</p>",scope:"instance",parameters:[{name:"resource",type:["Scheduler.model.ResourceModel","String","Number"],description:"<p>The new resource</p>"}]},{name:"isDraggable",description:"<p>Returns true if event can be drag and dropped</p>",scope:"instance",returns:[{type:{names:["Boolean"]},description:"<p>The draggable state for the event.</p>"}],readonly:true},{name:"isResizable",description:"<p>Returns true if event can be resized, but can additionally return 'start' or 'end' indicating how this event can be resized.</p>",scope:"instance",returns:[{type:{names:["*"]},description:"<p>true, false, 'start' or 'end'</p>"}],readonly:true},{name:"isPersistable",description:"<p>Returns false if a linked resource is a phantom record, i.e. it's not persisted in the database.</p>",scope:"instance",returns:[{type:{names:["Boolean"]},description:"<p>true if persistable</p>"}],readonly:true}],functions:[{name:"forEachResource",access:"private",description:"<p>Iterate over all associated resources</p>",scope:"instance"},{name:"getResource",description:"<p>Returns either the resource associated with this event (when called w/o <code>resourceId</code>) or resource\nwith specified id.</p>",parameters:[{name:"resourceId",type:"String",description:"<p>(optional)</p>"}],scope:"instance",returns:{type:"Scheduler.model.ResourceModel"}},{name:"assign",description:"<p>'\nAssigns this event to the specified resource.</p>",parameters:[{name:"resource",type:["Scheduler.model.ResourceModel","String","Number"],description:"<p>A new resource for this event, either as a full Resource record or an id (or an array of such).</p>"}],scope:"instance"},{name:"unassign",description:"<p>Unassigns this event from the specified resource</p>",parameters:[{name:"resource",type:["Scheduler.model.ResourceModel","String","Number","Array"],description:"<p>The resource to unassign from.</p>",optional:true}],scope:"instance"},{name:"reassign",description:"<p>Reassigns an event from an old resource to a new resource</p>",parameters:[{name:"oldResourceId",type:["Scheduler.model.ResourceModel","String","Number"],description:"<p>A resource to unassign from or its id</p>"},{name:"newResourceId",type:["Scheduler.model.ResourceModel","String","Number"],description:"<p>A resource to assign to or its id</p>"}],scope:"instance"},{name:"isAssignedTo",description:"<p>Returns true if this event is assigned to a certain resource.</p>",parameters:[{name:"resource",type:["Scheduler.model.ResourceModel","String","Number"],description:"<p>The resource to query for</p>"}],scope:"instance",returns:{type:"Boolean"}}]},{name:"module:Scheduler/model/RecurrenceModel",classDescription:'<p>This class represents a timespan recurrence settings.\nIt is a subclass of <a href="#Core/data/Model">Core.data.Model</a> class.\nPlease refer to the documentation for that class to become familiar with the base interface of this class.</p>\n<p>The data source for these fields can be customized by subclassing this class.</p>',extends:["Core/data/Model"],constructor:{name:"constructor"},filename:"RecurrenceModel.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/model",lineno:64,properties:[{name:"isRecurrenceModel",description:"<p>Indicates that this is a <code>RecurrenceModel</code> class instance\n(allows to avoid using <code>instanceof</code>).</p>",scope:"instance",readonly:true,properties:[{default:true,optional:true,type:{names:["Boolean"]},defaultvalue:true,name:"isRecurrenceModel"}]},{name:"timeSpan",description:"<p>The timespan this recurrence is associated with.</p>",scope:"instance"},{name:"rule",description:'<p>The recurrence rule. A string in <a href="https://tools.ietf.org/html/rfc5545#section-3.3.10">RFC-5545</a> described format (&quot;RRULE&quot; expression).</p>',scope:"instance"}],fields:[{name:"frequency",description:"<p>Field defines the recurrence frequency. Supported values are: <code>DAILY</code>, <code>WEEKLY</code>, <code>MONTHLY</code>, <code>YEARLY</code>.</p>",type:"String",scope:"inner"},{name:"interval",description:"<p>Field defines how often the recurrence repeats.\nFor example, if the recurrence is weekly its interval is 2, then the timespan repeats every two weeks.</p>",type:"number",scope:"inner"},{name:"endDate",description:'<p>End date of the recurrence. Specifies when the recurrence ends.\nThe value is optional, the recurrence can as well be stopped using <a href="#Scheduler/model/RecurrenceModel#field-count">count</a> field value.</p>',type:"Date",scope:"inner"},{name:"count",description:'<p>Specifies the number of occurrences after which the recurrence ends.\nThe value includes the associated timespan itself so values less than 2 make no sense.\nThe field is optional, the recurrence as well can be stopped using <a href="#Scheduler/model/RecurrenceModel#field-endDate">endDate</a> field value.</p>',type:"number",scope:"inner"},{name:"days",description:'<p>Specifies days of the week on which the timespan should occur.\nAn array of string values <code>SU</code>, <code>MO</code>, <code>TU</code>, <code>WE</code>, <code>TH</code>, <code>FR</code>, <code>SA</code>\ncorresponding to Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, and Saturday days of the week.\nEach value can also be preceded by a positive (+n) or negative (-n) integer.\nIf present, this indicates the nth occurrence of a specific day within the monthly or yearly recurrence.</p>\n<p><strong>Not applicable</strong> for daily <a href="#Scheduler/model/RecurrenceModel#field-frequency">frequency</a>.</p>',type:"Array.<String>",scope:"inner"},{name:"monthDays",description:'<p>Specifies days of the month on which the timespan should occur.\nAn array of integer values (-31..-1 - +1..+31, negative values mean counting backwards from the month end).\n<strong>Applicable only</strong> for monthly <a href="#Scheduler/model/RecurrenceModel#field-frequency">frequency</a>.</p>',type:"Array.<number>",scope:"inner"},{name:"months",description:'<p>Specifies months of the year on which the timespan should occur.\nAn array of integer values (1 - 12).\n<strong>Applicable only</strong> for yearly <a href="#Scheduler/model/RecurrenceModel#field-frequency">frequency</a>.</p>',type:"Array.<number>",scope:"inner"},{name:"positions",description:'<p>The positions to include in the recurrence. The values operate on a set of recurrence instances <strong>in one interval</strong> of the recurrence rule.\nAn array of integer values (valid values are 1 to 366 or -366 to -1, negative values mean counting backwards from the end of the built list of occurrences).\n<strong>Not applicable</strong> for daily <a href="#Scheduler/model/RecurrenceModel#field-frequency">frequency</a>.</p>',type:"number",scope:"inner"}],functions:[{name:"sanitize",access:"private",description:'<p>Cleans up fields that do not makes sense for the current <a href="#Scheduler/model/RecurrenceModel#field-frequency">frequency</a> value.</p>',scope:"instance"}]},{name:"module:Scheduler/model/ResourceModel",classDescription:"<p>This class represent a single Resource in the scheduler chart. It's a subclass of  <a href=\"#Core/data/Model\">Core.data.Model</a>.\nPlease refer to the documentation for that class to become familiar with the base interface of the resource.</p>\n<p>A Resource has only 2 mandatory fields - <code>id</code> and <code>name</code>. If you want to add more fields with meta data describing your resources then you should subclass this class:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>class MyResource extends ResourceModel {\n\n  static get fields() {\n    [\n      // `Id` and `Name` fields are already provided by the superclass\n      { name: 'company', type : 'string' }\n    ];\n  }\n\n  getCompany() {\n    return this.company;\n  }\n  ...\n});\n</code></pre>\n<p>If you want to use other names in your data for the id and name fields you can configure them as seen below:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>class MyResource extends ResourceModel {\n\n  static get fields() {\n    return [\n       { name: 'name', dataSource: 'userName' }\n    ];\n  },\n  ...\n});\n</code></pre>\n<p>Please refer to <a href=\"#Core/data/Model\">Core.data.Model</a> for details.</p>",extends:["Grid/data/GridRowModel"],constructor:{name:"constructor"},filename:"ResourceModel.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/model",lineno:45,fields:[{name:"id",description:"<p>Unique identifier</p>",type:["String","Number"],scope:"inner"},{name:"name",description:"<p>Get or set resource name</p>",type:"String",scope:"inner"},{name:"eventColor",description:'<p>Controls the primary color used for events assigned to this resource. Can be overridden per event using\nEventModels <a href="#Scheduler/model/EventModel#field-eventColor">eventColor config</a>. See Schedulers\n<a href="#Scheduler/view/mixin/TimelineEventRendering#config-eventColor">eventColor config</a> for available\ncolors.</p>',type:"String",scope:"inner"},{name:"eventStyle",description:'<p>Controls the style used for events assigned to this resource. Can be overridden per event using\nEventModels <a href="#Scheduler/model/EventModel#field-eventStyle">eventStyle config</a>. See Schedulers\n<a href="#Scheduler/view/mixin/TimelineEventRendering#config-eventStyle">eventStyle config</a> for available\noptions.</p>',type:"String",scope:"inner"},{name:"imageUrl",description:"<p>Fully qualified image URL, used by <code>ResourceInfoColumn</code> and vertical modes <code>ResourceHeader</code> to display a miniature image\nfor the resource.</p>",type:"String",scope:"inner"},{name:"image",description:'<p>Image name relative to <a href="#Scheduler/view/mixin/SchedulerEventRendering#config-resourceImagePath">resourceImagePath</a>,\nused by <code>ResourceInfoColumn</code> and vertical modes <code>ResourceHeader</code> to display a miniature image\nfor the resource.</p>',type:"String",scope:"inner"}],properties:[{name:"assignments",description:"<p>Returns all assignments for the resource. Resource must be part of the store for this method to work.</p>",type:{names:["Array.<Scheduler.model.AssignmentModel>"]},scope:"inner"},{name:"resourceStore",description:"<p>Returns a resource store this resource is part of. Resource must be part\nof a resource store to be able to retrieve resource store.</p>",scope:"instance",returns:[{type:{names:["Scheduler.data.ResourceStore"]}}],readonly:true},{name:"eventStore",description:"<p>Returns an event store this resource uses as default. Resource must be part\nof a resource store to be able to retrieve event store.</p>",scope:"instance",returns:[{type:{names:["Scheduler.data.EventStore"]}}],readonly:true},{name:"assignmentStore",description:"<p>Returns as assignment store this resources uses as default. Resource must be part\nof a resource store to be able to retrieve default assignment store.</p>",scope:"instance",returns:[{type:{names:["Scheduler.data.AssignmentStore"]}}],readonly:true},{name:"events",description:"<p>Get associated events</p>",scope:"instance",returns:[{type:{names:["Array.<Scheduler.model.EventModel>"]}}],readonly:true},{name:"isPersistable",description:"<p>Returns true if the Resource can be persisted.\nIn a flat store resource is always considered to be persistable, in a tree store resource is considered to\nbe persitable if it's parent node is persistable.</p>",scope:"instance",returns:[{type:{names:["Boolean"]},description:"<p>true if this model can be persisted to server.</p>"}],readonly:true}],functions:[{name:"getEvents",description:"<p>Returns an array of events, associated with this resource</p>",parameters:[{name:"eventStore",type:"Scheduler.data.EventStore",description:"<p>(optional) The event store to get events for (if a resource is bound to multiple stores)</p>"}],scope:"instance",returns:{type:"Array.<Scheduler.model.TimeSpan>"}},{name:"isAbove",description:"<p>Returns true if this resource model is above the passed resource model</p>",parameters:[{name:"otherResource",type:"Scheduler.model.ResourceModel"}],scope:"instance",returns:{type:"Boolean"}},{name:"unassignAll",description:"<p>Unassigns this Resource from all its Events</p>",scope:"instance"}]},{name:"module:Scheduler/model/ResourceTimeRangeModel",classDescription:'<p>This class represent a single resource time range in your schedule. To style\nthe rendered elements, use the <a href="#Scheduler/model/TimeSpan#field-cls">cls</a> field of the <code>TimeSpan</code> class, or use the <a href="#Scheduler/model/ResourceTimeRangeModel#field-timeRangeColor">timeRangeColor</a> field.</p>',extends:["Scheduler/model/TimeSpan"],constructor:{name:"constructor"},filename:"ResourceTimeRangeModel.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/model",lineno:12,fields:[{name:"resourceId",description:"<p>Id of the resource this time range is associated with</p>",type:["String","Number"],scope:"inner"},{name:"timeRangeColor",description:"<p>Controls this time ranges primary color, defaults to using current themes default time range color.</p>",type:"String",scope:"inner"}]},{name:"module:Scheduler/model/TimeSpan",classDescription:"<p>This class represent a simple date range. It is being used in various subclasses and plugins which operate on date ranges.</p>\n<p>Its a subclass of  <a href=\"#Core/data/Model\">Core.data.Model</a>.\nPlease refer to documentation of those classes to become familar with the base interface of this class.</p>\n<p>A TimeSpan has the following fields:</p>\n<ul>\n<li><code>startDate</code>    - start date of the task in the ISO 8601 format</li>\n<li><code>endDate</code>      - end date of the task in the ISO 8601 format (not inclusive)</li>\n<li><code>duration</code>     - duration, time between start date and end date</li>\n<li><code>durationUnit</code> - unit used to express the duration</li>\n<li><code>name</code>         - an optional name of the range</li>\n<li><code>cls</code>          - an optional CSS class to be associated with the range.</li>\n</ul>\n<p>The data source of any field can be customized in the subclass. Please refer to <a href=\"#Core/data/Model\">Core.data.Model</a> for details. To specify\nanother date format:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>class MyTimeSpan extends TimeSpan {\n  static get fields() {\n     { name: 'startDate', type: 'date', dateFormat: 'DD/MM/YY' }\n  }\n}\n</code></pre>",extends:["Core/data/Model"],constructor:{name:"constructor"},filename:"TimeSpan.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/model",lineno:38,fields:[{name:"startDate",description:'<p>The start date of a time span (or Event / Task).</p>\n<p>Uses <a href="#Core/helper/DateHelper#property-defaultFormat-static">DateHelper.defaultFormat</a> to convert a\nsupplied string to a Date. To specify another format, either change that setting or subclass TimeSpan and\nchange the dateFormat for this field.</p>',type:["String","Date"],scope:"inner"},{name:"endDate",description:'<p>The end date of a time span (or Event / Task).</p>\n<p>Uses <a href="#Core/helper/DateHelper#property-defaultFormat-static">DateHelper.defaultFormat</a> to convert a\nsupplied string to a Date. To specify another format, either change that setting or subclass TimeSpan and\nchange the dateFormat for this field.</p>',type:["String","Date"],scope:"inner"},{name:"duration",description:"<p>The numeric part of the timespan's duration (the number of units).</p>",type:"Number",scope:"inner"},{name:"durationUnit",description:"<p>The unit part of the TimeSpan duration, defaults to &quot;d&quot; (days). Valid values are:</p>\n<ul>\n<li>&quot;ms&quot; (milliseconds)</li>\n<li>&quot;s&quot; (seconds)</li>\n<li>&quot;m&quot; (minutes)</li>\n<li>&quot;h&quot; (hours)</li>\n<li>&quot;d&quot; (days)</li>\n<li>&quot;w&quot; (weeks)</li>\n<li>&quot;M&quot; (months)</li>\n<li>&quot;y&quot; (years)</li>\n</ul>\n<p>This field is readonly after creation, to change durationUnit use #setDuration().</p>",type:"String",scope:"inner"},{name:"cls",description:"<p>An encapsulation of the CSS classes to add to the rendered time span element.</p>",type:["Core.helper.util.DomClassList","String"],scope:"inner"},{name:"iconCls",description:"<p>CSS class specifying an icon to apply to the rendered time span element.</p>",type:"String",scope:"inner"},{name:"style",description:"<p>A CSS style string (applied to <code>style.cssText</code>) or object (applied to <code>style</code>)</p>\n<pre class=\"prettyprint source\"><code>record.style = 'color: red;font-weight: 800';\n</code></pre>",type:"String",scope:"inner"},{name:"name",description:"<p>The name of the time span (or Event / Task)</p>",type:"String",scope:"inner"}],functions:[{name:"setDuration",description:"<p>Sets duration and durationUnit in one go. Only allowed way to change durationUnit, the durationUnit field is\nreadonly after creation</p>",parameters:[{name:"duration",type:"Number",description:"<p>Duration value</p>"},{name:"durationUnit",type:"String",description:'<p>Unit for specified duration value, see <a href="#Scheduler/model/TimeSpan#field-durationUnit">durationUnit</a> for valid values</p>'}],scope:"instance"},{name:"setStartDate",description:"<p>Sets the range start date</p>",parameters:[{name:"date",type:"Date",description:"<p>The new start date</p>"},{name:"keepDuration",type:"Boolean",description:"<p>Pass <code>true</code> to keep the duration of the task (&quot;move&quot; the event), <code>false</code> to change the duration (&quot;resize&quot; the event).\nDefaults to <code>true</code></p>",default:true}],scope:"instance"},{name:"setEndDate",description:"<p>Sets the range end date</p>",parameters:[{name:"date",type:"Date",description:"<p>The new end date</p>"},{name:"keepDuration",type:"Boolean",description:"<p>Pass <code>true</code> to keep the duration of the task (&quot;move&quot; the event), <code>false</code> to change the duration (&quot;resize&quot; the event).\nDefaults to <code>false</code></p>",default:false}],scope:"instance"},{name:"setStartEndDate",description:"<p>Sets the event start and end dates</p>",parameters:[{name:"start",type:"Date",description:"<p>The new start date</p>"},{name:"end",type:"Date",description:"<p>The new end date</p>"}],scope:"instance"},{name:"forEachDate",description:'<p>Iterates over the <a href="#Scheduler/model/TimeSpan#property-dates">dates</a></p>',parameters:[{name:"func",type:"function",description:"<p>The function to call for each date</p>"},{name:"thisObj",type:"Object",description:"<p><code>this</code> reference for the function</p>"}],scope:"instance"},{name:"shift",description:"<p>Shift the dates for the date range by the passed amount and unit</p>",parameters:[{name:"unit",type:"String",description:"<p>The unit to shift by, see {@Core.helper.DateHelper} for more information on valid formats.</p>"},{name:"amount",type:"Number",description:"<p>The amount to shift</p>"}],scope:"instance"},{name:"split",description:"<p>Splits this event into two pieces at the desired position.</p>",parameters:[{name:"splitPoint",type:"Number",description:"<p>A number greater than 0 and less than 1, indicating how this event will be split. 0.5 means cut it in half</p>",default:.5}],scope:"instance",returns:{type:"Scheduler.model.TimeSpan",description:"<p>The newly created split section of the timespan</p>"}}],properties:[{name:"fullDuration",description:"<p>Property which encapsulates the duration's magnitude and units.</p>",scope:"instance"},{name:"dates",description:"<p>Returns an array of dates in this range. If the range starts/ends not at the beginning of day, the whole day will be included.</p>",scope:"instance",returns:[{type:{names:["Array.<Date>"]}}]},{name:"durationMS",access:"private",description:"<p>Returns the duration of this Event in milliseconds.</p>",scope:"instance"},{name:"isScheduled",description:"<p>Checks if the range record has both start and end dates set and start &lt;= end</p>",scope:"instance",returns:[{type:{names:["Boolean"]}}]},{name:"wbsCode",description:"<p>Returns the WBS code of this model (only relevant when part of a tree store, as in the Gantt chart).</p>",scope:"instance",returns:[{type:{names:["String"]},description:"<p>The WBS code (e.g '2.1.3')</p>"}]}]},{name:"module:Scheduler/model/mixin/RecurringTimeSpan",description:'<p>This mixin class provides recurrence related fields and methods to a <a href="#Scheduler/model/TimeSpan">timespan model</a>.</p>\n<p>The mixin introduces two types of timespans: <strong>recurring timespan</strong> and its <strong>occurrences</strong>.\n<strong>Recurring timespan</strong> is a timespan having <a href="#Scheduler/model/mixin/RecurringTimeSpan#field-recurrenceRule">recurrence rule</a> specified and its <strong>occurrences</strong> are &quot;fake&quot; dynamically generated timespans.\nTheir set depends on the scheduler visible timespan and changes upon the timespan change.</p>\n<p>There are few methods allowing to distinguish a recurring event and an occurrence: <a href="#Scheduler/model/mixin/RecurringTimeSpan#property-isRecurring">isRecurring</a>, <a href="#Scheduler/model/mixin/RecurringTimeSpan#property-isOccurrence">isOccurrence</a>\nand <a href="#Scheduler/model/mixin/RecurringTimeSpan#property-recurringTimeSpan">recurringTimeSpan</a> (returns the event this record is an occurrence of).</p>\n<p>The <a href="#Scheduler/model/mixin/RecurringTimeSpan#field-recurrenceRule">recurrence rule</a> defined for the event is parsed and\nrepresented with <a href="#Scheduler/model/RecurrenceModel">Scheduler.model.RecurrenceModel</a> class (can be changed by setting <a href="#Scheduler/model/mixin/RecurringTimeSpan#property-recurrenceModel">recurrenceModel</a> property) instance.\nSee: <a href="#Scheduler/model/mixin/RecurringTimeSpan#property-recurrence">recurrence</a> property.</p>',mixin:true,constructor:{name:"constructor"},filename:"RecurringTimeSpan.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/model/mixin",lineno:42,properties:[{name:"supportsRecurring",description:"<p>Returns <code>true</code> indicating the timespan supports recurring.</p>",scope:"instance",properties:[{type:{names:["Boolean"]},name:"true"}]},{name:"recurrenceModel",description:"<p>Name of the class representing the recurrence model.</p>",scope:"instance",properties:[{default:"Scheduler.model.RecurrenceModel",optional:true,type:{names:["String"]},defaultvalue:"Scheduler.model.RecurrenceModel",name:"recurrenceModel"}]},{name:"recurrence",description:"<p>The recurrence model used for the timespan.</p>",scope:"instance",properties:[{type:{names:["Scheduler.model.RecurrenceModel"]}}]},{name:"isRecurring",description:"<p>Indicates if the timespan is recurring.</p>",scope:"instance",readonly:true,properties:[{type:{names:["Boolean"]}}]},{name:"isOccurrence",description:"<p>Indicates if the timespan is an occurrence of another recurring timespan.</p>",scope:"instance",readonly:true,properties:[{type:{names:["Boolean"]}}]},{name:"recurringTimeSpan",description:"<p>The &quot;main&quot; timespan this model is an occurrence of. For non-occurrences returns <code>null</code>.</p>",scope:"instance",readonly:true,properties:[{type:{names:["Scheduler.model.TimeSpan"]}}]},{name:"occurrences",description:"<p>List of this recurring timespan occurrences or <code>null</code> if the timespan is not recurring.</p>",scope:"instance",readonly:true,properties:[{type:{names:["Array.<Scheduler.model.TimeSpan>"]}}]}],fields:[{name:"recurringTimeSpanId",description:"<p>Identifier of the &quot;main&quot; timespan this model is an occurrence of.\n<strong>Applicable to occurrences only.</strong></p>",type:["String","Number"],scope:"inner"},{name:"recurrenceRule",description:'<p>The timespan recurrence rule. A string in <a href="https://tools.ietf.org/html/rfc5545#section-3.3.10">RFC-5545</a> described format (&quot;RRULE&quot; expression).</p>',type:"String",scope:"inner"},{name:"exceptionDates",description:'<p>The timespan exception dates. The dates that must be skipped when generating occurrences for a repeating timespan.\nThis is used to modify only individual occurrences of the timespan so the further regenerations\nwon\'t create another copy of this occurrence again.\nUse <a href="#Scheduler/model/mixin/RecurringTimeSpan#function-addExceptionDate">addExceptionDate</a> method to add an individual entry to the dates array:</p>\n<pre class="prettyprint source lang-javascript"><code>// let the main timespan know that this date should be skipped when regenerating the occurrences\noccurrence.recurringTimeSpan.addExceptionDate( occurrence.startDate );\n\n// cut the main event cord\noccurrence.recurringTimeSpanId = null;\n\n// now the occurrence is an individual record that can be changed & persisted freely\noccurrence.setStartEndDate(new Date(2018, 6, 2), new Date(2018, 6, 3));\n</code></pre>\n<p><strong>Note:</strong> The dates in this field get automatically removed when the event changes its <a href="#Scheduler/model/TimeSpan#field-startDate">start date</a>.</p>',type:"Array.<Date>",scope:"inner"}],functions:[{name:"setRecurrence",description:"<p>Sets a recurrence for the timespan with a given frequency, interval, and end.</p>",parameters:[{name:"frequency",type:["String","Object","Scheduler.model.RecurrenceModel"],description:'<p>The frequency of the recurrence, configuration object or the recurrence model. The frequency can be <code>DAILY</code>, <code>WEEKLY</code>, <code>MONTHLY</code>, or <code>YEARLY</code>.</p>\n<pre class="prettyprint source lang-javascript"><code>// repeat the event every other week till Jan 2 2039\nevent.setRecurrence(&quot;WEEKLY&quot;, 2, new Date(2039, 0, 2));\n</code></pre>\n<p>Also a <a href="#Scheduler/model/RecurrenceModel">recurrence model</a> can be provided as the only argument for this method:</p>\n<pre class="prettyprint source lang-javascript"><code>const recurrence = new RecurrenceModel({ frequency : \'DAILY\', interval : 5 });\n\nevent.setRecurrence(recurrence);\n</code></pre>'},{name:"interval",type:"Number",description:"<p>The interval between occurrences (instances of this recurrence). For example, a daily recurrence with an interval of 2 occurs every other day. Must be greater than 0.</p>",optional:true},{name:"recurrenceEnd",type:["Number","Date"],description:"<p>The end of the recurrence. The value can be specified by a date or by a maximum count of occurrences (has to greater than 1, since 1 means the event itself).</p>",optional:true}],scope:"instance"},{name:"removeOccurrences",description:"<p>Removes this recurring timespan occurrences.</p>",scope:"instance"},{name:"onRecurrenceChanged",access:"protected",description:'<p>The method is triggered when the timespan recurrence settings get changed.\nIt updates the <a href="#Scheduler/model/mixin/RecurringTimeSpan#field-recurrenceRule">recurrenceRule</a> field in this case.</p>',scope:"instance"},{name:"buildOccurrence",access:"protected",description:"<p>Builds this record occurrence by cloning the timespan data.\nThe method is used internally by the <strong>recurring events</strong> feature.\nOverride it if you need to customize the generated occurrences.</p>",parameters:[{name:"startDate",type:"Date",description:"<p>The occurrence start date.</p>"}],scope:"instance",returns:{type:"Scheduler.model.TimeSpan",description:"<p>The occurrence.</p>"}},{name:"addExceptionDate",description:'<p>Adds an exception date that should be skipped when generating occurrences for the timespan.\nThe methods adds an entry to the array kept in <a href="#Scheduler/model/mixin/RecurringTimeSpan#field-exceptionDates">exceptionDates</a> field.</p>',parameters:[{name:"date",type:"Date",description:"<p>Exception date.</p>"}],scope:"instance"}]},{name:"PresetManager",classDescription:'<p>This is a global Store of <a href="#Scheduler/preset/ViewPreset">ViewPresets</a>, required to supply initial data to\nScheduler\'s <a href="#Scheduler/view/mixin/TimelineViewPresets#config-presets">presets</a>.</p>\n<p>You can provide new view presets globally or for a specific scheduler.\n<strong>NOTE:</strong> All changes provided to PresetManager store are not reflected to PresetStore of schedulers that already exist!</p>\n<pre class="prettyprint source lang-javascript"><code>const scheduler = new Scheduler({...});\n\nconst newGlobalPresets = PresetManager.add({\n    id              : \'myNewPreset\',\n    base            : \'hourAndDay\', // Based on an existing preset\n    columnLinesFor  : 0,\n    headers : [                         // Override headers\n        {\n            unit       : \'day\',\n            dateFormat : \'DD.MM.YYYY\'   // Use different date format for top header 01.10.2020\n        },\n        {\n            unit       : \'hour\',\n            dateFormat : \'LT\'\n        }\n    ]\n});\n\nscheduler.presets.add(newGlobalPresets); // Add new presets to the scheduler that has been created before changes to PresetManager are applied\n</code></pre>\n<p>Predefined presets are:</p>\n<ul>\n<li><code>secondAndMinute</code> - creates 2 level header - minute and seconds within it:\n<div class="external-example" data-file="scheduler/viewpresets/secondAndMinute.js">\n            <i class="b-icon b-icon-code b-inline-example"></i>\n            <div class="external-code-container">\n                <div class="external-code example">\n                    <pre><code>\n                    </code></pre>\n                </div>\n            </div>\n            <div class="external-target"></div>\n       </div></li>\n<li><code>minuteAndHour</code> - creates 2 level header - hour and minutes within it:\n<div class="external-example" data-file="scheduler/viewpresets/minuteAndHour.js">\n            <i class="b-icon b-icon-code b-inline-example"></i>\n            <div class="external-code-container">\n                <div class="external-code example">\n                    <pre><code>\n                    </code></pre>\n                </div>\n            </div>\n            <div class="external-target"></div>\n       </div></li>\n<li><code>hourAndDay</code> - creates 2 level header - day and hours within it:\n<div class="external-example" data-file="scheduler/viewpresets/hourAndDay.js">\n            <i class="b-icon b-icon-code b-inline-example"></i>\n            <div class="external-code-container">\n                <div class="external-code example">\n                    <pre><code>\n                    </code></pre>\n                </div>\n            </div>\n            <div class="external-target"></div>\n       </div></li>\n<li><code>dayAndWeek</code> - creates 2 level header - week and days within it:\n<div class="external-example" data-file="scheduler/viewpresets/dayAndWeek.js">\n            <i class="b-icon b-icon-code b-inline-example"></i>\n            <div class="external-code-container">\n                <div class="external-code example">\n                    <pre><code>\n                    </code></pre>\n                </div>\n            </div>\n            <div class="external-target"></div>\n       </div></li>\n<li><code>weekAndDay</code> - just like <code>dayAndWeek</code> but with different formatting:\n<div class="external-example" data-file="scheduler/viewpresets/weekAndDay.js">\n            <i class="b-icon b-icon-code b-inline-example"></i>\n            <div class="external-code-container">\n                <div class="external-code example">\n                    <pre><code>\n                    </code></pre>\n                </div>\n            </div>\n            <div class="external-target"></div>\n       </div></li>\n<li><code>weekAndDayLetter</code> - creates 2 level header - with weeks and day letters within it:\n<div class="external-example" data-file="scheduler/viewpresets/weekAndDayLetter.js">\n            <i class="b-icon b-icon-code b-inline-example"></i>\n            <div class="external-code-container">\n                <div class="external-code example">\n                    <pre><code>\n                    </code></pre>\n                </div>\n            </div>\n            <div class="external-target"></div>\n       </div></li>\n<li><code>weekAndMonth</code> - creates 2 level header - month and weeks within it:\n<div class="external-example" data-file="scheduler/viewpresets/weekAndMonth.js">\n            <i class="b-icon b-icon-code b-inline-example"></i>\n            <div class="external-code-container">\n                <div class="external-code example">\n                    <pre><code>\n                    </code></pre>\n                </div>\n            </div>\n            <div class="external-target"></div>\n       </div></li>\n<li><code>weekDateAndMonth</code> - creates 2 level header - month and weeks within it (weeks shown by first day only):\n<div class="external-example" data-file="scheduler/viewpresets/weekDateAndMonth.js">\n            <i class="b-icon b-icon-code b-inline-example"></i>\n            <div class="external-code-container">\n                <div class="external-code example">\n                    <pre><code>\n                    </code></pre>\n                </div>\n            </div>\n            <div class="external-target"></div>\n       </div></li>\n<li><code>monthAndYear</code> - creates 2 level header - year and months within it:\n<div class="external-example" data-file="scheduler/viewpresets/monthAndYear.js">\n            <i class="b-icon b-icon-code b-inline-example"></i>\n            <div class="external-code-container">\n                <div class="external-code example">\n                    <pre><code>\n                    </code></pre>\n                </div>\n            </div>\n            <div class="external-target"></div>\n       </div></li>\n<li><code>year</code> - creates 2 level header - year and quarters within it:\n<div class="external-example" data-file="scheduler/viewpresets/year.js">\n            <i class="b-icon b-icon-code b-inline-example"></i>\n            <div class="external-code-container">\n                <div class="external-code example">\n                    <pre><code>\n                    </code></pre>\n                </div>\n            </div>\n            <div class="external-target"></div>\n       </div></li>\n<li><code>manyYears</code> - creates 2 level header - 5-years and year within it:\n<div class="external-example" data-file="scheduler/viewpresets/manyYears.js">\n            <i class="b-icon b-icon-code b-inline-example"></i>\n            <div class="external-code-container">\n                <div class="external-code example">\n                    <pre><code>\n                    </code></pre>\n                </div>\n            </div>\n            <div class="external-target"></div>\n       </div></li>\n</ul>\n<p>See the <a href="#Scheduler/preset/ViewPreset">Scheduler.preset.ViewPreset</a> and <a href="#Scheduler/preset/ViewPresetHeaderRow">Scheduler.preset.ViewPresetHeaderRow</a> classes for a description of the view preset properties.</p>',extends:["Scheduler/preset/PresetStore"],constructor:{name:"constructor"},filename:"PresetManager.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/preset",lineno:67,singleton:true,functions:[{name:"registerPreset",description:"<p>Registers a new view preset base to be used by any scheduler grid or tree on the page.</p>",parameters:[{name:"id",type:"String",description:"<p>The unique identifier for this preset</p>"},{name:"config",type:"Object",description:'<p>The configuration properties of the view preset (see <a href="#Scheduler/preset/ViewPreset">Scheduler.preset.ViewPreset</a> for more information)</p>'}],scope:"static",returns:{type:"Scheduler.preset.ViewPreset",description:"<p>A new ViewPreset based upon the passed configuration.</p>"}},{name:"normalizePreset",description:"<p>Applies preset customizations or fetches a preset view preset using its name.</p>",parameters:[{name:"presetOrId",type:["String","Object"],description:"<p>Id of a predefined preset or a preset config object</p>"}],scope:"static",returns:{type:"Scheduler.preset.ViewPreset",description:"<p>Resulting ViewPreset instance</p>"}},{name:"deletePreset",description:"<p>Deletes a view preset</p>",parameters:[{name:"id",type:"String",description:"<p>The id of the preset, or the preset instance.</p>"}],scope:"static"}]},{name:"module:Scheduler/preset/PresetStore",classDescription:"<p>A special Store subclass which holds <a href=\"#Scheduler/preset/ViewPreset\">ViewPresets</a>.\nEach ViewPreset in this store represents a zoom level. The store data is sorted in special\nzoom order. That is zoomed out to zoomed in. The first Preset will produce the narrowest event bars\nthe last one will produce the widest event bars.</p>\n<p>To specify view presets (zoom levels) please provide set of view presets to the scheduler:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>const myScheduler = new Scheduler({\n    presets : [\n        {\n            base : 'hourAndDay',\n            id   : 'MyHourAndDay',\n            // other preset configs....\n        },\n        {\n            base : 'weekAndMonth',\n            id   : 'MyWeekAndMonth',\n            // other preset configs....\n        }\n    ],\n    viewPreset : 'MyHourAndDay',\n    // other scheduler configs....\n    });\n</code></pre>",extends:["Core/data/Store"],constructor:{name:"constructor"},filename:"PresetStore.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/preset",lineno:42,configs:[{name:"zoomOrder",description:"<p>Specifies the sort order of the presets in the store.\nBy default they are in zoomed out to zoomed in order. That is\npresets which will create widest event bars to presets\nwhich will produce narrowest event bars.</p>\n<p>Configure this as <code>-1</code> to reverse this order.</p>",type:"Number",scope:"inner",defaultvalue:1}]},{name:"module:Scheduler/preset/ViewPreset",classDescription:"<p>A ViewPreset is a record of <a href=\"#Scheduler/preset/PresetStore\">PresetStore</a> which describes the granularity\nof the timeline view of a <a href=\"#Scheduler/view/Scheduler\">Scheduler</a> and the layout and subdivisions of the timeline header.</p>\n<p>You can create a new instance by specifying all fields:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>const myViewPreset = new ViewPreset({\n    id   : 'myPreset',              // Unique id value provided to recognize your view preset. Not required, but having it you can simply set new view preset by id: scheduler.viewPreset = 'myPreset'\n\n    name : 'My view preset',        // A human-readable name provided to be used in GUI, e.i. preset picker, etc.\n\n    tickWidth  : 24,                // Time column width in horizontal mode\n    tickHeight : 50,                // Time column height in vertical mode\n    displayDateFormat : 'HH:mm',    // Controls how dates will be displayed in tooltips etc\n\n    shiftIncrement : 1,             // Controls how much time to skip when calling shiftNext and shiftPrevious.\n    shiftUnit      : 'day',         // Valid values are 'millisecond', 'second', 'minute', 'hour', 'day', 'week', 'month', 'quarter', 'year'.\n    defaultSpan    : 12,            // By default, if no end date is supplied to a view it will show 12 hours\n\n    timeResolution : {              // Dates will be snapped to this resolution\n        unit      : 'minute',       // Valid values are 'millisecond', 'second', 'minute', 'hour', 'day', 'week', 'month', 'quarter', 'year'.\n        increment : 15\n    },\n\n    headers : [                     // This defines your header rows from top to bottom\n        {                           // For each row you can define 'unit', 'increment', 'dateFormat', 'renderer', 'align', and 'thisObj'\n            unit       : 'day',\n            dateFormat : 'ddd DD/MM'\n        },\n        {\n            unit       : 'hour',\n            dateFormat : 'HH:mm'\n        }\n    ],\n\n    columnLinesFor : 1              // Defines header level column lines will be drawn for. Defaults to the last level.\n});\n</code></pre>\n<p>Or you can extend one of view presets registered in <a href=\"#Scheduler/preset/PresetManager\">PresetManager</a>:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>const myViewPreset2 = new ViewPreset({\n    id   : 'myPreset',                  // Unique id value provided to recognize your view preset. Not required, but having it you can simply set new view preset by id: scheduler.viewPreset = 'myPreset'\n    name : 'My view preset',            // A human-readable name provided to be used in GUI, e.i. preset picker, etc.\n    base : 'hourAndDay',                // Extends 'hourAndDay' view preset provided by PresetManager. You can pick out any of PresetManager's view presets: PresetManager.records\n\n    timeResolution : {                  // Override time resolution\n        unit      : 'minute',\n        increment : 15                  // Make it increment every 15 mins\n    },\n\n    headers : [                         // Override headers\n        {\n            unit       : 'day',\n            dateFormat : 'DD.MM.YYYY'   // Use different date format for top header 01.10.2020\n        },\n        {\n            unit       : 'hour',\n            dateFormat : 'LT'\n        }\n    ]\n});\n</code></pre>\n<p>See <a href=\"#Scheduler/preset/PresetManager\">PresetManager</a> for the list of base presets. You may add your own\npresets to this global list:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>PresetManager.add(myViewPreset);     // Adds new preset to the global scope. All newly created scheduler instances will have it too.\n\nconst scheduler = new Scheduler({\n    viewPreset : 'myPreset'\n    // other configs...\n});\n</code></pre>\n<p>Or add them on an individual basis to Scheduler instances:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>const scheduler = new Scheduler({...});\n\nscheduler.presets.add(myViewPreset); // Adds new preset to the scheduler instance only. All newly created scheduler instances will **not** have it.\n\nscheduler.viewPreset = 'myPreset';\n</code></pre>",extends:["Core/data/Model"],constructor:{name:"constructor"},filename:"ViewPreset.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/preset",lineno:103,fields:[{name:"name",description:"<p>The name of the view preset</p>",type:"String",scope:"inner"},{name:"rowHeight",description:"<p>The height of the row in horizontal orientation</p>",type:"Number",scope:"inner"},{name:"tickWidth",description:"<p>The width of the time tick column in horizontal orientation</p>",type:"Number",scope:"inner"},{name:"tickHeight",description:"<p>The height of the time tick column in vertical orientation</p>",type:"Number",scope:"inner"},{name:"displayDateFormat",description:"<p>Defines how dates will be formatted in tooltips etc</p>",type:"String",scope:"inner"},{name:"shiftUnit",description:"<p>The unit to shift when calling shiftNext/shiftPrevious to navigate in the chart.\nValid values are &quot;millisecond&quot;, &quot;second&quot;, &quot;minute&quot;, &quot;hour&quot;, &quot;day&quot;, &quot;week&quot;, &quot;month&quot;, &quot;quarter&quot;, &quot;year&quot;.</p>",type:"String",scope:"inner"},{name:"shiftIncrement",description:"<p>The amount to shift (in shiftUnits)</p>",type:"Number",scope:"inner"},{name:"defaultSpan",description:"<p>The amount of time to show by default in a view (in the unit defined by the middle header)</p>",type:"Number",scope:"inner"},{name:"timeResolution",description:"<p>An object containing a unit identifier and an increment variable. This value means minimal task duration you can create using UI.\nFor example when you drag create a task or drag &amp; drop a task, if increment is 5 and unit is 'minute'\nthat means that you can create a 5 min long task, or move it 5 min forward/backward. This config maps to\nscheduler's <a href=\"#Scheduler/view/mixin/TimelineDateMapper#property-timeResolution\">timeResolution</a> config.</p>\n<pre class=\"prettyprint source lang-javascript\"><code>timeResolution : {\n  unit      : 'minute',  //Valid values are &quot;millisecond&quot;, &quot;second&quot;, &quot;minute&quot;, &quot;hour&quot;, &quot;day&quot;, &quot;week&quot;, &quot;month&quot;, &quot;quarter&quot;, &quot;year&quot;.\n  increment : 5\n}\n</code></pre>",type:"Object",scope:"inner"},{name:"headers",description:"<p>An array containing one or more <a href=\"#Scheduler/preset/ViewPresetHeaderRow\">Scheduler.preset.ViewPresetHeaderRow</a> config objects, each of which defines a level of headers for the scheduler.\nThe 'main' unit will be the last header's unit, but this can be changed using the <code>mainHeaderLevel</code> field.</p>",type:"Object",scope:"inner"},{name:"mainHeaderLevel",description:"<p>Defines which <a href=\"#Scheduler/preset/ViewPreset#field-headers\">header</a> level defines the 'main' header. Defaults to the bottom header.</p>",type:"Number",scope:"inner"},{name:"columnLinesFor",description:'<p>Defines which <a href="#Scheduler/preset/ViewPreset#field-headers">header</a> level the column lines will be drawn for. See <a href="#Scheduler/feature/ColumnLines">Scheduler.feature.ColumnLines</a>.\nDefaults to the bottom header.</p>',type:"Number",scope:"inner"}]},{name:"module:Scheduler/preset/ViewPresetHeaderRow",classDescription:"<p>A part of the <a href=\"#Scheduler/preset/ViewPreset\">Scheduler.preset.ViewPreset</a> declaration. Not used directly, but the properties below are instead provided inline\nas seen in sources of <a href=\"#Scheduler/preset/PresetManager\">Scheduler.preset.PresetManager</a>. This class is just provided for documentation purposes.</p>\n<p>A sample header configuration can look like below</p>\n<pre class=\"prettyprint source lang-javascript\"><code>headers    : {\n    {\n        unit        : &quot;month&quot;,\n        renderer : function(start, end, headerConfig, index) {\n            var month = start.getMonth();\n            // Simple alternating month in bold\n            if (start.getMonth() % 2) {\n                return '&lt;strong>' + month + '&lt;/strong>';\n            }\n            return month;\n        },\n        align       : 'start' // `start` or `end`, omit to center content (default)\n    },\n    {\n        unit        : &quot;week&quot;,\n        increment   : 1,\n        renderer    : function(start, end, headerConfig, index) {\n            return 'foo';\n        }\n    },\n}\n</code></pre>",constructor:{name:"constructor"},filename:"ViewPresetHeaderRow.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/preset",lineno:34,configs:[{name:"align",description:"<p>The text alignment for the cell. Valid values are <code>start</code> or <code>end</code>, omit this to center text content (default)</p>",type:"String",scope:"inner"},{name:"unit",description:"<p>The unit of time represented by each cell in this header row. See also increment property.\nValid values are &quot;millisecond&quot;, &quot;second&quot;, &quot;minute&quot;, &quot;hour&quot;, &quot;day&quot;, &quot;week&quot;, &quot;month&quot;, &quot;quarter&quot;, &quot;year&quot;.</p>",type:"String",scope:"inner"},{name:"headerCellCls",description:'<p>A CSS class to add to the cells in the time axis header row. Can also be added programmatically in the <a href="#Scheduler/preset/ViewPresetHeaderRow#config-renderer">renderer</a></p>',type:"String",scope:"inner"},{name:"increment",description:"<p>The number of units each header cell will represent (e.g. 30 together with unit: &quot;minute&quot; for 30 minute cells)</p>",type:"Number",scope:"inner"},{name:"dateFormat",description:"<p>Defines how the cell date will be formatted</p>",type:"String",scope:"inner"},{name:"renderer",description:"<p>A custom renderer function used to render the cell contents. It should return the text to put in the header cell.\nThe render function is called with the following parameters:</p>\n<ul>\n<li><code>startDate</code> : Date - The start date of the cell.</li>\n<li><code>endDate</code> : Date - The end date of the cell</li>\n<li><code>headerConfig</code> : Object - An object containing the header config object. You can set 'align' (for text-align)\nand headerCls (a CSS class added to the cell) properties on it.</li>\n<li><code>i</code> : Int - The index of the cell in the row.</li>\n</ul>\n<p>Example :</p>\n<pre class=\"prettyprint source lang-javascript\"><code>function (startDate, endDate, headerConfig, i) {\n  headerConfig.align = &quot;left&quot;;\n  headerConfig.headerCls = &quot;myClass&quot;; // will be added as a CSS class of the header cell DOM element\n\n  return DateHelper.format(startDate, 'YYYY-MM-DD');\n}\n</code></pre>",type:"function",scope:"inner"},{name:"thisObj",description:"<p><code>this</code> reference for the renderer function</p>",type:"Object",scope:"inner"},{name:"cellGenerator",description:"<p>A function that should return an array of objects containing 'start', 'end' and 'header' properties.\nUse this if you want full control over how the header rows are generated.</p>\n<p><strong>Note:</strong> <code>cellGenerator</code> cannot be used for the bottom level of your headers.</p>\n<p>Example :</p>\n<pre class=\"prettyprint source lang-javascript\"><code>viewPreset : {\n    displayDateFormat : 'H:mm',\n    shiftIncrement    : 1,\n    shiftUnit         : 'WEEK',\n    timeResolution    : {\n        unit      : 'MINUTE',\n        increment : 10\n    },\n    headers           : [\n        {\n            unit          : 'year',\n            // Simplified scenario, assuming view will always just show one US fiscal year\n            cellGenerator : (viewStart, viewEnd) => [{\n                start  : viewStart,\n                end    : viewEnd,\n                header : `Fiscal Year ${viewStart.getFullYear() + 1}`\n            }]\n        },\n        {\n            unit : 'quarter',\n            renderer(start, end, cfg) {\n                const\n                    quarter       = Math.floor(start.getMonth() / 3) + 1,\n                    fiscalQuarter = quarter === 4 ? 1 : (quarter + 1);\n\n                return `FQ${fiscalQuarter} ${start.getFullYear() + (fiscalQuarter === 1 ? 1 : 0)}`;\n            }\n        },\n        {\n            unit       : 'month',\n            dateFormat : 'MMM Y'\n        }\n    ]\n },\n</code></pre>",type:"function",scope:"inner"}]},{name:"module:Scheduler/tooltip/ClockTemplate",classDescription:"<p>A template showing a clock, it consumes an object containing a date and a text</p>",access:"private",constructor:{name:"constructor"},filename:"ClockTemplate.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/tooltip",lineno:14,properties:[{name:"template",description:"<p>Get the clock template, which accepts an object of format { date, text }</p>",scope:"instance",returns:[{type:{names:["function"]}}]}]},{name:"module:Scheduler/util/RectangularPathFinder",classDescription:"<p>Class which finds rectangular path, i.e. path with 90 degrees turns, between two boxes.</p>",access:"private",constructor:{name:"constructor"},filename:"RectangularPathFinder.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/util",lineno:12,configs:[{name:"startSide",description:"<p>Default start connection side: 'left', 'right', 'top', 'bottom'</p>",type:["String","Boolean"],scope:"inner",defaultvalue:"right"},{name:"startArrowSize",description:"<p>Default start arrow size in pixels</p>",type:"Number",scope:"inner",defaultvalue:0},{name:"startArrowMargin",description:"<p>Default start arrow staff size in pixels</p>",type:"Number",scope:"inner",defaultvalue:12},{name:"startShift",description:"<p>Default starting connection point shift from box's arrow pointing side middle point</p>",type:"Number",scope:"inner",defaultvalue:0},{name:"endSide",description:"<p>Default end arrow pointing direction, possible values are: 'left', 'right', 'top', 'bottom'</p>",type:["String","Boolean"],scope:"inner",defaultvalue:"left"},{name:"endArrowSize",description:"<p>Default end arrow size in pixels</p>",type:"Number",scope:"inner",defaultvalue:0},{name:"endArrowMargin",description:"<p>Default end arrow staff size in pixels</p>",type:"Number",scope:"inner",defaultvalue:12},{name:"endShift",description:"<p>Default ending connection point shift from box's arrow pointing side middle point</p>",type:"Number",scope:"inner",defaultvalue:0},{name:"verticalMargin",description:"<p>Start / End box vertical margin, the amount of pixels from top and bottom line of a box where drawing\nis prohibited</p>",type:"Number",scope:"inner",defaultvalue:2},{name:"horizontalMargin",description:"<p>Start / End box horizontal margin, the amount of pixels from left and right line of a box where drawing</p>",type:"Number",scope:"inner",defaultvalue:5},{name:"otherBoxes",description:"<p>Other rectangular areas (obstacles) to search path through</p>",type:"Array.<Object>",scope:"inner"}],functions:[{name:"findPath",description:"<p>Returns list of horizontal and vertical segments connecting two boxes</p>\n<pre>\n   |    | |  |    |       |\n --+----+----+----*-------*---\n --+=>Start  +----*-------*--\n --+----+----+----*-------*--\n   |    | |  |    |       |\n   |    | |  |    |       |\n --*----*-+-------+-------+--\n --*----*-+         End <=+--\n --*----*-+-------+-------+--\n   |    | |  |    |       |\n</pre>\n<p>Path goes by lines (-=) and turns at intersections (+), boxes depicted are adjusted by horizontal/vertical\nmargin and arrow margin, original boxes are smaller (path can't go at original box borders). Algorithm finds\nthe shortest path with minimum amount of turns. In short it's mix of &quot;Lee&quot; and &quot;Dijkstra pathfinding&quot;\nwith turns amount taken into account for distance calculation.</p>\n<p>The algorithm is not very performant though, it's O(N^2), where N is amount of\npoints in the grid, but since the maximum amount of points in the grid might be up to 34 (not 36 since\ntwo box middle points are not permitted) that might be ok for now.</p>",parameters:[{name:"lineDef",type:"Object",description:"<p>An object containing any of the class configuration option overrides as well\nas <code>startBox</code>, <code>endBox</code>, <code>startHorizontalMargin</code>, <code>startVerticalMargin</code>,\n<code>endHorizontalMargin</code>, <code>endVerticalMargin</code> properties</p>"},{name:"lineDef.startBox",type:"Object",description:"<p>An object containing <code>start</code>, <code>end</code>, <code>top</code>, <code>bottom</code> properties</p>",isSubParam:true},{name:"lineDef.endBox",type:"Object",description:"<p>An object containing <code>start</code>, <code>end</code>, <code>top</code>, <code>bottom</code> properties</p>",isSubParam:true},{name:"lineDef.startHorizontalMargin",type:"Number",description:"<p>Horizontal margin override for start box</p>",isSubParam:true},{name:"lineDef.startVerticalMargin",type:"Number",description:"<p>Vertical margin override for start box</p>",isSubParam:true},{name:"lineDef.endHorizontalMargin",type:"Number",description:"<p>Horizontal margin override for end box</p>",isSubParam:true},{name:"lineDef.endVerticalMargin",type:"Number",description:"<p>Vertical margin override for end box</p>",isSubParam:true}],scope:"instance",returns:{type:["Array.<Object>","Boolean"],description:"<p>Array of line segments or false if path cannot be found</p>"}}]},{name:"module:Scheduler/util/ScheduleTableExporter",classDescription:"<p>This class transforms scheduler component into two arrays: rows and columns. Columns array contains objects with\nmeta information about column: field name, column name, width and type of the rendered value, rows array contains\narrays of cell values.</p>\n<pre class=\"prettyprint source lang-javascript\"><code>const exporter = new ScheduleTableExporter({ target : scheduler });\nexporter.export()\n\n// Output\n{\n    columns : [\n        { field : 'name',      value : 'First name', type : 'string',  width : 100 },\n        { field : 'name',      value : 'Task',       type : 'string',  width : 100, eventColumn : true },\n        { field : 'startDate', value : 'Starts',     type : 'date',    width : 100, eventColumn : true },\n        { field : 'endDate',   value : 'Ends',       type : 'date',    width : 100, eventColumn : true }\n    ],\n    rows : [\n        ['Michael', 'Hand out dundies',      Date, Date],\n        ['Michael', 'Buy condo',             Date, Date],\n        ['Jim',     'Close sale to library', Date, Date]\n    ]\n}\n</code></pre>\n<h2>How data is exported</h2>\n<p>Data is exported as in the base class with minor addition: every event is exported on a separate row, like\ndemonstrated above.</p>\n<p>In case there are unassigned events, by default they will be exported as well</p>\n<pre class=\"prettyprint source lang-javascript\"><code>// output\n{\n    rows : [\n        ['Michael', 'Hand out dundies',      Date, Date],\n        ['Michael', 'Buy condo',             Date, Date],\n        ['Jim',     'Close sale to library', Date, Date],\n        ['',        'No resource assigned'],\n        ['',        'Halloween prep',        Date, Date],\n        ['',        'New year prep',         Date, Date]\n    ]\n}\n</code></pre>",extends:["Grid/util/TableExporter"],mixes:["Core/localization/Localizable"],constructor:{name:"constructor"},filename:"ScheduleTableExporter.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/util",lineno:58,configs:[{name:"includeUnassigned",description:"<p>Set to <code>false</code> to not include unassigned events in the export. <code>true</code> by default.</p>",type:"Boolean",scope:"inner"},{name:"eventColumns",description:"<p>An array of Event columns configuration used to specify columns width, headers name, and column fields to get the data from.\n'field' config is required. If 'text' is missing, the 'field' config will be used instead.</p>\n<p>For example:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>eventColumns    : [\n    { text : 'Task', field : 'name' },\n    { text : 'Starts', field : 'startDate', width : 140 },\n    { text : 'Ends', field : 'endDate', width : 140 }\n]\n</code></pre>",type:["Array.<String>","Array.<Object>"],scope:"inner"}]},{name:"module:Scheduler/view/DependencyEditor",classDescription:"<p>A dependency editor popup.</p>",extends:["Core/widget/Popup"],access:"private",constructor:{name:"constructor"},filename:"DependencyEditor.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/view",lineno:13},{name:"module:Scheduler/view/EventEditor",classDescription:"<p>Provided event editor dialog.</p>",extends:["Core/widget/Popup"],access:"private",constructor:{name:"constructor"},filename:"EventEditor.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/view",lineno:13},{name:"module:Scheduler/view/Header",classDescription:"<p>Custom header subclass which handles the existence of the special TimeAxisColumn</p>",extends:["Grid/view/Header"],access:"private",constructor:{name:"constructor"},filename:"Header.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/view",lineno:13},{name:"module:Scheduler/view/HorizontalTimeAxis",classDescription:'<p>A visual horizontal representation of the time axis described in the\n<a href="#Scheduler/preset/ViewPreset#field-headers">headers</a>.\nNormally you should not interact with this class directly.</p>',extends:["Scheduler/view/TimeAxisBase"],access:"private",constructor:{name:"constructor"},filename:"HorizontalTimeAxis.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/view",lineno:15},{name:"module:Scheduler/view/ResourceHeader",classDescription:'<p>Header widget that renders resource column headers and acts as the interaction point for resource columns in vertical\nmode. Note that it uses virtual rendering and element reusage to gain performance, only headers in view are available\nin DOM. Because of this you should avoid direct element manipulation, any such changes can be discarded at any time.</p>\n<p>By default it displays resources <code>name</code> and also applies its <code>iconCls</code> if any, like this:</p>\n<pre class="prettyprint source"><code>&lt;i class=&quot;iconCls&quot;>name&lt;/i>\n</code></pre>\n<p>If Scheduler is configured with a <a href="#Scheduler/view/mixin/SchedulerEventRendering#config-resourceImagePath">resourceImagePath</a> the\nheader will render miniatures for the resources, using <a href="#Scheduler/model/ResourceModel#field-imageUrl">imageUrl</a> or <a href="#Scheduler/model/ResourceModel#field-image">image</a> with\nfallback to <a href="#Scheduler/model/ResourceModel#field-name">name</a> + <a href="#Scheduler/view/mixin/SchedulerEventRendering#config-resourceImageExtension">resourceImageExtension</a> for unset values.</p>\n<p>The contents and styling of the resource cells in the header can be customized using <a href="#Scheduler/view/ResourceHeader#config-headerRenderer">headerRenderer</a>:</p>\n<pre class="prettyprint source"><code>new Scheduler({\n    mode            : \'vertical\',\n    resourceColumns : {\n        headerRenderer : ({ resourceRecord }) => `Hello ${resourceRecord.name}`\n    }\n}\n</code></pre>\n<p>The width of the resource columns is determined by the <a href="#Scheduler/view/ResourceHeader#config-columnWidth">columnWidth</a> config.</p>',extends:["Core/widget/Widget"],constructor:{name:"constructor"},filename:"ResourceHeader.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/view",lineno:42,configs:[{name:"resourceStore",access:"private",description:"<p>Resource store used to render resource headers. Assigned from Scheduler.</p>",type:"Scheduler.data.ResourceStore",scope:"inner"},{name:"columnWidth",description:"<p>Width for each resource column</p>",type:"Number",scope:"inner"},{name:"headerRenderer",description:'<p>Custom header renderer function. Can be used to manipulate the element config used to create the element\nfor the header:</p>\n<pre class="prettyprint source"><code>new Scheduler({\n  resourceColumns : {\n    headerRenderer({ elementConfig, resourceRecord }) {\n      elementConfig.dataset.myExtraData = \'extra\';\n      elementConfig.style.fontWeight = \'bold\';\n    }\n  }\n});\n</code></pre>\n<p>See <a href="#Core/helper/DomHelper#function-createElement-static">DomHelper#createElement()</a> for more information.\nPlease take care to not break the default configs :)</p>\n<p>Or as a template by returning HTML from the function:</p>\n<pre class="prettyprint source"><code>new Scheduler({\n  resourceColumns : {\n    headerRenderer : ({ resourceRecord }) => `\n      &lt;div class=&quot;my-custom-template&quot;>\n      ${resourceRecord.firstName} {resourceRecord.surname}\n      &lt;/div>\n    `\n  }\n});\n</code></pre>\n<p>NOTE: When using <code>headerRenderer</code> no default internal markup is applied to the resource header cell,\n<code>iconCls</code> and <a href="#Scheduler/model/ResourceModel#field-imageUrl">imageUrl</a> or <a href="#Scheduler/model/ResourceModel#field-image">image</a>\nwill have no effect unless you supply custom markup for them.</p>',type:"function",scope:"inner",parameters:[{name:"params",type:"Object",description:"<p>Object containing the params below</p>"},{name:"resourceRecord",type:"Scheduler.model.ResourceModel",description:"<p>Resource whose header is being rendered</p>"},{name:"elementConfig",type:"Object",description:'<p>A <a href="#Core/helper/DomHelper#function-createElement-static">createElement</a> config object used to create the element for the resource</p>'}]},{name:"fillWidth",description:"<p>Automatically resize resource columns to <strong>fill</strong> available width. Set to <code>false</code> to always respect the\nconfigured <code>columnWidth</code></p>",type:"Boolean",scope:"inner",defaultvalue:true},{name:"fitWidth",description:"<p>Automatically resize resource columns to always <strong>fit</strong> available width</p>",type:"Boolean",scope:"inner",defaultvalue:false}],properties:[{name:"fillWidth",description:"<p>Assign to toggle resource columns *<em>fill</em> mode. <code>true</code> means they will stretch (grow) to fill viewport, <code>false</code>\nthat they will respect their configured <code>columnWidth</code>.</p>",scope:"instance",properties:[{type:{names:["Boolean"]}}]},{name:"fitWidth",description:"<p>Assign to toggle resource columns *<em>fit</em> mode. <code>true</code> means they will grow or shrink to always fit viewport,\n<code>false</code> that they will respect their configured <code>columnWidth</code>.</p>",scope:"instance",properties:[{type:{names:["Boolean"]}}]}],functions:[{name:"refresh",description:"<p>Refreshes the visible headers</p>",scope:"instance"}]},{name:"module:Scheduler/view/Scheduler",classDescription:'<p>The Scheduler widget is a very powerful and performant UI component that displays an arbitrary number of &quot;locked&quot;\ncolumns with a schedule occupying the remaining space. The schedule has a timeaxis at the top, one row per resource\nand any number of events per resource.</p>\n<h2>Intro</h2>\n<p>The Scheduler widget has a wide range of features and a large API to allow users to work with it efficiently in the\nbrowser.</p>\n<p>The timeaxis displayed at the top of the Scheduler is configured using a <a href="#Scheduler/view/TimelineBase#config-startDate">startDate</a>,\n<a href="#Scheduler/view/TimelineBase#config-endDate">endDate</a> and a <a href="#Scheduler/view/mixin/TimelineViewPresets#config-viewPreset">viewPreset</a>. The dates\ndetermine the outer limits of the range shown in the timeaxis while the <a href="#Scheduler/preset/ViewPreset">Scheduler.preset.ViewPreset</a> decides\nthe appearance and which dates are actually shown. The Scheduler ships with a selection of predefined view presets,\nwhich can be found in <a href="#Scheduler/preset/PresetManager">Scheduler.preset.PresetManager</a>. If you want to specify view presets for a specific scheduler only, please\nsee <a href="#Scheduler/view/mixin/TimelineViewPresets#config-presets">presets</a> config.</p>\n<p>The Scheduler uses a <a href="#Scheduler/data/ResourceStore">Scheduler.data.ResourceStore</a> to hold resources and an <a href="#Scheduler/data/EventStore">Scheduler.data.EventStore</a>\nto hold events. You can use inline data or load data using ajax, see the &quot;Working with data&quot; guides for more\ninformation.</p>\n<p>The simplest schedule configured with inline data would look like this:</p>\n<pre><code> let scheduler = new Scheduler({\n     appendTo : document.body,\n\n     startDate  : new Date(2018,4,6),\n     endDate    : new Date(2018,4,12),\n     viewPreset : \'dayAndWeek\',\n\n      columns : [\n         { field : \'name\', text : \'Name\', width: 100 }\n     ],\n\n     resources : [\n         { id : 1, name : \'Bernard\' },\n         { id : 2, name : \'Bianca\' }\n     ],\n\n     events : [\n         { id : 1, resourceId : 1, name : \'Interview\', startDate : \'2018-05-06\', endDate : \'2018-05-07\' },\n         { id : 2, resourceId : 1, name : \'Press conference\', startDate : \'2018-05-08\', endDate : \'2018-05-09\' },\n         { id : 3, resourceId : 2, name : \'Audition\', startDate : \'2018-05-06\', endDate : \'2018-05-08\' },\n         { id : 4, resourceId : 2, name : \'Script deadline\', startDate : \'2018-05-11\', endDate : \'2018-05-11\' }\n     ]\n });\n</code></pre>\n<p><div class="external-example" data-file="scheduler/Simplest.js">\n            <i class="b-icon b-icon-code b-inline-example"></i>\n            <div class="external-code-container">\n                <div class="external-code example">\n                    <pre><code>\n                    </code></pre>\n                </div>\n            </div>\n            <div class="external-target"></div>\n       </div></p>\n<h2>Inheriting from Bryntum Grid</h2>\n<p>Bryntum Scheduler inherits from Bryntum Grid, meaning that most features available for the grid are also available\nfor the scheduler. Common features include columns, cell editing, context menus, row grouping, sorting and more.</p>\n<p>For more information on configuring columns, filtering, search etc. please see the <a href="#Grid/view/Grid">Grid API docs</a>.\n<section class="collapsible"><h2>Loading data</h2>\nAs mentioned above Bryntum Scheduler uses an <a href="#Scheduler/data/EventStore">Scheduler.data.EventStore</a> and a <a href="#Scheduler/data/ResourceStore">Scheduler.data.ResourceStore</a>\nto hold its data. Data is expected to be in JSON format and can be assigned inline (from memory) using the\n<a href="#Scheduler/view/mixin/SchedulerStores#config-events">events</a> and\n<a href="#Scheduler/view/mixin/SchedulerStores#config-resources">resources</a> shortcuts:</p>\n<pre class="prettyprint source"><code>let scheduler = new Scheduler({\n   events : myArrayOfEventData,\n   resources : myArrayOfResourceData\n});\n</code></pre>\n<p>If you need to give additional store configuration, you can also specify store configs or instances:</p>\n<pre class="prettyprint source"><code>let resourceStore = new ResourceStore({\n  // ResourceStore config object\n})\n\nlet scheduler = new Scheduler({\n   // EventStore config object\n   eventStore : {\n      ...\n   },\n\n   // Already existing ResourceStore instance\n   resourceStore\n});\n</code></pre>\n<p>To use Ajax to fetch data from a server, specify <a href="#Core/data/AjaxStore#config-readUrl">readUrl</a>:</p>\n<pre class="prettyprint source"><code>let scheduler = new Scheduler({\n   eventStore : {\n       readUrl  : \'backend/read_events.php\',\n       autoLoad : true\n   }\n});\n// If you do not specify autoLoad, trigger loading manually:\nscheduler.eventStore.load();\n</code></pre>\n<p>For more information, see the &quot;Working with data&quot; guides.\n</section>\n<section class="collapsible"><h2>Event styling</h2>\nBryntum Schedulers appearance can be affected in a few different ways:</p>\n<ul>\n<li>Switching themes</li>\n<li>Choosing event styles and colors</li>\n<li>Using renderer functions</li>\n</ul>\n<h3>Switching themes</h3>\n<p>Scheduler ships with four different themes, simply include the css file for the theme you would like to use on your\npage. The themes are located in the <code>/build</code> folder. For example to include the light theme:</p>\n<pre class="prettyprint source"><code>&lt;link rel=&quot;stylesheet&quot; href=&quot;build/scheduler.light.css&quot; id=&quot;bryntum-theme&quot;>\n</code></pre>\n<p>Included themes are (from left to right) light, default, dark and material:</p>\n<img src="../examples/basic/meta/thumb.light.png" alt="Light theme" width="300" style="margin-right: .5rem">\n<img src="../examples/basic/meta/thumb.default.png" alt="Default theme" width="300" style="margin-right: .5rem">\n<img src="../examples/basic/meta/thumb.dark.png" alt="Dark theme" width="300" style="margin-right: .5rem">\n<img src="../examples/basic/meta/thumb.material.png" alt="Material theme" width="300">\n<h3>Choosing event styles and colors</h3>\n<p>The style and color of each event can be changed by assigning to the <code>eventStyle</code> and <code>eventColor</code> configs. These\nconfigs are available at 3 different levels:</p>\n<ul>\n<li>Scheduler level, affects all events (see <a href="#Scheduler/view/mixin/TimelineEventRendering#config-eventStyle">eventStyle</a> and <a href="#Scheduler/view/mixin/TimelineEventRendering#config-eventColor">eventColor</a>).</li>\n<li>Resource level, affects all events assigned to that resource (see <a href="#Scheduler/model/ResourceModel#field-eventStyle">eventStyle</a>\nand <a href="#Scheduler/model/ResourceModel#field-eventColor">eventColor</a>).</li>\n<li>Event level, affects that event (see <a href="#Scheduler/model/EventModel#field-eventStyle">eventStyle</a> and\n<a href="#Scheduler/model/EventModel#field-eventColor">eventColor</a>).</li>\n</ul>\n<p><div class="external-example" data-file="scheduler/Styles.js">\n            <i class="b-icon b-icon-code b-inline-example"></i>\n            <div class="external-code-container">\n                <div class="external-code example">\n                    <pre><code>\n                    </code></pre>\n                </div>\n            </div>\n            <div class="external-target"></div>\n       </div></p>\n<p>For available styles, see <a href="#Scheduler/view/mixin/TimelineEventRendering#config-eventStyle">eventStyle</a>. For colors,\n<a href="#Scheduler/view/mixin/TimelineEventRendering#config-eventColor">eventColor</a>. Also take a look at the\n<a href="../examples/eventstyles" target="_blank">eventstyles demo</a>.</p>\n<h3>Using render functions</h3>\n<p>Render function can be used to manipulate the rendering of rows (resources) and events. For information on row\nrenderers, see <a href="#Grid/column/Column#config-renderer">renderer</a>.</p>\n<p>Event rendering can be manipulated by specifying an <a href="#Scheduler/view/mixin/SchedulerEventRendering#config-eventRenderer">eventRenderer</a> function. The function is called\nfor each event before it is rendered to DOM. By using its arguments you can add CSS classes, modify styling and\ndetermine the contents of the event:</p>\n<pre class="prettyprint source"><code>let scheduler = new Scheduler({\n\n  events    : [...],\n  resources : [...],\n\n  ...,\n\n  eventRenderer({resourceRecord, eventRecord, tplData}) {\n     // add css class to the event\n     tplData.cls.add(\'my-css-class\');\n\n     // use an icon\n     tplData.iconCls = \'b-fa b-fa-some-nice-icon\';\n\n     // returnvalue is used as events text\n     return `${resourceRecord.name}: ${eventRecord.name}`;\n  }\n});\n</code></pre>\n<p></section>\n<section class="collapsible"><h2>Event manipulation</h2>\nYou can programmatically manipulate the events using data operations, see the &quot;Working with data&quot; guides for more\ninformation. Events are reactive, changes reflect on the UI automatically. A small example on manipulating events:</p>\n<pre class="prettyprint source"><code>// change startDate of first event\nscheduler.eventStore.first.startDate = new Date(2018,5,10);\n\n// remove last event\nscheduler.eventStore.last.remove();\n\n// reassign an event\nscheduler.eventStore.getById(10).resourceId = 2;\n</code></pre>\n<p>You can also allow your users to manipulate the events using the following features:</p>\n<ul>\n<li><a href="#Scheduler/feature/EventDrag">Scheduler.feature.EventDrag</a>, drag and drop events within the schedule</li>\n<li><a href="#Scheduler/feature/EventDragCreate">Scheduler.feature.EventDragCreate</a>, create new events by click-dragging an empty area</li>\n<li><a href="#Scheduler/feature/EventEdit">Scheduler.feature.EventEdit</a>, show an event editing form</li>\n<li><a href="#Scheduler/feature/SimpleEventEdit">Scheduler.feature.SimpleEventEdit</a>, edit the event name easily</li>\n<li><a href="#Scheduler/feature/EventResize">Scheduler.feature.EventResize</a>, resize events by dragging resize handles</li>\n</ul>\n<p>All of the features mentioned above are enabled by default.\n</section>\n<section class="collapsible"><h2>Default configs</h2>\nThere is a myriad of configs and features available for Scheduler (browse the API docs to find them), some of them on\nby default and some of them requiring extra configuration. The code below tries to illustrate the major things that\nare used by default:</p>\n<pre class="prettyprint source lang-javascript"><code>let scheduler = new Scheduler({\n   // The following features are enabled by default:\n   features : {\n       cellEdit            : true, // Cell editing in the columns part\n       columnLines         : true, // Column lines in the schedule part\n       columnPicker        : true, // Header context menu item to toggle visible columns\n       columnReorder       : true, // Reorder columns in grid part using drag and drop\n       columnResize        : true, // Resize columns in grid part using the mouse\n       contextMenu         : true, // Context menu for cells and headers in the grid part\n       eventContextMenu    : true, // Context menu for events\n       eventDrag           : true, // Dragging events\n       eventDragCreate     : true, // Drag creating events\n       eventEdit           : true, // Event editor dialog\n       eventFilter         : true, // Filtering events using header context menu\n       eventResize         : true, // Resizing events using the mouse\n       eventTooltip        : true, // Tooltips for events\n       group               : true, // Row grouping\n       headerContextMenu   : true, // Header context menu for schedule part\n       scheduleContextMenu : true, // Context menu for empty parts of the schedule\n       scheduleTooltip     : true, // Tooltip for empty parts of the schedule\n       sort                : true  // Row sorting\n   },\n\n   // From Grid\n   animateRemovingRows       : false, // Rows will not slide out on removal\n   autoHeight                : false, // Grid needs to have a height supplied through CSS (strongly recommended) or by specifying `height\n   columnLines               : true,  // Grid part, themes might override it to hide lines anyway\n   emptyText                 : \'No rows to display\',\n   enableTextSelection       : false, // Not allowed to select text in cells by default,\n   fillLastColumn            : true,  // By default the last column is stretched to fill the grid\n   fullRowRefresh            : true,  // Refreshes entire row when a cell value changes\n   loadMask                  : \'Loading...\',\n   resizeToFitIncludesHeader : true,  // Also measure header when auto resizing columns\n   responsiveLevels : {\n     small : 400,\n     medium : 600,\n     large : \'*\'\n   },\n   rowHeight                  : 60,    // Scheduler specifies a default rowHeight in pixels\n   showDirty                  : false, // No indicator for changed cells\n   showRemoveRowInContextMenu : true,   // Context menu has &quot;Remove row&quot; item\n\n   // Scheduler specific\n   autoAdjustTimeAxis             : true,      // startDate & endDate will be adjusted to display a suitable range\n   allowOverlap                   : true,      // Events are allowed to overlap (overlays, stacks or packs depending on eventLayout)\n   barMargin                      : 10,        // Space above + below each event\n   createEventOnDblClick          : true,      // Allow creating new events by double clicking empty space\n   enableDeleteKey                : true,      // Allow deleting events with delete / backspace keys\n   enableEventAnimations          : true,      // Animate event changes\n   eventBarTextField              : \'name\',    // Field on EventModel to display in events\n   eventColor                     : \'green\',   // Use green as default color for events\n   eventLayout                    : \'stack\',   // Stack overlapping events by default\n   eventStyle                     : \'plain\',   // Use plain as default style for events\n   managedEventSizing             : true,      // Calculate event sizes based on rowHeight & barMargin\n   milestoneCharWidth             : 10,\n   milestoneLayoutMode            : \'default\',\n   removeUnassignedEvent          : true,      // Remove event when all assignments for it are removed\n   useInitialAnimation            : true,      // Fade in events initially\n   viewPreset                     : \'weekAndDayLetter\',\n   zoomOnMouseWheel               : true,\n   zoomOnTimeAxisDoubleClick      : true\n});\n</code></pre>\n<p></section>\n<section class="collapsible"><h2>Performance</h2>\nTo make scheduler performance as good as possible it only renders the events and resources that are within view (plus\nan additional buffer). Since adding to and removing from DOM comes with a performance penalty the elements are\ninstead repositioned and reused as you scroll. A side effect of this is that you cannot do direct DOM element\nmanipulation in a reliable way, instead you should use row and event renderer functions to achive what you want (see\nthe section on event styling above).</p>\n<p>To put the scheduler to the test, try our <a href="../examples/bigdataset" target="_blank">bigdataset demo</a>.\n</section></p>',extends:["Scheduler/view/SchedulerBase"],constructor:{name:"constructor"},filename:"Scheduler.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/view",lineno:299},{name:"module:Scheduler/view/SchedulerBase",classDescription:'<p>A thin base class for <a href="#Scheduler/view/Scheduler">Scheduler.view.Scheduler</a>. Does not include any features by default, allowing smaller\ncustom built bundles if used in place of <a href="#Scheduler/view/Scheduler">Scheduler.view.Scheduler</a>.</p>\n<p><strong>NOTE:</strong> In most scenarios you do probably want to use Scheduler instead of SchedulerBase.</p>',extends:["Scheduler/view/TimelineBase"],mixes:["Scheduler/view/mixin/EventNavigation","Scheduler/view/mixin/EventSelection","Scheduler/view/mixin/SchedulerDom","Scheduler/view/mixin/SchedulerDomEvents","Scheduler/view/mixin/SchedulerEventRendering","Scheduler/view/mixin/SchedulerRegions","Scheduler/view/mixin/SchedulerScroll","Scheduler/view/mixin/SchedulerState","Scheduler/view/mixin/SchedulerStores","Scheduler/view/mixin/TimelineDateMapper","Scheduler/view/mixin/TimelineDomEvents","Scheduler/view/mixin/TimelineEventRendering","Scheduler/view/mixin/TimelineScroll","Scheduler/view/mixin/TimelineViewPresets","Scheduler/view/mixin/TimelineZoomable","Scheduler/crud/mixin/CrudManagerView"],constructor:{name:"constructor"},filename:"SchedulerBase.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/view",lineno:59,configs:[{name:"mode",description:"<p>Scheduler mode. Supported values: horizontal, vertical</p>",type:"String",scope:"inner"},{name:"eventCls",access:"private",description:"<p>CSS class to add to rendered events</p>",type:"String",scope:"inner",defaultvalue:"b-sch-event",category:"CSS"},{name:"timeCellCls",access:"private",description:"<p>CSS class to add to cells in the timeaxis column</p>",type:"String",scope:"inner",defaultvalue:"b-sch-timeaxis-cell",category:"CSS"},{name:"overScheduledEventClass",access:"private",description:"<p>A CSS class to apply to each event in the view on mouseover (defaults to 'b-sch-event-hover').</p>",type:"String",scope:"inner",defaultvalue:"b-sch-event-hover",category:"CSS"},{name:"allowOverlap",description:"<p>Set to false if you don't want to allow events overlapping (defaults to true).</p>",type:"Boolean",scope:"inner",defaultvalue:true,category:"Scheduled events"},{name:"rowHeight",description:"<p>The height in pixels of Scheduler rows.</p>",type:"Number",scope:"inner",defaultvalue:60},{name:"milestoneCharWidth",description:"<p>Factor representing the average char width in pixels used to determine milestone width when configured\nwith <code>milestoneLayoutMode: 'estimate'</code>.</p>",type:"Number",scope:"inner",defaultvalue:10},{name:"getRowHeight",description:'<p>Scheduler overrides Grids default implementation of <a href="#Grid/view/GridBase#config-getRowHeight">getRowHeight</a> to\npre-calculate row heights based on events in the rows.</p>\n<p>The amount of rows that are pre-calculated is limited for performance reasons. The limit is configurable\nby specifying the <a href="#Scheduler/view/SchedulerBase#config-preCalculateHeightLimit">preCalculateHeightLimit</a> config.</p>\n<p>The results of the calculation are cached internally.</p>',type:"function",scope:"inner",returns:[{type:{names:["Number"]},description:"<p>Desired row height</p>"}],category:"Layout",parameters:[{name:"getRowHeight.record",type:"Scheduler.model.ResourceModel",description:"<p>Resource record to determine row height for</p>",isSubParam:true}]},{name:"preCalculateHeightLimit",description:"<p>Maximum number of resources for which height is pre-calculated. If you have many events per\nresource you might want to lower this number to gain some initial rendering performance.</p>\n<p>Specify a falsy value to opt out of row height pre-calculation.</p>",type:"Number",scope:"inner",defaultvalue:1e4,category:"Layout"}],properties:[{name:"milestoneAlign",description:"<p>How to align milestones in relation to their startDate. Only applies when using a <code>milestoneLayoutMode</code>\nother than <code>default</code>. Valid values are:</p>\n<ul>\n<li>start</li>\n<li>center (default)</li>\n<li>end</li>\n</ul>",scope:"inner"},{name:"isHorizontal",access:"private",description:"<p>Checks if scheduler is in horizontal mode</p>",scope:"instance",returns:[{type:{names:["Boolean"]}}],readonly:true,category:"Common"},{name:"isVertical",access:"private",description:"<p>Checks if scheduler is in vertical mode</p>",scope:"instance",returns:[{type:{names:["Boolean"]}}],readonly:true,category:"Common"},{name:"mode",access:"private",description:"<p>Get/set mode (horizontal/vertical)</p>",scope:"instance",category:"Common",properties:[{type:{names:["String"]}}]}],events:[{name:"renderEvent",description:"<p>Fired after rendering an event, when its element is available in DOM.</p>",parameters:[{name:"source",type:"Scheduler.view.Scheduler",description:"<p>This Scheduler</p>"},{name:"eventRecord",type:"Scheduler.model.EventModel",description:"<p>The event record</p>"},{name:"resourceRecord",type:"Scheduler.model.ResourceModel",description:"<p>The resource record</p>"},{name:"assignmentRecord",type:"Scheduler.model.AssignmentModel",description:"<p>The assignment record, if using an AssignmentStore</p>"},{name:"tplData",type:"Object",description:'<p>An object containing details about the event rendering, see <a href="#Scheduler/view/mixin/SchedulerEventRendering#config-eventRenderer">eventRenderer</a> for details</p>'},{name:"element",type:"HTMLElement",description:"<p>The events element</p>"}]},{name:"resourceHeaderClick",description:"<p>Fired when clicking a resource header cell</p>",parameters:[{name:"source",type:"Scheduler.view.Scheduler",description:"<p>This Scheduler</p>"},{name:"resourceRecord",type:"Scheduler.model.ResourceModel",description:"<p>The resource record</p>"},{name:"event",type:"Event",description:"<p>The event</p>"}]},{name:"resourceHeaderDblclick",description:"<p>Fired when doublc clicking a resource header cell</p>",parameters:[{name:"source",type:"Scheduler.view.Scheduler",description:"<p>This Scheduler</p>"},{name:"resourceRecord",type:"Scheduler.model.ResourceModel",description:"<p>The resource record</p>"},{name:"event",type:"Event",description:"<p>The event</p>"}]},{name:"resourceHeaderContextmenu",description:"<p>Fired when activating context menu on a resource header cell</p>",parameters:[{name:"source",type:"Scheduler.view.Scheduler",description:"<p>This Scheduler</p>"},{name:"resourceRecord",type:"Scheduler.model.ResourceModel",description:"<p>The resource record</p>"},{name:"event",type:"Event",description:"<p>The event</p>"}]},{name:"beforeEventAdd",description:"<p>Fires before an event is added. Can be triggered by schedule double click, drag create action, or by the event editor.</p>",parameters:[{name:"source",type:"Scheduler.view.Scheduler",description:"<p>The Scheduler instance</p>"},{name:"eventRecord",type:"Scheduler.model.EventModel",description:"<p>The record about to be added</p>"},{name:"resources",type:"Array.<Scheduler.model.ResourceModel>",description:"<p><strong>Deprecated</strong> Use <code>resourceRecords</code> instead</p>"},{name:"resourceRecords",type:"Array.<Scheduler.model.ResourceModel>",description:"<p>Resources that the record is assigned to</p>"}],preventable:true}],functions:[{name:"editEvent",description:'<p>Opens an editor UI to edit the passed event.</p>\n<p><em>NOTE: Only available when the <a href="#Scheduler/feature/EventEdit">EventEdit</a> feature is enabled.</em></p>',parameters:[{name:"eventRecord",type:"Scheduler.model.EventModel",description:"<p>Event to edit</p>"},{name:"resourceRecord",type:"Scheduler.model.ResourceModel",description:"<p>The Resource record for the event.\nThis parameter is needed if the event is newly created for a resource and has not been assigned, or when using\nmulti assignment.</p>",optional:true},{name:"element",type:"HTMLElement",description:"<p>Element to anchor editor to (defaults to events element)</p>",optional:true}],scope:"inner",category:"Feature shortcuts"},{name:"onEventCreated",description:"<p>Called when new event is created.\nСan be overriden to supply default record values etc.</p>",parameters:[{name:"eventRecord",type:"Scheduler.model.EventModel",description:"<p>Newly created event</p>"}],scope:"instance"},{name:"getEventMenuItems",description:"<p>A chainable function which Features may hook to add their own event context menu items\nwhen context menu is invoked on an event.</p>",parameters:[{name:"params",type:"Object",description:"<p>An object containing the available contextual information.</p>"},{name:"params.eventRecord",type:"Scheduler.model.EventModel",description:"<p>The context event.</p>",isSubParam:true},{name:"params.resourceRecord",type:"Scheduler.model.ResourceModel",description:"<p>The context resource</p>",isSubParam:true},{name:"params.assignmentRecord",type:"Scheduler.model.AssignmentModel",description:"<p>The context assignment if any.</p>",isSubParam:true},{name:"params.eventElement",type:"HTMLElement",description:"<p>The context event's DOM element.</p>",isSubParam:true},{name:"params.event",type:"Event",description:"<p>The triggering DOM <code>contextmenu</code> event.</p>",isSubParam:true}],scope:"instance"},{name:"getScheduleMenuItems",description:"<p>A chainable function which Features may hook to add their own Scheduler context menu items\nwhen context menu is invoked on the scheduler, but not on an event.</p>",parameters:[{name:"params",type:"Object",description:"<p>An object containing the available contextual information.</p>"},{name:"params.resourceRecord",type:"Scheduler.model.ResourceModel",description:"<p>The context resource</p>",isSubParam:true},{name:"params.date",type:"Date",description:"<p>The Date corresponding to the mouse position in the time axis.</p>",isSubParam:true},{name:"params.eventElement",type:"HTMLElement",description:"<p>The context event's DOM element.</p>",isSubParam:true},{name:"params.event",type:"Event",description:"<p>The triggering DOM <code>contextmenu</code> event.</p>",isSubParam:true}],scope:"instance"},{name:"isDateRangeAvailable",description:"<p>Checks if a date range is allocated or not for a given resource.</p>",parameters:[{name:"start",type:"Date",description:"<p>The start date</p>"},{name:"end",type:"Date",description:"<p>The end date</p>"},{name:"excludeEvent",type:"Scheduler.model.EventModel",description:"<p>An event to exclude from the check (or null)</p>"},{name:"resource",type:"Scheduler.model.ResourceModel",description:"<p>The resource</p>"}],scope:"instance",category:"Dates",returns:{type:"Boolean",description:"<p>True if the timespan is available for the resource</p>"}}]},{name:"module:Scheduler/view/TimeAxisBase",classDescription:"<p>Base class for HorizontalTimeAxis and VerticalTimeAxis. Contains shared functionality to only render ticks in view,\nshould not be used directly.</p>",extends:["Core/widget/Widget"],access:"private",virtual:true,constructor:{name:"constructor"},filename:"TimeAxisBase.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/view",lineno:24,configs:[{name:"compactCellWidthThreshold",description:"<p>The minimum width for a bottom row header cell to be considered 'compact', which adds a special CSS class\nto the row (for special styling). Copied from Scheduler/Gantt.</p>",type:"Number",scope:"inner",defaultvalue:15},{name:"sizeProperty",access:"private",description:"<p>Style property to use as cell size. Either width or height depending on orientation</p>",type:"String",scope:"inner"},{name:"positionProperty",access:"private",description:"<p>Style property to use as cells position. Either left or top depending on orientation</p>",type:"String",scope:"inner"},{name:"wrapText",access:"private",description:"<p>Specify <code>true</code> to wrap header text in <code>.b-sch-header-text</code></p>",type:"String",scope:"inner"}],functions:[{name:"refresh",description:"<p>Refresh the UI</p>",parameters:[{name:"rebuild",type:"Boolean",description:"<p>Specify <code>true</code> to force a rebuild of the underlying header level definitions</p>",optional:true}],scope:"instance"}]},{name:"module:Scheduler/view/TimelineBase",classDescription:"<p>Abstract base class used by timeline based components such as Scheduler and Gantt. Based on Grid, supplies a &quot;locked&quot;\nregion for columns and a &quot;normal&quot; for rendering of events etc.</p>",extends:["Grid/view/Grid"],mixes:["Scheduler/view/mixin/TimelineDateMapper","Scheduler/view/mixin/TimelineDomEvents","Scheduler/view/mixin/TimelineEventRendering","Scheduler/view/mixin/TimelineScroll","Scheduler/view/mixin/TimelineViewPresets","Scheduler/view/mixin/TimelineZoomable"],virtual:true,constructor:{name:"constructor"},filename:"TimelineBase.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/view",lineno:55,configs:[{name:"weekStartDay",description:"<p>A valid JS day index between 0-6 (0: Sunday, 1: Monday etc.) to be considered the start day of the week.\nWhen omitted, the week start day is retrieved from the active locale class.</p>",type:"Number",scope:"inner",category:"Time axis"},{name:"workingTime",description:'<p>An object with format <code>{ fromDay, toDay, fromHour, toHour }</code> that describes the working days and hours.\nThis object will be used to populate TimeAxis <a href="#Scheduler/data/TimeAxis#config-include">include</a> property.</p>\n<p>Using it results in a non-continuous time axis. Any ticks not covered by the working days and hours will\nbe excluded. Events within larger ticks (for example if using week as the unit for ticks) will be\nstretched to fill the gap otherwise left by the non working hours.</p>\n<p>As with end dates, <code>toDay</code> and <code>toHour</code> are exclusive. Thus <code>toDay : 6</code> means that day 6 (saturday) will\nnot be included.</p>\n<p><strong>NOTE:</strong> When this feature is enabled <a href="#Scheduler/view/mixin/TimelineZoomable">Zooming feature</a> is\nnot supported. It\'s recommended to disable zooming controls:</p>\n<pre class="prettyprint source lang-javascript"><code>new Scheduler({\n    zoomOnMouseWheel          : false,\n    zoomOnTimeAxisDoubleClick : false,\n    ...\n});\n</code></pre>',type:"Object",scope:"inner",category:"Time axis"},{name:"timeAxis",description:"<p>The backing store providing the input date data for the timeline panel. Created automatically if none\nsupplied.</p>",type:"Scheduler.data.TimeAxis",scope:"inner",category:"Time axis"},{name:"timeAxisViewModel",access:"private",description:"<p>The backing view model for the visual representation of the time axis.\nEither a real instance or a simple config object.</p>",type:["Scheduler.view.model.TimeAxisViewModel","Object"],scope:"inner",category:"Time axis"},{name:"autoAdjustTimeAxis",description:'<p>You can set this option to <code>false</code> to make the timeline panel start and end on the exact provided\n<a href="#Scheduler/view/TimelineBase#config-startDate">startDate</a>/<a href="#Scheduler/view/TimelineBase#config-endDate">endDate</a> w/o adjusting them.</p>',type:"Boolean",scope:"inner",defaultvalue:true,category:"Time axis"},{name:"startDate",description:'<p>The start date of the timeline. If omitted, and a TimeAxis has been set, the start date of the provided\n<a href="#Scheduler/data/TimeAxis">Scheduler.data.TimeAxis</a> will be used. If no TimeAxis has been configured, it\'ll use the start/end\ndates of the loaded event dataset. If no date information exists in the event data set, it defaults to\nthe current date and time.</p>\n<p>If a string is supplied, it will be parsed using\n<a href="#Core/helper/DateHelper#property-defaultFormat-static">DateHelper.defaultFormat</a></p>\n<p><strong>Note:</strong> If you need to set start and end date at the same time, use\n<a href="#Scheduler/view/mixin/TimelineZoomable#function-setTimeSpan">setTimeSpan</a> method.</p>',type:["Date","String"],scope:"inner",category:"Common"},{name:"endDate",description:'<p>The end date of the timeline. If omitted, it will be calculated based on the <a href="#Scheduler/view/TimelineBase#config-startDate">startDate</a>\nsetting and the \'defaultSpan\' property of the current\n<a href="#Scheduler/view/mixin/TimelineViewPresets#config-viewPreset">viewPreset</a>.</p>\n<p>If a string is supplied, it will be parsed using\n<a href="#Core/helper/DateHelper#property-defaultFormat-static">DateHelper.defaultFormat</a></p>\n<p><strong>Note:</strong> If you need to set start and end date at the same time, use\n<a href="#Scheduler/view/mixin/TimelineZoomable#function-setTimeSpan">setTimeSpan</a> method.</p>',type:["Date","String"],scope:"inner",category:"Common"},{name:"snap",description:"<p>true to snap to resolution increment while interacting with scheduled events.</p>",type:"Boolean",scope:"inner",defaultvalue:false,category:"Scheduled events"},{name:"snapRelativeToEventStartDate",description:'<p>Affects drag drop and resizing of events when <a href="#Scheduler/view/TimelineBase#config-snap">snap</a> is enabled. If set to <code>true</code>, dates\nwill be snapped relative to event start. e.g. for a zoom level with timeResolution = { unit: &quot;s&quot;,\nincrement: &quot;20&quot; }, an event that starts at 10:00:03 and is dragged would snap its start date to 10:00:23,\n10:00:43 etc. When set to <code>false</code>, dates will be snapped relative to the timeAxis startDate (tick start)</p>\n<ul>\n<li>10:00:03, 10:00:20, 10:00:40 etc.</li>\n</ul>',type:"Boolean",scope:"inner",defaultvalue:false,category:"Scheduled events"},{name:"forceFit",description:'<p>Set to <code>true</code> to force the time columns to fit to the available space (horizontal or vertical depends on mode).\nNote that setting <a href="#Scheduler/view/TimelineBase#config-suppressFit">suppressFit</a> on <code>true</code>, will disable <code>forceFit</code> functionality.</p>',type:"Boolean",scope:"inner",defaultvalue:false,category:"Time axis"},{name:"suppressFit",description:'<p>Set to <code>true</code> to prevent auto calculating of a minimal <a href="#Scheduler/view/mixin/TimelineEventRendering#property-tickSize">tickSize</a>\nto always fit the content to the screen size. Setting this property on <code>true</code> will disable <a href="#Scheduler/view/TimelineBase#config-forceFit">forceFit</a> behaviour.</p>',type:"Boolean",scope:"inner",defaultvalue:"false",category:"Time axis"},{name:"eventCls",access:"private",description:"<p>CSS class to add to rendered events</p>",type:"String",scope:"inner",category:"CSS"},{name:"getDateConstraints",description:"<p>Returns dates that will constrain resize and drag operations. The method will be called with the\nResource, and for operations on existing events - the event. For drag create operation, the mousedown\ndate will be passed as the second parameter</p>",type:"function",scope:"inner",returns:[{type:{names:["Object"]},description:"<p>Constraining object containing <code>start</code> and <code>end</code> constraints. Omitting either\nwill mean that end is not constrained. So you can prevent a resize or move from moving <em>before</em>\na certain time while not constraininhg the end date.</p>"},{type:{names:["Date"]},description:"<p>[return.start] Start date</p>"},{type:{names:["Date"]},description:"<p>[return.end] End date</p>"}],category:"Scheduled events"},{name:"timeCellCls",access:"private",description:"<p>CSS class to add to cells in the timeaxis column</p>",type:"String",scope:"inner",category:"CSS"},{name:"createEventOnDblClick",description:"<p>Create event on double click if scheduler is not in read only mode.\nSet to false to turn creating off.</p>",type:"Boolean",scope:"inner",defaultvalue:true,category:"Scheduled events"},{name:"overScheduledEventClass",access:"private",description:"<p>A CSS class to apply to each event in the view on mouseover.</p>",type:"String",scope:"inner",category:"CSS"},{name:"enableEventAnimations",description:"<p>Set to <code>false</code> if you don't want event bar DOM updates to animate. Animations are disabled in IE11 by default.</p>",type:"Boolean",scope:"inner",defaultvalue:"true",category:"Scheduled events"},{name:"partner",description:"<p>Partners this Timeline panel with another Timeline in order to sync their region sizes (sub-grids like locked, normal will get the same width),\nstart and end dates, view preset, zoom level and scrolling position. All these values will be synced with the timeline defined as the <code>partner</code>.</p>",type:"Scheduler.view.TimelineBase",scope:"inner",category:"Time axis"},{name:"milestoneLayoutMode",description:"<p>How to handle milestones during event layout. Options are:</p>\n<ul>\n<li>default - Milestones do not affect event layout</li>\n<li>estimate - Milestone width is estimated by multiplying text length with Scheduler#milestoneCharWidth</li>\n<li>data - Milestone width is determined by checking EventModel#milestoneWidth</li>\n<li>measure - Milestone width is determined by measuring label width\nPlease note that currently text width is always determined using EventModel#name.\nAlso note that only 'default' is supported by eventStyles line, dashed and minimal.</li>\n</ul>",type:"String",scope:"inner",defaultvalue:"default",category:"Scheduled events"},{name:"defaultRegion",description:"<p>Region to which columns are added when they have none specified</p>",type:"string",scope:"inner",defaultvalue:"locked",category:"Misc"}],functions:[{name:"initScroll",access:"private",description:"<p>Overrides initScroll from Grid, listens for horizontal scroll to do virtual event rendering</p>",scope:"instance"},{name:"setStartDate",description:'<p>Sets the timeline start date.</p>\n<p><strong>Note:</strong></p>\n<ul>\n<li>If you need to set start and end date at the same time, use <a href="#Scheduler/view/mixin/TimelineZoomable#function-setTimeSpan">setTimeSpan</a> method.</li>\n<li>If keepDuration is false and new start date is greater than end date, it will throw an exception.</li>\n</ul>',parameters:[{name:"date",type:"Date",description:"<p>The new start date</p>"},{name:"keepDuration",type:"Boolean",description:"<p>Pass <code>true</code> to keep the duration of the timeline (&quot;move&quot; the timeline),\n<code>false</code> to change the duration (&quot;resize&quot; the timeline). Defaults to <code>true</code>.</p>",default:true}],scope:"instance"},{name:"setEndDate",description:'<p>Sets the timeline end date</p>\n<p><strong>Note:</strong></p>\n<ul>\n<li>If you need to set start and end date at the same time, use <a href="#Scheduler/view/mixin/TimelineZoomable#function-setTimeSpan">setTimeSpan</a> method.</li>\n<li>If keepDuration is false and new end date is less than start date, it will throw an exception.</li>\n</ul>',parameters:[{name:"date",type:"Date",description:"<p>The new end date</p>"},{name:"keepDuration",type:"Boolean",description:"<p>Pass <code>true</code> to keep the duration of the timeline (&quot;move&quot; the timeline),\n<code>false</code> to change the duration (&quot;resize&quot; the timeline). Defaults to <code>false</code>.</p>",default:false}],scope:"instance"},{name:"onInternalResize",access:"private",description:"<p>This is a template method called by Widget when the encapsulating Scheduler SubGrid size.\nWidth changes <em>might</em> affect the Scheduler SubGrid, and <em>that</em> will trigger its\nhandler below, if that is the case. Here, we are only interested in the height changing because the\nencapsulating grid is what dictates the scrolling viewport height.</p>",parameters:[{name:"element",type:"HTMLElement"},{name:"width",type:"Number"},{name:"height",type:"Number"},{name:"oldWidth",type:"Number"},{name:"oldHeight",type:"Number"}],scope:"instance"},{name:"onTimeAxisSubGridResize",access:"private",description:"<p>This is an event handler triggered when the Scheduler SubGrid changes size.\nIts height changes when content height changes, and that is not what we are\ninterested in here. If the <em>width</em> changes, that means the visible viewport\nhas changed size.</p>",parameters:[{name:"element",type:"HTMLElement"},{name:"width",type:"Number"},{name:"height",type:"Number"},{name:"oldWidth",type:"Number"},{name:"oldHeight",type:"Number"}],scope:"instance"},{name:"getHeaderDomConfigs",description:"<p>A chainable function which Features may hook to add their own content to the timeaxis header.</p>",parameters:[{name:"configs",type:"Array",description:"<p>An array of domConfigs, append to it to have the config applied to the header</p>"}],scope:"instance"},{name:"getForegroundDomConfigs",description:"<p>A chainable function which Features may hook to add their own content to the foreground canvas</p>",parameters:[{name:"configs",type:"Array",description:"<p>An array of domConfigs, append to it to have the config applied to the foreground canvas</p>"}],scope:"instance"},{name:"refreshWithTransition",description:"<p>Refreshes the grid with transitions enabled.</p>",scope:"instance"},{name:"getVisibleDateRange",description:"<p>Returns an object representing the visible date range, with <code>startDate</code> and <code>endDate</code> properties</p>",scope:"instance",returns:{type:"Object",description:"<p>The date range</p>"}}],properties:[{name:"hasVisibleEvents",description:'<p>Returns <code>true</code> if any of the events/tasks or feature injected elements (such as ResourceTimeRanges) are within\nthe <a href="#Scheduler/view/TimelineBase#config-timeAxis">timeAxis</a></p>',scope:"instance",readonly:true,properties:[{type:{names:["Boolean"]}}]},{name:"timeAxisViewModel",description:"<p>The internal view model, describing the visual representation of the time axis.</p>",scope:"instance",readonly:true,properties:[{type:{names:["Scheduler.view.model.TimeAxisViewModel"]}}]},{name:"workingTime",description:'<p>Get/set working time. Assign <code>null</code> to stop using working time. See <a href="#Scheduler/view/TimelineBase#config-workingTime">workingTime</a> config for details.</p>',scope:"instance",properties:[{type:{names:["Object"]}}]},{name:"startDate",description:'<p>Get/set startDate. Defaults to current date if none specified.</p>\n<p><strong>Note:</strong> If you need to set start and end date at the same time, use <a href="#Scheduler/view/mixin/TimelineZoomable#function-setTimeSpan">setTimeSpan</a> method.</p>',scope:"instance",category:"Common",properties:[{type:{names:["Date"]}}]},{name:"endDate",description:'<p>Get/set endDate. Defaults to startDate + default span of the used ViewPreset.</p>\n<p><strong>Note:</strong> If you need to set start and end date at the same time, use <a href="#Scheduler/view/mixin/TimelineZoomable#function-setTimeSpan">setTimeSpan</a> method.</p>',scope:"instance",category:"Common",properties:[{type:{names:["Date"]}}]},{name:"timeAxisSubGridElement",description:"<p>Returns the subGrid containing the time axis</p>",scope:"instance",readonly:true,properties:[{type:{names:["Grid.view.SubGrid"]}}]}],events:[{name:"timeAxisChange",description:"<p>Fired when the timeaxis has changed, for example by zooming or configuring a new time span.</p>",parameters:[{name:"source",type:"Scheduler.view.Scheduler",description:"<p>This Scheduler</p>"},{name:"config",type:"Object",description:"<p>Config object used to reconfigure the time axis.</p>"},{name:"config.start",type:"Date",description:"<p>New start date (if supplied)</p>",isSubParam:true},{name:"config.end",type:"Date",description:"<p>New end date (if supplied)</p>",isSubParam:true}]},{name:"timelineViewportResize",description:"<p>Fired when the <em>scheduler</em> viewport (not the overall Scheduler element) changes size.\nThis happens when the grid changes height, or when the subgrid which encapsulates the\nscheduler column changes width.</p>",parameters:[{name:"source",type:"Core.widget.Widget",description:"<p>This Scheduler</p>"},{name:"width",type:"Number",description:"<p>The new width</p>"},{name:"height",type:"Number",description:"<p>The new height</p>"},{name:"oldWidth",type:"Number",description:"<p>The old width</p>"},{name:"oldHeight",type:"Number",description:"<p>The old height</p>"}]}]},{name:"module:Scheduler/view/VerticalTimeAxis",classDescription:"<p>Widget that renders a vertical time axis. Only renders ticks in view. Used in vertical mode.</p>",extends:["Core/widget/Widget"],access:"private",constructor:{name:"constructor"},filename:"VerticalTimeAxis.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/view",lineno:12},{name:"module:Scheduler/view/export/SchedulerExportDialog",classDescription:"<p>Similar to dialog in Grid, but with few extra fields specific to scheduler.</p>",extends:["Grid/view/export/ExportDialog"],constructor:{name:"constructor"},filename:"SchedulerExportDialog.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/view/export",lineno:16},{name:"module:Scheduler/view/mixin/EventNavigation",description:"<p>Mixin that tracks event or assignment selection by clicking on one or more events in the scheduler.</p>",mixin:true,constructor:{name:"constructor"},filename:"EventNavigation.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/view/mixin",lineno:20,configs:[{name:"navigator",access:"internal",description:'<p>A config object to use when creating the <a href="#Core/helper/util/Navigator">Core.helper.util.Navigator</a>\nto use to perform keyboard navigation in the timeline.</p>',type:"Object",scope:"inner",category:"Misc"},{name:"focusCls",access:"private",description:"<p>A CSS class name to add to focused events.</p>",type:"String",scope:"inner",defaultvalue:"b-active",category:"CSS"},{name:"enableDeleteKey",description:"<p>Allow using [Delete] and [Backspace] to remove events/assignments</p>",type:"Boolean",scope:"inner",defaultvalue:true,category:"Misc"}],functions:[{name:"removeRecords",access:"internal",description:"<p>Internal utility function to remove events. Used when pressing [DELETE] or [BACKSPACE] or when clicking the\ndelete button in the event editor. Triggers a preventable <code>beforeEventDelete</code> event.</p>",parameters:[{name:"eventRecords",type:"Array.<Scheduler.model.EventModel>",description:"<p>Records to remove</p>"},{name:"callback",type:"function",description:"<p>Optional callback executed after triggering the event but before deletion</p>",optional:true}],scope:"instance",fires:["event:beforeEventDelete"],returns:{type:"Boolean",description:"<p>Returns <code>false</code> if the operation was prevented, otherwise <code>true</code></p>"}}],events:[{name:"beforeEventDelete",description:'<p>Fires before an event is removed. Can be triggered by user pressing [DELETE] or [BACKSPACE] or by the\nevent editor. Can for example be used to display a custom dialog to confirm deletion, in which case\nrecords should be &quot;manually&quot; removed after confirmation:</p>\n<pre class="prettyprint source lang-javascript"><code>scheduler.on({\n   beforeEventDelete({ eventRecords, context }) {\n       // Show custom confirmation dialog (pseudo code)\n       confirm.show({\n           listeners : {\n               onOk() {\n                   // Remove the events on confirmation\n                   context.finalize(true);\n               },\n               onCancel() {\n                   // do not remove the events if &quot;Cancel&quot; clicked\n                   context.finalize(false);\n               }\n           }\n       });\n\n       // Prevent default behaviour\n       return false;\n   }\n});\n</code></pre>',parameters:[{name:"source",type:"Scheduler.view.Scheduler",description:"<p>The Scheduler instance</p>"},{name:"eventRecords",type:"Array.<Scheduler.model.EventModel>",description:"<p>The records about to be deleted</p>"},{name:"context",type:"Object",description:"<p>Additional removal context:</p>"},{name:"context.finalize",type:"function",description:"<p>Function to call to finalize the removal.\nUsed to asynchronously decide to remove the records or not. Provide <code>false</code> to the function to prevent the removal.</p>",isSubParam:true},{name:"context.finalize.removeRecords",type:"Boolean",description:"<p>Provide <code>false</code> to the function to prevent the removal.</p>",default:true,optional:true,isSubParam:true}],preventable:true}]},{name:"module:Scheduler/view/mixin/EventSelection",description:"<p>Mixin that tracks event or assignment selection by clicking on one or more events in the scheduler.</p>",mixin:true,constructor:{name:"constructor"},filename:"EventSelection.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/view/mixin",lineno:12,configs:[{name:"multiEventSelect",description:"<p>Configure as <code>true</code> to allow <code>CTRL+click</code> to select multiple events in the scheduler.</p>",type:"Boolean",scope:"inner",category:"Selection"},{name:"eventSelectionDisabled",description:"<p>Configure as <code>true</code>, or set property to <code>true</code> to disable event selection.</p>",type:"Boolean",scope:"inner",defaultvalue:false,category:"Selection"},{name:"eventSelectedCls",access:"private",description:"<p>CSS class to add to selected events.</p>",type:"String",scope:"inner",defaultvalue:"b-sch-event-selected",category:"CSS"},{name:"triggerSelectionChangeOnRemove",description:"<p>Configure as <code>true</code> to trigger <code>selectionChange</code> when removing a selected event/assignment.</p>",type:"Boolean",scope:"inner",defaultvalue:false,category:"Selection"},{name:"maintainSelectionOnDatasetChange",description:"<p>This flag controls whether Scheduler should maintain its selection of events when loading a new dataset (if selected event ids are included in the newly loaded dataset).</p>",type:"Boolean",scope:"inner",defaultvalue:true,category:"Selection"},{name:"eventAssignHighlightCls",access:"private",description:"<p>CSS class to add to other instances of a selected event, to highlight them.</p>",type:"String",scope:"inner",defaultvalue:"b-sch-event-assign-selected",category:"CSS"},{name:"selectedCollection",access:"private",description:"<p>Collection to store selection.</p>",type:"Core.util.Collection",scope:"inner"}],events:[{name:"eventSelectionChange",description:"<p>Fired any time there is a change to the events selected in the Scheduler.</p>",parameters:[{name:"action",type:"String",description:"<p>One of the actions 'select', 'deselect', 'update', 'clear'</p>"},{name:"selected",type:["Array.<Scheduler.model.EventModel>","Array.<Scheduler.model.AssignmentModel>"],description:"<p>An array of the Events or Assignments added to the selection.</p>"},{name:"deselected",type:["Array.<Scheduler.model.EventModel>","Array.<Scheduler.model.AssignmentModel>"],description:"<p>An array of the Events or Assignments removed from the selection.</p>"},{name:"selection",type:["Array.<Scheduler.model.EventModel>","Array.<Scheduler.model.AssignmentModel>"],description:"<p>The new selection.</p>"}]}],properties:[{name:"selectedEvents",description:'<p>The <a href="#Scheduler/model/EventModel">events</a> or <a href="#Scheduler/model/AssignmentModel">assignments</a> which are selected.</p>',scope:"instance",returns:[{type:{names:["Array.<Scheduler.model.EventModel>","Array.<Scheduler.model.AssignmentModel>"]}}],category:"Selection"}],functions:[{name:"isEventSelected",description:'<p>Returns <code>true</code> if the <a href="#Scheduler/model/EventModel">event</a> or <a href="#Scheduler/model/AssignmentModel">assignment</a> is selected.</p>',parameters:[{name:"event",type:["Scheduler.model.EventModel","Scheduler.model.AssignmentModel"],description:"<p>The event or assignment</p>"}],scope:"instance",category:"Selection"},{name:"selectEvent",description:'<p>Selects the passed <a href="#Scheduler/model/EventModel">event</a> or <a href="#Scheduler/model/AssignmentModel">assignment</a>\n<em>if it is not selected</em>.</p>',parameters:[{name:"event",type:["Scheduler.model.EventModel","Scheduler.model.AssignmentModel"],description:"<p>The event or assignment to select. When using multi assignment, supply an AssignmentModel</p>"},{name:"preserveSelection",type:"Boolean",description:"<p>Pass <code>true</code> to preserve any other selected events or assignments</p>",default:false,optional:true}],scope:"instance",category:"Selection"},{name:"deselectEvent",description:'<p>Deselects the passed <a href="#Scheduler/model/EventModel">event</a> or <a href="#Scheduler/model/AssignmentModel">assignment</a>\n<em>if it is selected</em>.</p>',parameters:[{name:"event",type:["Scheduler.model.EventModel","Scheduler.model.AssignmentModel"],description:"<p>The event or assignment to deselect. When using multi assignment, supply an AssignmentModel</p>"}],scope:"instance",category:"Selection"},{name:"selectEvents",description:'<p>Adds <a href="#Scheduler/model/EventModel">events</a> or <a href="#Scheduler/model/AssignmentModel">assignments</a> to the selection.</p>',parameters:[{name:"events",type:["Array.<Scheduler.model.EventModel>","Array.<Scheduler.model.AssignmentModel>"],description:"<p>Events or assignments to be deselected</p>"}],scope:"instance",category:"Selection"},{name:"deselectEvents",description:'<p>Removes <a href="#Scheduler/model/EventModel">events</a> or <a href="#Scheduler/model/AssignmentModel">assignments</a> from the selection.</p>',parameters:[{name:"events",type:["Array.<Scheduler.model.EventModel>","Array.<Scheduler.model.AssignmentModel>"],description:"<p>Events or assignments  to be deselected</p>"}],scope:"instance",category:"Selection"},{name:"clearEventSelection",description:'<p>Deselects all <a href="#Scheduler/model/EventModel">events</a> or <a href="#Scheduler/model/AssignmentModel">assignments</a>.</p>',scope:"instance",category:"Selection"},{name:"onSelectedCollectionChange",access:"private",description:"<p>Responds to mutations of the underlying selection Collection.\nKeeps the UI synced, eventSelectionChange event is fired when <code>me.silent</code> is falsy.</p>",scope:"instance"},{name:"onInternalEventStoreChange",access:"private",description:"<p>Store data change listener to remove events from selection which are no longer in the store.</p>",scope:"instance"},{name:"onAssignmentRemove",access:"private",description:"<p>Assignment change listener to remove events from selection which are no longer in the assignments.</p>",scope:"instance"},{name:"onEventSelectionClick",access:"private",description:"<p>Mouse listener to update selection.</p>",scope:"instance"},{name:"onEventNavigate",access:"private",description:"<p>Navigation listener to update selection.</p>",scope:"instance"}]},{name:"module:Scheduler/view/mixin/SchedulerDom",description:"<p>Mixin with EventModel and ResourceModel &lt;-&gt; HTMLElement mapping functions</p>",mixin:true,constructor:{name:"constructor"},filename:"SchedulerDom.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/view/mixin",lineno:13,functions:[{name:"getElementFromAssignmentRecord",description:"<p>Returns a single HTMLElement representing an event record assigned to a specific resource.</p>",parameters:[{name:"assignmentRecord",type:"Scheduler.model.AssignmentModel",description:"<p>An assignment record</p>"}],scope:"instance",returns:{type:"HTMLElement",description:"<p>The element representing the event record</p>"}},{name:"getElementFromEventRecord",description:"<p>Returns a single HTMLElement representing an event record assigned to a specific resource.</p>",parameters:[{name:"eventRecord",type:"Scheduler.model.EventModel",description:"<p>An event record</p>"},{name:"resourceRecord",type:"Scheduler.model.ResourceModel",description:"<p>A resource record</p>"}],scope:"instance",returns:{type:"HTMLElement",description:"<p>The element representing the event record</p>"}},{name:"getElementsFromEventRecord",description:"<p>Returns all the HTMLElements representing an event record.</p>",parameters:[{name:"eventRecord",type:"Scheduler.model.EventModel",description:"<p>An event record</p>"},{name:"resourceRecord",type:"Scheduler.model.ResourceModel",description:"<p>A resource record</p>",optional:true}],scope:"instance",returns:{type:"Array.<HTMLElement>",description:"<p>The element(s) representing the event record</p>"}},{name:"getEventIdFromDomNodeId",access:"private",description:"<p>Returns the event id for a DOM id</p>",parameters:[{name:"id",type:"String",description:"<p>The id of the DOM node</p>"}],scope:"instance",returns:{type:"String",description:"<p>An event record (internal) id</p>"}},{name:"getEventRecordFromDomId",description:"<p>Returns the event record for a DOM id</p>",parameters:[{name:"id",type:"String",description:"<p>The id of the DOM node</p>"}],scope:"instance",returns:{type:"Scheduler.model.EventModel",description:"<p>The event record</p>"}},{name:"getResourceIdFromDomNodeId",access:"private",description:"<p>Returns a resource id for a DOM id</p>",parameters:[{name:"id",type:"String",description:"<p>An id of an event DOM node</p>"}],scope:"instance",returns:{type:"String",description:"<p>A resource record (internal) id</p>"}},{name:"getResourceRecordFromDomId",description:"<p>Returns a resource record for a DOM id</p>",parameters:[{name:"id",type:"String",description:"<p>An id of an event DOM node</p>"}],scope:"instance",returns:{type:"Scheduler.model.ResourceModel",description:"<p>A resource record</p>"}},{name:"resolveResourceRecord",description:"<p>Resolves the resource based on a dom element or event. In vertical mode, if resolving from an element higher up in\nthe hierarchy than event elements, then it is required to supply an coordinates since resources are virtual\ncolumns.</p>",parameters:[{name:"elementOrEvent",type:["HTMLElement","Event"],description:"<p>The HTML element or DOM event to resolve a resource from</p>"},{name:"xy",type:"Array.<Number>",description:"<p>X and Y coordinates, required in some cases in vertical mode, disregarded in horizontal</p>",optional:true}],scope:"instance",returns:{type:"Scheduler.model.ResourceModel",description:"<p>The resource corresponding to the element, or null if not found.</p>"}},{name:"resolveEventRecord",description:"<p>Returns the event record for a DOM element</p>",parameters:[{name:"element",type:"HTMLElement",description:"<p>The DOM node to lookup</p>"}],scope:"instance",returns:{type:"Scheduler.model.EventModel",description:"<p>The event record</p>"}},{name:"resolveAssignmentRecord",description:"<p>Returns an assignment record for a DOM element</p>",parameters:[{name:"element",type:"HTMLElement",description:"<p>The DOM node to lookup</p>"}],scope:"instance",returns:{type:"Scheduler.model.AssignmentModel",description:"<p>The assignment record</p>"}},{name:"getMilestoneLabelWidth",description:"<p>Determines width of a milestones label. How width is determined is decided by configuring Scheduler#milestoneLayoutMode.\nPlease note that currently text width is always determined using EventModel#name.</p>",parameters:[{name:"eventRecord",type:"Scheduler.model.EventModel"}],scope:"instance",returns:{type:"Number"}}]},{name:"module:Scheduler/view/mixin/SchedulerDomEvents",description:"<p>Mixin that handles dom events (click etc) for scheduler and rendered events.</p>",mixin:true,constructor:{name:"constructor"},filename:"SchedulerDomEvents.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/view/mixin",lineno:12,events:[{name:"scheduleMouseMove",description:"<p>Triggered when user moves mouse over an empty area in the schedule.</p>",parameters:[{name:"source",type:"Scheduler.view.TimelineBase",description:"<p>This TimelineBase</p>"},{name:"date",type:"Date",description:"<p>Date at mouse position</p>"},{name:"tickStartDate",type:"Date",description:"<p>The start date of the current time axis tick</p>"},{name:"tickEndDate",type:"Date",description:"<p>The end date of the current time axis tick</p>"},{name:"row",type:"Grid.row.Row",description:"<p>Clicked row (in horizontal mode only)</p>"},{name:"index",type:"Number",description:"<p>Index of clicked resource</p>"},{name:"resourceRecord",type:"Scheduler.model.ResourceModel",description:"<p>Resource record</p>"},{name:"event",type:"MouseEvent",description:"<p>Browser event</p>"}]},{name:"scheduleClick",description:"<p>Triggered when user clicks an empty area in the schedule.</p>",parameters:[{name:"source",type:"Scheduler.view.TimelineBase",description:"<p>This TimelineBase</p>"},{name:"date",type:"Date",description:"<p>Date at mouse position</p>"},{name:"tickStartDate",type:"Date",description:"<p>The start date of the current time axis tick</p>"},{name:"tickEndDate",type:"Date",description:"<p>The end date of the current time axis tick</p>"},{name:"row",type:"Grid.row.Row",description:"<p>Clicked row (in horizontal mode only)</p>"},{name:"index",type:"Number",description:"<p>Index of clicked resource</p>"},{name:"resourceRecord",type:"Scheduler.model.ResourceModel",description:"<p>Resource record</p>"},{name:"event",type:"MouseEvent",description:"<p>Browser event</p>"}]},{name:"scheduleDblClick",description:"<p>Triggered when user clicks an empty area in the schedule.</p>",parameters:[{name:"source",type:"Scheduler.view.TimelineBase",description:"<p>This TimelineBase</p>"},{name:"date",type:"Date",description:"<p>Date at mouse position</p>"},{name:"tickStartDate",type:"Date",description:"<p>The start date of the current time axis tick</p>"},{name:"tickEndDate",type:"Date",description:"<p>The end date of the current time axis tick</p>"},{name:"row",type:"Grid.row.Row",description:"<p>Double clicked row (in horizontal mode only)</p>"},{name:"index",type:"Number",description:"<p>Index of double clicked resource</p>"},{name:"resourceRecord",type:"Scheduler.model.ResourceModel",description:"<p>Resource record</p>"},{name:"event",type:"MouseEvent",description:"<p>Browser event</p>"}]},{name:"scheduleContextMenu",description:"<p>Triggered when user right clicks an empty area in the schedule.</p>",parameters:[{name:"source",type:"Scheduler.view.TimelineBase",description:"<p>This TimelineBase</p>"},{name:"date",type:"Date",description:"<p>Date at mouse position</p>"},{name:"tickStartDate",type:"Date",description:"<p>The start date of the current time axis tick</p>"},{name:"tickEndDate",type:"Date",description:"<p>The end date of the current time axis tick</p>"},{name:"row",type:"Grid.row.Row",description:"<p>Clicked row (in horizontal mode only)</p>"},{name:"index",type:"Number",description:"<p>Index of clicked resource</p>"},{name:"resourceRecord",type:"Scheduler.model.ResourceModel",description:"<p>Resource record</p>"},{name:"event",type:"MouseEvent",description:"<p>Browser event</p>"}]},{name:"eventMouseDown",description:"<p>Triggered for mouse down on an event.</p>",parameters:[{name:"source",type:"Scheduler.view.Scheduler",description:"<p>This Scheduler</p>"},{name:"eventRecord",type:"Scheduler.model.EventModel",description:"<p>Event record</p>"},{name:"event",type:"MouseEvent",description:"<p>Browser event</p>"}]},{name:"eventMouseUp",description:"<p>Triggered for mouse up on an event.</p>",parameters:[{name:"source",type:"Scheduler.view.Scheduler",description:"<p>This Scheduler</p>"},{name:"eventRecord",type:"Scheduler.model.EventModel",description:"<p>Event record</p>"},{name:"event",type:"MouseEvent",description:"<p>Browser event</p>"}]},{name:"eventClick",description:"<p>Triggered for click on an event.</p>",parameters:[{name:"source",type:"Scheduler.view.Scheduler",description:"<p>This Scheduler</p>"},{name:"eventRecord",type:"Scheduler.model.EventModel",description:"<p>Event record</p>"},{name:"event",type:"MouseEvent",description:"<p>Browser event</p>"}]},{name:"eventDblClick",description:"<p>Triggered for double click on an event.</p>",parameters:[{name:"source",type:"Scheduler.view.Scheduler",description:"<p>This Scheduler</p>"},{name:"eventRecord",type:"Scheduler.model.EventModel",description:"<p>Event record</p>"},{name:"event",type:"MouseEvent",description:"<p>Browser event</p>"}]},{name:"eventContextMenu",description:"<p>Triggered for right click on an event.</p>",parameters:[{name:"source",type:"Scheduler.view.Scheduler",description:"<p>This Scheduler</p>"},{name:"eventRecord",type:"Scheduler.model.EventModel",description:"<p>Event record</p>"},{name:"event",type:"MouseEvent",description:"<p>Browser event</p>"}]},{name:"eventMouseOver",description:"<p>Triggered for mouse over on an event.</p>",parameters:[{name:"source",type:"Scheduler.view.Scheduler",description:"<p>This Scheduler</p>"},{name:"eventRecord",type:"Scheduler.model.EventModel",description:"<p>Event record</p>"},{name:"event",type:"MouseEvent",description:"<p>Browser event</p>"}]},{name:"eventMouseOut",description:"<p>Triggered for mouse out from an event.</p>",parameters:[{name:"source",type:"Scheduler.view.Scheduler",description:"<p>This Scheduler</p>"},{name:"eventRecord",type:"Scheduler.model.EventModel",description:"<p>Event record</p>"},{name:"event",type:"MouseEvent",description:"<p>Browser event</p>"}]}],functions:[{name:"onElementKeyDown",access:"private",description:"<p>Relays keydown events as eventkeydown if we have a selected task.</p>",scope:"instance"},{name:"onElementKeyUp",access:"private",description:"<p>Relays keyup events as eventkeyup if we have a selected task.</p>",scope:"instance"}]},{name:"module:Scheduler/view/mixin/SchedulerDragResize",description:"<p>Mixin for triggering event editor on drag creation etc.</p>",mixin:true,access:"private",constructor:{name:"constructor"},filename:"SchedulerDragResize.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/view/mixin",lineno:12},{name:"module:Scheduler/view/mixin/SchedulerEventRendering",description:"<p>Functions to handle event rendering (EventModel -&gt; dom elements).</p>",mixin:true,constructor:{name:"constructor"},filename:"SchedulerEventRendering.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/view/mixin",lineno:22,configs:[{name:"eventRenderer",description:"<p>An empty function by default, but provided so that you can override it. This function is called each time\nan event is rendered into the schedule to render the contents of the event. It's called with the event,\nits resource and a tplData object which allows you to populate data placeholders inside the event\ntemplate. <strong>IMPORTANT</strong> You should never modify any data on the EventModel inside this method.\nBy default, the DOM markup of an event bar includes placeholders for 'cls' and 'style'. The cls property is a\n<a href=\"#Core/helper/util/DomClassList\">Core.helper.util.DomClassList</a> which will be added to the event element. The style property is an inline style declaration for\nthe event element.</p>\n<pre class=\"prettyprint source lang-javascript\"><code>eventRenderer({eventRecord, resourceRecord, tplData}) {\n  tplData.style = 'color:white';                 // You can use inline styles too.\n\n  // Property names with truthy values are added to the resulting elements CSS class.\n  tplData.cls.isImportant = this.isImportant(eventRecord);\n  tplData.cls.isModified = eventRecord.isModified;\n\n  // Remove a class name by setting the property to false\n  tplData.cls[scheduler.generatedIdCls] = false;\n\n  // Or, you can treat it as a string, but this is less efficient, especially\n  // if your renderer wants to *remove* classes that may be there.\n  tplData.cls += ' extra-class'\n\n  return DateHelper.format(eventRecord.startDate, 'YYYY-MM-DD') + ': ' + eventRecord.name;\n}\n</code></pre>",type:"function",scope:"inner",returns:[{type:{names:["String","Object"]},description:"<p>A simple string, or a custom object which will be applied to the {@link #config-eventBodyTemplate}, creating the actual HTML</p>"}],category:"Scheduled events",parameters:[{name:"detail",type:"Object",description:"<p>An object containing the information needed to render an Event.</p>"},{name:"detail.eventRecord",type:"Scheduler.model.EventModel",description:"<p>The event record.</p>",isSubParam:true},{name:"detail.resourceRecord",type:"Scheduler.model.ResourceModel",description:"<p>The resource record.</p>",isSubParam:true},{name:"detail.assignmentRecord",type:"Scheduler.model.AssignmentModel",description:"<p>The assignment record, if using an AssignmentStore.</p>",isSubParam:true},{name:"detail.tplData",type:"Object",description:"<p>An object containing details about the event rendering.</p>",isSubParam:true},{name:"detail.tplData.event",type:"Scheduler.model.EventModel",description:"<p>The event record.</p>",isSubParam:true},{name:"detail.tplData.cls",type:["Core.helper.util.DomClassList","String"],description:"<p>An object whose property names represent the CSS class names\nto be added to the event bar element. Set a property's value to truthy or falsy to add or remove the class\nname based on the property name. Using this technique, you do not have to know whether the class is already\nthere, or deal with concatenation.</p>",isSubParam:true},{name:"detail.tplData.wrapperCls",type:["Core.helper.util.DomClassList","String"],description:"<p>An object whose property names represent the CSS class names\nto be added to the event wrapper element. Set a property's value to truthy or falsy to add or remove the class\nname based on the property name. Using this technique, you do not have to know whether the class is already\nthere, or deal with concatenation.</p>",isSubParam:true},{name:"detail.tplData.iconCls",type:["Core.helper.util.DomClassList","String"],description:"<p>An object whose property names represent the CSS class\nnames to be added to an event icon element.</p>",isSubParam:true},{name:"detail.tplData.left",type:"Number",description:"<p>Vertical offset position (in pixels) on the time axis.</p>",isSubParam:true},{name:"detail.tplData.width",type:"Number",description:"<p>Width in pixels of the event element.</p>",isSubParam:true},{name:"detail.tplData.height",type:"Number",description:"<p>Height in pixels of the event element.</p>",isSubParam:true},{name:"detail.tplData.eventStyle",type:"String",description:"<p>The <code>eventStyle</code> of the event. Use this to apply custom styles to the event DOM element</p>",isSubParam:true},{name:"detail.tplData.eventColor",type:"String",description:"<p>The <code>eventColor</code> of the event. Use this to set a custom color for the rendererd event</p>",isSubParam:true}]},{name:"eventRendererThisObj",description:'<p><code>this</code> reference for the <a href="#Scheduler/view/mixin/SchedulerEventRendering#config-eventRenderer">eventRenderer</a> function</p>',type:"Object",scope:"inner",category:"Scheduled events"},{name:"eventLayout",description:"<p>How to handle overlapping events. Valid values are:</p>\n<ul>\n<li>stack, adjusts row height (only horizontal)</li>\n<li>pack, adjusts event height</li>\n<li>mixed, allows two events to overlap, more packs (only vertical)</li>\n<li>none, allows events to overlap</li>\n</ul>",type:"String",scope:"inner",defaultvalue:"stack",category:"Scheduled events"},{name:"horizontalLayoutPackClass",access:"private",description:"<p>The class responsible for the packing horizontal event layout process.\nOverride this to take control over the layout process.</p>",type:"Scheduler.eventlayout.HorizontalLayout",scope:"inner",category:"Misc"},{name:"horizontalLayoutStackClass",access:"private",description:"<p>The class name responsible for the stacking horizontal event layout process.\nOverride this to take control over the layout process.</p>",type:"Scheduler.eventlayout.HorizontalLayout",scope:"inner",category:"Misc"},{name:"horizontalEventSorterFn",description:'<p>Override this method to provide a custom sort function to sort any overlapping events. By default,\noverlapping events are laid out based on the start date. If the start date is equal, events with earlier\nend date go first.</p>\n<p>Here\'s a sample sort function, sorting on start- and end date. If this function returns -1, then event a\nis placed above event b.</p>\n<pre class="prettyprint source lang-javascript"><code>horizontalEventSorterFn(a, b) {\n\n  const startA = a.startDate, endA = a.endDate;\n  const startB = b.startDate, endB = b.endDate;\n\n  const sameStart = (startA - startB === 0);\n\n  if (sameStart) {\n    return endA > endB ? -1 : 1;\n  } else {\n    return (startA &lt; startB) ? -1 : 1;\n  }\n}\n</code></pre>',type:"function",scope:"inner",returns:[{type:{names:["Number"]},description:"<p>Return -1 to display a above b, 1 for b above a</p>"}],category:"Misc",parameters:[{name:"a",type:"Scheduler.model.EventModel",description:"<p>First event</p>"},{name:"b",type:"Scheduler.model.EventModel",description:"<p>Second event</p>"}]},{name:"eventBarTextField",description:"<p>Field from EventModel displayed as text in the bar when rendering</p>",type:"String",scope:"inner",defaultvalue:"name",category:"Scheduled events"},{name:"eventBodyTemplate",description:"<p>The template used to generate the markup of your events in the scheduler. To 'populate' the\neventBodyTemplate with data, use the <a href=\"#Scheduler/view/mixin/SchedulerEventRendering#config-eventRenderer\">eventRenderer</a> method</p>",type:"function",scope:"inner",category:"Scheduled events"},{name:"fillTicks",description:"<p>Specify <code>true</code> to force rendered events to fill entire ticks. This only affects rendering, events retain\ntheir set start and end dates on the data level. When enabling this config you should probably also\ndisable EventDrag and EventResize, otherwise their behaviour will not be what a user expects.</p>",type:"Boolean",scope:"inner",defaultvalue:false,category:"Scheduled events"},{name:"useInitialAnimation",description:"<p>By default scheduler fades events in on load. Specify <code>false</code> to prevent this animation or specify one\nof the available animation types to use it (<code>true</code> equals <code>'fade-in'</code>):</p>\n<ul>\n<li>fade-in (default)</li>\n<li>slide-from-left</li>\n<li>slide-from-top</li>\n</ul>\n<pre class=\"prettyprint source\"><code>// Slide events in from the left on load\nscheduler = new Scheduler({\n    useInitialAnimation : 'slide-from-left'\n});\n</code></pre>",type:["Boolean","String"],scope:"inner",defaultvalue:true,category:"Misc"},{name:"resourceColumns",description:'<p>A config object used to configure the resource columns in vertical mode.\nSee <a href="#Scheduler/view/ResourceHeader">Scheduler.view.ResourceHeader</a> for more details on available properties.</p>\n<pre class="prettyprint source"><code>new Scheduler({\n  resourceColumns : {\n    columnWidth    : 100,\n    headerRenderer : ({ resourceRecord }) => `${resourceRecord.id} - ${resourceRecord.name}`\n  }\n})\n</code></pre>',type:"Object",scope:"inner",category:"Resources"},{name:"resourceImagePath",description:'<p>Path to load resource images from. Used by the resource header in vertical mode and the\n<a href="#Scheduler/column/ResourceInfoColumn">Scheduler.column.ResourceInfoColumn</a> in horizontal mode. Set this to display miniature\nimages for each resource using their <code>image</code> or <code>imageUrl</code> fields.</p>\n<ul>\n<li><code>image</code> represents image name inside the specified <code>resourceImagePath</code>,</li>\n<li><code>imageUrl</code> represents fully qualified image URL.</li>\n</ul>\n<p>If set and a resource has no <code>imageUrl</code> or <code>image</code> specified it will try show miniature using\nthe resource\'s name with <a href="#Scheduler/view/mixin/SchedulerEventRendering#config-resourceImageExtension">resourceImageExtension</a> appended.</p>\n<p><strong>NOTE</strong>: The path should end with a <code>/</code>:</p>\n<pre class="prettyprint source"><code>new Scheduler({\n  resourceImagePath : \'images/resources/\'\n});\n</code></pre>',type:"String",scope:"inner",category:"Resources"},{name:"defaultResourceImageName",description:"<p>Generic resource image, used when provided <code>imageUrl</code> or <code>image</code> fields or path calculated from resource name are all invalid.</p>",type:"String",scope:"inner",defaultvalue:"none.png",category:"Resources"},{name:"resourceImageExtension",description:"<p>Resource image extension, used when creating image path from resource name.</p>",type:"String",scope:"inner",defaultvalue:".jpg",category:"Resources"},{name:"resourceMargin",description:'<p>Control how much space to leave between the first event/last event and the resources edge (top/bottom\nmargin within the resource row in horizontal mode, left/right margin within the resource column in\nvertical mode), in px. Defaults to the value of <a href="#Scheduler/view/mixin/TimelineEventRendering#config-barMargin">barMargin</a>.</p>',type:"Number",scope:"inner",category:"Scheduled events"}],properties:[{name:"useInitialAnimation",description:'<p>Property for <a href="#Scheduler/view/mixin/SchedulerEventRendering#config-useInitialAnimation">useInitialAnimation</a></p>',scope:"inner",properties:[{type:{names:["Boolean","String"]}}]},{name:"eventLayout",description:"<p>Get/set overlap mode. See config, valid values are stack (horizontal), pack, mixed (vertical) and none</p>",scope:"instance",category:"Scheduled events",properties:[{type:{names:["String"]}}]},{name:"fillTicks",description:"<p>Get/set fillTicks setting. If set to true it forces the rendered events to fill entire ticks.</p>",scope:"instance",category:"Scheduled events",properties:[{type:{names:["String"]}}]},{name:"resourceMargin",description:'<p>Control how much space to leave between the first event/last event and the resources edge (top/bottom margin within\nthe resource row in horizontal mode, left/right margin within the resource column in vertical mode),\nin px. Defaults to the value of <a href="#Scheduler/view/mixin/TimelineEventRendering#config-barMargin">barMargin</a>.</p>',type:{names:["Number"]},scope:"inner",category:"Scheduled events"},{name:"currentEventLayout",access:"internal",description:"<p>Gets currently used event layout class. The event layout class decides the vertical placement of the events\nwithin a resource. Returns null if no eventLayout is used (if Scheduler#eventLayout is set to &quot;none&quot;)</p>",scope:"instance",returns:[{type:{names:["*"]}}],readonly:true,category:"Scheduled events"},{name:"resourceColumns",description:"<p>Use it to manipulate resource column properties at runtime.</p>",scope:"instance",readonly:true,properties:[{type:{names:["Scheduler.view.ResourceHeader"]}}]},{name:"resourceColumnWidth",description:"<p>Get resource column width. Only applies to vertical mode. To set it, assign to\n<code>scheduler.resourceColumns.columnWidth</code>.</p>",scope:"instance",readonly:true,properties:[{type:{names:["Number"]}}]}],functions:[{name:"repaintEventsForResource",description:"<p>Rerenders events for specified resource (by rerendering the entire row).</p>",parameters:[{name:"resourceRecord",type:"Scheduler.model.ResourceModel"}],scope:"instance"},{name:"repaintEvent",access:"private",description:"<p>Rerenders the events for all resources connected to the specified event</p>",parameters:[{name:"eventRecord",type:"Scheduler.model.EventModel"}],scope:"instance"},{name:"generateTplData",access:"private",description:'<p>Generates data used in the template when rendering an event. For example which css classes to use. Also applies\n#eventBodyTemplate and calls the <a href="#Scheduler/view/mixin/SchedulerEventRendering#config-eventRenderer">eventRenderer</a>.</p>',parameters:[{name:"eventRecord",type:"Scheduler.model.EventModel",description:"<p>Event to generate data for</p>"},{name:"resourceRecord",type:"Scheduler.model.ResourceModel",description:"<p>Events resource</p>"},{name:"includeOutside",type:["Boolean","Object"],description:"<p>Specify true to get boxes for timespans outside of the rendered zone in both\ndimensions. This option is used when calculating dependency lines, and we need to include routes from timespans\nwhich may be outside the rendered zone.</p>"},{name:"includeOutside.timeAxis",type:"Boolean",description:"<p>Pass as <code>true</code> to include timespans outside of the TimeAxis's bounds</p>",isSubParam:true},{name:"includeOutside.viewport",type:"Boolean",description:"<p>Pass as <code>true</code> to include timespans outside of the vertical timespan viewport's bounds.</p>",isSubParam:true}],scope:"instance",returns:{type:"Object",description:"<p>Data to use in event template, or <code>undefined</code> if the event is outside of the rendered zone.</p>"}},{name:"onEventDataGenerated",description:"<p>A method which may be chained by features. It is called when an event's render\ndata is calculated so that features may update the style, class list or body.</p>",parameters:[{name:"eventData",type:"Object"}],scope:"instance"},{name:"getEventRenderId",access:"private",description:"<p>Generates the element <code>id</code> for an event element. This is used when\nrecycling an event div which has been moved from one resource to\nanother. The event is assigned its new render id <em>before</em> being\nreturned to the free pool, so that when the render engine requests\na div from the free pool, the same div will be returned.</p>",parameters:[{name:"eventRecord",type:["Scheduler.model.EventModel","String","Number"],description:"<p>Event record or id</p>"},{name:"resourceRecord",type:["Scheduler.model.ResourceModel","String","Number"],description:"<p>Resource record or id</p>"}],scope:"instance"},{name:"restartInitialAnimation",description:'<p>Restarts initial events animation with new value <a href="#Scheduler/view/mixin/SchedulerEventRendering#config-useInitialAnimation">useInitialAnimation</a>.</p>',parameters:[{name:"initialAnimation",type:["Boolean","String"],description:"<p>new initial animation value</p>"}],scope:"instance"}]},{name:"module:Scheduler/view/mixin/SchedulerRegions",description:"<p>Functions to get regions (bounding boxes) for scheduler, events etc.</p>",mixin:true,constructor:{name:"constructor"},filename:"SchedulerRegions.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/view/mixin",lineno:14,functions:[{name:"getScheduleRegion",description:"<p>Gets the region represented by the schedule and optionally only for a single resource. The view will ask the scheduler for\nthe resource availability by calling getResourceAvailability. By overriding that method you can constrain events differently for\ndifferent resources.</p>",parameters:[{name:"resourceRecord",type:"Scheduler.model.ResourceModel",description:"<p>(optional) The resource record</p>"},{name:"eventRecord",type:"Scheduler.model.EventModel",description:"<p>(optional) The event record</p>"}],scope:"instance",returns:{type:"Object",description:"<p>The region of the schedule</p>"}},{name:"getResourceRegion",description:"<p>Gets the region representing the passed resource and optionally just for a certain date interval.</p>",parameters:[{name:"resourceRecord",type:"Scheduler.model.ResourceModel",description:"<p>The resource record</p>"},{name:"startDate",type:"Date",description:"<p>A start date constraining the region</p>"},{name:"endDate",type:"Date",description:"<p>An end date constraining the region</p>"}],scope:"instance",returns:{type:"Core.helper.util.Rectangle",description:"<p>A Rectangle which encapsulates the resource time span</p>"}},{name:"getResourceEventBox",description:"<p>Get the region for a specified resources specified event.</p>",parameters:[{name:"eventRecord",type:"Scheduler.model.EventModel"},{name:"resourceRecord",type:"Scheduler.model.ResourceModel"},{name:"includeOutside",type:"Boolean",description:"<p>Specify true to get boxes for events outside of the rendered zone in both dimensions. This option is used when calculating\ndependency lines, and we need to include routes from events which may be outside the rendered zone.</p>",default:false}],scope:"instance",returns:{type:"*"}},{name:"getItemBox",access:"internal",description:"<p>Gets box for displayed item designated by the record. If several boxes are displayed for the given item\nthen the method returns all of them. Box coordinates are in view coordinate system.</p>\n<p>Boxes outside scheduling view timeaxis timespan and inside collapsed rows (if row defining store is a tree store)\nwill not be returned. Boxes outside scheduling view vertical visible area (i.e. boxes above currently visible\ntop row or below currently visible bottom row) will be calculated approximately.</p>",parameters:[{name:"event",type:"Scheduler.model.EventModel"}],scope:"instance",returns:{type:["Object","Array.<Object>"]}},{name:"adjustItemBox",access:"internal",description:"<p>Adjusts event record box if needed</p>",parameters:[{name:"eventRecord",type:"Scheduler.model.EventModel"},{name:"eventRecordBox",type:"Object"}],scope:"instance",returns:{type:"Number",description:"<p>eventRecordBox.top</p>"}}]},{name:"module:Scheduler/view/mixin/SchedulerScroll",description:"<p>Functions for scrolling to events, dates etc.</p>",mixin:true,constructor:{name:"constructor"},filename:"SchedulerScroll.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/view/mixin",lineno:25,functions:[{name:"scrollEventIntoView",description:"<p>Scrolls an event record into the viewport.\nIf the resource store is a tree store, this method will also expand all relevant parent nodes to locate the event.</p>",parameters:[{name:"eventRec",type:"Scheduler.model.EventModel",description:"<p>the event record to scroll into view</p>"},{name:"options",type:"Object",description:"<p>How to scroll.</p>",optional:true},{name:"options.block",type:"String",description:"<p>How far to scroll the event: <code>start/end/center/nearest</code>.</p>",default:"nearest",optional:true,isSubParam:true},{name:"options.edgeOffset",type:"Number",description:"<p>edgeOffset A margin <em>in pixels</em> around the event to bring into view.</p>",default:20,optional:true,isSubParam:true},{name:"options.animate",type:["Boolean","Number"],description:"<p>Set to <code>true</code> to animate the scroll, or the number of milliseconds to animate over.</p>",optional:true,isSubParam:true},{name:"options.highlight",type:"Boolean",description:"<p>Set to <code>true</code> to highlight the event element when it is in view.</p>",optional:true,isSubParam:true},{name:"options.focus",type:"Boolean",description:"<p>Set to <code>true</code> to focus the event element when it is in view.</p>",optional:true,isSubParam:true}],scope:"instance",returns:{type:"Promise",description:"<p>A Promise which resolves when the scrolling is complete.</p>\n<p>This function is not applicable for events with multiple assignments, please use #scrollResourceEventIntoView instead.</p>"},async:true},{name:"scrollResourceEventIntoView",description:"<p>Scrolls a resource event record into the viewport.</p>\n<p>If the resource store is a tree store, this method will also expand all relevant parent nodes\nto locate the event.</p>",parameters:[{name:"resourceRec",type:"Scheduler.model.ResourceModel",description:"<p>A resource record an event record is assigned to</p>"},{name:"eventRec",type:"Scheduler.model.EventModel",description:"<p>An event record to scroll into view</p>"},{name:"index",type:"Number",description:"<p>DOM node index, applicable only for weekview</p>"},{name:"options",type:"Object",description:"<p>How to scroll.</p>",optional:true},{name:"options.block",type:"String",description:"<p>How far to scroll the event: <code>start/end/center/nearest</code>.</p>",default:"nearest",optional:true,isSubParam:true},{name:"options.edgeOffset",type:"Number",description:"<p>edgeOffset A margin <em>in pixels</em> around the event to bring into view.</p>",default:20,optional:true,isSubParam:true},{name:"options.animate",type:["Boolean","Number"],description:"<p>Set to <code>true</code> to animate the scroll, or the number of milliseconds to animate over.</p>",optional:true,isSubParam:true},{name:"options.extendTimeAxis",type:"Boolean",description:"<p>By default, if the requested event is outside the time axis, the time axis is extended.</p>",default:true,optional:true,isSubParam:true},{name:"options.highlight",type:"Boolean",description:"<p>Set to <code>true</code> to highlight the event element when it is in view.</p>",optional:true,isSubParam:true},{name:"options.focus",type:"Boolean",description:"<p>Set to <code>true</code> to focus the event element when it is in view.</p>",optional:true,isSubParam:true}],scope:"instance",returns:{type:"Promise",description:"<p>A Promise which resolves when the scrolling is complete.</p>"},async:true},{name:"scrollUnrenderedEventIntoView",access:"private",description:"<p>Scrolls an unrendered event into view. Internal function used from #scrollResourceEventIntoView.</p>",scope:"instance"},{name:"scrollResourceIntoView",description:"<p>Scrolls the specified resource into view, works for both horizontal and vertical modes.</p>",parameters:[{name:"resourceRecord",type:"Scheduler.model.ResourceModel",description:"<p>A resource record an event record is assigned to</p>"},{name:"options",type:"Object",description:"<p>How to scroll.</p>",optional:true},{name:"options.column",type:"String",description:"<p>Field name or ID of the column, or the Column instance to scroll to (in horizontal mode).</p>",optional:true,isSubParam:true},{name:"options.block",type:"String",description:"<p>How far to scroll the element: <code>start/end/center/nearest</code>.</p>",optional:true,isSubParam:true},{name:"options.edgeOffset",type:"Number",description:"<p>edgeOffset A margin around the element or rectangle to bring into view.</p>",optional:true,isSubParam:true},{name:"options.animate",type:["Boolean","Number"],description:"<p>Set to <code>true</code> to animate the scroll, or the number of milliseconds to animate over.</p>",optional:true,isSubParam:true},{name:"options.highlight",type:"Boolean",description:"<p>Set to <code>true</code> to highlight the element when it is in view.</p>",optional:true,isSubParam:true}],scope:"instance",returns:{type:"Promise",description:"<p>A promise which is resolved when the scrolling has finished.</p>"},async:true}]},{name:"module:Scheduler/view/mixin/SchedulerState",description:'<p>Mixin for Scheduler that handles state. It serializes the following scheduler properties:</p>\n<ul>\n<li>eventLayout</li>\n<li>barMargin</li>\n<li>mode</li>\n<li>tickSize</li>\n<li>zoomLevel</li>\n<li>eventColor</li>\n<li>eventStyle</li>\n</ul>\n<p>See <a href="#Grid/view/mixin/GridState">Grid.view.mixin.GridState</a> and <a href="#Core/mixin/State">Core.mixin.State</a> for more information on state.</p>',mixin:true,constructor:{name:"constructor"},filename:"SchedulerState.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/view/mixin",lineno:32,functions:[{name:"getState",access:"private",description:"<p>Get schedulers current state for serialization. State includes rowHeight, headerHeight, readOnly, selectedCell,\nselectedRecordId, column states and store state.</p>",scope:"instance",returns:{type:"Object",description:"<p>State object to be serialized</p>"}},{name:"applyState",access:"private",description:"<p>Apply previously stored state.</p>",parameters:[{name:"state",type:"Object"}],scope:"instance"}]},{name:"module:Scheduler/view/mixin/SchedulerStores",description:"<p>Functions for store assignment and store event listeners.</p>",mixin:true,constructor:{name:"constructor"},filename:"SchedulerStores.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/view/mixin",lineno:29,configs:[{name:"events",description:"<p>Inline events, will be loaded into an internally created EventStore.</p>",type:["Array.<Scheduler.model.EventModel>","Array.<Object>"],scope:"inner",category:"Data"},{name:"eventStore",description:'<p>The <a href="#Scheduler/data/EventStore">Scheduler.data.EventStore</a> holding the events to be rendered into the scheduler (required).</p>',type:"Scheduler.data.EventStore",scope:"inner",category:"Data"},{name:"resources",description:"<p>Inline resources, will be loaded into an internally created ResourceStore.</p>",type:["Array.<Scheduler.model.ResourceModel>","Array.<Object>"],scope:"inner",category:"Data"},{name:"resourceStore",description:'<p>The <a href="#Scheduler/data/ResourceStore">Scheduler.data.ResourceStore</a> holding the resources to be rendered into the scheduler (required).</p>',type:"Scheduler.data.ResourceStore",scope:"inner",category:"Data"},{name:"assignments",description:"<p>Inline assignments, will be loaded into an internally created AssignmentStore.</p>",type:["Array.<Scheduler.model.AssignmentModel>","Array.<Object>"],scope:"inner",category:"Data"},{name:"assignmentStore",description:'<p>The optional <a href="#Scheduler/data/AssignmentStore">Scheduler.data.AssignmentStore</a>, holding assignments between resources and events.\nRequired for multi assignments.</p>',type:"Scheduler.data.AssignmentStore",scope:"inner",category:"Data"},{name:"dependencies",description:"<p>Inline dependencies, will be loaded into an internally created DependencyStore.</p>",type:["Array.<Scheduler.model.DependencyModel>","Array.<Object>"],scope:"inner",category:"Data"},{name:"dependencyStore",description:'<p>The optional <a href="#Scheduler/data/DependencyStore">Scheduler.data.DependencyStore</a>.</p>',type:"Scheduler.data.DependencyStore",scope:"inner",category:"Data"},{name:"timeRanges",description:'<p>Inline time ranges, will be loaded into an internally created store if <a href="#Scheduler/feature/TimeRanges">Scheduler.feature.TimeRanges</a> is enabled.</p>',type:["Array.<Scheduler.model.TimeSpan>","Array.<Object>"],scope:"inner",category:"Data"},{name:"resourceTimeRanges",description:'<p>Inline resource time ranges, will be loaded into an internally created store if <a href="#Scheduler/feature/ResourceTimeRanges">Scheduler.feature.ResourceTimeRanges</a> is enabled.</p>',type:["Array.<Scheduler.model.ResourceTimeRangeModel>","Array.<Object>"],scope:"inner",category:"Data"},{name:"store",access:"private",description:'<p>Overridden to <em>not</em> auto create a store at the Scheduler level.\nThe store is the <a href="#Scheduler/view/mixin/SchedulerStores#config-resourceStore">resourceStore</a> which is either configured in\nor acquired from the <a href="#Scheduler/crud/mixin/CrudManagerView#config-crudManager">crudManager</a>.</p>',type:"Core.data.Store",scope:"inner"},{name:"startParamName",description:"<p>The name of the start date parameter that will be passed to in every <code>eventStore</code> load request.</p>",type:"String",scope:"inner",category:"Data"},{name:"endParamName",description:"<p>The name of the end date parameter that will be passed to in every <code>eventStore</code> load request.</p>",type:"String",scope:"inner",category:"Data"},{name:"passStartEndParameters",description:"<p>true to apply start and end dates of the current view to any <code>eventStore</code> load requests.</p>",type:"Boolean",scope:"inner",category:"Data"},{name:"removeUnassignedEvent",description:"<p>Configure with <code>true</code> to also remove the event when removing the last assignment.</p>",type:"Boolean",scope:"inner",defaultvalue:true,category:"Misc"}],functions:[{name:"onStoreUpdateRecord",access:"private",description:"<p>Overrides event handler in Grid, to pass on to current orientation class.</p>",scope:"instance"},{name:"onInternalEventStoreChange",access:"private",description:"<p>Calls appropriate functions for current event layout when the event store is modified.</p>",scope:"instance"},{name:"onEventStoreRefresh",access:"private",description:"<p>If events are changed in batch, endBatch fires refresh, so we must refresh the view.</p>",scope:"instance"},{name:"onEventStoreBeforeRemove",access:"private",description:"<p>Moves focus before the currently active event is removed.</p>",scope:"instance"},{name:"onEventCommit",access:"private",description:"<p>Refreshes committed events, to remove dirty/committing flag.\nCSS is added</p>",scope:"instance"},{name:"onEventBeforeCommit",access:"private",description:"<p>Adds the committing flag to changed events before commit.</p>",scope:"instance"},{name:"onEventClearChanges",access:"private",description:"<p>Refreshes scheduler when event changes are cleared.</p>",scope:"instance"},{name:"onAssignmentRefresh",access:"private",description:"<p>Refreshes scheduler when data is assigned to the assigment store.</p>",scope:"instance"},{name:"onAssignmentAdd",access:"private",description:"<p>Repaints affected resources when assignments are added.</p>",scope:"instance"},{name:"onAssignmentUpdate",access:"private",description:"<p>Repaints affected resources when assignments are updated.</p>",scope:"instance"},{name:"onAssignmentRemove",access:"private",description:"<p>Repaints affected resources when assignments are removed.</p>",scope:"instance"},{name:"onAssignmentRemoveAll",access:"private",description:"<p>Repaints resources when all assignments are removed.</p>",scope:"instance"},{name:"onAssignmentFilter",description:"<p>Refreshes scheduler when assignment store is filtered.</p>",scope:"instance"},{name:"applyStartEndParameters",description:"<p>Applies the start and end date to each event store request (formatted in the same way as the start date, defined in the EventStore Model class).</p>",scope:"instance",category:"Data"}],properties:[{name:"resources",description:"<p>Get/set resources, applies to the assigned ResourceStore.</p>",scope:"instance",category:"Data",properties:[{type:{names:["Array.<Scheduler.model.ResourceModel>","Array.<Object>"]}}]},{name:"resourceStore",description:"<p>Get/set the resource store instance.</p>",scope:"instance",category:"Data",properties:[{type:{names:["Scheduler.data.ResourceStore"]}}]},{name:"events",description:"<p>Get/set events, applies to the assigned EventStore.</p>",scope:"instance",category:"Data",properties:[{type:{names:["Array.<Scheduler.model.EventModel>","Array.<Object>"]}}]},{name:"eventStore",description:"<p>Get/set the event store instance.</p>",scope:"instance",category:"Data",properties:[{type:{names:["Scheduler.data.EventStore"]}}]},{name:"assignments",description:"<p>Get/set assignments, applies to the assigned AssignmentStore.</p>",scope:"instance",category:"Data",properties:[{type:{names:["Array.<Scheduler.model.AssignmentModel>","Array.<Object>"]}}]},{name:"assignmentStore",description:"<p>Get/set the assignment store instance.</p>",scope:"instance",category:"Data",properties:[{type:{names:["Scheduler.data.AssignmentStore"]}}]},{name:"dependencyStore",description:"<p>Get/set the dependency store instance.</p>",scope:"instance",category:"Data",properties:[{type:{names:["Scheduler.data.DependencyStore"]}}]},{name:"timeRangeStore",description:'<p>Get/set the time ranges store instance for <a href="#Scheduler/feature/TimeRanges">Scheduler.feature.TimeRanges</a> feature.</p>',scope:"inner",category:"Data",properties:[{type:{names:["Core.data.Store"]}}]},{name:"resourceTimeRangeStore",description:'<p>Get/set the resource time ranges store instance for <a href="#Scheduler/feature/ResourceTimeRanges">Scheduler.feature.ResourceTimeRanges</a> feature.</p>',scope:"inner",category:"Data",properties:[{type:{names:["Scheduler.data.ResourceTimeRangeStore"]}}]}]},{name:"module:Scheduler/view/mixin/TimelineDateMapper",description:"<p>Mixin that contains functionality to convert between coordinates and dates etc.</p>",mixin:true,constructor:{name:"constructor"},filename:"TimelineDateMapper.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/view/mixin",lineno:16,functions:[{name:"getDateFromCoordinate",description:"<p>Gets the date for an X or Y coordinate, either local to the view element or the page based on the 3rd argument.\nIf the coordinate is not in the currently rendered view, null will be returned unless the <code>allowOutOfRange</code>\nparameter is passed a <code>true</code>.</p>",parameters:[{name:"coordinate",type:"Number",description:"<p>The X or Y coordinate</p>"},{name:"roundingMethod",type:"String",description:"<p>The rounding method to use</p>",optional:true},{name:"local",type:"Boolean",description:"<p>true if the coordinate is local to the scheduler view element</p>",default:true,optional:true},{name:"allowOutOfRange",type:"Boolean",description:"<p>By default, this returns <code>null</code> if the position is outside\nof the time axis. Pass <code>true</code> to attempt to calculate a date outside of the time axis.</p>",default:false,optional:true}],scope:"instance",category:"Dates",returns:{type:"Date",description:"<p>The Date corresponding to the X or Y coordinate</p>"}},{name:"getDateFromX",description:"<p>Gets the date for the passed X coordinate.\nIf the coordinate is not in the currently rendered view, null will be returned.</p>",parameters:[{name:"x",type:"Number",description:"<p>The X coordinate</p>"},{name:"roundingMethod",type:"String",description:"<p>The rounding method to use</p>"},{name:"local",type:"Boolean",description:"<p>true if the coordinate is local to the scheduler element</p>",default:true,optional:true}],scope:"instance",category:"Dates",deprecated:true,returns:{type:"Date",description:"<p>the Date corresponding to the x coordinate</p>"}},{name:"getDateFromXY",description:"<p>Gets the date for an XY coordinate regardless of the orientation of the time axis.</p>",parameters:[{name:"xy",type:"Array",description:"<p>The page X and Y coordinates</p>"},{name:"roundingMethod",type:"String",description:"<p>Optional, 'floor' to floor the value or 'round' to round the value to nearest increment</p>",optional:true},{name:"local",type:"Boolean",description:"<p>true if the coordinate is local to the scheduler element</p>",default:true,optional:true},{name:"allowOutOfRange",type:"Boolean",description:"<p>By default, this returns <code>null</code> if the position is outside\nof the time axis. Pass <code>true</code> to attempt to calculate a date outside of the time axis.</p>",default:false,optional:true}],scope:"instance",category:"Dates",returns:{type:"Date",description:"<p>the Date corresponding to the xy coordinate</p>"}},{name:"getDateFromDomEvent",description:"<p>Gets the time for a DOM event such as 'mousemove' or 'click' regardless of the orientation of the time axis.</p>",parameters:[{name:"e",type:"Event",description:"<p>the Event instance</p>"},{name:"roundingMethod",type:"String",description:"<p>Optional, 'floor' to floor the value or 'round' to round the value to nearest increment</p>",optional:true},{name:"allowOutOfRange",type:"Boolean",description:"<p>By default, this returns <code>null</code> if the position is outside\nof the time axis. Pass <code>true</code> to attempt to calculate a date outside of the time axis.</p>",default:false,optional:true}],scope:"instance",category:"Dates",returns:{type:"Date",description:"<p>The date corresponding to the EventObject's position along the orientation of the time axis.</p>"}},{name:"getStartEndDatesFromRectangle",description:"<p>Gets the start and end dates for an element Region</p>",parameters:[{name:"rect",type:"Core.helper.util.Rectangle",description:"<p>The rectangle to map to start and end dates</p>"},{name:"roundingMethod",type:"String",description:"<p>The rounding method to use</p>"},{name:"duration",type:"Number",description:"<p>The duration in MS of the underlying event</p>"}],scope:"instance",returns:{type:"Object",description:"<p>an object containing start/end properties</p>"}},{name:"getFormattedDate",access:"private",description:"<p>Method to get a formatted display date</p>",parameters:[{name:"date",type:"Date",description:"<p>The date</p>"}],scope:"instance",returns:{type:"String",description:"<p>The formatted date</p>"}},{name:"getDisplayEndDate",access:"private",description:'<p>Method to get a displayed end date value, see <a href="#Scheduler/view/mixin/TimelineDateMapper#function-getFormattedEndDate">getFormattedEndDate</a> for more info.</p>',parameters:[{name:"endDate",type:"Date",description:"<p>The date to format</p>"},{name:"startDate",type:"Date",description:"<p>The start date</p>"}],scope:"instance",returns:{type:"Date",description:"<p>The date value to display</p>"}},{name:"getFormattedEndDate",access:"private",description:"<p>Method to get a formatted end date for a scheduled event, the grid uses the &quot;displayDateFormat&quot; property defined in the current view preset.\nEnd dates are formatted as 'inclusive', meaning when an end date falls on midnight and the date format doesn't involve any hour/minute information,\n1ms will be subtracted (e.g. 2010-01-08T00:00:00 will first be modified to 2010-01-07 before being formatted).</p>",parameters:[{name:"endDate",type:"Date",description:"<p>The date to format</p>"},{name:"startDate",type:"Date",description:"<p>The start date</p>"}],scope:"instance",returns:{type:"String",description:"<p>The formatted date</p>"}},{name:"getCoordinateFromDate",description:"<p>Gets the x or y coordinate relative to the scheduler element, or page coordinate (based on the 'local' flag)\nIf the coordinate is not in the currently rendered view, -1 will be returned.</p>",parameters:[{name:"date",type:["Date","Number"],description:"<p>the date to query for (or a date as ms)</p>"},{name:"options",type:["Boolean","Object"],description:"<p>true to return a coordinate local to the scheduler view element (defaults to true),\nalso accepts a config object like { local : true }.</p>",default:true}],scope:"instance",category:"Dates",returns:{type:"Number",description:"<p>the x or y position representing the date on the time axis</p>"}},{name:"getTimeSpanDistance",description:"<p>Returns the distance in pixels for the time span in the view.</p>",parameters:[{name:"startDate",type:"Date",description:"<p>The start date of the span</p>"},{name:"endDate",type:"Date",description:"<p>The end date of the span</p>"}],scope:"instance",category:"Dates",returns:{type:"Number",description:"<p>The distance in pixels</p>"}}],properties:[{name:"displayDateFormat",description:"<p>Get/set format to use when displaying dates. Usually set by specifying a view preset</p>",scope:"instance",category:"Dates",properties:[{type:{names:["String"]}}]},{name:"viewportCenterDate",description:"<p>Returns the center date of the currently visible timespan of scheduler.</p>",scope:"instance",returns:[{type:{names:["Date"]},description:"<p>date Center date for the viewport.</p>"}],readonly:true,category:"Dates"},{name:"timeResolution",description:"<p>Gets/sets the current time resolution object, which contains a unit identifier and an increment count { unit, increment }.\nThis value means minimal task duration you can create using UI.\nFor example when you drag create a task or drag &amp; drop a task, if increment is 5 and unit is 'minute'\nthat means that you can create a 5 min long task, or move it 5 min forward/backward.\nThis value is taken from viewPreset <a href=\"#Scheduler/preset/ViewPreset#field-timeResolution\">timeResolution</a> config by default.\nWhen supplying a <code>Number</code> to the setter only the <code>increment</code> is changed and the <code>unit</code> value remains untouched.</p>\n<pre class=\"prettyprint source lang-javascript\"><code>timeResolution : {\n  unit      : 'minute',  //Valid values are &quot;millisecond&quot;, &quot;second&quot;, &quot;minute&quot;, &quot;hour&quot;, &quot;day&quot;, &quot;week&quot;, &quot;month&quot;, &quot;quarter&quot;, &quot;year&quot;.\n  increment : 5\n}\n</code></pre>",scope:"instance",category:"Dates",properties:[{type:{names:["Object","Number"]}}]},{name:"snap",description:"<p>Controls whether the scheduler should snap to the resolution when interacting with it</p>",scope:"instance",category:"Dates",properties:[{type:{names:["Boolean"]}}]}]},{name:"module:Scheduler/view/mixin/TimelineDomEvents",description:"<p>Mixin that handles dom events (click etc) for scheduler and rendered events.</p>",mixin:true,constructor:{name:"constructor"},filename:"TimelineDomEvents.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/view/mixin",lineno:26,functions:[{name:"initDomEvents",access:"private",description:"<p>Adds listeners for DOM events for the scheduler and its events.\nWhich events is specified in Scheduler#scheduledBarEvents and Scheduler#schedulerEvents.</p>",scope:"instance"},{name:"handleScheduledBarEvent",access:"private",description:"<p>Wraps dom Events for rendered scheduler EventModels and fires prefixed as our events.\nFor example click -&gt; eventclick</p>",parameters:[{name:"event"}],scope:"instance"},{name:"handleScheduleEvent",access:"private",description:"<p>Wraps dom Events for the scheduler and fires as our events.\nFor example click -&gt; scheduleClick</p>",parameters:[{name:"event"}],scope:"instance"},{name:"onElementMouseOver",access:"private",description:"<p>Relays mouseover events as eventmouseenter if over rendered event.\nAlso adds Scheduler#overScheduledEventClass to the hovered element.</p>",scope:"instance"},{name:"onElementMouseOut",access:"private",description:"<p>Relays mouseout events as eventmouseleave if out from rendered event.\nAlso removes Scheduler#overScheduledEventClass from the hovered element.</p>",scope:"instance"}]},{name:"module:Scheduler/view/mixin/TimelineEventRendering",description:"<p>Functions to handle event rendering (EventModel -&gt; dom elements).</p>",mixin:true,constructor:{name:"constructor"},filename:"TimelineEventRendering.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/view/mixin",lineno:13,configs:[{name:"barMargin",description:"<p>Controls how much space to leave between stacked event bars in px</p>",type:"Number",scope:"inner",defaultvalue:10,category:"Scheduled events"},{name:"managedEventSizing",description:"<p>True to size events based on the rowHeight and barMargin settings. Set this to false if you want to\ncontrol height and top properties via CSS instead.</p>",type:"Boolean",scope:"inner",defaultvalue:true,category:"Scheduled events"},{name:"generatedIdCls",access:"private",description:"<p>The CSS class added to an event/assignment when it is newly created\nin the UI and unsynced with the server.</p>",type:"String",scope:"inner",defaultvalue:"b-sch-dirty-new",category:"CSS"},{name:"dirtyCls",access:"private",description:"<p>The CSS class added to an event when it has unsaved modifications</p>",type:"String",scope:"inner",defaultvalue:"b-sch-dirty",category:"CSS"},{name:"committingCls",access:"private",description:"<p>The CSS class added to an event when it is currently committing changes</p>",type:"String",scope:"inner",defaultvalue:"b-sch-committing",category:"CSS"},{name:"endsOutsideViewCls",access:"private",description:"<p>The CSS class added to an event/assignment when it ends outside of the visible time range.</p>",type:"String",scope:"inner",defaultvalue:"b-sch-event-endsoutside",category:"CSS"},{name:"startsOutsideViewCls",access:"private",description:"<p>The CSS class added to an event/assignment when it starts outside of the visible time range.</p>",type:"String",scope:"inner",defaultvalue:"b-sch-event-startsoutside",category:"CSS"},{name:"fixedEventCls",access:"private",description:"<p>The CSS class added to an event/assignment when it is not draggable.</p>",type:"String",scope:"inner",defaultvalue:"b-sch-event-fixed",category:"CSS"},{name:"eventStyle",description:"<p>Event style used by default. Events and resources can specify their own style, with priority order being:\nEvent -&gt; Resource -&gt; Scheduler default. Determines the appearance of the event by assigning a CSS class\nto it. Available styles are:</p>\n<ul>\n<li>plain (default), flat look</li>\n<li>border, has border in darker shade of events color</li>\n<li>colored, has colored text and wide left border in same color</li>\n<li>hollow, only border + text until hovered</li>\n<li>line, as a line with the text below it</li>\n<li>dashed, as a dashed line with the text below it</li>\n<li>minimal, as a thin line with small text above it</li>\n</ul>\n<p>Specify <code>null</code> to not apply a default style and take control using custom CSS (easily overridden basic\nstyling will be used).</p>",type:"String",scope:"inner",defaultvalue:"plain",category:"Scheduled events"},{name:"eventColor",description:"<p>Event color used by default. Events and resources can specify their own color, with priority order being:\nEvent -&gt; Resource -&gt; Scheduler default. Available colors are:</p>\n<ul>\n<li>red</li>\n<li>pink</li>\n<li>purple</li>\n<li>violet</li>\n<li>indigo</li>\n<li>blue</li>\n<li>cyan</li>\n<li>teal</li>\n<li>green</li>\n<li>lime</li>\n<li>yellow</li>\n<li>orange</li>\n<li>gray</li>\n</ul>\n<p>Specify <code>null</code> to not apply a default color and take control using custom CSS (an easily overridden color\nwill be used to make sure events are still visible).</p>",type:"String",scope:"inner",defaultvalue:"green",category:"Scheduled events"}],properties:[{name:"barMargin",description:"<p>Control how much space to leave between stacked event bars in px. Value will be constrained by half the row height.</p>",scope:"instance",category:"Scheduled events",properties:[{type:{names:["Number"]}}]},{name:"tickWidth",description:'<p>Get/set the widths of all the time columns to the supplied value. Only applicable when <a href="#Scheduler/view/TimelineBase#config-forceFit">forceFit</a> is set to false.\nDeprecated in favor of <a href="#Scheduler/view/mixin/TimelineEventRendering#property-tickSize">tickSize</a></p>',scope:"instance",category:"Scheduled events",deprecated:true,properties:[{type:{names:["Number"]}}]},{name:"tickSize",description:'<p>Get/set the width/height (depending on mode) of all the time columns to the supplied value.\nThere is a limit for the tick size value. Its minimal allowed value is calculated so ticks would fit the available space.\nOnly applicable when <a href="#Scheduler/view/TimelineBase#config-forceFit">forceFit</a> is set to <code>false</code>.\nTo set <code>tickSize</code> freely skipping that limitation please set <a href="#Scheduler/view/TimelineBase#config-suppressFit">suppressFit</a> to <code>true</code>.</p>',scope:"instance",category:"Scheduled events",properties:[{type:{names:["Number"]}}]},{name:"eventColors",description:"<p>Predefined event colors, useful in combos etc.</p>",type:{names:["String"]},scope:"static",category:"Scheduled events"},{name:"eventStyles",description:"<p>Predefined event styles , useful in combos etc.</p>",type:{names:["String"]},scope:"static",category:"Scheduled events"}]},{name:"module:Scheduler/view/mixin/TimelineScroll",description:"<p>Functions for scrolling to events, dates etc.</p>",mixin:true,constructor:{name:"constructor"},filename:"TimelineScroll.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/view/mixin",lineno:13,functions:[{name:"scrollToDate",description:"<p>Scrolls the time line &quot;tick&quot; encapsulating the passed <code>Date</code> into view according to the passed options.</p>",parameters:[{name:"date",type:"Date",description:"<p>The date to which to scroll the time line</p>"},{name:"options",type:"Object",description:"<p>How to scroll.</p>",optional:true},{name:"options.block",type:"String",description:"<p>How far to scroll the tick: <code>start/end/center/nearest</code>.</p>",default:"nearest",optional:true,isSubParam:true},{name:"options.edgeOffset",type:"Number",description:"<p>edgeOffset A margin <em>in pixels</em> around the tick to bring into view.</p>",default:20,optional:true,isSubParam:true},{name:"options.animate",type:["Boolean","Number"],description:"<p>Set to <code>true</code> to animate the scroll, or the number of milliseconds to animate over.</p>",optional:true,isSubParam:true}],scope:"instance",returns:{type:"Promise",description:"<p>A Promise which resolves when the scrolling is complete.</p>"},async:true},{name:"scrollToNow",description:"<p>Scrolls to current time.</p>",parameters:[{name:"options",type:"Object",description:"<p>How to scroll.</p>",optional:true},{name:"options.block",type:"String",description:"<p>How far to scroll the tick: <code>start/end/center/nearest</code>.</p>",default:"nearest",optional:true,isSubParam:true},{name:"options.edgeOffset",type:"Number",description:"<p>edgeOffset A margin <em>in pixels</em> around the tick to bring into view.</p>",default:20,optional:true,isSubParam:true},{name:"options.animate",type:["Boolean","Number"],description:"<p>Set to <code>true</code> to animate the scroll, or the number of milliseconds to animate over.</p>",optional:true,isSubParam:true}],scope:"instance",returns:{type:"Promise",description:"<p>A Promise which resolves when the scrolling is complete.</p>"},async:true},{name:"scrollToCoordinate",access:"private",description:'<p>Used by <a href="#Scheduler/view/mixin/TimelineScroll#function-scrollToDate">scrollToDate</a> to scroll to correct coordinate.</p>',parameters:[{name:"localCoordinate",type:"Number",description:"<p>Coordinate to scroll to</p>"},{name:"date",type:"Date",description:"<p>Date to scroll to, used for reconfiguring the time axis</p>"},{name:"options",type:"Object",description:"<p>How to scroll.</p>",optional:true},{name:"options.block",type:"String",description:"<p>How far to scroll the tick: <code>start/end/center/nearest</code>.</p>",default:"nearest",optional:true,isSubParam:true},{name:"options.edgeOffset",type:"Number",description:"<p>edgeOffset A margin <em>in pixels</em> around the tick to bring into view.</p>",optional:true,isSubParam:true},{name:"options.animate",type:["Boolean","Number"],description:"<p>Set to <code>true</code> to animate the scroll, or the number of milliseconds to animate over.</p>",optional:true,isSubParam:true}],scope:"instance",returns:{type:"Promise",description:"<p>A Promise which resolves when the scrolling is complete.</p>"},async:true},{name:"scrollHorizontallyTo",description:"<p>Horizontal scrolling. Applies to the SubGrid that holds the scheduler</p>",parameters:[{name:"x",type:"Number"},{name:"options",type:["Object","Boolean"],description:"<p>How to scroll. May be passed as <code>true</code> to animate.</p>",optional:true},{name:"options.animate",type:["Object","Boolean","Number"],description:"<p>Set to <code>true</code> to animate the scroll by 300ms,\nor the number of milliseconds to animate over, or an animation config object.</p>",optional:true,isSubParam:true},{name:"options.animate.duration",type:"Number",description:"<p>The number of milliseconds to animate over.</p>",optional:true,isSubParam:true},{name:"options.animate.easing",type:"String",description:"<p>The name of an easing function.</p>",optional:true,isSubParam:true}],scope:"instance",returns:{type:"Promise",description:"<p>A promise which is resolved when the scrolling has finished.</p>"},async:true},{name:"scrollVerticallyTo",description:"<p>Vertical scrolling</p>",parameters:[{name:"y",type:"Number"},{name:"options",type:["Object","Boolean"],description:"<p>How to scroll. May be passed as <code>true</code> to animate.</p>",default:true,optional:true},{name:"options.animate",type:["Object","Boolean","Number"],description:"<p>Set to <code>true</code> to animate the scroll by 300ms,\nor the number of milliseconds to animate over, or an animation config object.</p>",optional:true,isSubParam:true},{name:"options.animate.duration",type:"Number",description:"<p>The number of milliseconds to animate over.</p>",optional:true,isSubParam:true},{name:"options.animate.easing",type:"String",description:"<p>The name of an easing function.</p>",optional:true,isSubParam:true}],scope:"instance",returns:{type:"Promise",description:"<p>A promise which is resolved when the scrolling has finished.</p>"},async:true},{name:"scrollTo",description:"<p>Scrolls the subgrid that contains the scheduler</p>",parameters:[{name:"x",type:"Number"},{name:"options",type:["Object","Boolean"],description:"<p>How to scroll. May be passed as <code>true</code> to animate.</p>",default:true,optional:true},{name:"options.animate",type:["Object","Boolean","Number"],description:"<p>Set to <code>true</code> to animate the scroll by 300ms,\nor the number of milliseconds to animate over, or an animation config object.</p>",optional:true,isSubParam:true},{name:"options.animate.duration",type:"Number",description:"<p>The number of milliseconds to animate over.</p>",optional:true,isSubParam:true},{name:"options.animate.easing",type:"String",description:"<p>The name of an easing function.</p>",optional:true,isSubParam:true}],scope:"instance",returns:{type:"Promise",description:"<p>A promise which is resolved when the scrolling has finished.</p>"},async:true}],properties:[{name:"scrollLeft",description:"<p>Get/set horizontal scroll. Applies to the SubGrid that holds the scheduler</p>",scope:"instance",category:"Scrolling",properties:[{type:{names:["Number"]}}]},{name:"scrollTop",description:"<p>Get/set vertical scroll</p>",scope:"instance",category:"Scrolling",properties:[{type:{names:["Number"]}}]}]},{name:"module:Scheduler/view/mixin/TimelineViewPresets",description:'<p>View preset handling.</p>\n<p>A Scheduler\'s <a href="#Scheduler/view/mixin/TimelineViewPresets#config-presets">presets</a> are loaded with a default set of <a href="#Scheduler/preset/ViewPreset">ViewPresets</a>\nwhich are defined by the system in the <a href="#Scheduler/preset/PresetManager">PresetManager</a>.</p>\n<p>The zooming feature works by reconfiguring the Scheduler with a new <a href="#Scheduler/preset/ViewPreset">ViewPreset</a> selected\nfrom the <a href="#Scheduler/view/mixin/TimelineViewPresets#config-presets">presets</a> store.</p>\n<p><a href="#Scheduler/preset/ViewPreset">ViewPresets</a> can be added and removed from the store to change the amount of available steps.\nRange of zooming in/out can be also modified with <a href="#Scheduler/view/mixin/TimelineZoomable#config-maxZoomLevel">maxZoomLevel</a> / <a href="#Scheduler/view/mixin/TimelineZoomable#config-minZoomLevel">minZoomLevel</a> properties.</p>\n<p>This mixin adds additional methods to the column : <a href="#Scheduler/view/mixin/TimelineZoomable#property-maxZoomLevel">maxZoomLevel</a>, <a href="#Scheduler/view/mixin/TimelineZoomable#property-minZoomLevel">minZoomLevel</a>, <a href="#Scheduler/view/mixin/TimelineZoomable#function-zoomToLevel">zoomToLevel</a>, <a href="#Scheduler/view/mixin/TimelineZoomable#function-zoomIn">zoomIn</a>,\n<a href="#Scheduler/view/mixin/TimelineZoomable#function-zoomOut">zoomOut</a>, <a href="#Scheduler/view/mixin/TimelineZoomable#function-zoomInFull">zoomInFull</a>, <a href="#Scheduler/view/mixin/TimelineZoomable#function-zoomOutFull">zoomOutFull</a>.</p>\n<p><strong>Notice</strong>: Zooming doesn\'t work properly when <code>forceFit</code> option is set to true for the Schedulker or for filtered timeaxis.</p>',mixin:true,constructor:{name:"constructor"},filename:"TimelineViewPresets.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/view/mixin",lineno:31,configs:[{name:"viewPreset",description:"<p>A string key used to lookup a predefined <a href=\"#Scheduler/preset/ViewPreset\">Scheduler.preset.ViewPreset</a> (e.g. 'weekAndDay', 'hourAndDay'),\nmanaged by <a href=\"#Scheduler/preset/PresetManager\">Scheduler.preset.PresetManager</a>. See <a href=\"#Scheduler/preset/PresetManager\">Scheduler.preset.PresetManager</a> for more information.\nOr a config object for a viewPreset.</p>\n<p>Options:</p>\n<ul>\n<li>'secondAndMinute'</li>\n<li>'minuteAndHour'</li>\n<li>'hourAndDay'</li>\n<li>'dayAndWeek'</li>\n<li>'weekAndDay'</li>\n<li>'weekAndMonth',</li>\n<li>'monthAndYear'</li>\n<li>'year'</li>\n<li>'manyYears'</li>\n<li>'weekAndDayLetter'</li>\n<li>'weekDateAndMonth'</li>\n<li>'day'</li>\n<li>'week'</li>\n</ul>\n<p>If passed as a config object, the settings from the viewPreset with the provided <code>base</code> property will be used along\nwith any overridden values in your object.</p>\n<p>To override:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>viewPreset : {\n  base    : 'hourAndDay',\n  id      : 'myHourAndDayPreset',\n  headers : [\n      {\n          unit      : &quot;hour&quot;,\n          increment : 12,\n          renderer  : (startDate, endDate, headerConfig, cellIdx) => {\n              return &quot;&quot;;\n          }\n      }\n  ]\n}\n</code></pre>\n<p>or set a new valid preset config if the preset is not registered in the <a href=\"#Scheduler/preset/PresetManager\">Scheduler.preset.PresetManager</a>.</p>\n<p>When you use scheduler in weekview mode, this config is used to pick view preset. If passed view preset is not\nsupported by weekview (only 2 supported by default - 'day' and 'week') default preset will be used - 'week'.</p>",type:["String","Object"],scope:"inner",defaultvalue:"weekAndDayLetter",category:"Common"},{name:"displayDateFormat",description:'<p>Defines how dates will be formatted in tooltips etc. This config has priority over similar config on the\nview preset. For allowed values see <a href="#Core/helper/DateHelper#function-format-static">format</a>.</p>',type:"String",scope:"inner",category:"Scheduled events"},{name:"presets",description:'<p>An array of <a href="#Scheduler/preset/ViewPreset">ViewPreset</a> config objects\nwhich describes the available timeline layouts for this scheduler.</p>\n<p>By default, a predefined set is loaded from the <a href="#Scheduler/preset/PresetManager">PresetManager</a>.</p>\n<p>A <a href="#Scheduler/preset/ViewPreset">ViewPreset</a> describes the granularity of the\ntimeline view and the layout and subdivisions of the timeline header.</p>',type:"Array.<Object>",scope:"inner",category:"Common"}],properties:[{name:"presets",description:'<p>Get the <a href="#Scheduler/preset/PresetStore">PresetStore</a> created for the Scheduler,\nor set an array of <a href="#Scheduler/preset/ViewPreset">ViewPreset</a> config objects.</p>',scope:"instance",category:"Common",properties:[{type:{names:["Scheduler.preset.PresetStore","Array.<Object>"]}}]},{name:"viewPreset",description:"<p>Get/set the current view preset</p>",scope:"instance",category:"Common",properties:[{type:{names:["Scheduler.preset.ViewPreset","String"]}}]}],functions:[{name:"setViewPreset",access:"private",description:'<p>Sets the current view preset. See the <a href="#Scheduler/preset/PresetManager">Scheduler.preset.PresetManager</a> class for details.</p>',parameters:[{name:"preset",type:["String","Object","Scheduler.preset.ViewPreset"],description:'<p>The id of the new preset (see <a href="#Scheduler/preset/PresetManager">Scheduler.preset.PresetManager</a> for details)</p>'},{name:"startDate",type:"Date",description:"<p>A new start date for the time axis</p>",optional:true},{name:"endDate",type:"Date",description:"<p>A new end date for the time axis</p>",optional:true}],scope:"instance"}],events:[{name:"beforePresetChange",description:'<p>Fired before the <a href="#Scheduler/view/mixin/TimelineViewPresets#config-viewPreset">viewPreset</a> is changed.</p>',parameters:[{name:"source",type:"Scheduler.view.Scheduler",description:"<p>This Scheduler instance.</p>"},{name:"startDate",type:"Date",description:"<p>The new start date of the timeline.</p>"},{name:"endDate",type:"Date",description:"<p>The new end date of the timeline.</p>"},{name:"from",type:"Scheduler.preset.ViewPreset",description:"<p>The outgoing ViewPreset.</p>"},{name:"to",type:"Scheduler.preset.ViewPreset",description:"<p>The ViewPreset being switched to.</p>"}],preventable:true},{name:"beforeZoomChange",description:'<p>Fired before the <a href="#Scheduler/view/mixin/TimelineViewPresets#config-viewPreset">viewPreset</a> is changed.</p>',parameters:[{name:"source",type:"Scheduler.view.Scheduler",description:"<p>This Scheduler instance.</p>"},{name:"startDate",type:"Date",description:"<p>The new start date of the timeline.</p>"},{name:"endDate",type:"Date",description:"<p>The new end date of the timeline.</p>"},{name:"from",type:"Scheduler.preset.ViewPreset",description:"<p>The outgoing ViewPreset.</p>"},{name:"to",type:"Scheduler.preset.ViewPreset",description:"<p>The ViewPreset being switched to.</p>"}],deprecated:true,preventable:true},{name:"presetChange",description:'<p>Fired after the <a href="#Scheduler/view/mixin/TimelineViewPresets#config-viewPreset">viewPreset</a> has changed.</p>',parameters:[{name:"source",type:"Scheduler.view.Scheduler",description:"<p>This Scheduler instance.</p>"},{name:"startDate",type:"Date",description:"<p>The new start date of the timeline.</p>"},{name:"centerDate",type:"Date",description:"<p>The new center date of the timeline.</p>"},{name:"endDate",type:"Date",description:"<p>The new end date of the timeline.</p>"},{name:"from",type:"Scheduler.preset.ViewPreset",description:"<p>The outgoing ViewPreset.</p>"},{name:"to",type:"Scheduler.preset.ViewPreset",description:"<p>The ViewPreset being switched to.</p>"}],preventable:true},{name:"zoomChange",description:'<p>Fired after the <a href="#Scheduler/view/mixin/TimelineViewPresets#config-viewPreset">viewPreset</a> has changed.</p>',parameters:[{name:"source",type:"Scheduler.view.Scheduler",description:"<p>This Scheduler instance.</p>"},{name:"startDate",type:"Date",description:"<p>The new start date of the timeline.</p>"},{name:"centerDate",type:"Date",description:"<p>The new center date of the timeline.</p>"},{name:"endDate",type:"Date",description:"<p>The new end date of the timeline.</p>"},{name:"from",type:"Scheduler.preset.ViewPreset",description:"<p>The outgoing ViewPreset.</p>"},{name:"to",type:"Scheduler.preset.ViewPreset",description:"<p>The ViewPreset being switched to.</p>"}],deprecated:true,preventable:true}]},{name:"module:Scheduler/view/mixin/TimelineZoomable",description:"<p>Mixin providing &quot;zooming&quot; functionality.</p>\n<p>The zoom levels are stored as instances of <a href=\"#Scheduler/preset/ViewPreset\">ViewPreset</a>s, and are\ncached centrally in the <a href=\"#Scheduler/preset/PresetManager\">PresetManager</a>.</p>\n<p>The default presets are loaded into the <a href=\"#Scheduler/view/mixin/TimelineViewPresets#config-presets\">presets</a>\nstore upon Scheduler instantiation. Preset selection is covered in the\n<a href=\"#Scheduler/view/mixin/TimelineViewPresets\">TimelineViewPresets</a> mixin.</p>\n<p>To specify custom zoom levels please provide a set of view presets to the global PresetManager store <strong>before</strong> scheduler creation,\nor provide a set of view presets to a specific scheduler only:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>const myScheduler = new Scheduler({\n    presets : [\n        {\n            base : 'hourAndDay',\n            id   : 'MyHourAndDay',\n            // other preset configs....\n        },\n        {\n            base : 'weekAndMonth',\n            id   : 'MyWeekAndMonth',\n            // other preset configs....\n        }\n    ],\n    viewPreset : 'MyHourAndDay',\n    // other scheduler configs....\n    });\n</code></pre>",mixin:true,constructor:{name:"constructor"},filename:"TimelineZoomable.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/view/mixin",lineno:43,configs:[{name:"zoomOnMouseWheel",description:"<p>If true, you can zoom in and out on the the time axis using CTRL-key + mouse wheel.</p>",type:"Boolean",scope:"inner",defaultvalue:true,category:"Zoom"},{name:"zoomOnTimeAxisDoubleClick",description:"<p>True to zoom to time span when double clicking a time axis cell.</p>",type:"Boolean",scope:"inner",defaultvalue:true,category:"Zoom"},{name:"minZoomLevel",description:'<p>Minimal zoom level to which <a href="#Scheduler/view/mixin/TimelineZoomable#function-zoomOut">zoomOut</a> will work</p>',type:"Number",scope:"inner",category:"Zoom"},{name:"maxZoomLevel",description:'<p>Maximal zoom level to which <a href="#Scheduler/view/mixin/TimelineZoomable#function-zoomIn">zoomIn</a> will work</p>',type:"Number",scope:"inner",category:"Zoom"},{name:"visibleZoomFactor",description:'<p>Integer number indicating the size of timespan during zooming. When zooming, the timespan is adjusted to make the scrolling area <code>visibleZoomFactor</code> times\nwider than the timeline area itself. Used in <a href="#Scheduler/view/mixin/TimelineZoomable#function-zoomToSpan">zoomToSpan</a> and <a href="#Scheduler/view/mixin/TimelineZoomable#function-zoomToLevel">zoomToLevel</a> functions.</p>',type:"Number",scope:"inner",defaultvalue:5,category:"Zoom"},{name:"zoomKeepsOriginalTimespan",description:'<p>Whether the originally rendered timespan should be preserved while zooming. By default it is set to <code>false</code>,\nmeaning the timeline panel will adjust the currently rendered timespan to limit the amount of HTML content to render. When setting this option\nto <code>true</code>, be careful not to allow to zoom a big timespan in seconds resolution for example. That will cause <strong>a lot</strong> of HTML content\nto be rendered and affect performance. You can use <a href="#Scheduler/view/mixin/TimelineZoomable#config-minZoomLevel">minZoomLevel</a> and <a href="#Scheduler/view/mixin/TimelineZoomable#config-maxZoomLevel">maxZoomLevel</a> config options for that.</p>',type:"Boolean",scope:"inner",category:"Zoom"}],properties:[{name:"maxZoomLevel",description:'<p>Get/set the <a href="#Scheduler/view/mixin/TimelineZoomable#config-maxZoomLevel">maxZoomLevel</a> value</p>',scope:"instance",category:"Zoom",properties:[{type:{names:["Number"]}}]},{name:"minZoomLevel",description:'<p>Sets the <a href="#Scheduler/view/mixin/TimelineZoomable#config-minZoomLevel">minZoomLevel</a> value</p>',scope:"instance",category:"Zoom",properties:[{type:{names:["Number"]}}]},{name:"zoomLevel",description:'<p>Get/set current zoom level. Since zoom can happen to a preset or to a timespan,\ngetter may return float number which is intended to be close to index of one of the existing <a href="#Scheduler/view/mixin/TimelineViewPresets#config-presets">zoom levels</a>.</p>',scope:"instance",category:"Zoom",properties:[{type:{names:["Number"]}}]}],functions:[{name:"zoomTo",description:"<p>Zooms to passed view preset, saving center date. Method accepts config object as a first argument, which can be\nreduced to primitive type (string,number) when no additional options required. e.g.:</p>\n<pre class=\"prettyprint source\"><code>// zooming to preset\nscheduler.zoomTo({ preset : 'hourAndDay' })\n// shorthand\nscheduler.zoomTo('hourAndDay')\n\n// zooming to level\nscheduler.zoomTo({ level : 0 })\n// shorthand\nscheduler.zoomTo(0)\n</code></pre>\n<p>It is also possible to zoom to a time span by omitting <code>preset</code> and <code>level</code> configs, in which case scheduler sets\nthe time frame to a specified range and applies zoom level which allows to fit all columns to this range. The\ngiven time span will be centered in the scheduling view (unless <code>centerDate</code> config provided). In the same time,\nthe start/end date of the whole time axis will be extended to allow scrolling for user.</p>\n<pre class=\"prettyprint source\"><code>// zooming to time span\nscheduler.zoomTo({ startDate : new Date(..), endDate : new Date(...) })\n\n</code></pre>",parameters:[{name:"config",type:["Object","String","Number"],description:"<p>Config object, preset name or zoom level index.</p>"},{name:"config.preset",type:"String",description:"<p>Preset name to zoom to. Ignores level config in this case</p>",isSubParam:true},{name:"config.level",type:"Number",description:"<p>Zoom level to zoom to. Is ignored, if preset config is provided</p>",isSubParam:true},{name:"config.startDate",type:"Date",description:"<p>New time frame start. If provided along with end, view will be centered in this time\ninterval (unless <code>centerDate</code> is present)</p>",isSubParam:true},{name:"config.endDate",type:"Date",description:"<p>New time frame end</p>",isSubParam:true},{name:"config.centerDate",type:"Date",description:"<p>Date that should be kept in the center. Has priority over start and end params</p>",isSubParam:true},{name:"config.width",type:"Number",description:"<p>Lowest tick width. Might be increased automatically</p>",isSubParam:true},{name:"config.leftMargin",type:"Number",description:"<p>Amount of pixels to extend span start on (used, when zooming to span)</p>",optional:true,isSubParam:true},{name:"config.rightMargin",type:"Number",description:"<p>Amount of pixels to extend span end on (used, when zooming to span)</p>",optional:true,isSubParam:true},{name:"config.adjustStart",type:"Number",description:"<p>Amount of units to extend span start on (used, when zooming to span)</p>",optional:true,isSubParam:true},{name:"config.adjustEnd",type:"Number",description:"<p>Amount of units to extend span end on (used, when zooming to span)</p>",optional:true,isSubParam:true}],scope:"instance",category:"Zoom"},{name:"zoomToLevel",description:'<p>Allows zooming to certain level of <a href="#Scheduler/view/mixin/TimelineViewPresets#config-presets">presets</a> array. Automatically limits zooming between <a href="#Scheduler/view/mixin/TimelineZoomable#config-maxZoomLevel">maxZoomLevel</a>\nand <a href="#Scheduler/view/mixin/TimelineZoomable#config-minZoomLevel">minZoomLevel</a>. Can also set time axis timespan to the supplied start and end dates.</p>',parameters:[{name:"preset",type:"Number",description:"<p>Level to zoom to.</p>"},{name:"options",type:"Object",description:"<p>Object, containing options for this method</p>",optional:true},{name:"options.startDate",type:"Date",description:"<p>New time frame start. If provided along with end, view will be centered in this time\ninterval, ignoring centerDate config.</p>",isSubParam:true},{name:"options.endDate",type:"Date",description:"<p>New time frame end.</p>",isSubParam:true},{name:"options.centerDate",type:"Date",description:"<p>Date that should be kept in center. Is ignored when start and end are provided.</p>",isSubParam:true},{name:"options.width",type:"Number",description:"<p>Lowest tick width. Might be increased automatically</p>",isSubParam:true}],scope:"instance",category:"Zoom",returns:{type:"Number",description:"<p>level Current zoom level or null if it hasn't changed.</p>"}},{name:"zoomToFit",description:"<p>Changes the range of the scheduling chart to fit all the events in its event store.</p>",parameters:[{name:"options",type:"Object",description:"<p>Options object for the zooming operation.</p>",optional:true},{name:"options.leftMargin",type:"Number",description:"<p>Defines margin in pixel between the first event start date and first visible date</p>",optional:true,isSubParam:true},{name:"options.rightMargin",type:"Number",description:"<p>Defines margin in pixel between the last event end date and last visible date</p>",optional:true,isSubParam:true}],scope:"instance"},{name:"zoomToSpan",description:'<p>Sets time frame to specified range and applies zoom level which allows to fit all columns to this range.</p>\n<p>The given time span will be centered in the scheduling view, in the same time, the start/end date of the whole time axis\nwill be extended in the same way as <a href="#Scheduler/view/mixin/TimelineZoomable#function-zoomToLevel">zoomToLevel</a> method does, to allow scrolling for user.</p>',parameters:[{name:"config",type:"Object",description:"<p>The time frame.</p>"},{name:"config.startDate",type:"Date",description:"<p>The time frame start.</p>",isSubParam:true},{name:"config.endDate",type:"Date",description:"<p>The time frame end.</p>",isSubParam:true},{name:"config.centerDate",type:"Date",description:"<p>Date that should be kept in the center. Has priority over start and end params</p>",optional:true,isSubParam:true},{name:"config.leftMargin",type:"Number",description:"<p>Amount of pixels to extend span start on</p>",optional:true,isSubParam:true},{name:"config.rightMargin",type:"Number",description:"<p>Amount of pixels to extend span end on</p>",optional:true,isSubParam:true},{name:"config.adjustStart",type:"Number",description:"<p>Amount of units to extend span start on</p>",optional:true,isSubParam:true},{name:"config.adjustEnd",type:"Number",description:"<p>Amount of units to extend span end on</p>",optional:true,isSubParam:true}],scope:"instance",category:"Zoom",returns:{type:"Number",description:"<p>level Current zoom level or null if it hasn't changed.</p>"}},{name:"zoomIn",description:"<p>Zooms in the timeline according to the array of zoom levels. If the amount of levels to zoom is given, the view will zoom in by this value.\nOtherwise a value of <code>1</code> will be used.</p>",parameters:[{name:"levels",type:"Number",description:"<p>(optional) amount of levels to zoom in</p>",default:1}],scope:"instance",category:"Zoom",returns:{type:"Number",description:"<p>currentLevel New zoom level of the panel or null if level hasn't changed.</p>"}},{name:"zoomOut",description:"<p>Zooms out the timeline according to the array of zoom levels. If the amount of levels to zoom is given, the view will zoom out by this value.\nOtherwise a value of <code>1</code> will be used.</p>",parameters:[{name:"levels",type:"Number",description:"<p>(optional) amount of levels to zoom out</p>",default:1}],scope:"instance",category:"Zoom",returns:{type:"Number",description:"<p>currentLevel New zoom level of the panel or null if level hasn't changed.</p>"}},{name:"zoomInFull",description:'<p>Zooms in the timeline to the <a href="#Scheduler/view/mixin/TimelineZoomable#config-maxZoomLevel">maxZoomLevel</a> according to the array of zoom levels.</p>',scope:"instance",category:"Zoom",returns:{type:"Number",description:"<p>currentLevel New zoom level of the panel or null if level hasn't changed.</p>"}},{name:"zoomOutFull",description:'<p>Zooms out the timeline to the <a href="#Scheduler/view/mixin/TimelineZoomable#config-minZoomLevel">minZoomLevel</a> according to the array of zoom levels.</p>',scope:"instance",category:"Zoom",returns:{type:"Number",description:"<p>currentLevel New zoom level of the panel or null if level hasn't changed.</p>"}},{name:"setTimeSpan",description:"<p>Changes the time axis timespan to the supplied start and end dates.</p>",parameters:[{name:"startDate",type:"Date",description:"<p>The new start date</p>"},{name:"endDate",type:"Date",description:'<p>The new end date. If not supplied, the <a href="#Scheduler/preset/ViewPreset#field-defaultSpan">defaultSpan</a> property of the current view preset will be used to calculate the new end date.</p>'}],scope:"instance"},{name:"shift",description:'<p>Moves the time axis by the passed amount and unit.</p>\n<p>NOTE: If using a filtered time axis, see <a href="#Scheduler/data/TimeAxis#function-shift">shift</a> for more information.</p>',parameters:[{name:"amount",type:"Number",description:"<p>The number of units to jump</p>"},{name:"unit",type:"String",description:"<p>The unit (Day, Week etc)</p>",optional:true}],scope:"instance"},{name:"shiftNext",description:'<p>Moves the time axis forward in time in units specified by the view preset <code>shiftUnit</code>, and by the amount specified by the <code>shiftIncrement</code>\nconfig of the current view preset.</p>\n<p>NOTE: If using a filtered time axis, see <a href="#Scheduler/data/TimeAxis#function-shiftNext">shiftNext</a> for more information.</p>',parameters:[{name:"amount",type:"Number",description:"<p>The number of units to jump forward</p>",optional:true}],scope:"instance"},{name:"shiftPrevious",description:'<p>Moves the time axis backward in time in units specified by the view preset <code>shiftUnit</code>, and by the amount specified by the <code>shiftIncrement</code> config of the current view preset.</p>\n<p>NOTE: If using a filtered time axis, see <a href="#Scheduler/data/TimeAxis#function-shiftPrevious">shiftPrevious</a> for more information.</p>',parameters:[{name:"amount",type:"Number",description:"<p>The number of units to jump backward</p>",optional:true}],scope:"instance"}]},{name:"module:Scheduler/view/model/TimeAxisViewModel",classDescription:'<p>This class is an internal view model class, describing the visual representation of a <a href="#Scheduler/data/TimeAxis">Scheduler.data.TimeAxis</a>.\nThe config for the header rows is described in the <a href="#Scheduler/preset/ViewPreset#field-headers">headers</a>.\nTo calculate the size of each cell in the time axis, this class requires:</p>\n<ul>\n<li>availableSpace  - The total width or height available for the rendering</li>\n<li>tickSize       - The fixed width or height of each cell in the lowest header row. This value is normally read from the\n<a href="#Scheduler/preset/ViewPreset">viewPreset</a> but this can also be updated programmatically using the <a href="#Scheduler/view/model/TimeAxisViewModel#property-tickSize">tickSize</a> setter</li>\n</ul>\n<p>Normally you should not interact with this class directly.</p>',extends:["Core/mixin/Events"],constructor:{name:"constructor"},filename:"TimeAxisViewModel.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/view/model",lineno:24,configs:[{name:"timeAxis",access:"internal",description:"<p>The time axis providing the underlying data to be visualized</p>",type:"Scheduler.data.TimeAxis",scope:"inner"},{name:"availableSpace",access:"internal",description:'<p>The available width/height, this is normally not known by the consuming UI component using this model\nclass until it has been fully rendered. The consumer of this model should set\n<a href="#Scheduler/view/model/TimeAxisViewModel#property-availableSpace">availableSpace</a> when its width has changed.</p>',type:"Number",scope:"inner"},{name:"tickSize",access:"internal",description:'<p>The &quot;tick width&quot; for horizontal mode or &quot;tick height&quot; for vertical mode, to use for the cells in the\nbottom most header row.\nThis value is normally read from the <a href="#Scheduler/preset/ViewPreset">viewPreset</a></p>',type:"Number",scope:"inner",defaultvalue:100},{name:"snap",access:"internal",description:'<p>true if there is a requirement to be able to snap events to a certain view resolution.\nThis has implications of the <a href="#Scheduler/view/model/TimeAxisViewModel#config-tickSize">tickSize</a> that can be used, since all widths must be in even pixels.</p>',type:"Boolean",scope:"inner",defaultvalue:false},{name:"forceFit",access:"internal",description:'<p>true if cells in the bottom-most row should be fitted to the <a href="#Scheduler/view/model/TimeAxisViewModel#property-availableSpace">available space</a>.</p>',type:"Boolean",scope:"inner",defaultvalue:false}],properties:[{name:"columnConfig",access:"internal",description:"<p>Returns an array representing the headers of the current timeAxis. Each element is an array representing the cells for that level in the header.</p>",scope:"instance",returns:[{type:{names:["Array.<Object>"]},description:"<p>An array of headers, each element being an array representing each cell (with start date and end date) in the timeline representation.</p>"}]},{name:"isHorizontal",access:"internal",description:"<p>Using horizontal mode?</p>",scope:"instance",returns:[{type:{names:["Boolean"]}}],readonly:true},{name:"isVertical",access:"internal",description:"<p>Using vertical mode?</p>",scope:"instance",returns:[{type:{names:["Boolean"]}}],readonly:true},{name:"forceFit",access:"internal",description:'<p>Gets/sets the forceFit value for the model. Setting it will cause it to update its contents and fire the\n<a href="#Scheduler/view/model/TimeAxisViewModel#event-update">update</a> event.</p>',scope:"instance",properties:[{type:{names:["Boolean"]}}]},{name:"snapPixelAmount",access:"internal",description:"<p>[Experimental] Returns the pixel increment for the current view resolution.</p>",scope:"instance",returns:[{type:{names:["Number"]},description:"<p>The increment</p>"}]},{name:"tickSize",access:"internal",description:"<p>Get/set the current time column size (the width or height of a cell in the bottom-most time axis header row,\ndepending on mode)</p>",scope:"instance",properties:[{type:{names:["Number"]}}]},{name:"totalSize",access:"internal",description:"<p>Returns the total width/height of the time axis representation, depending on mode.</p>",scope:"instance",returns:[{type:{names:["Number"]},description:"<p>The width or height</p>"}],readonly:true},{name:"availableSpace",access:"internal",description:'<p>Get/set the available space for the time axis representation. If size changes it will cause it to update its\ncontents and fire the <a href="#Scheduler/view/model/TimeAxisViewModel#event-update">update</a> event.</p>',scope:"instance",properties:[{type:{names:["Number"]}}]},{name:"snap",access:"internal",description:'<p>Gets/sets the snap value for the model. Setting it will cause it to update its contents and fire the\n<a href="#Scheduler/view/model/TimeAxisViewModel#event-update">update</a> event.</p>',scope:"instance",properties:[{type:{names:["Boolean"]}}]},{name:"majorHeaderLevel",access:"private",description:'<p>This method is meant to return the level of the header which 2nd lowest.\nIt is used for <a href="#Scheduler/view/model/TimeAxisViewModel#function-isMajorTick">isMajorTick</a> method</p>',scope:"instance",returns:[{type:{names:["String"]}}]}],events:[{name:"update",description:"<p>Fires after the model has been updated.</p>",parameters:[{name:"source",type:"Scheduler.view.model.TimeAxisViewModel",description:"<p>The model instance</p>"}]},{name:"reconfigure",description:"<p>Fires after the model has been reconfigured.</p>",parameters:[{name:"source",type:"Scheduler.view.model.TimeAxisViewModel",description:"<p>The model instance</p>"}]}],functions:[{name:"update",access:"internal",description:"<p>Updates the view model current timeAxis configuration and available space.</p>",parameters:[{name:"availableSpace",type:"Number",description:"<p>The available space for the rendering of the axis (used in forceFit mode)</p>",optional:true},{name:"silent",type:"Boolean",description:"<p>Pass <code>true</code> to suppress the firing of the <code>update</code> event.</p>",default:false,optional:true},{name:"forceUpdate",type:"Boolean",description:"<p>Pass <code>true</code> to fire the <code>update</code> event even if the size has not changed.</p>",default:false,optional:true}],scope:"instance"},{name:"getDistanceBetweenDates",description:"<p>Returns the distance in pixels for a timespan with the given start and end date.</p>",parameters:[{name:"start",type:"Date",description:"<p>start date</p>"},{name:"end",type:"Date",description:"<p>end date</p>"}],scope:"instance",category:"Date mapping",returns:{type:"Number",description:"<p>The length of the time span</p>"}},{name:"getDistanceForDuration",description:"<p>Returns the distance in pixels for a time span</p>",parameters:[{name:"durationMS",type:"Number",description:"<p>Time span duration in ms</p>"}],scope:"instance",category:"Date mapping",returns:{type:"Number",description:"<p>The length of the time span</p>"}},{name:"getPositionFromDate",description:"<p>Gets the position of a date on the projected time axis or -1 if the date is not in the timeAxis.</p>",parameters:[{name:"date",type:"Date",description:"<p>the date to query for.</p>"}],scope:"instance",category:"Date mapping",returns:{type:"Number",description:"<p>the coordinate representing the date</p>"}},{name:"getDateFromPosition",description:"<p>Gets the date for a position on the time axis</p>",parameters:[{name:"position",type:"Number",description:"<p>The page X or Y coordinate</p>"},{name:"roundingMethod",type:"String",description:"<p>The rounding method to use</p>",optional:true},{name:"allowOutOfRange",type:"Boolean",description:"<p>By default, this returns <code>null</code> if the position is outside\nof the time axis. Pass <code>true</code> to attempt to calculate a date outside of the time axis.</p>",default:false,optional:true}],scope:"instance",category:"Date mapping",returns:{type:"Date",description:"<p>the Date corresponding to the xy coordinate</p>"}},{name:"getSingleUnitInPixels",access:"internal",description:"<p>Returns the amount of pixels for a single unit</p>",scope:"instance",returns:{type:"Number",description:"<p>The unit in pixel</p>"}},{name:"getDates",access:"internal",description:"<p>Returns start dates for ticks at the specified level in format { date, isMajor }.</p>",parameters:[{name:"level",type:"Number",description:"<p>Level in headers array, <code>0</code> meaning the topmost...</p>"},{name:"useLowestHeader",type:"Boolean",description:"<p>Use lowest level</p>",default:false},{name:"getEnd",default:false}],scope:"instance",returns:{type:"Array"}},{name:"fitToAvailableSpace",access:"internal",description:"<p>This function fits the time columns into the available space in the time axis column.</p>",parameters:[{name:"suppressEvent",type:"Boolean",description:"<p><code>true</code> to skip firing the 'update' event.</p>"}],scope:"instance"},{name:"isMajorTick",access:"private",description:"<p>For vertical view (and column lines plugin) we sometimes want to know if current tick starts along with the\nupper header level.</p>",parameters:[{name:"date",type:"Date"}],scope:"instance",returns:{type:"Boolean"}},{name:"forEachInterval",access:"internal",description:"<p>Calls the supplied iterator function once per interval. The function will be called with three parameters, start date and end date and an index.\nReturn false to break the iteration.</p>",parameters:[{name:"position",type:"Number",description:"<p>The index of the header in the headers array.</p>"},{name:"iteratorFn",type:"function",description:"<p>The function to call, will be called with start date, end date and &quot;tick index&quot;</p>"},{name:"thisObj",type:"Object",description:"<p><code>this</code> reference for the function</p>",optional:true}],scope:"instance"},{name:"forEachMainInterval",access:"internal",description:"<p>Calls the supplied iterator function once per interval. The function will be called with three parameters, start date and end date and an index.\nReturn false to break the iteration.</p>",parameters:[{name:"iteratorFn",type:"function",description:"<p>The function to call</p>"},{name:"thisObj",type:"Object",description:"<p><code>this</code> reference for the function</p>",optional:true}],scope:"instance"}]},{name:"module:Scheduler/view/orientation/BaseHorizontalMapper",classDescription:"<p>Base class for task &amp; event rendering in horizontal mode, used by Scheduler and Gantt</p>",access:"private",virtual:true,constructor:{name:"constructor"},filename:"BaseHorizontalMapper.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/view/orientation",lineno:27,functions:[{name:"calculateMS",access:"private",virtual:true,description:"<p>Converts a start/endDate into a MS value used when rendering the timeSpan</p>",scope:"instance"},{name:"getTimeSpanRenderData",access:"private",description:"<p>Gets timespan coordinates etc. Relative to containing row. If the timespan is outside of the zone in\nwhich timespans are rendered, that is outside of the TimeAxis, or outside of the vertical zone in which timespans\nare rendered, then <code>undefined</code> is returned.</p>",parameters:[{name:"timeSpan",type:"Scheduler.model.TimeSpan",description:"<p>TimeSpan record</p>"},{name:"rowRecord",type:"Core.data.Model",description:"<p>Row record</p>"},{name:"includeOutside",type:["Boolean","Object"],description:"<p>Specify true to get boxes for timespans outside of the rendered zone in both\ndimensions. This option is used when calculating dependency lines, and we need to include routes from timespans\nwhich may be outside the rendered zone.</p>",default:false},{name:"includeOutside.timeAxis",type:"Boolean",description:"<p>Pass as <code>true</code> to include timespans outside of the TimeAxis's bounds</p>",isSubParam:true},{name:"includeOutside.viewport",type:"Boolean",description:"<p>Pass as <code>true</code> to include timespans outside of the vertical timespan viewport's bounds.</p>",isSubParam:true}],scope:"instance",returns:{type:"Object",description:"<p>{{event/task: *, left: number, width: number, start: (Date), end: (Date), startMs: number, endMs: number, startsOutsideView: boolean, endsOutsideView: boolean}}</p>"}},{name:"addTemporaryDragElement",access:"private",description:"<p>Used by event drag features to bring into existence event elements that are outside of the rendered block.</p>",parameters:[{name:"eventRecord",type:"Scheduler.model.TimeSpan",description:"<p>The event to render</p>"}],scope:"instance"},{name:"cacheTimeSpanElement",description:"<p>Adds an element for recycling to the event element recycling cache for the passed Event/Task if\nthere is no cache entry. Use this to prevent cache misses and the re-use by\nevent rendering of elements for other events which means that the element would have to be heavily\nmodified.</p>",parameters:[{name:"timeSpanRecord",type:"Scheduler.model.TimeSpan",description:"<p>The event/task to create an element recycling cache entry for.</p>"},{name:"resourceRecord",type:"Scheduler.model.ResourceModel",description:"<p>The associated resource record.</p>",optional:true},{name:"element",type:"HTMLElement",description:"<p>The element to add to the element recycling cache under that id.</p>",optional:true}],scope:"instance"},{name:"onBeforeToggleNode",access:"private",description:"<p>User toggled a node in a tree grid, events needs to be redrawn since they might appear/disappear</p>",scope:"instance"},{name:"getRowRegion",description:"<p>Gets the Region, relative to the timeline view element, representing the passed row and optionally just for a\ncertain date interval.</p>",parameters:[{name:"rowRecord",type:"Core.data.Model",description:"<p>The row record</p>"},{name:"startDate",type:"Date",description:"<p>A start date constraining the region</p>"},{name:"endDate",type:"Date",description:"<p>An end date constraining the region</p>"}],scope:"instance",returns:{type:"Core.helper.util.Rectangle",description:"<p>The Rectangle which encapsulates the row</p>"}},{name:"getConnectorStartSide",description:"<p>Gets displaying item start side</p>",parameters:[{name:"eventRecord",type:"Scheduler.model.EventModel"}],scope:"instance",returns:{type:"String",description:"<p>'left' / 'right' / 'top' / 'bottom'</p>"}},{name:"getConnectorEndSide",description:"<p>Gets displaying item end side</p>",parameters:[{name:"eventRecord",type:"Scheduler.model.EventModel"}],scope:"instance",returns:{type:"String",description:"<p>'left' / 'right' / 'top' / 'bottom'</p>"}}]},{name:"module:Scheduler/view/orientation/HorizontalEventMapper",classDescription:"<p>Handles rendering of events when scheduler uses horizontal mode. The need to interact with this class should be\nminimal, most functions are called from Scheduler or its mixins.</p>",access:"private",constructor:{name:"constructor"},filename:"HorizontalEventMapper.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/view/orientation",lineno:40,functions:[{name:"releaseEvent",description:"<p>Releases elements for events no longer in view.</p>",scope:"instance"},{name:"getScheduleRegion",description:"<p>Gets the region, relative to the page, represented by the schedule and optionally only for a single resource. This method will call getDateConstraints to\nallow for additional resource/event based constraints. By overriding that method you can constrain events differently for\ndifferent resources.</p>",parameters:[{name:"rowRecord",type:"Core.data.Model",description:"<p>(optional) The row record</p>"},{name:"eventRecord",type:"Scheduler.model.EventModel",description:"<p>(optional) The event record</p>"}],scope:"instance",returns:{type:"Object",description:"<p>The region of the schedule</p>"}},{name:"calculateMS",access:"private",description:"<p>Converts a start/endDate into a MS value used when rendering the event. If scheduler is configured with\n<code>fillTicks: true</code> the value returned will be snapped to tick start/end.</p>",parameters:[{name:"eventRecord",type:"Scheduler.model.EventModel"}],scope:"instance",returns:{type:"Object",description:"<p>Object of format { startMS, endMS, durationMS }</p>"}},{name:"layoutEvents",access:"private",description:"<p>Layouts events on a row, caching on each event and the entire result on the resource</p>",parameters:[{name:"scheduler",type:"Scheduler.view.Scheduler"},{name:"resource",type:"Scheduler.model.ResourceModel"},{name:"row",type:"Grid.row.Row"}],scope:"instance",returns:{type:"Boolean",description:"<p>Returns false if no events on row, otherwise true</p>"}},{name:"onTranslateRow",access:"private",description:"<p>Called when rows are translated. Since events &quot;float&quot; on top of everything they must be adjusted if translation\nchanges.</p>",scope:"instance"},{name:"renderEvent",access:"private",description:"<p>Renders a single event, creating a div for it if needed or updates an existing div.</p>",parameters:[{name:"data"}],scope:"instance"},{name:"onToggleGroup",access:"private",description:"<p>User toggled a group in a grouped grid, events needs to be redrawn since they might appear/disappear</p>",scope:"instance"},{name:"getConnectorStartSide",description:"<p>Gets displaying item start side</p>",parameters:[{name:"eventRecord",type:"Scheduler.model.EventModel"}],scope:"instance",returns:{type:"String",description:"<p>'left' / 'right' / 'top' / 'bottom'</p>"}},{name:"getConnectorEndSide",description:"<p>Gets displaying item end side</p>",parameters:[{name:"eventRecord",type:"Scheduler.model.EventModel"}],scope:"instance",returns:{type:"String",description:"<p>'left' / 'right' / 'top' / 'bottom'</p>"}}]},{name:"module:Scheduler/view/recurrence/RecurrenceConfirmationPopup",classDescription:'<p>Confirmation dialog showing up before modifying a recurring event or some of its occurrences.\nFor recurring events the dialog notifies user that the event change/removal will cause all its occurrences\nchange/removal and asks to confirm the action.</p>\n<p>And for occurrences the dialog allows to choose if user wants to affect all further occurrences, this occurrence only or cancel the change.</p>\n<p>Usage example:</p>\n<pre class="prettyprint source lang-javascript"><code>const confirmation = new RecurrenceConfirmationPopup();\n\nconfirmation.confirm({\n    eventRecord : recurringEvent,\n    actionType  : &quot;delete&quot;,\n    changerFn   : () => recurringEvent.remove(event)\n});\n</code></pre>',extends:["Core/widget/Popup"],constructor:{name:"constructor"},filename:"RecurrenceConfirmationPopup.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/view/recurrence",lineno:30,classType:"recurrenceconfirmation",properties:[{name:"changeMultipleButton",description:"<p>Reference to the &quot;apply changes to multiple occurrences&quot; button, if used</p>",type:{names:["Core.widget.Button"]},scope:"inner",readonly:true},{name:"changeSingleButton",description:"<p>Reference to the button that causes changing of the event itself only, if used</p>",type:{names:["Core.widget.Button"]},scope:"inner",readonly:true},{name:"cancelButton",description:"<p>Reference to the cancel button, if used</p>",type:{names:["Core.widget.Button"]},scope:"inner",readonly:true}],functions:[{name:"confirm",description:'<p>Displays the confirmation.\nExample usage:</p>\n<pre class="prettyprint source lang-javascript"><code>const popup = new RecurrenceConfirmationPopup();\n\npopup.confirm({\n    eventRecord,\n    actionType : &quot;delete&quot;,\n    changerFn  : () => eventStore.remove(record)\n});\n</code></pre>',parameters:[{name:"config",type:"Object",description:"<p>The following config options are supported:</p>"},{name:"config.eventRecord",type:"Scheduler.model.EventModel",description:"<p>Event being modified.</p>",isSubParam:true},{name:"config.actionType",type:"String",description:"<p>Type of modification to be applied to the event. Can be either &quot;update&quot; or &quot;delete&quot;.</p>",isSubParam:true},{name:"config.changerFn",type:"function",description:"<p>A function that should be called to apply the change to the event upon user choice.</p>",isSubParam:true},{name:"config.thisObj",type:"function",description:"<p><code>changerFn</code> and <code>cancelFn</code> functions scope.</p>",optional:true,isSubParam:true},{name:"config.cancelFn",type:"function",description:"<p>Function called on <code>Cancel</code> button click.</p>",optional:true,isSubParam:true}],scope:"instance"}]},{name:"module:Scheduler/view/recurrence/RecurrenceEditor",classDescription:'<p>Class implementing a dialog to edit <a href="#Scheduler/model/RecurrenceModel">Recurrence model</a>.\nThe class is used by the <a href="#Scheduler/feature/RecurringEvents">recurring events</a> feature and you don\'t need to instantiate it normally.\nBefore showing the dialog need to use <a href="#Scheduler/view/recurrence/RecurrenceEditor#property-record">record</a> to load a <a href="#Scheduler/model/RecurrenceModel">Recurrence model</a>\ndata into the editor fields. For example:</p>\n<pre class="prettyprint source lang-javascript"><code>// make the editor instance\nconst editor = new RecurrenceEditor();\n// load recurrnce model into it\neditor.record = new RecurrenceModel({ frequency : &quot;WEEKLY&quot; });\n// display the editor\neditor.show();\n</code></pre>',extends:["Core/widget/Popup"],constructor:{name:"constructor"},filename:"RecurrenceEditor.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/view/recurrence",lineno:39,classType:"recurrenceeditor",properties:[{name:"record",description:"<p>Recurrence record loaded into the editor.</p>",scope:"instance",properties:[{type:{names:["Scheduler.model.RecurrenceModel"]}}]}],functions:[{name:"updateRecord",description:"<p>Updates the provided recurrence model with the contained form data.\nIf recurrence model is not provided updates the last loaded recurrence model.</p>",scope:"instance"}]},{name:"module:Scheduler/view/recurrence/RecurrenceLegendButton",classDescription:"<p>Class implementing a button which text displays the associated recurrence info in a human readable form.</p>",extends:["Core/widget/Button"],constructor:{name:"constructor"},filename:"RecurrenceLegendButton.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/view/recurrence",lineno:14,classType:"recurrencelegendbutton",properties:[{name:"recurrence",description:"<p>Sets the recurrence to display description for.</p>",scope:"instance",parameters:[{name:"recurrence",type:"Scheduler.model.RecurrenceModel",description:"<p>Recurrence model.</p>"}]}]},{name:"module:Scheduler/view/recurrence/field/RecurrenceCombo",classDescription:"<p>A combobox field displaying the recurrence by either mode: <code>Daily</code>, <code>Weekly</code>, <code>Monthly</code> or <code>Yearly</code> if the recurrence\nhas no other non-default settings, or <code>Custom...</code> if the recurrence has custom setting applied.</p>",extends:["Scheduler/view/recurrence/field/RecurrenceFrequencyCombo"],constructor:{name:"constructor"},filename:"RecurrenceCombo.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/view/recurrence/field",lineno:15,classType:"recurrencecombo"},{name:"module:Scheduler/view/recurrence/field/RecurrenceDaysButtonGroup",classDescription:'<p>A segmented button field allowing to pick days for the &quot;Weekly&quot; mode in the <a href="#Scheduler/view/recurrence/RecurrenceEditor">recurrence dialog</a>.</p>',extends:["Core/widget/ButtonGroup"],constructor:{name:"constructor"},filename:"RecurrenceDaysButtonGroup.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/view/recurrence/field",lineno:15},{name:"module:Scheduler/view/recurrence/field/RecurrenceDaysCombo",classDescription:'<p>A combobox field allowing to pick days for the <code>Monthly</code> and <code>Yearly</code> mode in the <a href="#Scheduler/view/recurrence/RecurrenceEditor">recurrence dialog</a>.</p>',extends:["Core/widget/Combo"],constructor:{name:"constructor"},filename:"RecurrenceDaysCombo.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/view/recurrence/field",lineno:17,classType:"recurrencedayscombo"},{name:"module:Scheduler/view/recurrence/field/RecurrenceFrequencyCombo",classDescription:'<p>A combobox field allowing to pick frequency in the <a href="#Scheduler/view/recurrence/RecurrenceEditor">recurrence dialog</a>.</p>',extends:["Core/widget/Combo"],constructor:{name:"constructor"},filename:"RecurrenceFrequencyCombo.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/view/recurrence/field",lineno:15,classType:"recurrencefrequencycombo"},{name:"module:Scheduler/view/recurrence/field/RecurrencePositionsCombo",classDescription:'<p>A combobox field allowing to specify day positions in the <a href="#Scheduler/view/recurrence/RecurrenceEditor">recurrence editor</a>.</p>',extends:["Core/widget/Combo"],constructor:{name:"constructor"},filename:"RecurrencePositionsCombo.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/view/recurrence/field",lineno:16,classType:"recurrencepositionscombo"},{name:"module:Scheduler/view/recurrence/field/RecurrenceStopConditionCombo",classDescription:'<p>A combobox field allowing to choose stop condition for the recurrence in the <a href="#Scheduler/view/recurrence/RecurrenceEditor">recurrence dialog</a>.</p>',extends:["Core/widget/Combo"],constructor:{name:"constructor"},filename:"RecurrenceStopConditionCombo.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/Scheduler/view/recurrence/field",lineno:15,classType:"recurrencestopconditioncombo"},{name:"module:SchedulerPro/column/DurationColumn",classDescription:'<p>A column showing the task <a href="#Scheduler/model/TimeSpan#property-fullDuration">duration</a>. Please note, this column\nis preconfigured and expects its field to be of the <a href="#Core/data/Duration">Core.data.Duration</a> type.</p>\n<p>The default editor is a <a href="#Core/widget/DurationField">DurationField</a>. It parses time units,\nso you can enter &quot;4d&quot; indicating 4 days duration, or &quot;4h&quot; indicating 4 hours, etc.</p>',extends:["Grid/column/NumberColumn"],constructor:{name:"constructor"},filename:"DurationColumn.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/SchedulerPro/column",lineno:21,classType:"duration",configs:[{name:"decimalPrecision",description:'<p>Precision of displayed duration, defaults to use <a href="#SchedulerPro/view/ProScheduler#config-durationDisplayPrecision">durationDisplayPrecision</a>.\nSpecify a integer value to override that setting, or <code>false</code> to use raw value</p>',type:["Number","Boolean"],scope:"inner"}]},{name:"module:SchedulerPro/data/AssignmentStore",classDescription:'<p>A class representing a collection of assignments between tasks in the <a href="#SchedulerPro/data/TaskStore">SchedulerPro/data/TaskStore</a> and resources\nin the <a href="#SchedulerPro/data/ResourceStore">SchedulerPro/data/ResourceStore</a>.</p>\n<p>Contains a collection of the <a href="#SchedulerPro/model/AssignmentModel">SchedulerPro/model/AssignmentModel</a> records.</p>',extends:["Scheduler/data/AssignmentStore"],mixes:["SchedulerPro/data/mixin/PartOfProject"],constructor:{name:"constructor"},filename:"AssignmentStore.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/SchedulerPro/data",lineno:20,typings:"Scheduler/data/AssignmentStore -> Scheduler/data/SchedulerAssignmentStore",properties:[{name:"loadPriority",access:"private",description:"<p>CrudManager must load stores in the correct order. Lowest first.</p>",scope:"inner"},{name:"syncPriority",access:"private",description:"<p>CrudManager must sync stores in the correct order. Lowest first.</p>",scope:"inner"}],functions:[{name:"mapAssignmentsForTask",description:"<p>Maps over task assignments.</p>",parameters:[{name:"task",type:["SchedulerPro.model.ProTaskModel","Object"]},{name:"fn",type:"function"},{name:"filterFn",type:"function"}],scope:"instance",returns:{type:"Array.<Object>"}},{name:"getAssignmentsForTask",description:"<p>Returns all assignments for a given task.</p>",parameters:[{name:"task",type:["SchedulerPro.model.ProTaskModel","Object"]}],scope:"instance",returns:{type:"Array.<SchedulerPro.model.AssignmentModel>"}},{name:"removeAssignmentsForTask",description:"<p>Removes all assignments for given task.</p>",parameters:[{name:"task",type:["SchedulerPro.model.ProTaskModel","Object"]}],scope:"instance"},{name:"getResourcesForTask",description:"<p>Returns all resources assigned to a task.</p>",parameters:[{name:"task",type:["SchedulerPro.model.ProTaskModel","Object"]}],scope:"instance",returns:{type:"Array.<SchedulerPro.model.ResourceModel>"}},{name:"getTasksForResource",description:"<p>Returns all tasks assigned to a resource.</p>",parameters:[{name:"resource",type:["SchedulerPro.model.ResourceModel","Object"]}],scope:"instance",returns:{type:"Array.<SchedulerPro.model.ProTaskModel>"}},{name:"assignTaskToResource",description:"<p>Creates and adds assignment record for a given task and a resource.</p>",parameters:[{name:"task",type:["SchedulerPro.model.ProTaskModel","Object"]},{name:"resource",type:["SchedulerPro.model.ResourceModel","Object"]}],scope:"instance",returns:{type:"SchedulerPro.model.AssignmentModel"}},{name:"unassignTaskFromResource",description:"<p>Removes assignment record for a given task and a resource.</p>",parameters:[{name:"task",type:["SchedulerPro.model.ProTaskModel","Object"]},{name:"resource",type:["SchedulerPro.model.ResourceModel","Object"]}],scope:"instance",returns:{type:"SchedulerPro.model.AssignmentModel"}},{name:"isTaskAssignedToResource",description:"<p>Checks whether a task is assigned to a resource.</p>",parameters:[{name:"task",type:["SchedulerPro.model.ProTaskModel","Object"]},{name:"resource",type:["SchedulerPro.model.ResourceModel","Object"]},{name:"fn",type:"function",description:"<p>Function which will resieve assignment record if one present</p>",optional:true}],scope:"instance",returns:{type:"Boolean"}},{name:"getAssignmentForTaskAndResource",description:"<p>Returns assignment record for given task and resource.</p>",parameters:[{name:"task",type:"SchedulerPro.model.ProTaskModel"},{name:"resource",type:"SchedulerPro.model.ResourceModel"}],scope:"instance",returns:{type:"SchedulerPro.model.AssignmentModel"}}]},{name:"module:SchedulerPro/data/CalendarManagerStore",classDescription:'<p>A class representing the tree of calendars in the SchedulerPro chart. An individual calendar is represented as an instance of the\n<a href="#SchedulerPro/model/ProCalendarModel">SchedulerPro.model.ProCalendarModel</a> class. The store expects the data loaded to be hierarchical. Each parent node should\ncontain its children in a property called \'children\'.</p>\n<p>Please refer to the <a href="#guides/calendars.md">calendars guide</a> for details</p>',extends:["Core/data/AjaxStore"],mixes:["SchedulerPro/data/mixin/PartOfProject"],constructor:{name:"constructor"},filename:"CalendarManagerStore.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/SchedulerPro/data",lineno:20,properties:[{name:"loadPriority",access:"private",description:"<p>CrudManager must load stores in the correct order. Lowest first.</p>",scope:"inner"},{name:"syncPriority",access:"private",description:"<p>CrudManager must sync stores in the correct order. Lowest first.</p>",scope:"inner"}]},{name:"module:SchedulerPro/data/DependencyStore",classDescription:'<p>A class representing a collection of dependencies between the tasks in the <a href="#SchedulerPro/data/TaskStore">SchedulerPro/data/TaskStore</a>.\nContains a collection of <a href="#SchedulerPro/model/ProDependencyModel">SchedulerPro/model/ProDependencyModel</a> records.</p>',extends:["Scheduler/data/DependencyStore"],mixes:["SchedulerPro/data/mixin/PartOfProject"],constructor:{name:"constructor"},filename:"DependencyStore.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/SchedulerPro/data",lineno:18,typings:"Scheduler/data/DependencyStore -> Scheduler/data/SchedulerDependencyStore",properties:[{name:"loadPriority",access:"private",description:"<p>CrudManager must load stores in the correct order. Lowest first.</p>",scope:"inner"},{name:"syncPriority",access:"private",description:"<p>CrudManager must sync stores in the correct order. Lowest first.</p>",scope:"inner"}],functions:[{name:"getTaskDependencies",description:"<p>Returns all dependencies for a certain task (both incoming and outgoing).</p>",parameters:[{name:"task",type:"SchedulerPro.model.ProTaskModel"},{name:"flat",type:"Boolean"}],scope:"instance",returns:{type:"Array.<SchedulerPro.model.ProDependencyModel>"}},{name:"getTaskPredecessors",description:"<p>Returns all predecessors of a task.</p>",parameters:[{name:"task",type:"SchedulerPro.model.ProTaskModel"},{name:"flat",type:"Boolean"}],scope:"instance",returns:{type:"Array.<SchedulerPro.model.ProTaskModel>"}},{name:"getTaskSuccessors",description:"<p>Returns all successors of a task.</p>",parameters:[{name:"task",type:"SchedulerPro.model.ProTaskModel"},{name:"flat",type:"Boolean"}],scope:"instance",returns:{type:"Array.<SchedulerPro.model.ProTaskModel>"}},{name:"removeTaskDependencies",description:"<p>Removed all dependencies for a task.</p>",parameters:[{name:"task",type:"SchedulerPro.model.ProTaskModel"},{name:"flat",type:"Boolean"}],scope:"instance"},{name:"removeTaskPredecessors",description:"<p>Removes all incoming dependencies for a task.</p>",parameters:[{name:"task",type:"SchedulerPro.model.ProTaskModel"},{name:"flat",type:"Boolean"}],scope:"instance"},{name:"removeTaskSuccessors",description:"<p>Removes all outgoing dependencies for a task.</p>",parameters:[{name:"task",type:"SchedulerPro.model.ProTaskModel"},{name:"flat",type:"Boolean"}],scope:"instance"},{name:"getDependencyForSourceAndTargetTasks",description:"<p>Returns dependency model instance linking tasks with given ids. The dependency can be forward (from 1st\ntask to 2nd) or backward (from 2nd to 1st).</p>",parameters:[{name:"sourceTask",type:["SchedulerPro.model.ProTaskModel","String"],description:"<p>1st task</p>"},{name:"targetTask",type:["SchedulerPro.model.ProTaskModel","String"],description:"<p>2nd task</p>"}],scope:"instance",returns:{type:"SchedulerPro.model.ProDependencyModel"}},{name:"getTasksLinkingDependency",description:"<p>Returns a dependency model instance linking given tasks if such dependency exists in the store.\nThe dependency can be forward (from 1st event to 2nd) or backward (from 2nd to 1st).</p>",parameters:[{name:"sourceEvent",type:"SchedulerPro.model.ProTaskModel"},{name:"targetEvent",type:"SchedulerPro.model.ProTaskModel"}],scope:"instance",returns:{type:"SchedulerPro.model.ProDependencyModel"}},{name:"getSourceTask",description:"<p>Returns the source task of the dependency</p>",parameters:[{name:"dependency",type:["SchedulerPro.model.ProDependencyModel","Object"],description:"<p>The dependency or its id</p>"}],scope:"instance",returns:{type:"SchedulerPro.model.ProTaskModel",description:"<p>The source task of this dependency</p>"}},{name:"getTargetTask",description:"<p>Returns the target task of the dependency</p>",parameters:[{name:"dependency",type:["SchedulerPro.model.ProDependencyModel","Object"],description:"<p>The dependency or its id</p>"}],scope:"instance",returns:{type:"SchedulerPro.model.ProTaskModel",description:"<p>The target task of this dependency</p>"}}]},{name:"module:SchedulerPro/data/ResourceStore",classDescription:'<p>A class representing the collection of the resources - <a href="#SchedulerPro/model/ResourceModel">SchedulerPro/model/ResourceModel</a> records.</p>',extends:["Scheduler/data/ResourceStore"],mixes:["SchedulerPro/data/mixin/PartOfProject"],constructor:{name:"constructor"},filename:"ResourceStore.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/SchedulerPro/data",lineno:17,typings:"Scheduler/data/ResourceStore -> Scheduler/data/SchedulerResourceStore",properties:[{name:"loadPriority",access:"private",description:"<p>CrudManager must load stores in the correct order. Lowest first.</p>",scope:"inner"},{name:"syncPriority",access:"private",description:"<p>CrudManager must sync stores in the correct order. Lowest first.</p>",scope:"inner"}]},{name:"module:SchedulerPro/data/TaskStore",classDescription:"<p>A class representing the tree of tasks in the Scheduler Pro project. An individual task is represented as an instance of the\n<a href=\"#SchedulerPro/model/ProTaskModel\">SchedulerPro.model.ProTaskModel</a> class. The store expects the data loaded to be hierarchical. Each parent node should\ncontain its children in a property called 'children'.</p>",extends:["Core/data/AjaxStore"],mixes:["Scheduler/data/mixin/EventStoreMixin","Core/data/mixin/StoreTree","SchedulerPro/data/mixin/PartOfProject"],constructor:{name:"constructor"},filename:"TaskStore.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/SchedulerPro/data",lineno:21,properties:[{name:"loadPriority",access:"private",description:"<p>CrudManager must load stores in the correct order. Lowest first.</p>",scope:"inner"},{name:"syncPriority",access:"private",description:"<p>CrudManager must sync stores in the correct order. Lowest first.</p>",scope:"inner"}]},{name:"module:Scheduler/data/api/ProAssignmentAPI",description:"<p>Pro assignment model data API mixin</p>\n<p>The mixin should be mixed alongside with other API mixins, because it might rely on them.</p>",mixin:true,constructor:{name:"constructor"},filename:"ProAssignmentAPI.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/SchedulerPro/data/api",lineno:14},{name:"module:SchedulerPro/data/api/ProDataAPI",description:'<p>This mixin combines all data layer APIs and provides a way to call API method regardless\nif it conflicts with host class method. The mixin should be consumed alongside\nwith <a href="#SchedulerPro/data/api/ProDataAPI">SchedulerPro.data.api.ProDataAPI</a> mixin</p>',mixin:true,constructor:{name:"constructor"},filename:"ProDataAPI.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/SchedulerPro/data/api",lineno:25,properties:[{name:"dataApi",description:"<p>Pro Data layer API gateway</p>",scope:"instance",properties:[{type:{names:["Object"]}}]}]},{name:"module:Scheduler/data/api/ProDependencyAPI",description:"<p>Pro dependency model data API mixin</p>\n<p>The mixin should be mixed alongside with other API mixins, because it might rely on them.</p>\n<p>The mixin should contain basic API overrides</p>",mixin:true,constructor:{name:"constructor"},filename:"ProDependencyAPI.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/SchedulerPro/data/api",lineno:16},{name:"module:Scheduler/data/api/ProEventAPI",description:"<p>Pro event model data API mixin</p>\n<p>The mixin should be mixed alongside with other API mixins, because it might rely on them.</p>",mixin:true,constructor:{name:"constructor"},filename:"ProEventAPI.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/SchedulerPro/data/api",lineno:14},{name:"module:SchedulerPro/data/api/ProProjectAPI",description:'<p>Propagation batch API mixin.</p>\n<p>The mixin contains methods allowing to reduce call to <a href="#SchedulerPro/model/ProProjectModel#function-propagate">propagate()</a> method, which is\nnot cheap operation performance wise.</p>',mixin:true,constructor:{name:"constructor"},filename:"ProProjectAPI.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/SchedulerPro/data/api",lineno:15},{name:"module:Scheduler/data/api/ProResourceAPI",description:"<p>Pro resource model data API mixin</p>\n<p>The mixin should be mixed alongside with other API mixins, because it might rely on them.</p>",mixin:true,constructor:{name:"constructor"},filename:"ProResourceAPI.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/SchedulerPro/data/api",lineno:14},{name:"module:SchedulerPro/data/mixin/PartOfProject",description:"<p>This is a mixin, included in all models and stores of the Scheduler Pro project. It provides a common API for accessing\nall stores of the project.</p>",mixin:true,constructor:{name:"constructor"},filename:"PartOfProject.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/SchedulerPro/data/mixin",lineno:19,functions:[{name:"getEventStore",description:"<p>Returns a task store of the project this entity belongs to.</p>",scope:"inner",returns:{type:"SchedulerPro.data.TaskStore"}},{name:"getResourceStore",description:"<p>Returns a resource store of the project this entity belongs to.</p>",scope:"inner",returns:{type:"SchedulerPro.data.ResourceStore"}},{name:"getAssignmentStore",description:"<p>Returns an assignment store of the project this entity belongs to.</p>",scope:"inner",returns:{type:"SchedulerPro.data.AssignmentStore"}},{name:"getDependencyStore",description:"<p>Returns a dependency store of the project this entity belongs to.</p>",scope:"inner",returns:{type:"SchedulerPro.data.DependencyStore"}},{name:"getCalendarManagerStore",description:"<p>Returns a calendar manager store of the project this entity belongs to.</p>",scope:"inner",returns:{type:"SchedulerPro.data.CalendarManagerStore"}},{name:"getProject",description:"<p>Returns a project this entity belongs to.</p>",scope:"inner",returns:{type:"SchedulerPro.model.ProProjectModel"}}],properties:[{name:"taskStore",description:"<p>Returns a task store of the project this entity belongs to.</p>",scope:"instance",readonly:true,properties:[{type:{names:["SchedulerPro.data.TaskStore"]}}]},{name:"eventStore",description:"<p>Returns a task store of the project this entity belongs to.</p>",scope:"instance",readonly:true,tsIgnore:true,properties:[{type:{names:["SchedulerPro.data.TaskStore","Scheduler.data.EventStore"]}}]},{name:"dependencyStore",description:"<p>Returns a dependency store of the project this entity belongs to.</p>",scope:"instance",readonly:true,tsIgnore:true,properties:[{type:{names:["SchedulerPro.data.DependencyStore","Scheduler.data.DependencyStore"]}}]},{name:"assignmentStore",description:"<p>Returns an assignment store of the project this entity belongs to.</p>",scope:"instance",readonly:true,properties:[{type:{names:["SchedulerPro.data.AssignmentStore","Scheduler.data.AssignmentStore"]}}]},{name:"resourceStore",description:"<p>Returns a resource store of the project this entity belongs to.</p>",scope:"instance",readonly:true,tsIgnore:true,properties:[{type:{names:["SchedulerPro.data.ResourceStore","Scheduler.data.ResourceStore"]}}]},{name:"calendarManagerStore",description:"<p>Returns a calendar manager store of the project this entity belongs to.</p>",scope:"instance",readonly:true,properties:[{type:{names:["SchedulerPro.data.CalendarManagerStore"]}}]}]},{name:"module:SchedulerPro/data/mixin/ProCrudManager",description:"<p>This is a mixin, provding Crud manager functionality, specialized for the Scheduler Pro project.</p>",mixes:["Scheduler/crud/AbstractCrudManagerMixin","Scheduler/crud/transport/AjaxTransport","Scheduler/crud/encoder/JsonEncoder"],mixin:true,constructor:{name:"constructor"},filename:"ProCrudManager.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/SchedulerPro/data/mixin",lineno:22},{name:"module:SchedulerPro/feature/ProDependencies",classDescription:"<p>Dependencies feature adopted to work with ProScheduler.</p>",extends:["Scheduler/feature/Dependencies"],constructor:{name:"constructor"},filename:"ProDependencies.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/SchedulerPro/feature",lineno:15},{name:"module:SchedulerPro/feature/ProEventDrag",classDescription:"<p>Event drag feature adopted to work with ProScheduler</p>",extends:["Scheduler/feature/EventDrag"],constructor:{name:"constructor"},filename:"ProEventDrag.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/SchedulerPro/feature",lineno:16},{name:"module:SchedulerPro/feature/ProEventDragCreate",classDescription:"<p>Event drag-create feature for Pro Scheduler</p>",extends:["Scheduler/feature/EventDragCreate"],constructor:{name:"constructor"},filename:"ProEventDragCreate.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/SchedulerPro/feature",lineno:16},{name:"module:SchedulerPro/feature/ProNonWorkingTime",classDescription:'<p>Feature that allows styling of weekends (and other non working time) by adding timeRanges for those days.</p>\n<p>The feature is like <a href="#Scheduler/feature/NonWorkingTime">Scheduler/feature/NonWorkingTime</a> but intended to work with <a href="#SchedulerPro/view/ProScheduler">SchedulerPro/view/ProScheduler</a>\nand use project\'s <a href="#SchedulerPro/model/ProCalendarModel">calendar</a> to obtain non-working time</p>\n<p>This feature is <strong>enabled</strong> by default</p>',extends:["Scheduler/feature/AbstractTimeRanges"],constructor:{name:"constructor"},filename:"ProNonWorkingTime.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/SchedulerPro/feature",lineno:19,configs:[{name:"calendar",description:"<p>Project entity having a calendar to show calendar of or a calendar model instance itself</p>",type:"Object",scope:"inner"}]},{name:"module:SchedulerPro/feature/ProTaskEdit",classDescription:'<p>The Scheduler Pro task editor feature enables a popup window activated when double clicking a task bar, or through\nthe <a href="#Scheduler/feature/EventContextMenu">Scheduler.feature.EventContextMenu</a></p>\n<p><div class="external-example" data-file="schedulerpro/feature/ProTaskEdit.js">\n            <i class="b-icon b-icon-code b-inline-example"></i>\n            <div class="external-code-container">\n                <div class="external-code example">\n                    <pre><code>\n                    </code></pre>\n                </div>\n            </div>\n            <div class="external-target"></div>\n       </div></p>\n<h2>Customizing tabs</h2>\nYou can append widgets to tabs with a <a href="#SchedulerPro/widget/TaskEditorBase#config-extraItems">extraItems</a>\n<p><div class="external-example" data-file="schedulerpro/feature/ProTaskEditExtraItems.js">\n            <i class="b-icon b-icon-code b-inline-example"></i>\n            <div class="external-code-container">\n                <div class="external-code example">\n                    <pre><code>\n                    </code></pre>\n                </div>\n            </div>\n            <div class="external-target"></div>\n       </div></p>\n<p>To turn off the Task Editor just simple disable the feature.</p>\n<pre class="prettyprint source lang-javascript"><code>new ProScheduler ({\n    features : {\n        eventEdit : false\n    }\n    ...\n})\n</code></pre>',extends:["Core/mixin/InstancePlugin"],mixes:["SchedulerPro/feature/mixin/ProTaskEditStm","Core/mixin/Delayable"],constructor:{name:"constructor"},filename:"ProTaskEdit.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/SchedulerPro/feature",lineno:43,configs:[{name:"triggerEvent",description:"<p>The event that shall trigger showing the editor. Defaults to <code>eventdblclick</code>, set to `` or null to disable editing of existing events.</p>",type:"String",scope:"inner",defaultvalue:"eventdblclick",category:"Editor"},{name:"editorClassMap",description:"<p>Project type to editor class map.</p>",type:"Object",scope:"inner",defaultvalue:'{"undefined":""}',category:"Editor"},{name:"editorClass",description:'<p>Editor class to use, if given will override anything defined in <a href="#SchedulerPro/feature/ProTaskEdit#config-editorClassMap">editorClassMap</a> option.</p>',type:"function",scope:"inner",category:"Editor"},{name:"editorConfig",description:'<p>A configuration object used to configure the internal <a href="#SchedulerPro/widget/TaskEditorBase">TaskEditor</a> which\ncan be used to add additional tabs or remove any of the default ones.</p>',type:"Object",scope:"inner"},{name:"showDeleteButton",description:"<p>True to show a delete button in the editor.</p>",type:"Boolean",scope:"inner",defaultvalue:true,category:"Editor widgets"},{name:"saveAndCloseOnEnter",description:"<p>True to save and close this panel if ENTER is pressed in one of the input fields inside the panel.</p>",type:"Boolean",scope:"inner",defaultvalue:true,category:"Editor"},{name:"tabsConfig",description:'<p>A configuration object used to configure tabs of the task editor which can be used to\ncustomize the built-in tabs without changing the whole <a href="#SchedulerPro/feature/ProTaskEdit#config-editorConfig">editorConfig</a>.\nIt is especially useful when only a few tabs should be changed.\nThe individual configuration objects of the tabs contained in <a href="#SchedulerPro/feature/ProTaskEdit#config-tabsConfig">tabsConfig</a>\nare keyed by tab names and are merged with the default built-in configurations.</p>\n<p>Built-in tab names are:</p>\n<ul>\n<li>generaltab</li>\n<li>predecessorstab</li>\n<li>successorstab</li>\n<li>resourcestab</li>\n<li>advancedtab</li>\n<li>notestab</li>\n</ul>\n<p>The built-in tabs can be individually switched on or off, customized,\nor new custom tab(s) can be added. See <a href="#SchedulerPro/widget/TaskEditorBase#config-tabsConfig">TaskEditorBase</a>\nfor details and example. <a href="#SchedulerPro/feature/ProTaskEdit#config-tabsConfig">tabsConfig</a>\nobject is passed to TaskEditor where it is applied to the built-in and custom tabs.</p>',type:"Object",scope:"inner"},{name:"weekStartDay",description:"<p>The week start day used in all date fields of the feature editor form by default.\n0 means Sunday, 6 means Saturday.\nDefaults to the locale's week start day.</p>",type:"Number",scope:"inner"}],functions:[{name:"editEvent",description:'<p>Shows a <a href="#SchedulerPro/widget/SchedulerTaskEditor">scheduler task editor</a> or <a href="#SchedulerPro/widget/GanttTaskEditor">gantt task editor</a>\nto edit the passed task. This function is exposed on the Scheduler Pro instance and can be called as <code>scheduler.editTask()</code>.</p>',parameters:[{name:"taskRecord",type:["SchedulerPro.model.ProTaskModel","function"],description:"<p>Task to edit or a function returning a task to edit, the function will be executed within an STM transaction\nwhich will be canceled in case user presses Cancel button or closes editor w/o hitting Save.</p>"},{name:"resourceRecord",type:"SchedulerPro.model.ResourceModel",description:"<p>The Resource record for the event.\nThis parameter is needed if the event is newly created for a resource and has not been assigned, or when using\nmulti assignment.</p>",optional:true},{name:"element",type:"HTMLElement",description:"<p>Element to anchor editor to (defaults to events element)</p>",optional:true}],scope:"instance",returns:{type:"Promise",description:"<p>Promise which resolves after the editor is shown</p>"},async:true}],events:[{name:"beforeTaskEdit",description:"<p>Fires on the owning Scheduler instance before a task is displayed in the editor.\nThis may be listened to in order to take over the task editing flow. Returning <code>false</code>\nstops the default editing UI from being shown.</p>",parameters:[{name:"source",type:"SchedulerPro.view.ProScheduler",description:"<p>The Scheduler Pro instance</p>"},{name:"taskEdit",type:"SchedulerPro.feature.ProTaskEdit",description:"<p>The taskEdit feature</p>"},{name:"taskRecord",type:"SchedulerPro.model.ProTaskModel",description:"<p>The task about to be shown in the editor.</p>"},{name:"taskElement",type:"HTMLElement",description:"<p>The element which represents the task</p>"}],preventable:true},{name:"beforeTaskEditShow",description:"<p>Fires on the owning Scheduler when the editor for an event is available but before it is shown. Allows\nmanipulating fields etc.</p>",parameters:[{name:"source",type:"SchedulerPro.view.ProScheduler",description:"<p>The SchedulerPro instance</p>"},{name:"taskEdit",type:"SchedulerPro.feature.ProTaskEdit",description:"<p>The taskEdit feature</p>"},{name:"taskRecord",type:"SchedulerPro.model.ProTaskModel",description:"<p>The task about to be shown in the editor.</p>"},{name:"eventElement",type:"HTMLElement",description:"<p>The element which represents the task</p>"},{name:"editor",type:"SchedulerPro.widget.TaskEditorBase",description:"<p>The editor</p>"}]},{name:"beforeTaskSave",description:"<p>Fires on the owning Scheduler Pro instance before a task is saved</p>",parameters:[{name:"source",type:"SchedulerPro.view.ProScheduler",description:"<p>The Scheduler Pro instance</p>"},{name:"taskRecord",type:"SchedulerPro.model.ProTaskModel",description:"<p>The task about to be saved</p>"},{name:"editor",type:"SchedulerPro.widget.TaskEditorBase",description:"<p>The editor widget</p>"}],preventable:true},{name:"beforeTaskDelete",description:"<p>Fires on the owning Scheduler Pro before a task is deleted, return <code>false</code> to prevent it.</p>",parameters:[{name:"source",type:"SchedulerPro.view.ProScheduler",description:"<p>The Scheduler Pro instance.</p>"},{name:"taskRecord",type:"SchedulerPro.model.ProTaskModel",description:"<p>The record about to be deleted</p>"},{name:"editor",type:"SchedulerPro.widget.TaskEditorBase",description:"<p>The editor widget</p>"}],preventable:true}]},{name:"module:SchedulerPro/feature/mixin/ProTaskEditStm",description:"<p>Mixin adding STM transactable behavior to TaskEdit feature.</p>",mixin:true,constructor:{name:"constructor"},filename:"ProTaskEditStm.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/SchedulerPro/feature/mixin",lineno:12},{name:"module:SchedulerPro/model/AssignmentModel",classDescription:'<p>This class represent a single assignment of a <a href="#SchedulerPro/model/ResourceModel">resource</a> to a <a href="#SchedulerPro/model/ProTaskModel">task</a> in your gantt chart.</p>',extends:["Scheduler/model/AssignmentModel"],mixes:["SchedulerPro/data/mixin/PartOfProject"],constructor:{name:"constructor"},filename:"AssignmentModel.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/SchedulerPro/model",lineno:16,typings:"Scheduler/model/AssignmentModel -> Scheduler/model/SchedulerAssignmentModel",properties:[{name:"event",description:"<p>The reference to the task, this assignment belongs to.</p>",scope:"inner",tsIgnore:true,properties:[{type:{names:["SchedulerPro.model.ProTaskModel"]}}]},{name:"units",description:"<p>Get/set the units of this assignment</p>",scope:"instance",properties:[{type:{names:["Number"]}}]},{name:"task",description:"<p>Task assigned</p>",scope:"instance",properties:[{type:{names:["SchedulerPro.model.ProTaskModel"]},name:"task"}]},{name:"taskName",description:"<p>Associated tasks name</p>",scope:"instance",readonly:true,properties:[{type:{names:["String"]}}]}],fields:[{name:"event",description:"<p>The reference to the task, this assignment belongs to.</p>",type:"SchedulerPro.model.ProTaskModel",scope:"inner",tsIgnore:true},{name:"eventId",description:"<p>This field is not used, please ignore it.</p>",type:["String","Number"],scope:"inner"},{name:"resource",description:"<p>The reference to the resource, this assignment belongs to.</p>",type:"SchedulerPro.model.ResourceModel",scope:"inner",tsIgnore:true},{name:"resourceId",description:"<p>This field is not used, please ignore it.</p>",type:["String","Number"],scope:"inner"}],functions:[{name:"setUnits",description:'<p>Sets the <a href="#SchedulerPro/model/AssignmentModel#property-units">units</a> field. Will cause the schedule to be updated - returns a <code>Promise</code></p>',parameters:[{name:"units",type:"Number"}],scope:"inner",propagating:true,returns:{type:"Promise"},async:true},{name:"setEvent",description:'<p>Sets the <a href="#SchedulerPro/model/AssignmentModel#field-event">event</a> field. Will cause the schedule to be updated - returns a <code>Promise</code></p>',parameters:[{name:"event",type:"SchedulerPro.model.ProTaskModel"}],scope:"inner",propagating:true,returns:{type:"Promise"},async:true},{name:"setResource",description:'<p>Sets the <a href="#SchedulerPro/model/AssignmentModel#field-resource">resource</a> field. Will cause the schedule to be updated - returns a <code>Promise</code></p>',parameters:[{name:"event",type:"SchedulerPro.model.ResourceModel"}],scope:"inner",propagating:true,returns:{type:"Promise"},async:true}]},{name:"module:SchedulerPro/model/ProCalendarIntervalModel",classDescription:'<p>This is a documentation-only class, representing an interval in the <a href="#SchedulerPro/model/ProCalendarModel">calendar</a></p>\n<p>Please refer to the <a href="#guides/calendars.md">calendars guide</a> for details</p>',constructor:{name:"constructor"},filename:"ProCalendarIntervalModel.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/SchedulerPro/model",lineno:14,fields:[{name:"startDate",description:"<p>The start date of the fixed (not recurrent) time interval.</p>",type:"Date",scope:"inner"},{name:"endDate",description:"<p>The end date of the fixed (not recurrent) time interval.</p>",type:"Date",scope:"inner"},{name:"recurrentStartDate",description:'<p>The start date of the recurrent time interval. Should be specified as any expression, recognized\nby the excellent <a href="http://bunkat.github.io/later/">later</a> library.</p>',type:"String",scope:"inner"},{name:"recurrentEndDate",description:'<p>The end date of the recurrent time interval. Should be specified as any expression, recognized\nby the excellent <a href="http://bunkat.github.io/later/">later</a> library.</p>',type:"String",scope:"inner"},{name:"isWorking",description:"<p>The &quot;is working&quot; flag, which defines what kind of interval this is - either working or non-working. Default value is <code>false</code>,\ndenoting non-working intervals.</p>",type:"Boolean",scope:"inner",defaultvalue:"false"}],functions:[{name:"isRecurrent",description:"<p>Whether this interval is recurrent (both <code>recurrentStartDate</code> and <code>recurrentEndDate</code> are present and parsed correctly\nby the <code>later</code> library).</p>",scope:"inner",returns:{type:"Boolean"}},{name:"isStatic",description:"<p>Whether this interval is static - both <code>startDate</code> and <code>endDate</code> are present.</p>",scope:"inner",returns:{type:"Boolean"}},{name:"getStartDateSchedule",description:"<p>Returns an internal representation of the recurrent start date from the <code>later</code> library.</p>",scope:"inner",returns:{type:"Object"}},{name:"getEndDateSchedule",description:"<p>Returns an internal representation of the recurrent end date from the <code>later</code> library.</p>",scope:"inner",returns:{type:"Object"}}]},{name:"module:SchedulerPro/model/ProCalendarModel",classDescription:'<p>This class represents a calendar in the Scheduler Pro project. It contains a collection of the <a href="#SchedulerPro/model/ProCalendarIntervalModel">SchedulerPro.model.ProCalendarIntervalModel</a>.\nEvery interval can be either recurrent (regularly repeating in time) or static.</p>\n<p>Please refer to the <a href="#guides/calendars.md">calendars guide</a> for details</p>',extends:["Core/data/Model"],mixes:["SchedulerPro/data/mixin/PartOfProject"],constructor:{name:"constructor"},filename:"ProCalendarModel.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/SchedulerPro/model",lineno:19,functions:[{name:"addInterval",description:'<p>This method adds a single <a href="#SchedulerPro/model/ProCalendarIntervalModel">SchedulerPro.model.ProCalendarIntervalModel</a> to the internal collection of the calendar</p>',parameters:[{name:"interval",type:"SchedulerPro.model.ProCalendarIntervalModel"}],scope:"inner"},{name:"addIntervals",description:'<p>This method adds an array of <a href="#SchedulerPro/model/ProCalendarIntervalModel">SchedulerPro.model.ProCalendarIntervalModel</a> to the internal collection of the calendar</p>',parameters:[{name:"intervals",type:"Array.<SchedulerPro.model.ProCalendarIntervalModel>"}],scope:"inner"}],fields:[{name:"name",description:"<p>The calendar name.</p>",type:"String",scope:"inner"},{name:"daysPerMonth",description:"<p>The number of days per a month (is used when converting the duration from one unit to another).</p>",type:"Number",scope:"inner",defaultvalue:"30"},{name:"daysPerWeek",description:"<p>The number of days per week (is used when converting the duration from one unit to another).</p>",type:"Number",scope:"inner",defaultvalue:"7"},{name:"hoursPerDay",description:"<p>The number of hours per day (is used when converting the duration from one unit to another).</p>",type:"Number",scope:"inner",defaultvalue:"24"},{name:"unspecifiedTimeIsWorking",description:"<p>The flag, indicating, whether the &quot;unspecified&quot; time (time that does not belong to any interval\nis working (<code>true</code>) or not (<code>false</code>).</p>",type:"Boolean",scope:"inner",defaultvalue:"true"}]},{name:"module:SchedulerPro/model/ProDependencyModel",classDescription:"<p>This class represents a single dependency between the tasks in your Scheduler Pro project.</p>\n<h2>Subclassing the Dependency class</h2>\n<p>The name of any field in data can be customized in the subclass, see the example below.</p>\n<pre class=\"prettyprint source lang-javascript\"><code>class MyDependencyModel extends ProDependencyModel {\n  static get fields() {\n    return [\n      { name: 'to', dataSource : 'targetId' },\n      { name: 'from', dataSource : 'sourceId' }\n    ];\n  }\n}\n</code></pre>",extends:["Scheduler/model/DependencyBaseModel"],constructor:{name:"constructor"},filename:"ProDependencyModel.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/SchedulerPro/model",lineno:67,fields:[{name:"fromEvent",description:"<p>The origin task of this dependency</p>",type:"SchedulerPro.model.ProTaskModel",scope:"inner"},{name:"toEvent",description:"<p>The destination task of this dependency</p>",type:"SchedulerPro.model.ProTaskModel",scope:"inner"},{name:"lag",description:"<p>A numeric part of the lag (or lead) value between the events.\nNegative values are supported and treated as lead. Please note, that only working time is counted as\n&quot;lag&quot; time.</p>",type:"Number",scope:"inner"},{name:"lagUnit",description:"<p>A duration unit part of the lag value between the tasks</p>",type:"String",scope:"inner"}],properties:[{name:"sourceTask",description:"<p>Gets/sets the source task of the dependency</p>",scope:"instance",properties:[{type:{names:["SchedulerPro.model.ProTaskModel"]}}]},{name:"targetTask",description:"<p>Gets/sets the target task of the dependency</p>",scope:"instance",properties:[{type:{names:["SchedulerPro.model.ProTaskModel"]}}]}],functions:[{name:"setLag",description:"<p>Sets the amount of lag for the dependency. Will update the schedule - returns a <code>Promise</code></p>",parameters:[{name:"amount",type:"Number",description:"<p>The amount of lag for the dependency</p>"},{name:"unit",type:"String",description:"<p>Lag duration unit</p>",optional:true}],scope:"inner",propagating:true,returns:{type:"Promise"},async:true},{name:"setFromEvent",description:"<p>Sets the origin task for the dependency. Will update the schedule - returns a <code>Promise</code></p>",parameters:[{name:"event",type:"SchedulerPro.model.ProTaskModel",description:"<p>The new origin event</p>"}],scope:"inner",propagating:true,returns:{type:"Promise"},async:true},{name:"setToEvent",description:"<p>Sets the destination task for the dependency. Will update the schedule - returns a <code>Promise</code></p>",parameters:[{name:"event",type:"SchedulerPro.model.ProTaskModel",description:"<p>The new destination event</p>"}],scope:"inner",propagating:true,returns:{type:"Promise"},async:true}]},{name:"module:SchedulerPro/model/ProProjectModel",classDescription:'<p>This class represents a global project of your Project plan or scheduler - a central place for all data.</p>\n<p>Please refer to <a href="#guides/project_data.md">this guide</a> for more information.</p>',extends:["SchedulerPro/model/ProTaskModel"],mixes:["SchedulerPro/data/mixin/ProCrudManager"],constructor:{name:"constructor"},filename:"ProProjectModel.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/SchedulerPro/model",lineno:30,properties:[{name:"stm",description:"<p>State tracking manager instance the project relies on</p>",scope:"inner",properties:[{type:{names:["Core.data.stm.StateTrackingManager"]}}]},{name:"eventStore",description:'<p>The <a href="#SchedulerPro/data/TaskStore">store</a> holding the tasks information.</p>\n<p>See also <a href="#SchedulerPro/model/ProTaskModel">SchedulerPro.model.ProTaskModel</a></p>',scope:"inner",properties:[{type:{names:["SchedulerPro.data.TaskStore"]}}]},{name:"taskStore",description:'<p>An alias for the <a href="#SchedulerPro/model/ProProjectModel#property-eventStore">eventStore</a></p>\n<p>See also <a href="#SchedulerPro/model/ProTaskModel">SchedulerPro.model.ProTaskModel</a></p>',scope:"inner",properties:[{type:{names:["SchedulerPro.data.TaskStore"]}}]},{name:"dependencyStore",description:'<p>The <a href="#SchedulerPro/data/DependencyStore">store</a> holding the dependencies information.</p>\n<p>See also <a href="#SchedulerPro/model/ProDependencyModel">SchedulerPro.model.ProDependencyModel</a></p>',scope:"inner",properties:[{type:{names:["SchedulerPro.data.DependencyStore"]}}]},{name:"resourceStore",description:'<p>The <a href="#SchedulerPro/data/ResourceStore">store</a> holding the resources that can be assigned to the tasks in the task store.</p>\n<p>See also <a href="#SchedulerPro/model/ResourceModel">SchedulerPro.model.ResourceModel</a></p>',scope:"inner",properties:[{type:{names:["SchedulerPro.data.ResourceStore"]}}]},{name:"assignmentStore",description:'<p>The <a href="#SchedulerPro/data/AssignmentStore">store</a> holding the assignments information.</p>\n<p>See also <a href="#SchedulerPro/model/AssignmentModel">SchedulerPro.model.AssignmentModel</a></p>',scope:"inner",properties:[{type:{names:["SchedulerPro.data.AssignmentStore"]}}]},{name:"calendarManagerStore",description:"<p>The store, holding the calendars information.</p>",scope:"inner",properties:[{type:{names:["SchedulerPro.data.CalendarManagerStore"]}}]}],configs:[{name:"eventModelClass",description:"<p>Deprecated, use <code>taskModelClass</code></p>",type:"SchedulerPro.model.ProTaskModel",scope:"inner",deprecated:true},{name:"taskModelClass",description:'<p>The constructor of the event model class, to be used in the project. Will be set as the <a href="#Core/data/Store#config-modelClass">modelClass</a>\nproperty of the <a href="#SchedulerPro/model/ProProjectModel#property-eventStore">eventStore</a></p>',type:"SchedulerPro.model.ProTaskModel",scope:"inner"},{name:"dependencyModelClass",description:'<p>The constructor of the dependency model class, to be used in the project. Will be set as the <a href="#Core/data/Store#config-modelClass">modelClass</a>\nproperty of the <a href="#SchedulerPro/model/ProProjectModel#property-dependencyStore">dependencyStore</a></p>',type:"SchedulerPro.model.ProDependencyModel",scope:"inner"},{name:"resourceModelClass",description:'<p>The constructor of the resource model class, to be used in the project. Will be set as the <a href="#Core/data/Store#config-modelClass">modelClass</a>\nproperty of the <a href="#SchedulerPro/model/ProProjectModel#property-resourceStore">resourceStore</a></p>',type:"SchedulerPro.model.ResourceModel",scope:"inner"},{name:"assignmentModelClass",description:'<p>The constructor of the resource model class, to be used in the project. Will be set as the <a href="#Core/data/Store#config-modelClass">modelClass</a>\nproperty of the <a href="#SchedulerPro/model/ProProjectModel#property-assignmentStore">assignmentStore</a></p>',type:"SchedulerPro.model.AssignmentModel",scope:"inner"},{name:"calendarModelClass",description:'<p>The constructor of the calendar model class, to be used in the project. Will be set as the <a href="#Core/data/Store#config-modelClass">modelClass</a>\nproperty of the <a href="#SchedulerPro/model/ProProjectModel#property-calendarManagerStore">calendarManagerStore</a></p>',type:"SchedulerPro.model.ProCalendarModel",scope:"inner"},{name:"eventStoreClass",description:"<p>Deprecated, use <code>taskStoreClass</code></p>",type:"SchedulerPro.data.TaskStore",scope:"inner",deprecated:true},{name:"taskStoreClass",description:'<p>The constructor to create an task store instance with. Should be a class, subclassing the <a href="#SchedulerPro/data/TaskStore">SchedulerPro.data.TaskStore</a></p>',type:"SchedulerPro.data.TaskStore",scope:"inner"},{name:"dependencyStoreClass",description:'<p>The constructor to create a dependency store instance with. Should be a class, subclassing the <a href="#SchedulerPro/data/DependencyStore">SchedulerPro.data.DependencyStore</a></p>',type:"SchedulerPro.data.DependencyStore",scope:"inner"},{name:"resourceStoreClass",description:'<p>The constructor to create a dependency store instance with. Should be a class, subclassing the <a href="#SchedulerPro/data/ResourceStore">SchedulerPro.data.ResourceStore</a></p>',type:"SchedulerPro.data.ResourceStore",scope:"inner"},{name:"assignmentStoreClass",description:'<p>The constructor to create a dependency store instance with. Should be a class, subclassing the <a href="#SchedulerPro/data/AssignmentStore">SchedulerPro.data.AssignmentStore</a></p>',type:"SchedulerPro.data.AssignmentStore",scope:"inner"},{name:"calendarManagerStoreClass",description:'<p>The constructor to create a dependency store instance with. Should be a class, subclassing the <a href="#SchedulerPro/data/CalendarManagerStore">SchedulerPro.data.CalendarManagerStore</a></p>',type:"SchedulerPro.data.CalendarManagerStore",scope:"inner"},{name:"eventsData",description:'<p>The initial data, to fill the <a href="#SchedulerPro/model/ProProjectModel#property-taskStore">taskStore</a> with.\nShould be an array of <a href="#SchedulerPro/model/ProTaskModel">TaskModels</a> or it\'s configuration objects.</p>',type:"Array.<SchedulerPro.model.ProTaskModel>",scope:"inner"},{name:"tasksData",description:'<p>The initial data, to fill the <a href="#SchedulerPro/model/ProProjectModel#property-taskStore">taskStore</a> with.\nShould be an array of <a href="#SchedulerPro/model/ProTaskModel">TaskModels</a> or it\'s configuration objects.</p>\n<p>Alias for <a href="#SchedulerPro/model/ProProjectModel#config-eventsData">eventsData</a></p>',type:"Array.<SchedulerPro.model.ProTaskModel>",scope:"inner"},{name:"dependenciesData",description:'<p>The initial data, to fill the <a href="#SchedulerPro/model/ProProjectModel#property-dependencyStore">dependencyStore</a> with.\nShould be an array of <a href="#SchedulerPro/model/ProDependencyModel">DependencyModels</a> or it\'s configuration objects.</p>',type:"Array.<SchedulerPro.model.ProDependencyModel>",scope:"inner"},{name:"resourcesData",description:'<p>The initial data, to fill the <a href="#SchedulerPro/model/ProProjectModel#property-resourceStore">resourceStore</a> with.\nShould be an array of <a href="#SchedulerPro/model/ResourceModel">ResourceModels</a> or it\'s configuration objects.</p>',type:"Array.<SchedulerPro.model.ResourceModel>",scope:"inner"},{name:"assignmentsData",description:'<p>The initial data, to fill the <a href="#SchedulerPro/model/ProProjectModel#property-assignmentStore">assignmentStore</a> with.\nShould be an array of <a href="#SchedulerPro/model/AssignmentModel">AssignmentModels</a> or it\'s configuration objects.</p>',type:"Array.<SchedulerPro.model.AssignmentModel>",scope:"inner"},{name:"calendarsData",description:'<p>The initial data, to fill the <a href="#SchedulerPro/model/ProProjectModel#property-calendarManagerStore">calendarManagerStore</a> with.\nShould be an array of <a href="#SchedulerPro/model/ProCalendarModel">CalendarModels</a> or it\'s configuration objects.</p>',type:"Array.<SchedulerPro.model.ProCalendarModel>",scope:"inner"},{name:"timeRangeStore",description:'<p>Store that holds time ranges (using the <a href="#Scheduler/model/TimeSpan">Scheduler.model.TimeSpan</a> model or subclass thereof) for <a href="#Scheduler/feature/TimeRanges">Scheduler.feature.TimeRanges</a> feature.\nA store will be automatically created if none is specified.</p>',type:["Object","Core.data.Store"],scope:"inner"}],fields:[{name:"startDate",description:"<p>Start date of the project in the ISO 8601 format. Setting this date will constrain all other tasks in the project,\nto start no later than it. If this date is not provided, it will be calculated as the earliest date among all events.</p>",type:["string","Date"],scope:"inner"},{name:"endDate",description:"<p>End date of the project in the ISO 8601 format. If this date is not provided, it will be calculated\nas the earliest date among all tasks.</p>",type:["string","Date"],scope:"inner"}],functions:[{name:"getCalendar",description:"<p>Returns a calendar of the task. If task has never been assigned a calendar a project's calendar will be returned.</p>",scope:"inner",returns:{type:"SchedulerPro.model.ProCalendarModel"}},{name:"setCalendar",description:"<p>Sets the calendar of the task. Will cause the schedule to be updated - returns a <code>Promise</code></p>",parameters:[{name:"calendar",type:"SchedulerPro.model.ProCalendarModel",description:"<p>The new calendar. Provide <code>null</code> to return back to the project calendar.</p>"}],scope:"inner",returns:{type:"Promise"},async:true},{name:"propagate",description:"<p>Causes the scheduling engine to re-evaluate the task data and all associated data and constraints\nand apply necessary changes.</p>",scope:"inner",returns:{type:"Promise"},async:true},{name:"suspendPropagate",description:'<p>Suspend <a href="#SchedulerPro/model/ProProjectModel#function-propagate">propagation</a> processing. When propagation is suspended,\ncalls to <a href="#SchedulerPro/model/ProProjectModel#function-propagate">propagate</a> do not proceed, instead a propagate call is deferred\nuntil a matching <a href="#SchedulerPro/model/ProProjectModel#function-resumePropagate">resumePropagate</a> is called.</p>',scope:"inner"},{name:"resumePropagate",description:'<p>Resume <a href="#SchedulerPro/model/ProProjectModel#function-propagate">propagation</a>. If propagation is resumed (calls may be nested\nwhich increments a suspension counter), then if a call to propagate was made during suspension,\n<a href="#SchedulerPro/model/ProProjectModel#function-propagate">propagate</a> is executed.</p>',parameters:[{name:"trigger",type:"Boolean",description:"<p>Pass <code>false</code> to inhibit automatic propagation if propagate was requested during suspension.</p>",optional:true}],scope:"inner",returns:{type:"Promise"},async:true}]},{name:"module:SchedulerPro/model/ProSubProjectModel",classDescription:"<p>This class represents a single Sub-project in your Scheduler Pro project.</p>\n<p>By default, a Project has the following fields as seen below.</p>\n<h1>Project Fields</h1>\n<ul>\n<li><code>Description</code> - the description of the project, this field maps to the task <code>Note</code> field</li>\n<li><code>AllowDependencies</code> - this field indicates if the project tasks allowed to have dependencies with tasks external to the project</li>\n</ul>",extends:["SchedulerPro/model/ProTaskModel"],constructor:{name:"constructor"},filename:"ProSubProjectModel.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/SchedulerPro/model",lineno:19,fields:[{name:"description",description:"<p>The description of the project</p>",scope:"inner"},{name:"allowDependencies",description:"<p>Allow dependencies</p>",scope:"inner"}],properties:[{name:"isSubProject",description:"<p>Indicates that this is a project.\nCan be used in heterogeneous stores to distinguish project records from task ones.</p>",scope:"instance",properties:[{type:{names:["boolean"]}}]}],functions:[{name:"indent",access:"private",description:"<p>Do not allow to indent/outdent project nodes</p>",scope:"instance"},{name:"outdent",access:"private",scope:"instance"}]},{name:"module:SchedulerPro/model/ProTaskModel",classDescription:'<p>This class represents a task in your Scheduler Pro project. Extend it to add your own custom task fields and methods.</p>\n<h2>Subclassing the TaskModel class</h2>\n<p>To subclass the TaskModel, please see the snippet below.</p>\n<pre class="prettyprint source lang-javascript"><code>class MyTaskModel extends ProTaskModel {\n   static get fields() {\n       return [\n           { name: \'deadlineDate\', type: \'date\' }\n       ]\n   }\n\n   get calculateDeadline() {\n       // TODO implement\n   }\n</code></pre>\n<h2>Creating a new Task programmatically</h2>\n<p>To create a new task programmatically, simply call the TaskModel constructor and pass in any field values.</p>\n<pre class="prettyprint source lang-javascript"><code>const newTask = new ProTaskModel({\n    name        : \'My awesome task\',\n    percentDone : 80, // So awesome it\'s almost done\n    ...\n});\n</code></pre>\n<h2>Start and end dates</h2>\n<p>For all tasks, the end date is non-inclusive: <a href="#SchedulerPro/model/ProTaskModel#field-startDate">startDate</a> &lt;= date &lt; <a href="#SchedulerPro/model/ProTaskModel#field-endDate">endDate</a>.\nExample: a task which starts at 2020/07/18 and has 2 days duration, should have the end date: 2020/07/20, <strong>not</strong> 2018/07/19 23:59:59.\nThe start and end dates of tasks in are <em>points</em> on the time axis and if you specify that a task starts\n01/01/2020 and has 1 day duration, that means the start point is 01/01/2020 00:00 and end point is 02/01/2020 00:00.</p>',extends:["Scheduler/model/TimeSpan"],mixes:["SchedulerPro/data/mixin/PartOfProject"],constructor:{name:"constructor"},filename:"ProTaskModel.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/SchedulerPro/model",lineno:51,properties:[{name:"convertEmptyParentToLeaf",description:'<p>This static configuration option allows you to control whether an empty parent task should be converted into a\nleaf. Enable/disable it for a whole class:</p>\n<pre class="prettyprint source lang-javascript"><code>ProTaskModel.convertEmptyParentToLeaf = false;\n</code></pre>\n<p>By specifying <code>true</code>, all empty parents will be considered leafs. Can also be assigned a configuration object\nwith with the following Boolean properties to customize the behaviour:</p>\n<ul>\n<li><code>onLoad</code> - Apply the transformation on load to any parents without children (<code>children : []</code>)</li>\n<li><code>onRemove</code> - Apply the transformation when all children have been removed from a parent</li>\n</ul>\n<pre class="prettyprint source lang-javascript"><code>ProTaskModel.convertEmptyParentToLeaf = {\n    onLoad   : false,\n    onRemove : true\n}\n</code></pre>',type:{names:["Boolean","Object"]},scope:"static",defaultvalue:"true",category:"Parent & children"},{name:"allDependencies",description:"<p>Returns all dependencies of this task (both incoming and outgoing)</p>",scope:"instance",returns:[{type:{names:["Array.<SchedulerPro.model.ProDependencyModel>"]}}]},{name:"predecessorTasks",description:"<p>Returns all predecessor tasks of a task</p>",scope:"instance",returns:[{type:{names:["Array.<SchedulerPro.model.ProTaskModel>"]}}]},{name:"successorTasks",description:"<p>Returns all successor tasks of a task</p>",scope:"instance",returns:[{type:{names:["Array.<SchedulerPro.model.ProTaskModel>"]}}]},{name:"previousSiblingsTotalCount",description:"<p>Returns count of all sibling nodes (including their children).</p>",scope:"instance",properties:[{type:{names:["Number"]}}]},{name:"sequenceNumber",description:"<p>Returns the sequential number of the task. A sequential number means the ordinal position of the task in the total dataset, regardless\nof its nesting level and collapse/expand state of any parent tasks. The root node has a sequential number equal to 0.</p>\n<p>For example, in the following tree data sample sequential numbers are specified in the comments:</p>\n<pre><code>   root : {\n       children : [\n           {   // 1\n               leaf : true\n           },\n           {       // 2\n               children : [\n                   {   // 3\n                       children : [\n                           {   // 4\n                               leaf : true\n                           },\n                           {   // 5\n                               leaf : true\n                           }\n                       ]\n                   }]\n           },\n           {   // 6\n               leaf : true\n           }\n       ]\n   }\n</code></pre>\n<p>If we will collapse some of the parent tasks, sequential number of collapsed tasks won't change.</p>",scope:"instance",properties:[{type:{names:["Number"]}}]},{name:"subProject",access:"private",description:'<p>Returns the <a href="#SchedulerPro/model/ProSubProjectModel">SchedulerPro.model.ProSubProjectModel</a> instance, associated with this task if this task belongs to a project</p>',scope:"instance",returns:[{type:{names:["SchedulerPro.model.ProSubProjectModel","Null"]},description:"<p>project</p>"}]},{name:"fullEffort",description:"<p>Property which encapsulates the effort's magnitude and units.</p>",scope:"instance",properties:[{description:"<p>Object with two fields: <code>unit</code> and <code>magnitude</code></p>",type:{names:["Object"]},name:"fullEffort"}]},{name:"outgoingDeps",description:"<p>A <code>Set&lt;SchedulerPro.model.ProDependencyModel&gt;</code> of the outgoing dependencies for this task</p>",scope:"inner",readonly:true,properties:[{type:{names:["Set"]}}]},{name:"incomingDeps",description:"<p>A <code>Set&lt;SchedulerPro.model.ProDependencyModel&gt;</code> of the incoming dependencies for this task</p>",scope:"inner",readonly:true,properties:[{type:{names:["Set"]}}]},{name:"assignments",description:"<p>An array of the assignments, related to this task</p>",scope:"inner",readonly:true,properties:[{type:{names:["Array.<SchedulerPro.model.AssignmentModel>"]}}]}],fields:[{name:"id",description:"<p>Unique identifier of task (mandatory)</p>",type:["string","number"],scope:"inner"},{name:"name",description:"<p>Name of the task</p>",type:"string",scope:"inner"},{name:"startDate",description:"<p>Start date of the task in ISO 8601 format</p>",type:["string","Date"],scope:"inner"},{name:"endDate",description:"<p>End date of the task in ISO 8601 format</p>",type:["string","Date"],scope:"inner"},{name:"cls",description:"<p>An encapsulation of the CSS classes to be added to the rendered event element.</p>",type:["Core.helper.util.DomClassList","String"],scope:"inner"},{name:"durationUnit",description:'<p>The unit part of the task duration, defaults to &quot;day&quot; (days). Valid values are:</p>\n<ul>\n<li>&quot;millisecond&quot; - Milliseconds</li>\n<li>&quot;second&quot; - Seconds</li>\n<li>&quot;minute&quot; - Minutes</li>\n<li>&quot;hour&quot; - Hours</li>\n<li>&quot;day&quot; - Days</li>\n<li>&quot;week&quot; - Weeks</li>\n<li>&quot;month&quot; - Months</li>\n<li>&quot;quarter&quot; - Quarters</li>\n<li>&quot;year&quot;- Years</li>\n</ul>\n<p>This field is readonly after creation, to change it use the <a href="#SchedulerPro/model/ProTaskModel#function-setDuration">setDuration</a> call.</p>',type:"String",scope:"inner",defaultvalue:'"day"'},{name:"calendar",description:'<p>The calendar, assigned to the task. Allows you to set the time when task can be performed.</p>\n<p>All tasks by default are assigned to the project calendar, provided as the <a href="#SchedulerPro/model/ProProjectModel#field-calendar">calendar</a> option.</p>',type:"SchedulerPro.model.ProCalendarModel",scope:"inner"},{name:"note",description:"<p>A freetext note about the task.</p>",type:"string",scope:"inner"},{name:"percentDone",description:"<p>The current status of a task, expressed as the percentage completed (integer from 0 to 100)</p>",type:"number",scope:"inner"},{name:"manuallyScheduled",description:"<p>When set to <code>true</code>, the <code>startDate</code> of the task will not be changed by any of its incoming dependencies\nor constraints.</p>",type:"boolean",scope:"inner"},{name:"showInTimeline",description:"<p>Set this to true if this task should be shown in the Timeline widget</p>",type:"boolean",scope:"inner"},{name:"iconCls",description:"<p>CSS class specifying an icon to apply to the event</p>",type:"string",scope:"inner"},{name:"draggable",description:'<p>Specify false to prevent the event from being dragged (if <a href="#Scheduler/feature/EventDrag">Scheduler/feature/EventDrag</a> feature is used)</p>',type:"boolean",scope:"inner",defaultvalue:"true"},{name:"resizable",description:"<p>Specify false to prevent the task from being resized (if <a href=\"#Scheduler/feature/EventResize\">Scheduler/feature/EventResize</a> feature is used). You can also\nspecify 'start' or 'end' to only allow resizing in one direction</p>",type:["boolean","string"],scope:"inner",defaultvalue:"true"}],functions:[{name:"convertToMilestone",description:"<p>Converts this task to a milestone (start date will match the end date).</p>",scope:"instance",propagating:true},{name:"convertToRegular",description:'<p>Converts the milestone task to a regular task with a duration of 1 (keeping current <a href="#SchedulerPro/model/ProTaskModel#field-durationUnit">durationUnit</a>).</p>',scope:"instance",propagating:true},{name:"getAssignmentFor",description:'<p>If given resource is assigned to this task, returns a <a href="#SchedulerPro/model/AssignmentModel">SchedulerPro.model.AssignmentModel</a> record.\nOtherwise returns <code>null</code></p>',parameters:[{name:"resource",type:"SchedulerPro.model.ResourceModel",description:'<p>The instance of <a href="#SchedulerPro/model/ResourceModel">SchedulerPro.model.ResourceModel</a></p>'}],scope:"inner",returns:{type:["SchedulerPro.model.AssignmentModel","null"]}},{name:"assign",description:"<p>This method assigns a resource to this task.</p>\n<p>Will cause the schedule to be updated - returns a <code>Promise</code></p>",parameters:[{name:"resource",type:"SchedulerPro.model.ResourceModel",description:'<p>The instance of <a href="#SchedulerPro/model/ResourceModel">SchedulerPro.model.ResourceModel</a></p>'},{name:"units",type:"Number",description:"<p>The <code>units</code> field of the new assignment</p>",default:100,optional:true}],scope:"inner",propagating:true,returns:{type:"Promise"},async:true},{name:"unassign",description:"<p>This method unassigns a resource from this task.</p>\n<p>Will cause the schedule to be updated - returns a <code>Promise</code></p>",parameters:[{name:"resource",type:"SchedulerPro.model.ResourceModel",description:'<p>The instance of <a href="#SchedulerPro/model/ResourceModel">SchedulerPro.model.ResourceModel</a></p>'}],scope:"inner",propagating:true,returns:{type:"Promise"},async:true},{name:"setCalendar",description:"<p>Sets the calendar of the task. Will cause the schedule to be updated - returns a <code>Promise</code></p>",parameters:[{name:"calendar",type:"SchedulerPro.model.ProCalendarModel",description:"<p>The new calendar. Provide <code>null</code> to return back to the project calendar.</p>"}],scope:"inner",propagating:true,returns:{type:"Promise"},async:true},{name:"getCalendar",description:"<p>Returns a calendar of the task. If task has never been assigned a calendar the project's calendar will be returned.</p>",scope:"inner",returns:{type:"SchedulerPro.model.ProCalendarModel"}},{name:"setStartDate",description:"<p>Sets the start date of the task. Will cause the schedule to be updated - returns a <code>Promise</code></p>\n<p>Note, that the actually set start date may be adjusted, according to the calendar, by skipping the non-working time forward.</p>",parameters:[{name:"date",type:"Date",description:"<p>The new start date.</p>"},{name:"keepDuration",type:"Boolean",description:"<p>Whether to keep the duration (and update the end date), while changing the start date, or vice-versa.</p>",default:true,optional:true}],scope:"inner",propagating:true,returns:{type:"Promise"},async:true},{name:"setEndDate",description:"<p>Sets the end date of the task. Will cause the schedule to be updated - returns a <code>Promise</code></p>\n<p>Note, that the actually set end date may be adjusted, according to the calendar, by skipping the non-working time backward.</p>",parameters:[{name:"date",type:"Date",description:"<p>The new end date.</p>"},{name:"keepDuration",type:"Boolean",description:"<p>Whether to keep the duration (and update the start date), while changing the end date, or vice-versa.</p>",default:false,optional:true}],scope:"inner",propagating:true,returns:{type:"Promise"},async:true},{name:"setDuration",description:"<p>Updates the duration (and optionally unit) of the task. Will cause the schedule to be updated - returns a <code>Promise</code></p>",parameters:[{name:"duration",type:"Number",description:"<p>New duration value</p>"},{name:"unit",type:"String",description:"<p>New duration unit</p>",optional:true}],scope:"inner",propagating:true,returns:{type:"Promise"},async:true}]},{name:"module:SchedulerPro/model/ProTaskSegmentModel",classDescription:"<p>This class represents a segment of a split task in your Scheduler Pro project.</p>",extends:["SchedulerPro/model/ProTaskModel"],constructor:{name:"constructor"},filename:"ProTaskSegmentModel.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/SchedulerPro/model",lineno:16},{name:"module:SchedulerPro/model/ResourceModel",classDescription:"<p>This class represents a single resource in your Scheduler Pro project.</p>\n<p>If you want to add or change some fields, describing resources - subclass this class:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>class MyResourceModel extends ResourceModel {\n\n  static get fields() {\n    return [\n      { name: 'company', type: 'string' }\n    ]\n  }\n}\n</code></pre>\n<p>See also: <a href=\"#SchedulerPro/model/AssignmentModel\">SchedulerPro/model/AssignmentModel</a></p>",extends:["Scheduler/model/ResourceModel"],mixes:["SchedulerPro/data/mixin/PartOfProject"],constructor:{name:"constructor"},filename:"ResourceModel.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/SchedulerPro/model",lineno:30,typings:"Scheduler/model/ResourceModel -> Scheduler/model/SchedulerResourceModel",fields:[{name:"calendar",description:'<p>The calendar, assigned to the entity. Allows you to set the time when entity can perform the work.</p>\n<p>All entities are by default assigned to the project calendar, provided as the <a href="#SchedulerPro/model/ProProjectModel#field-calendar">calendar</a> option.</p>',type:"SchedulerPro.model.ProCalendarModel",scope:"inner"}],functions:[{name:"setCalendar",description:"<p>Sets the calendar of the task. Will cause the schedule to be updated - returns a <code>Promise</code></p>",parameters:[{name:"calendar",type:"SchedulerPro.model.ProCalendarModel",description:"<p>The new calendar. Provide <code>null</code> to return back to the project calendar.</p>"}],scope:"inner",propagating:true,returns:{type:"Promise"},async:true},{name:"getCalendar",description:"<p>Returns a calendar of the task. If task has never been assigned a calendar a project's calendar will be returned.</p>",scope:"inner",returns:{type:"SchedulerPro.model.ProCalendarModel"}}],properties:[{name:"assignments",description:"<p>Returns an array of assignments, associated with this resource</p>",scope:"instance",readonly:true,tsIgnore:true,properties:[{type:{names:["Array.<SchedulerPro.model.AssignmentModel>"]}}]},{name:"tasks",description:"<p>Returns an array of tasks, associated with this resource</p>",scope:"instance",readonly:true,properties:[{type:{names:["Array.<SchedulerPro.model.ProTaskModel>"]}}]}]},{name:"module:SchedulerPro/view/ProScheduler",classDescription:"<p>ProScheduler is the scheduler with SchedulingEngine support.</p>",extends:["Scheduler/view/Scheduler"],mixes:["SchedulerPro/view/mixin/ProSchedulerStores"],constructor:{name:"constructor"},filename:"ProScheduler.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/SchedulerPro/view",lineno:31,configs:[{name:"project",description:"<p>The project instance, containing the data, that this chart is going to be visualizing.</p>",type:"SchedulerPro.model.ProProjectModel",scope:"inner",properties:[{type:{names:["SchedulerPro.model.ProProjectModel"]},name:"project"}]},{name:"crudManagerClass",access:"private",description:"<p><strong>This config is not used in the Pro Scheduler view</strong></p>",type:"Scheduler.crud.AbstractCrudManagerMixin",scope:"inner"},{name:"crudManager",access:"private",description:'<p><strong>This config is not used in the Pro Scheduler view. Please use <a href="#SchedulerPro/view/ProScheduler#config-project">project</a> config instead</strong></p>',type:["Object","Scheduler.crud.AbstractCrudManagerMixin"],scope:"inner"},{name:"durationDisplayPrecision",description:"<p>Decimal precision used for displaying durations, used by tooltips and DurationColumn.\nSpecify <code>false</code> to use raw value</p>",type:["Number","Boolean"],scope:"inner",defaultvalue:1}],functions:[{name:"removeRecords",access:"private",parameters:[{name:"records",type:["Array.<Scheduler.model.AssignmentModel>","Array.<Scheduler.model.EventModel>"]}],scope:"instance",returns:{type:"Promise"},async:true}]},{name:"module:SchedulerPro/view/mixin/ProSchedulerStores",description:"<p>Functions for store assignment and store event listeners overriden for Scheduler Pro</p>",mixin:true,constructor:{name:"constructor"},filename:"ProSchedulerStores.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/SchedulerPro/view/mixin",lineno:12},{name:"module:SchedulerPro/widget/CalendarField",classDescription:"<p>Event calendar selector combo.</p>",constructor:{name:"constructor"},filename:"CalendarField.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/SchedulerPro/widget",lineno:11},{name:"module:SchedulerPro/widget/ConstraintTypePicker",classDescription:'<p>Combo box preconfigured with possible scheduling mode values. This picker doesn\'t support <a href="#Core/widget/Combo#config-multiSelect">multiSelect</a>.</p>\n<p>This field can be used as an editor for the <a href="#Grid/column/Column">Column</a>.\nIt is used as the default editor for the <code>ConstraintTypeColumn</code>.</p>',extends:["Core/widget/Combo"],constructor:{name:"constructor"},filename:"ConstraintTypePicker.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/SchedulerPro/widget",lineno:17},{name:"module:Gantt/widget/DependencyTypePicker",classDescription:"<p>Selects a Dependency linkage type between two tasks.</p>",extends:["Core/widget/Combo"],constructor:{name:"constructor"},filename:"DependencyTypePicker.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/SchedulerPro/widget",lineno:18,classType:"dependencytypepicker"},{name:"module:SchedulerPro/widget/EffortField",classDescription:"<p>A specialized field allowing a user to also specify duration unit when editing the effort value.</p>",extends:["Core/widget/DurationField"],constructor:{name:"constructor"},filename:"EffortField.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/SchedulerPro/widget",lineno:17,classType:"effort"},{name:"module:SchedulerPro/widget/EndDateField",classDescription:'<p>Date field widget (text field + date picker) to be used together with Scheduling Engine.\nThis field adjusts time to the latest possible time of the day based on active <a href="#SchedulerPro/model/ProProjectModel#field-calendar">calendar</a>.</p>\n<p>This field can be used as an editor for the <a href="#Grid/column/Column">Column</a>.\nIt is used as the default editor for the <code>EndDateColumn</code>.</p>',extends:["Core/widget/DateField"],constructor:{name:"constructor"},filename:"EndDateField.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/SchedulerPro/widget",lineno:19,classType:"enddatefield",configs:[{name:"project",description:'<p>Project model which is a central place for all data to schedule including\n<a href="#SchedulerPro/model/ProProjectModel#property-calendarManagerStore">calendars</a>\nwhich have info about working/non-working time.</p>',type:"SchedulerPro.model.ProProjectModel",scope:"inner"}]},{name:"module:SchedulerPro/widget/GanttTaskEditor",classDescription:'<p><a href="#SchedulerPro/widget/TaskEditorBase">SchedulerPro/widget/TaskEditorBase</a> subclass for Gantt projects which SchedulerPro can handle as well.</p>',extends:["SchedulerPro/widget/TaskEditorBase"],constructor:{name:"constructor"},filename:"GanttTaskEditor.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/SchedulerPro/widget",lineno:11},{name:"module:Gantt/widget/ModelCombo",classDescription:"<p>Special combo class returning a model from the store as it's value</p>",constructor:{name:"constructor"},filename:"ModelCombo.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/SchedulerPro/widget",lineno:11},{name:"module:SchedulerPro/widget/SchedulerTaskEditor",classDescription:"<p><a href=\"#SchedulerPro/widget/TaskEditorBase\">SchedulerPro/widget/TaskEditorBase</a> subclass for simplified SchedulerPro projects.</p>\n<p>Provides a UI to edit tasks in a dialog. To append Widgets to any of the built-in tabs, use the <code>extraItems</code> config.</p>\n<p>Built-in tab names are:</p>\n<ul>\n<li>generaltab</li>\n<li>predecessorstab</li>\n<li>successorstab</li>\n<li>resourcestab</li>\n<li>advancedtab</li>\n<li>notestab</li>\n</ul>\n<p>Example:</p>\n<pre class=\"prettyprint source\"><code>new ProScheduler({\n  features : {\n    taskEdit : {\n      editorConfig : {\n        extraItems : {\n          generaltab : [\n            { type : 'button', text : 'My Button' },\n            ...\n          ]\n        }\n      },\n      tabsConfig : {\n        // change title of General tab\n        generaltab : {\n          title : 'Common'\n        },\n\n        // remove Notes tab\n        notestab : false,\n\n        // add custom Files tab\n        filestab : { type : 'filestab' },\n        ...\n      }\n    }\n  }\n});\n</code></pre>",extends:["SchedulerPro/widget/TaskEditorBase"],constructor:{name:"constructor"},filename:"SchedulerTaskEditor.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/SchedulerPro/widget",lineno:54,externalExamples:["schedulerpro/widget/SchedulerTaskEditor.js"]},{name:"module:SchedulerPro/widget/SchedulingModePicker",classDescription:'<p>Combo box preconfigured with possible scheduling mode values.</p>\n<p>This field can be used as an editor for the <a href="#Grid/column/Column">Column</a>.\nIt is used as the default editor for the <code>SchedulingModeColumn</code>.</p>',extends:["Core/widget/Combo"],constructor:{name:"constructor"},filename:"SchedulingModePicker.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/SchedulerPro/widget",lineno:18},{name:"module:SchedulerPro/widget/StartDateField",classDescription:'<p>Date field widget (text field + date picker) to be used together with Scheduling Engine.\nThis field adjusts time to the earliest possible time of the day based on active <a href="#SchedulerPro/model/ProProjectModel#field-calendar">calendar</a>.</p>\n<p>This field can be used as an editor for the <a href="#Grid/column/Column">Column</a>.\nIt is used as the default editor for the <code>StartDateColumn</code>.</p>',extends:["Core/widget/DateField"],constructor:{name:"constructor"},filename:"StartDateField.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/SchedulerPro/widget",lineno:19,classType:"startdatefield",configs:[{name:"project",description:'<p>Project model which is a central place for all data to schedule including\n<a href="#SchedulerPro/model/ProProjectModel#property-calendarManagerStore">calendars</a>\nwhich have info about working/non-working time.</p>',type:"SchedulerPro.model.ProProjectModel",scope:"inner"}]},{name:"module:SchedulerPro/widget/TaskEditorBase",classDescription:"<p>Abstract base class for Scheduler and Gantt task editors</p>",extends:["Core/widget/Popup"],constructor:{name:"constructor"},filename:"TaskEditorBase.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/SchedulerPro/widget",lineno:24,properties:[{name:"durationDecimalPrecision",description:"<p>Duration field/columns decimal precision</p>",scope:"inner"}],configs:[{name:"extraItems",description:"<p>Config object specifying widgets for tabs in task editor. Every tab accepts array of widgets/widget configs.\nTab names are:</p>\n<ul>\n<li>schedulergeneraltab</li>\n<li>generaltab</li>\n<li>predecessorstab</li>\n<li>successorstab</li>\n<li>resourcestab</li>\n<li>advancedtab</li>\n<li>notestab</li>\n</ul>\n<p>Example:</p>\n<pre class=\"prettyprint source\"><code>new ProScheduler({\n  features : {\n    taskEdit : {\n      editorConfig : {\n        extraItems : {\n          generaltab : [\n            { type : 'button', text : 'My Button' },\n            ...\n          ]\n        }\n      }\n    }\n  }\n});\n</code></pre>",type:"Object",scope:"inner"},{name:"tabsConfig",description:"<p>A configuration object used to configure the built-in tabs or to add custom tab(s).\nThe individual configuration objects of the tabs contained in <a href=\"#SchedulerPro/widget/TaskEditorBase#config-tabsConfig\">tabsConfig</a>\nare keyed by tab names and are merged with the default built-in configurations.</p>\n<p>Built-in tab names are:</p>\n<ul>\n<li>schedulergeneraltab</li>\n<li>generaltab</li>\n<li>predecessorstab</li>\n<li>successorstab</li>\n<li>resourcestab</li>\n<li>advancedtab</li>\n<li>notestab</li>\n</ul>\n<p>The built-in tabs can be individually switched on or off, customized,\nor new custom tab(s) can be added.</p>\n<p>Example:</p>\n<pre class=\"prettyprint source\"><code>new ProScheduler({\n  features : {\n    taskEdit : {\n      tabsConfig : {\n        // change title of General tab\n        generaltab : {\n          title : 'Common'\n        },\n\n        // remove Notes tab\n        notestab : false,\n\n        // add custom Files tab\n        filestab : { type : 'filestab' },\n        ...\n      }\n    }\n  }\n});\n</code></pre>",type:"Object",scope:"inner"},{name:"extraWidgets",description:'<p>This config has been deprecated in favour of <a href="#SchedulerPro/widget/TaskEditorBase#config-extraItems">extraItems</a>.</p>',type:["String","Array.<Object>"],scope:"inner",category:"Editor widgets",deprecated:true}],functions:[{name:"loadEvent",description:"<p>Loads a task model into the editor</p>",parameters:[{name:"record",type:"SchedulerPro.model.ProTaskModel"}],scope:"instance"}]},{name:"module:SchedulerPro/widget/taskeditor/AdvancedTab",classDescription:'<p>Advanced task options <a href="#SchedulerPro/widget/SchedulerTaskEditor">scheduler task editor</a> or <a href="#SchedulerPro/widget/GanttTaskEditor">gantt task editor</a> tab.</p>',access:"internal",constructor:{name:"constructor"},filename:"AdvancedTab.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/SchedulerPro/widget/taskeditor",lineno:17},{name:"module:Gantt/widget/taskeditor/DependencyTab",access:"internal",constructor:{name:"constructor"},filename:"DependencyTab.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/SchedulerPro/widget/taskeditor",lineno:33},{name:"module:Gantt/widget/taskeditor/FormTab",classDescription:'<p>Base class for form-like <a href="#SchedulerPro/widget/SchedulerTaskEditor">scheduler task editor</a> or <a href="#SchedulerPro/widget/GanttTaskEditor">gantt task editor</a> tabs.</p>',access:"internal",constructor:{name:"constructor"},filename:"FormTab.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/SchedulerPro/widget/taskeditor",lineno:18},{name:"module:SchedulerPro/widget/taskeditor/GeneralTab",classDescription:'<p>A tab inside the <a href="#SchedulerPro/widget/SchedulerTaskEditor">scheduler task editor</a> or <a href="#SchedulerPro/widget/GanttTaskEditor">gantt task editor</a> showing the general information for a task.</p>',access:"internal",constructor:{name:"constructor"},filename:"GeneralTab.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/SchedulerPro/widget/taskeditor",lineno:15},{name:"module:SchedulerPro/widget/taskeditor/NotesTab",classDescription:'<p>A tab inside the <a href="#SchedulerPro/widget/SchedulerTaskEditor">scheduler task editor</a> or <a href="#SchedulerPro/widget/GanttTaskEditor">gantt task editor</a> showing the notes for an event or task.</p>',access:"internal",constructor:{name:"constructor"},filename:"NotesTab.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/SchedulerPro/widget/taskeditor",lineno:13},{name:"module:Gantt/widget/taskeditor/PredecessorsTab",classDescription:'<p>A tab inside the <a href="#SchedulerPro/widget/SchedulerTaskEditor">scheduler task editor</a> or <a href="#SchedulerPro/widget/GanttTaskEditor">gantt task editor</a> showing the predecessors of an event or task.</p>',access:"internal",constructor:{name:"constructor"},filename:"PredecessorsTab.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/SchedulerPro/widget/taskeditor",lineno:12},{name:"module:Gantt/widget/taskeditor/ResourcesTab",classDescription:'<p>A tab inside the <a href="#SchedulerPro/widget/SchedulerTaskEditor">scheduler task editor</a> or <a href="#SchedulerPro/widget/GanttTaskEditor">gantt task editor</a> showing the assigned resources for an event or task.</p>',access:"internal",constructor:{name:"constructor"},filename:"ResourcesTab.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/SchedulerPro/widget/taskeditor",lineno:16},{name:"module:SchedulerPro/widget/taskeditor/SchedulerGeneralTab",classDescription:'<p>A tab inside the <a href="#SchedulerPro/widget/SchedulerTaskEditor">scheduler task editor</a> or <a href="#SchedulerPro/widget/GanttTaskEditor">gantt task editor</a> showing the general information for a task\nfrom a simplified scheduler project.</p>',access:"internal",constructor:{name:"constructor"},filename:"SchedulerGeneralTab.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/SchedulerPro/widget/taskeditor",lineno:16},{name:"module:Gantt/widget/taskeditor/SuccessorsTab",classDescription:'<p>A tab inside the <a href="#SchedulerPro/widget/SchedulerTaskEditor">scheduler task editor</a> or <a href="#SchedulerPro/widget/GanttTaskEditor">gantt task editor</a>\nshowing the successors of an event or task.</p>',access:"internal",constructor:{name:"constructor"},filename:"SuccessorsTab.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/SchedulerPro/widget/taskeditor",lineno:14},{name:"module:SchedulerPro/widget/taskeditor/mixin/EventLoader",description:"<p>Mixin class for task editor widgtes which require record loading functionality</p>",mixin:true,constructor:{name:"constructor"},filename:"EventLoader.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/SchedulerPro/widget/taskeditor/mixin",lineno:12},{name:"module:Gantt/widget/taskeditor/mixin/TaskEditorTab",description:"<p>Mixin class for task editor tabs which processes common tab configs. Like <code>extraWidgets</code></p>",mixin:true,constructor:{name:"constructor"},filename:"TaskEditorTab.js",path:"/home/dev/workspace/BUILDS/91835/Bryntum/bryntum-suite/Gantt/lib/SchedulerPro/widget/taskeditor/mixin",lineno:11}],functions:[{name:"isType",description:"<p>Determines whether the passed widget matches the passed type. So a <a href=\"#Core/widget/Combo\">Core.widget.Combo</a>\nwould match any of its three registered types, <code>'combobox'</code>, '<code>combo'</code> or <code>'dropdown'</code>.</p>\n<p>Pass the <code>deep</code> parameter as <code>true</code> to test the class hierarchy also, so if <code>deep</code>, a\n<a href=\"#Core/widget/Combo\">Core.widget.Combo</a> would also match <code>'pickerfield'</code>, <code>'field'</code> and <code>'widget'</code>.</p>\n<p>Note that this is <em>type</em> matching, not querying, so patterns such as <code>'*'</code> will not match.</p>",parameters:[{name:"widget",type:"Core.widget.Widget",description:"<p>The widget to test.</p>"},{name:"type",type:"String",description:"<p>The type string to test against.</p>"},{name:"deep",type:"Boolean",description:"<p>Whether to test the widget's superclass hierarchy.</p>",optional:true}],scope:"global",returns:{type:"Boolean",description:"<p><code>true</code> if the passed widget matches the passed selector.</p>"}},{name:"getConnectorStartSide",description:"<p>Gets displaying item start side</p>",parameters:[{name:"taskRecord",type:"Gantt.model.TaskModel"}],scope:"global",returns:{type:"String",description:"<p>'left' / 'right' / 'top' / 'bottom'</p>"}},{name:"getConnectorEndSide",description:"<p>Gets displaying item end side</p>",parameters:[{name:"taskRecord",type:"Gantt.model.TaskModel"}],scope:"global",returns:{type:"String",description:"<p>'left' / 'right' / 'top' / 'bottom'</p>"}},{name:"getNthDayInPeriod",access:"private",description:"<p>Returns Nth occurrence of a week day in the provided period of time.</p>",parameters:[{name:"startDate",type:"Date",description:"<p>Period start date.</p>"},{name:"endDate",type:"Date",description:"<p>Period end date.</p>"},{name:"day",type:"Integer",description:"<p>Week day (0 - Sunday, 1 - Monday, 2 - Tuesday, etc.)</p>"},{name:"index",type:"Integer",description:"<p>Index to find.</p>"}],scope:"global",returns:{type:"Date",description:"<p>Returns the found date or null if there is no <code>index</code>th entry.</p>"}},{name:"clear",access:"internal",description:"<p>Clear event &amp; row layout cache (removes cached layout for all resources and events)</p>",scope:"global"},{name:"clearEvent",access:"private",description:"<p>Clears the event layout for the passed event and resource. Will usually preserve\nthe event DIVs for recycling unless <code>removeDiv</code> is passed. If preserving them,\nit will hide the div unless <code>remainVisible</code> is passed.</p>",parameters:[{name:"eventId",type:"*",description:"<p>ID of event</p>"},{name:"resourceId",type:"*",description:"<p>ID of resource</p>"},{name:"removeDiv",type:"*",description:"<p>Defaults to false</p>",default:false},{name:"remainVisible",type:"*",description:"<p>Defaults to false</p>",default:false}],scope:"global"},{name:"addTemporaryDragElement",access:"private",description:"<p>Used by event drag features to bring into existence event elements that are outside of the rendered block.</p>",parameters:[{name:"eventRecord",type:"Scheduler.model.TimeSpan",description:"<p>The event to render</p>"}],scope:"global"}],configs:[{name:"parentModel",description:"<p>Reference to a parent model a child model has been removed to.</p>",type:"Core.data.Model",scope:"global"},{name:"childModels",description:"<p>Children models removed.</p>",type:"Array.<Core.data.Model>",scope:"global"},{name:"context",description:"<p>Map having children models as keys and values containing previous parent\nindex at the parent.</p>",type:"Object",scope:"global"},{name:"positiveValue",description:"<p>Positive option value</p>",type:"*",scope:"global"},{name:"positiveText",description:"<p>Positive option display value</p>",type:"String",scope:"global"},{name:"negativeValue",description:"<p>Negative option value</p>",type:"*",scope:"global"},{name:"negativeText",description:"<p>False option display value</p>",type:"String",scope:"global"},{name:"value",description:"<p>Default value</p>",type:"*",scope:"global"},{name:"centerContentHorizontally",description:"<p>Set to true to center content horizontally on the page</p>",type:"Boolean",scope:"global"},{name:"draggable",description:"<p>Set to false to prevent this column header from being dragged.</p>",type:"Boolean",scope:"global",defaultvalue:"false",category:"Interaction"},{name:"groupable",description:"<p>Set to false to prevent grouping by this column.</p>",type:"Boolean",scope:"global",defaultvalue:"false",category:"Interaction"},{name:"hideable",description:"<p>Allow column visibility to be toggled through UI.</p>",type:"Boolean",scope:"global",defaultvalue:"false",category:"Interaction"},{name:"showColumnPicker",description:"<p>Show column picker for the column.</p>",type:"Boolean",scope:"global",defaultvalue:"false",category:"Menu"},{name:"filterable",description:"<p>Allow filtering data in the column (if Filter feature is enabled)</p>",type:"Boolean",scope:"global",defaultvalue:"false",category:"Interaction"},{name:"sortable",description:"<p>Allow sorting of data in the column</p>",type:"Boolean",scope:"global",defaultvalue:"false",category:"Interaction"},{name:"searchable",description:"<p>Allow searching in the column (respected by QuickFind and Search features)</p>",type:"Boolean",scope:"global",defaultvalue:"false",category:"Interaction"},{name:"editor",description:"<p>Specifies if this column should be editable, and define which editor to use for editing cells in the column (if CellEdit feature is enabled)</p>",type:"String",scope:"global",defaultvalue:"false",category:"Interaction"},{name:"enableCellContextMenu",description:"<p>Set to <code>true</code> to show a context menu on the cell elements in this column</p>",type:"Boolean",scope:"global",defaultvalue:"false",category:"Menu"},{name:"tooltipRenderer",description:"<p>Renderer function for cell tooltips header (used with CellTooltip feature). Specify false to prevent\ntooltip for that column.</p>",type:"function",scope:"global",defaultvalue:"false",category:"Rendering",parameters:[{name:"cellElement",type:"HTMLElement",description:"<p>Cell element</p>"},{name:"record",type:"Core.data.Model",description:"<p>Record for cell row</p>"},{name:"column",type:"Grid.column.Column",description:"<p>Cell column</p>"},{name:"cellTooltip",type:"CellTooltip",description:"<p>Feature instance, used to set tooltip content async</p>"},{name:"event",type:"MouseEvent",description:"<p>The event that triggered the tooltip</p>"}]}],properties:[{name:"module:Core/util/Parser",description:"<p>Combines exports in an object such that it was possible to export parser utilities\nin UMD/module bundles.</p>"},{name:"#property-recurringTimeSpan",description:"<p>The &quot;main&quot; event this model is an occurrence of.\nReturns <code>null</code> for non-occurrences.</p>",scope:"global",readonly:true,properties:[{type:{names:["Scheduler.model.EventModel"]}}]}],typedefs:[{name:"EffectResolutionResult",properties:[{type:{names:["Number"]},description:"<p>Stop propagation</p>",name:"Cancel"},{type:{names:["Number"]},description:"<p>Restart propagation</p>",name:"Restart"},{type:{names:["Number"]},description:"<p>Resume propagation from current state</p>",name:"Resume"}]}]};